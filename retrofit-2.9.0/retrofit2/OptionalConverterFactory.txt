Compiled from "OptionalConverterFactory.java"
final class retrofit2.OptionalConverterFactory extends retrofit2.Converter$Factory {
  static final retrofit2.Converter$Factory INSTANCE;

  retrofit2.OptionalConverterFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method retrofit2/Converter$Factory."<init>":()V
       4: return

  public retrofit2.Converter<okhttp3.ResponseBody, ?> responseBodyConverter(java.lang.reflect.Type, java.lang.annotation.Annotation[], retrofit2.Retrofit);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
       4: ldc           #13                 // class java/util/Optional
       6: if_acmpeq     11
       9: aconst_null
      10: areturn
      11: iconst_0
      12: aload_1
      13: checkcast     #15                 // class java/lang/reflect/ParameterizedType
      16: invokestatic  #17                 // Method getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;
      19: astore        4
      21: aload_3
      22: aload         4
      24: aload_2
      25: invokevirtual #21                 // Method retrofit2/Retrofit.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;
      28: astore        5
      30: new           #27                 // class retrofit2/OptionalConverterFactory$OptionalConverter
      33: dup
      34: aload         5
      36: invokespecial #29                 // Method retrofit2/OptionalConverterFactory$OptionalConverter."<init>":(Lretrofit2/Converter;)V
      39: areturn

  static {};
    Code:
       0: new           #8                  // class retrofit2/OptionalConverterFactory
       3: dup
       4: invokespecial #32                 // Method "<init>":()V
       7: putstatic     #33                 // Field INSTANCE:Lretrofit2/Converter$Factory;
      10: return
}
