Compiled from "DefaultCallAdapterFactory.java"
final class retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall<T> implements retrofit2.Call<T> {
  final java.util.concurrent.Executor callbackExecutor;

  final retrofit2.Call<T> delegate;

  retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall(java.util.concurrent.Executor, retrofit2.Call<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field callbackExecutor:Ljava/util/concurrent/Executor;
       9: aload_0
      10: aload_2
      11: putfield      #13                 // Field delegate:Lretrofit2/Call;
      14: return

  public void enqueue(retrofit2.Callback<T>);
    Code:
       0: aload_1
       1: ldc           #17                 // String callback == null
       3: invokestatic  #19                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #13                 // Field delegate:Lretrofit2/Call;
      11: new           #25                 // class retrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall$1
      14: dup
      15: aload_0
      16: aload_1
      17: invokespecial #27                 // Method retrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall$1."<init>":(Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;Lretrofit2/Callback;)V
      20: invokeinterface #30,  2           // InterfaceMethod retrofit2/Call.enqueue:(Lretrofit2/Callback;)V
      25: return

  public boolean isExecuted();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lretrofit2/Call;
       4: invokeinterface #36,  1           // InterfaceMethod retrofit2/Call.isExecuted:()Z
       9: ireturn

  public retrofit2.Response<T> execute() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lretrofit2/Call;
       4: invokeinterface #40,  1           // InterfaceMethod retrofit2/Call.execute:()Lretrofit2/Response;
       9: areturn

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lretrofit2/Call;
       4: invokeinterface #44,  1           // InterfaceMethod retrofit2/Call.cancel:()V
       9: return

  public boolean isCanceled();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lretrofit2/Call;
       4: invokeinterface #47,  1           // InterfaceMethod retrofit2/Call.isCanceled:()Z
       9: ireturn

  public retrofit2.Call<T> clone();
    Code:
       0: new           #8                  // class retrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall
       3: dup
       4: aload_0
       5: getfield      #7                  // Field callbackExecutor:Ljava/util/concurrent/Executor;
       8: aload_0
       9: getfield      #13                 // Field delegate:Lretrofit2/Call;
      12: invokeinterface #50,  1           // InterfaceMethod retrofit2/Call.clone:()Lretrofit2/Call;
      17: invokespecial #54                 // Method "<init>":(Ljava/util/concurrent/Executor;Lretrofit2/Call;)V
      20: areturn

  public okhttp3.Request request();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lretrofit2/Call;
       4: invokeinterface #57,  1           // InterfaceMethod retrofit2/Call.request:()Lokhttp3/Request;
       9: areturn

  public okio.Timeout timeout();
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lretrofit2/Call;
       4: invokeinterface #61,  1           // InterfaceMethod retrofit2/Call.timeout:()Lokio/Timeout;
       9: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method clone:()Lretrofit2/Call;
       4: areturn
}
