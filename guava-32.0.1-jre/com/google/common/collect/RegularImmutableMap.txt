Compiled from "RegularImmutableMap.java"
final class com.google.common.collect.RegularImmutableMap<K, V> extends com.google.common.collect.ImmutableMap<K, V> {
  static final com.google.common.collect.ImmutableMap<java.lang.Object, java.lang.Object> EMPTY;

  static final double MAX_LOAD_FACTOR;

  static final double HASH_FLOODING_FPP;

  static final int MAX_HASH_BUCKET_LENGTH;

  final transient java.util.Map$Entry<K, V>[] entries;

  private final transient com.google.common.collect.ImmutableMapEntry<K, V>[] table;

  private final transient int mask;

  private static final long serialVersionUID;

  static <K, V> com.google.common.collect.ImmutableMap<K, V> fromEntries(java.util.Map$Entry<K, V>...);
    Code:
       0: aload_0
       1: arraylength
       2: aload_0
       3: iconst_1
       4: invokestatic  #1                  // Method fromEntryArray:(I[Ljava/util/Map$Entry;Z)Lcom/google/common/collect/ImmutableMap;
       7: areturn

  static <K, V> com.google.common.collect.ImmutableMap<K, V> fromEntryArray(int, java.util.Map$Entry<K, V>[], boolean);
    Code:
       0: iload_0
       1: aload_1
       2: arraylength
       3: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkPositionIndex:(II)I
       6: pop
       7: iload_0
       8: ifne          17
      11: getstatic     #3                  // Field EMPTY:Lcom/google/common/collect/ImmutableMap;
      14: astore_3
      15: aload_3
      16: areturn
      17: iload_0
      18: aload_1
      19: iload_2
      20: invokestatic  #4                  // Method fromEntryArrayCheckingBucketOverflow:(I[Ljava/util/Map$Entry;Z)Lcom/google/common/collect/ImmutableMap;
      23: areturn
      24: astore_3
      25: iload_0
      26: aload_1
      27: iload_2
      28: invokestatic  #6                  // Method com/google/common/collect/JdkBackedImmutableMap.create:(I[Ljava/util/Map$Entry;Z)Lcom/google/common/collect/ImmutableMap;
      31: areturn
    Exception table:
       from    to  target type
          17    23    24   Class com/google/common/collect/RegularImmutableMap$BucketOverflowException

  private static <K, V> com.google.common.collect.ImmutableMap<K, V> fromEntryArrayCheckingBucketOverflow(int, java.util.Map$Entry<K, V>[], boolean) throws com.google.common.collect.RegularImmutableMap$BucketOverflowException;
    Code:
       0: iload_0
       1: aload_1
       2: arraylength
       3: if_icmpne     10
       6: aload_1
       7: goto          14
      10: iload_0
      11: invokestatic  #7                  // Method com/google/common/collect/ImmutableMapEntry.createEntryArray:(I)[Lcom/google/common/collect/ImmutableMapEntry;
      14: astore_3
      15: iload_0
      16: ldc2_w        #9                  // double 1.2d
      19: invokestatic  #11                 // Method com/google/common/collect/Hashing.closedTableSize:(ID)I
      22: istore        4
      24: iload         4
      26: invokestatic  #7                  // Method com/google/common/collect/ImmutableMapEntry.createEntryArray:(I)[Lcom/google/common/collect/ImmutableMapEntry;
      29: astore        5
      31: iload         4
      33: iconst_1
      34: isub
      35: istore        6
      37: aconst_null
      38: astore        7
      40: iconst_0
      41: istore        8
      43: iload_0
      44: iconst_1
      45: isub
      46: istore        9
      48: iload         9
      50: iflt          227
      53: aload_1
      54: iload         9
      56: aaload
      57: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      60: checkcast     #13                 // class java/util/Map$Entry
      63: astore        10
      65: aload         10
      67: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      72: astore        11
      74: aload         10
      76: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      81: astore        12
      83: aload         11
      85: aload         12
      87: invokestatic  #16                 // Method com/google/common/collect/CollectPreconditions.checkEntryNotNull:(Ljava/lang/Object;Ljava/lang/Object;)V
      90: aload         11
      92: invokevirtual #17                 // Method java/lang/Object.hashCode:()I
      95: invokestatic  #18                 // Method com/google/common/collect/Hashing.smear:(I)I
      98: iload         6
     100: iand
     101: istore        13
     103: aload         5
     105: iload         13
     107: aaload
     108: astore        14
     110: aload         11
     112: aload         12
     114: aload         14
     116: iload_2
     117: invokestatic  #19                 // Method checkNoConflictInKeyBucket:(Ljava/lang/Object;Ljava/lang/Object;Lcom/google/common/collect/ImmutableMapEntry;Z)Lcom/google/common/collect/ImmutableMapEntry;
     120: astore        15
     122: aload         15
     124: ifnonnull     169
     127: aload         14
     129: ifnonnull     144
     132: aload         10
     134: aload         11
     136: aload         12
     138: invokestatic  #20                 // Method makeImmutable:(Ljava/util/Map$Entry;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMapEntry;
     141: goto          157
     144: new           #21                 // class com/google/common/collect/ImmutableMapEntry$NonTerminalImmutableMapEntry
     147: dup
     148: aload         11
     150: aload         12
     152: aload         14
     154: invokespecial #22                 // Method com/google/common/collect/ImmutableMapEntry$NonTerminalImmutableMapEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lcom/google/common/collect/ImmutableMapEntry;)V
     157: astore        15
     159: aload         5
     161: iload         13
     163: aload         15
     165: aastore
     166: goto          215
     169: aload         7
     171: ifnonnull     183
     174: new           #23                 // class java/util/IdentityHashMap
     177: dup
     178: invokespecial #24                 // Method java/util/IdentityHashMap."<init>":()V
     181: astore        7
     183: aload         7
     185: aload         15
     187: iconst_1
     188: invokestatic  #25                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     191: invokevirtual #26                 // Method java/util/IdentityHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     194: pop
     195: iinc          8, 1
     198: aload_3
     199: aload_1
     200: if_acmpne     215
     203: aload_3
     204: astore        16
     206: aload         16
     208: invokevirtual #27                 // Method "[Ljava/util/Map$Entry;".clone:()Ljava/lang/Object;
     211: checkcast     #28                 // class "[Ljava/util/Map$Entry;"
     214: astore_3
     215: aload_3
     216: iload         9
     218: aload         15
     220: aastore
     221: iinc          9, -1
     224: goto          48
     227: aload         7
     229: ifnull        269
     232: aload_3
     233: iload_0
     234: iload_0
     235: iload         8
     237: isub
     238: aload         7
     240: invokestatic  #29                 // Method removeDuplicates:([Ljava/util/Map$Entry;IILjava/util/IdentityHashMap;)[Ljava/util/Map$Entry;
     243: astore_3
     244: aload_3
     245: arraylength
     246: ldc2_w        #9                  // double 1.2d
     249: invokestatic  #11                 // Method com/google/common/collect/Hashing.closedTableSize:(ID)I
     252: istore        9
     254: iload         9
     256: iload         4
     258: if_icmpeq     269
     261: aload_3
     262: arraylength
     263: aload_3
     264: iconst_1
     265: invokestatic  #4                  // Method fromEntryArrayCheckingBucketOverflow:(I[Ljava/util/Map$Entry;Z)Lcom/google/common/collect/ImmutableMap;
     268: areturn
     269: new           #8                  // class com/google/common/collect/RegularImmutableMap
     272: dup
     273: aload_3
     274: aload         5
     276: iload         6
     278: invokespecial #30                 // Method "<init>":([Ljava/util/Map$Entry;[Lcom/google/common/collect/ImmutableMapEntry;I)V
     281: areturn

  static <K, V> java.util.Map$Entry<K, V>[] removeDuplicates(java.util.Map$Entry<K, V>[], int, int, java.util.IdentityHashMap<java.util.Map$Entry<K, V>, java.lang.Boolean>);
    Code:
       0: iload_2
       1: invokestatic  #7                  // Method com/google/common/collect/ImmutableMapEntry.createEntryArray:(I)[Lcom/google/common/collect/ImmutableMapEntry;
       4: astore        4
       6: iconst_0
       7: istore        5
       9: iconst_0
      10: istore        6
      12: iload         5
      14: iload_1
      15: if_icmpge     75
      18: aload_0
      19: iload         5
      21: aaload
      22: astore        7
      24: aload_3
      25: aload         7
      27: invokevirtual #31                 // Method java/util/IdentityHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #32                 // class java/lang/Boolean
      33: astore        8
      35: aload         8
      37: ifnull        59
      40: aload         8
      42: invokevirtual #33                 // Method java/lang/Boolean.booleanValue:()Z
      45: ifeq          69
      48: aload_3
      49: aload         7
      51: iconst_0
      52: invokestatic  #25                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      55: invokevirtual #26                 // Method java/util/IdentityHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: aload         4
      61: iload         6
      63: iinc          6, 1
      66: aload         7
      68: aastore
      69: iinc          5, 1
      72: goto          12
      75: aload         4
      77: areturn

  static <K, V> com.google.common.collect.ImmutableMapEntry<K, V> makeImmutable(java.util.Map$Entry<K, V>, K, V);
    Code:
       0: aload_0
       1: instanceof    #34                 // class com/google/common/collect/ImmutableMapEntry
       4: ifeq          21
       7: aload_0
       8: checkcast     #34                 // class com/google/common/collect/ImmutableMapEntry
      11: invokevirtual #35                 // Method com/google/common/collect/ImmutableMapEntry.isReusable:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: istore_3
      23: iload_3
      24: ifeq          34
      27: aload_0
      28: checkcast     #34                 // class com/google/common/collect/ImmutableMapEntry
      31: goto          43
      34: new           #34                 // class com/google/common/collect/ImmutableMapEntry
      37: dup
      38: aload_1
      39: aload_2
      40: invokespecial #36                 // Method com/google/common/collect/ImmutableMapEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      43: areturn

  static <K, V> com.google.common.collect.ImmutableMapEntry<K, V> makeImmutable(java.util.Map$Entry<K, V>);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       7: aload_0
       8: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      13: invokestatic  #20                 // Method makeImmutable:(Ljava/util/Map$Entry;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMapEntry;
      16: areturn

  private com.google.common.collect.RegularImmutableMap(java.util.Map$Entry<K, V>[], com.google.common.collect.ImmutableMapEntry<K, V>[], int);
    Code:
       0: aload_0
       1: invokespecial #37                 // Method com/google/common/collect/ImmutableMap."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #38                 // Field entries:[Ljava/util/Map$Entry;
       9: aload_0
      10: aload_2
      11: putfield      #39                 // Field table:[Lcom/google/common/collect/ImmutableMapEntry;
      14: aload_0
      15: iload_3
      16: putfield      #40                 // Field mask:I
      19: return

  static <K, V> com.google.common.collect.ImmutableMapEntry<K, V> checkNoConflictInKeyBucket(java.lang.Object, java.lang.Object, com.google.common.collect.ImmutableMapEntry<K, V>, boolean) throws com.google.common.collect.RegularImmutableMap$BucketOverflowException;
    Code:
       0: iconst_0
       1: istore        4
       3: aload_2
       4: ifnull        83
       7: aload_2
       8: invokevirtual #41                 // Method com/google/common/collect/ImmutableMapEntry.getKey:()Ljava/lang/Object;
      11: aload_0
      12: invokevirtual #42                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      15: ifeq          57
      18: iload_3
      19: ifeq          55
      22: iconst_0
      23: ldc           #43                 // String key
      25: aload_2
      26: new           #44                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      33: aload_0
      34: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: ldc           #47                 // String =
      39: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokestatic  #50                 // Method checkNoConflict:(ZLjava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      52: goto          57
      55: aload_2
      56: areturn
      57: iinc          4, 1
      60: iload         4
      62: bipush        8
      64: if_icmple     75
      67: new           #5                  // class com/google/common/collect/RegularImmutableMap$BucketOverflowException
      70: dup
      71: invokespecial #51                 // Method com/google/common/collect/RegularImmutableMap$BucketOverflowException."<init>":()V
      74: athrow
      75: aload_2
      76: invokevirtual #52                 // Method com/google/common/collect/ImmutableMapEntry.getNextInKeyBucket:()Lcom/google/common/collect/ImmutableMapEntry;
      79: astore_2
      80: goto          3
      83: aconst_null
      84: areturn

  public V get(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #39                 // Field table:[Lcom/google/common/collect/ImmutableMapEntry;
       5: aload_0
       6: getfield      #40                 // Field mask:I
       9: invokestatic  #53                 // Method get:(Ljava/lang/Object;[Lcom/google/common/collect/ImmutableMapEntry;I)Ljava/lang/Object;
      12: areturn

  static <V> V get(java.lang.Object, com.google.common.collect.ImmutableMapEntry<?, V>[], int);
    Code:
       0: aload_0
       1: ifnull        8
       4: aload_1
       5: ifnonnull     10
       8: aconst_null
       9: areturn
      10: aload_0
      11: invokevirtual #17                 // Method java/lang/Object.hashCode:()I
      14: invokestatic  #18                 // Method com/google/common/collect/Hashing.smear:(I)I
      17: iload_2
      18: iand
      19: istore_3
      20: aload_1
      21: iload_3
      22: aaload
      23: astore        4
      25: aload         4
      27: ifnull        62
      30: aload         4
      32: invokevirtual #41                 // Method com/google/common/collect/ImmutableMapEntry.getKey:()Ljava/lang/Object;
      35: astore        5
      37: aload_0
      38: aload         5
      40: invokevirtual #42                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      43: ifeq          52
      46: aload         4
      48: invokevirtual #54                 // Method com/google/common/collect/ImmutableMapEntry.getValue:()Ljava/lang/Object;
      51: areturn
      52: aload         4
      54: invokevirtual #52                 // Method com/google/common/collect/ImmutableMapEntry.getNextInKeyBucket:()Lcom/google/common/collect/ImmutableMapEntry;
      57: astore        4
      59: goto          25
      62: aconst_null
      63: areturn

  public void forEach(java.util.function.BiConsumer<? super K, ? super V>);
    Code:
       0: aload_1
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #38                 // Field entries:[Ljava/util/Map$Entry;
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     54
      22: aload_2
      23: iload         4
      25: aaload
      26: astore        5
      28: aload_1
      29: aload         5
      31: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      36: aload         5
      38: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      43: invokeinterface #56,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      48: iinc          4, 1
      51: goto          16
      54: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #38                 // Field entries:[Ljava/util/Map$Entry;
       4: arraylength
       5: ireturn

  boolean isPartialView();
    Code:
       0: iconst_0
       1: ireturn

  com.google.common.collect.ImmutableSet<java.util.Map$Entry<K, V>> createEntrySet();
    Code:
       0: new           #57                 // class com/google/common/collect/ImmutableMapEntrySet$RegularEntrySet
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #38                 // Field entries:[Ljava/util/Map$Entry;
       9: invokespecial #58                 // Method com/google/common/collect/ImmutableMapEntrySet$RegularEntrySet."<init>":(Lcom/google/common/collect/ImmutableMap;[Ljava/util/Map$Entry;)V
      12: areturn

  com.google.common.collect.ImmutableSet<K> createKeySet();
    Code:
       0: new           #59                 // class com/google/common/collect/RegularImmutableMap$KeySet
       3: dup
       4: aload_0
       5: invokespecial #60                 // Method com/google/common/collect/RegularImmutableMap$KeySet."<init>":(Lcom/google/common/collect/RegularImmutableMap;)V
       8: areturn

  com.google.common.collect.ImmutableCollection<V> createValues();
    Code:
       0: new           #61                 // class com/google/common/collect/RegularImmutableMap$Values
       3: dup
       4: aload_0
       5: invokespecial #62                 // Method com/google/common/collect/RegularImmutableMap$Values."<init>":(Lcom/google/common/collect/RegularImmutableMap;)V
       8: areturn

  static {};
    Code:
       0: new           #8                  // class com/google/common/collect/RegularImmutableMap
       3: dup
       4: getstatic     #63                 // Field com/google/common/collect/ImmutableMap.EMPTY_ENTRY_ARRAY:[Ljava/util/Map$Entry;
       7: aconst_null
       8: iconst_0
       9: invokespecial #30                 // Method "<init>":([Ljava/util/Map$Entry;[Lcom/google/common/collect/ImmutableMapEntry;I)V
      12: putstatic     #3                  // Field EMPTY:Lcom/google/common/collect/ImmutableMap;
      15: return
}
