Compiled from "DiscreteDomain.java"
public abstract class com.google.common.collect.DiscreteDomain<C extends java.lang.Comparable> {
  final boolean supportsFastOffset;

  public static com.google.common.collect.DiscreteDomain<java.lang.Integer> integers();
    Code:
       0: invokestatic  #2                  // Method com/google/common/collect/DiscreteDomain$IntegerDomain.access$000:()Lcom/google/common/collect/DiscreteDomain$IntegerDomain;
       3: areturn

  public static com.google.common.collect.DiscreteDomain<java.lang.Long> longs();
    Code:
       0: invokestatic  #3                  // Method com/google/common/collect/DiscreteDomain$LongDomain.access$200:()Lcom/google/common/collect/DiscreteDomain$LongDomain;
       3: areturn

  public static com.google.common.collect.DiscreteDomain<java.math.BigInteger> bigIntegers();
    Code:
       0: invokestatic  #4                  // Method com/google/common/collect/DiscreteDomain$BigIntegerDomain.access$300:()Lcom/google/common/collect/DiscreteDomain$BigIntegerDomain;
       3: areturn

  protected com.google.common.collect.DiscreteDomain();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  private com.google.common.collect.DiscreteDomain(boolean);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #6                  // Field supportsFastOffset:Z
       9: return

  C offset(C, long);
    Code:
       0: aload_1
       1: astore        4
       3: lload_2
       4: ldc           #7                  // String distance
       6: invokestatic  #8                  // Method com/google/common/collect/CollectPreconditions.checkNonnegative:(JLjava/lang/String;)J
       9: pop2
      10: lconst_0
      11: lstore        5
      13: lload         5
      15: lload_2
      16: lcmp
      17: ifge          83
      20: aload_0
      21: aload         4
      23: invokevirtual #9                  // Method next:(Ljava/lang/Comparable;)Ljava/lang/Comparable;
      26: astore        4
      28: aload         4
      30: ifnonnull     74
      33: new           #10                 // class java/lang/IllegalArgumentException
      36: dup
      37: new           #11                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #13                 // String overflowed computing offset(
      46: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: ldc           #16                 // String ,
      55: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: lload_2
      59: invokevirtual #17                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      62: ldc           #18                 // String )
      64: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: lload         5
      76: lconst_1
      77: ladd
      78: lstore        5
      80: goto          13
      83: aload         4
      85: areturn

  public abstract C next(C);

  public abstract C previous(C);

  public abstract long distance(C, C);

  public C minValue();
    Code:
       0: new           #21                 // class java/util/NoSuchElementException
       3: dup
       4: invokespecial #22                 // Method java/util/NoSuchElementException."<init>":()V
       7: athrow

  public C maxValue();
    Code:
       0: new           #21                 // class java/util/NoSuchElementException
       3: dup
       4: invokespecial #22                 // Method java/util/NoSuchElementException."<init>":()V
       7: athrow

  com.google.common.collect.DiscreteDomain(boolean, com.google.common.collect.DiscreteDomain$1);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return
}
