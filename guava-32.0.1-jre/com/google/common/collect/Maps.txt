Compiled from "Maps.java"
public final class com.google.common.collect.Maps {
  private com.google.common.collect.Maps();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: return

  static <K> com.google.common.base.Function<java.util.Map$Entry<K, ?>, K> keyFunction();
    Code:
       0: getstatic     #7                  // Field com/google/common/collect/Maps$EntryFunction.KEY:Lcom/google/common/collect/Maps$EntryFunction;
       3: areturn

  static <V> com.google.common.base.Function<java.util.Map$Entry<?, V>, V> valueFunction();
    Code:
       0: getstatic     #8                  // Field com/google/common/collect/Maps$EntryFunction.VALUE:Lcom/google/common/collect/Maps$EntryFunction;
       3: areturn

  static <K, V> java.util.Iterator<K> keyIterator(java.util.Iterator<java.util.Map$Entry<K, V>>);
    Code:
       0: new           #9                  // class com/google/common/collect/Maps$1
       3: dup
       4: aload_0
       5: invokespecial #10                 // Method com/google/common/collect/Maps$1."<init>":(Ljava/util/Iterator;)V
       8: areturn

  static <K, V> java.util.Iterator<V> valueIterator(java.util.Iterator<java.util.Map$Entry<K, V>>);
    Code:
       0: new           #11                 // class com/google/common/collect/Maps$2
       3: dup
       4: aload_0
       5: invokespecial #12                 // Method com/google/common/collect/Maps$2."<init>":(Ljava/util/Iterator;)V
       8: areturn

  public static <K extends java.lang.Enum<K>, V> com.google.common.collect.ImmutableMap<K, V> immutableEnumMap(java.util.Map<K, ? extends V>);
    Code:
       0: aload_0
       1: instanceof    #13                 // class com/google/common/collect/ImmutableEnumMap
       4: ifeq          14
       7: aload_0
       8: checkcast     #13                 // class com/google/common/collect/ImmutableEnumMap
      11: astore_1
      12: aload_1
      13: areturn
      14: aload_0
      15: invokeinterface #14,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      20: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_1
      26: aload_1
      27: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifne          39
      35: invokestatic  #17                 // Method com/google/common/collect/ImmutableMap.of:()Lcom/google/common/collect/ImmutableMap;
      38: areturn
      39: aload_1
      40: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #19                 // class java/util/Map$Entry
      48: astore_2
      49: aload_2
      50: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      55: checkcast     #21                 // class java/lang/Enum
      58: astore_3
      59: aload_2
      60: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      65: astore        4
      67: aload_3
      68: aload         4
      70: invokestatic  #23                 // Method com/google/common/collect/CollectPreconditions.checkEntryNotNull:(Ljava/lang/Object;Ljava/lang/Object;)V
      73: new           #24                 // class java/util/EnumMap
      76: dup
      77: aload_3
      78: aload         4
      80: invokestatic  #25                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      83: invokespecial #26                 // Method java/util/EnumMap."<init>":(Ljava/util/Map;)V
      86: astore        5
      88: aload_1
      89: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      94: ifeq          149
      97: aload_1
      98: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #19                 // class java/util/Map$Entry
     106: astore        6
     108: aload         6
     110: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     115: checkcast     #21                 // class java/lang/Enum
     118: astore        7
     120: aload         6
     122: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     127: astore        8
     129: aload         7
     131: aload         8
     133: invokestatic  #23                 // Method com/google/common/collect/CollectPreconditions.checkEntryNotNull:(Ljava/lang/Object;Ljava/lang/Object;)V
     136: aload         5
     138: aload         7
     140: aload         8
     142: invokevirtual #27                 // Method java/util/EnumMap.put:(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;
     145: pop
     146: goto          88
     149: aload         5
     151: invokestatic  #28                 // Method com/google/common/collect/ImmutableEnumMap.asImmutable:(Ljava/util/EnumMap;)Lcom/google/common/collect/ImmutableMap;
     154: areturn

  public static <T, K extends java.lang.Enum<K>, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableMap<K, V>> toImmutableEnumMap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #29                 // Method com/google/common/collect/CollectCollectors.toImmutableEnumMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
       5: areturn

  public static <T, K extends java.lang.Enum<K>, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableMap<K, V>> toImmutableEnumMap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>, java.util.function.BinaryOperator<V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #30                 // Method com/google/common/collect/CollectCollectors.toImmutableEnumMap:(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljava/util/stream/Collector;
       6: areturn

  public static <K, V> java.util.HashMap<K, V> newHashMap();
    Code:
       0: new           #31                 // class java/util/HashMap
       3: dup
       4: invokespecial #32                 // Method java/util/HashMap."<init>":()V
       7: areturn

  public static <K, V> java.util.HashMap<K, V> newHashMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: new           #31                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: invokespecial #33                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <K, V> java.util.HashMap<K, V> newHashMapWithExpectedSize(int);
    Code:
       0: new           #31                 // class java/util/HashMap
       3: dup
       4: iload_0
       5: invokestatic  #34                 // Method capacity:(I)I
       8: invokespecial #35                 // Method java/util/HashMap."<init>":(I)V
      11: areturn

  static int capacity(int);
    Code:
       0: iload_0
       1: iconst_3
       2: if_icmpge     16
       5: iload_0
       6: ldc           #36                 // String expectedSize
       8: invokestatic  #37                 // Method com/google/common/collect/CollectPreconditions.checkNonnegative:(ILjava/lang/String;)I
      11: pop
      12: iload_0
      13: iconst_1
      14: iadd
      15: ireturn
      16: iload_0
      17: ldc           #39                 // int 1073741824
      19: if_icmpge     33
      22: iload_0
      23: i2d
      24: ldc2_w        #40                 // double 0.75d
      27: ddiv
      28: invokestatic  #42                 // Method java/lang/Math.ceil:(D)D
      31: d2i
      32: ireturn
      33: ldc           #44                 // int 2147483647
      35: ireturn

  public static <K, V> java.util.LinkedHashMap<K, V> newLinkedHashMap();
    Code:
       0: new           #45                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #46                 // Method java/util/LinkedHashMap."<init>":()V
       7: areturn

  public static <K, V> java.util.LinkedHashMap<K, V> newLinkedHashMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: new           #45                 // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: invokespecial #47                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <K, V> java.util.LinkedHashMap<K, V> newLinkedHashMapWithExpectedSize(int);
    Code:
       0: new           #45                 // class java/util/LinkedHashMap
       3: dup
       4: iload_0
       5: invokestatic  #34                 // Method capacity:(I)I
       8: invokespecial #48                 // Method java/util/LinkedHashMap."<init>":(I)V
      11: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> newConcurrentMap();
    Code:
       0: new           #49                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #50                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: areturn

  public static <K extends java.lang.Comparable, V> java.util.TreeMap<K, V> newTreeMap();
    Code:
       0: new           #51                 // class java/util/TreeMap
       3: dup
       4: invokespecial #52                 // Method java/util/TreeMap."<init>":()V
       7: areturn

  public static <K, V> java.util.TreeMap<K, V> newTreeMap(java.util.SortedMap<K, ? extends V>);
    Code:
       0: new           #51                 // class java/util/TreeMap
       3: dup
       4: aload_0
       5: invokespecial #53                 // Method java/util/TreeMap."<init>":(Ljava/util/SortedMap;)V
       8: areturn

  public static <C, K extends C, V> java.util.TreeMap<K, V> newTreeMap(java.util.Comparator<C>);
    Code:
       0: new           #51                 // class java/util/TreeMap
       3: dup
       4: aload_0
       5: invokespecial #54                 // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
       8: areturn

  public static <K extends java.lang.Enum<K>, V> java.util.EnumMap<K, V> newEnumMap(java.lang.Class<K>);
    Code:
       0: new           #24                 // class java/util/EnumMap
       3: dup
       4: aload_0
       5: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #56                 // class java/lang/Class
      11: invokespecial #57                 // Method java/util/EnumMap."<init>":(Ljava/lang/Class;)V
      14: areturn

  public static <K extends java.lang.Enum<K>, V> java.util.EnumMap<K, V> newEnumMap(java.util.Map<K, ? extends V>);
    Code:
       0: new           #24                 // class java/util/EnumMap
       3: dup
       4: aload_0
       5: invokespecial #26                 // Method java/util/EnumMap."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <K, V> java.util.IdentityHashMap<K, V> newIdentityHashMap();
    Code:
       0: new           #58                 // class java/util/IdentityHashMap
       3: dup
       4: invokespecial #59                 // Method java/util/IdentityHashMap."<init>":()V
       7: areturn

  public static <K, V> com.google.common.collect.MapDifference<K, V> difference(java.util.Map<? extends K, ? extends V>, java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: instanceof    #60                 // class java/util/SortedMap
       4: ifeq          18
       7: aload_0
       8: checkcast     #60                 // class java/util/SortedMap
      11: astore_2
      12: aload_2
      13: aload_1
      14: invokestatic  #61                 // Method difference:(Ljava/util/SortedMap;Ljava/util/Map;)Lcom/google/common/collect/SortedMapDifference;
      17: areturn
      18: aload_0
      19: aload_1
      20: invokestatic  #62                 // Method com/google/common/base/Equivalence.equals:()Lcom/google/common/base/Equivalence;
      23: invokestatic  #63                 // Method difference:(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;)Lcom/google/common/collect/MapDifference;
      26: areturn

  public static <K, V> com.google.common.collect.MapDifference<K, V> difference(java.util.Map<? extends K, ? extends V>, java.util.Map<? extends K, ? extends V>, com.google.common.base.Equivalence<? super V>);
    Code:
       0: aload_2
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: invokestatic  #64                 // Method newLinkedHashMap:()Ljava/util/LinkedHashMap;
       8: astore_3
       9: new           #45                 // class java/util/LinkedHashMap
      12: dup
      13: aload_1
      14: invokespecial #47                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      17: astore        4
      19: invokestatic  #64                 // Method newLinkedHashMap:()Ljava/util/LinkedHashMap;
      22: astore        5
      24: invokestatic  #64                 // Method newLinkedHashMap:()Ljava/util/LinkedHashMap;
      27: astore        6
      29: aload_0
      30: aload_1
      31: aload_2
      32: aload_3
      33: aload         4
      35: aload         5
      37: aload         6
      39: invokestatic  #65                 // Method doDifference:(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
      42: new           #66                 // class com/google/common/collect/Maps$MapDifferenceImpl
      45: dup
      46: aload_3
      47: aload         4
      49: aload         5
      51: aload         6
      53: invokespecial #67                 // Method com/google/common/collect/Maps$MapDifferenceImpl."<init>":(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
      56: areturn

  public static <K, V> com.google.common.collect.SortedMapDifference<K, V> difference(java.util.SortedMap<K, ? extends V>, java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: invokeinterface #68,  1           // InterfaceMethod java/util/SortedMap.comparator:()Ljava/util/Comparator;
      16: invokestatic  #69                 // Method orNaturalOrder:(Ljava/util/Comparator;)Ljava/util/Comparator;
      19: astore_2
      20: aload_2
      21: invokestatic  #70                 // Method newTreeMap:(Ljava/util/Comparator;)Ljava/util/TreeMap;
      24: astore_3
      25: aload_2
      26: invokestatic  #70                 // Method newTreeMap:(Ljava/util/Comparator;)Ljava/util/TreeMap;
      29: astore        4
      31: aload         4
      33: aload_1
      34: invokeinterface #71,  2           // InterfaceMethod java/util/SortedMap.putAll:(Ljava/util/Map;)V
      39: aload_2
      40: invokestatic  #70                 // Method newTreeMap:(Ljava/util/Comparator;)Ljava/util/TreeMap;
      43: astore        5
      45: aload_2
      46: invokestatic  #70                 // Method newTreeMap:(Ljava/util/Comparator;)Ljava/util/TreeMap;
      49: astore        6
      51: aload_0
      52: aload_1
      53: invokestatic  #62                 // Method com/google/common/base/Equivalence.equals:()Lcom/google/common/base/Equivalence;
      56: aload_3
      57: aload         4
      59: aload         5
      61: aload         6
      63: invokestatic  #65                 // Method doDifference:(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
      66: new           #72                 // class com/google/common/collect/Maps$SortedMapDifferenceImpl
      69: dup
      70: aload_3
      71: aload         4
      73: aload         5
      75: aload         6
      77: invokespecial #73                 // Method com/google/common/collect/Maps$SortedMapDifferenceImpl."<init>":(Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;)V
      80: areturn

  private static <K, V> void doDifference(java.util.Map<? extends K, ? extends V>, java.util.Map<? extends K, ? extends V>, com.google.common.base.Equivalence<? super V>, java.util.Map<K, V>, java.util.Map<K, V>, java.util.Map<K, V>, java.util.Map<K, com.google.common.collect.MapDifference$ValueDifference<V>>);
    Code:
       0: aload_0
       1: invokeinterface #14,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore        7
      13: aload         7
      15: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          138
      23: aload         7
      25: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #19                 // class java/util/Map$Entry
      33: astore        8
      35: aload         8
      37: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      42: astore        9
      44: aload         8
      46: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      51: astore        10
      53: aload_1
      54: aload         9
      56: invokeinterface #74,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      61: ifeq          124
      64: aload         4
      66: aload         9
      68: invokeinterface #75,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      73: invokestatic  #76                 // Method com/google/common/collect/NullnessCasts.uncheckedCastNullableTToT:(Ljava/lang/Object;)Ljava/lang/Object;
      76: astore        11
      78: aload_2
      79: aload         10
      81: aload         11
      83: invokevirtual #77                 // Method com/google/common/base/Equivalence.equivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z
      86: ifeq          104
      89: aload         5
      91: aload         9
      93: aload         10
      95: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     100: pop
     101: goto          121
     104: aload         6
     106: aload         9
     108: aload         10
     110: aload         11
     112: invokestatic  #79                 // Method com/google/common/collect/Maps$ValueDifferenceImpl.create:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/MapDifference$ValueDifference;
     115: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     120: pop
     121: goto          135
     124: aload_3
     125: aload         9
     127: aload         10
     129: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     134: pop
     135: goto          13
     138: return

  private static <K, V> java.util.Map<K, V> unmodifiableMap(java.util.Map<K, ? extends V>);
    Code:
       0: aload_0
       1: instanceof    #60                 // class java/util/SortedMap
       4: ifeq          15
       7: aload_0
       8: checkcast     #60                 // class java/util/SortedMap
      11: invokestatic  #80                 // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;
      14: areturn
      15: aload_0
      16: invokestatic  #81                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      19: areturn

  static <E> java.util.Comparator<? super E> orNaturalOrder(java.util.Comparator<? super E>);
    Code:
       0: aload_0
       1: ifnull        6
       4: aload_0
       5: areturn
       6: invokestatic  #82                 // Method com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
       9: areturn

  public static <K, V> java.util.Map<K, V> asMap(java.util.Set<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: new           #83                 // class com/google/common/collect/Maps$AsMapView
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #84                 // Method com/google/common/collect/Maps$AsMapView."<init>":(Ljava/util/Set;Lcom/google/common/base/Function;)V
       9: areturn

  public static <K, V> java.util.SortedMap<K, V> asMap(java.util.SortedSet<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: new           #85                 // class com/google/common/collect/Maps$SortedAsMapView
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #86                 // Method com/google/common/collect/Maps$SortedAsMapView."<init>":(Ljava/util/SortedSet;Lcom/google/common/base/Function;)V
       9: areturn

  public static <K, V> java.util.NavigableMap<K, V> asMap(java.util.NavigableSet<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: new           #87                 // class com/google/common/collect/Maps$NavigableAsMapView
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #88                 // Method com/google/common/collect/Maps$NavigableAsMapView."<init>":(Ljava/util/NavigableSet;Lcom/google/common/base/Function;)V
       9: areturn

  static <K, V> java.util.Iterator<java.util.Map$Entry<K, V>> asMapEntryIterator(java.util.Set<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: new           #89                 // class com/google/common/collect/Maps$3
       3: dup
       4: aload_0
       5: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      10: aload_1
      11: invokespecial #90                 // Method com/google/common/collect/Maps$3."<init>":(Ljava/util/Iterator;Lcom/google/common/base/Function;)V
      14: areturn

  private static <E> java.util.Set<E> removeOnlySet(java.util.Set<E>);
    Code:
       0: new           #91                 // class com/google/common/collect/Maps$4
       3: dup
       4: aload_0
       5: invokespecial #92                 // Method com/google/common/collect/Maps$4."<init>":(Ljava/util/Set;)V
       8: areturn

  private static <E> java.util.SortedSet<E> removeOnlySortedSet(java.util.SortedSet<E>);
    Code:
       0: new           #93                 // class com/google/common/collect/Maps$5
       3: dup
       4: aload_0
       5: invokespecial #94                 // Method com/google/common/collect/Maps$5."<init>":(Ljava/util/SortedSet;)V
       8: areturn

  private static <E> java.util.NavigableSet<E> removeOnlyNavigableSet(java.util.NavigableSet<E>);
    Code:
       0: new           #95                 // class com/google/common/collect/Maps$6
       3: dup
       4: aload_0
       5: invokespecial #96                 // Method com/google/common/collect/Maps$6."<init>":(Ljava/util/NavigableSet;)V
       8: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> toMap(java.lang.Iterable<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: aload_0
       1: invokeinterface #97,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: aload_1
       7: invokestatic  #98                 // Method toMap:(Ljava/util/Iterator;Lcom/google/common/base/Function;)Lcom/google/common/collect/ImmutableMap;
      10: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> toMap(java.util.Iterator<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: aload_1
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: invokestatic  #99                 // Method com/google/common/collect/ImmutableMap.builder:()Lcom/google/common/collect/ImmutableMap$Builder;
       8: astore_2
       9: aload_0
      10: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          41
      18: aload_0
      19: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore_3
      25: aload_2
      26: aload_3
      27: aload_1
      28: aload_3
      29: invokeinterface #100,  2          // InterfaceMethod com/google/common/base/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      34: invokevirtual #101                // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      37: pop
      38: goto          9
      41: aload_2
      42: invokevirtual #102                // Method com/google/common/collect/ImmutableMap$Builder.buildKeepingLast:()Lcom/google/common/collect/ImmutableMap;
      45: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> uniqueIndex(java.lang.Iterable<V>, com.google.common.base.Function<? super V, K>);
    Code:
       0: aload_0
       1: instanceof    #103                // class java/util/Collection
       4: ifeq          30
       7: aload_0
       8: invokeinterface #97,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      13: aload_1
      14: aload_0
      15: checkcast     #103                // class java/util/Collection
      18: invokeinterface #104,  1          // InterfaceMethod java/util/Collection.size:()I
      23: invokestatic  #105                // Method com/google/common/collect/ImmutableMap.builderWithExpectedSize:(I)Lcom/google/common/collect/ImmutableMap$Builder;
      26: invokestatic  #106                // Method uniqueIndex:(Ljava/util/Iterator;Lcom/google/common/base/Function;Lcom/google/common/collect/ImmutableMap$Builder;)Lcom/google/common/collect/ImmutableMap;
      29: areturn
      30: aload_0
      31: invokeinterface #97,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      36: aload_1
      37: invokestatic  #107                // Method uniqueIndex:(Ljava/util/Iterator;Lcom/google/common/base/Function;)Lcom/google/common/collect/ImmutableMap;
      40: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> uniqueIndex(java.util.Iterator<V>, com.google.common.base.Function<? super V, K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #99                 // Method com/google/common/collect/ImmutableMap.builder:()Lcom/google/common/collect/ImmutableMap$Builder;
       5: invokestatic  #106                // Method uniqueIndex:(Ljava/util/Iterator;Lcom/google/common/base/Function;Lcom/google/common/collect/ImmutableMap$Builder;)Lcom/google/common/collect/ImmutableMap;
       8: areturn

  private static <K, V> com.google.common.collect.ImmutableMap<K, V> uniqueIndex(java.util.Iterator<V>, com.google.common.base.Function<? super V, K>, com.google.common.collect.ImmutableMap$Builder<K, V>);
    Code:
       0: aload_1
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          37
      14: aload_0
      15: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: astore_3
      21: aload_2
      22: aload_1
      23: aload_3
      24: invokeinterface #100,  2          // InterfaceMethod com/google/common/base/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      29: aload_3
      30: invokevirtual #101                // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      33: pop
      34: goto          5
      37: aload_2
      38: invokevirtual #108                // Method com/google/common/collect/ImmutableMap$Builder.buildOrThrow:()Lcom/google/common/collect/ImmutableMap;
      41: areturn
      42: astore_3
      43: new           #109                // class java/lang/IllegalArgumentException
      46: dup
      47: new           #110                // class java/lang/StringBuilder
      50: dup
      51: invokespecial #111                // Method java/lang/StringBuilder."<init>":()V
      54: aload_3
      55: invokevirtual #112                // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
      58: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: ldc           #114                // String . To index multiple values under a key, use Multimaps.index.
      63: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #115                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #116                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
    Exception table:
       from    to  target type
          37    41    42   Class java/lang/IllegalArgumentException

  public static com.google.common.collect.ImmutableMap<java.lang.String, java.lang.String> fromProperties(java.util.Properties);
    Code:
       0: invokestatic  #99                 // Method com/google/common/collect/ImmutableMap.builder:()Lcom/google/common/collect/ImmutableMap$Builder;
       3: astore_1
       4: aload_0
       5: invokevirtual #117                // Method java/util/Properties.propertyNames:()Ljava/util/Enumeration;
       8: astore_2
       9: aload_2
      10: invokeinterface #118,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      15: ifeq          51
      18: aload_2
      19: invokeinterface #119,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      24: invokestatic  #120                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #121                // class java/lang/String
      30: astore_3
      31: aload_1
      32: aload_3
      33: aload_0
      34: aload_3
      35: invokevirtual #122                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      38: invokestatic  #120                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #121                // class java/lang/String
      44: invokevirtual #101                // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      47: pop
      48: goto          9
      51: aload_1
      52: invokevirtual #108                // Method com/google/common/collect/ImmutableMap$Builder.buildOrThrow:()Lcom/google/common/collect/ImmutableMap;
      55: areturn

  public static <K, V> java.util.Map$Entry<K, V> immutableEntry(K, V);
    Code:
       0: new           #123                // class com/google/common/collect/ImmutableEntry
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #124                // Method com/google/common/collect/ImmutableEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  static <K, V> java.util.Set<java.util.Map$Entry<K, V>> unmodifiableEntrySet(java.util.Set<java.util.Map$Entry<K, V>>);
    Code:
       0: new           #125                // class com/google/common/collect/Maps$UnmodifiableEntrySet
       3: dup
       4: aload_0
       5: invokestatic  #126                // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       8: invokespecial #127                // Method com/google/common/collect/Maps$UnmodifiableEntrySet."<init>":(Ljava/util/Set;)V
      11: areturn

  static <K, V> java.util.Map$Entry<K, V> unmodifiableEntry(java.util.Map$Entry<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #128                // class com/google/common/collect/Maps$7
       8: dup
       9: aload_0
      10: invokespecial #129                // Method com/google/common/collect/Maps$7."<init>":(Ljava/util/Map$Entry;)V
      13: areturn

  static <K, V> com.google.common.collect.UnmodifiableIterator<java.util.Map$Entry<K, V>> unmodifiableEntryIterator(java.util.Iterator<java.util.Map$Entry<K, V>>);
    Code:
       0: new           #130                // class com/google/common/collect/Maps$8
       3: dup
       4: aload_0
       5: invokespecial #131                // Method com/google/common/collect/Maps$8."<init>":(Ljava/util/Iterator;)V
       8: areturn

  public static <A, B> com.google.common.base.Converter<A, B> asConverter(com.google.common.collect.BiMap<A, B>);
    Code:
       0: new           #132                // class com/google/common/collect/Maps$BiMapConverter
       3: dup
       4: aload_0
       5: invokespecial #133                // Method com/google/common/collect/Maps$BiMapConverter."<init>":(Lcom/google/common/collect/BiMap;)V
       8: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> synchronizedBiMap(com.google.common.collect.BiMap<K, V>);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #134                // Method com/google/common/collect/Synchronized.biMap:(Lcom/google/common/collect/BiMap;Ljava/lang/Object;)Lcom/google/common/collect/BiMap;
       5: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> unmodifiableBiMap(com.google.common.collect.BiMap<? extends K, ? extends V>);
    Code:
       0: new           #135                // class com/google/common/collect/Maps$UnmodifiableBiMap
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #136                // Method com/google/common/collect/Maps$UnmodifiableBiMap."<init>":(Lcom/google/common/collect/BiMap;Lcom/google/common/collect/BiMap;)V
       9: areturn

  public static <K, V1, V2> java.util.Map<K, V2> transformValues(java.util.Map<K, V1>, com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #137                // Method asEntryTransformer:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Maps$EntryTransformer;
       5: invokestatic  #138                // Method transformEntries:(Ljava/util/Map;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/Map;
       8: areturn

  public static <K, V1, V2> java.util.SortedMap<K, V2> transformValues(java.util.SortedMap<K, V1>, com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #137                // Method asEntryTransformer:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Maps$EntryTransformer;
       5: invokestatic  #139                // Method transformEntries:(Ljava/util/SortedMap;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/SortedMap;
       8: areturn

  public static <K, V1, V2> java.util.NavigableMap<K, V2> transformValues(java.util.NavigableMap<K, V1>, com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #137                // Method asEntryTransformer:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Maps$EntryTransformer;
       5: invokestatic  #140                // Method transformEntries:(Ljava/util/NavigableMap;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/NavigableMap;
       8: areturn

  public static <K, V1, V2> java.util.Map<K, V2> transformEntries(java.util.Map<K, V1>, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: new           #141                // class com/google/common/collect/Maps$TransformedEntriesMap
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #142                // Method com/google/common/collect/Maps$TransformedEntriesMap."<init>":(Ljava/util/Map;Lcom/google/common/collect/Maps$EntryTransformer;)V
       9: areturn

  public static <K, V1, V2> java.util.SortedMap<K, V2> transformEntries(java.util.SortedMap<K, V1>, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: new           #143                // class com/google/common/collect/Maps$TransformedEntriesSortedMap
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #144                // Method com/google/common/collect/Maps$TransformedEntriesSortedMap."<init>":(Ljava/util/SortedMap;Lcom/google/common/collect/Maps$EntryTransformer;)V
       9: areturn

  public static <K, V1, V2> java.util.NavigableMap<K, V2> transformEntries(java.util.NavigableMap<K, V1>, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: new           #145                // class com/google/common/collect/Maps$TransformedEntriesNavigableMap
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #146                // Method com/google/common/collect/Maps$TransformedEntriesNavigableMap."<init>":(Ljava/util/NavigableMap;Lcom/google/common/collect/Maps$EntryTransformer;)V
       9: areturn

  static <K, V1, V2> com.google.common.collect.Maps$EntryTransformer<K, V1, V2> asEntryTransformer(com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #147                // class com/google/common/collect/Maps$9
       8: dup
       9: aload_0
      10: invokespecial #148                // Method com/google/common/collect/Maps$9."<init>":(Lcom/google/common/base/Function;)V
      13: areturn

  static <K, V1, V2> com.google.common.base.Function<V1, V2> asValueToValueFunction(com.google.common.collect.Maps$EntryTransformer<? super K, V1, V2>, K);
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #149                // class com/google/common/collect/Maps$10
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #150                // Method com/google/common/collect/Maps$10."<init>":(Lcom/google/common/collect/Maps$EntryTransformer;Ljava/lang/Object;)V
      14: areturn

  static <K, V1, V2> com.google.common.base.Function<java.util.Map$Entry<K, V1>, V2> asEntryToValueFunction(com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #151                // class com/google/common/collect/Maps$11
       8: dup
       9: aload_0
      10: invokespecial #152                // Method com/google/common/collect/Maps$11."<init>":(Lcom/google/common/collect/Maps$EntryTransformer;)V
      13: areturn

  static <V2, K, V1> java.util.Map$Entry<K, V2> transformEntry(com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>, java.util.Map$Entry<K, V1>);
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #153                // class com/google/common/collect/Maps$12
      13: dup
      14: aload_1
      15: aload_0
      16: invokespecial #154                // Method com/google/common/collect/Maps$12."<init>":(Ljava/util/Map$Entry;Lcom/google/common/collect/Maps$EntryTransformer;)V
      19: areturn

  static <K, V1, V2> com.google.common.base.Function<java.util.Map$Entry<K, V1>, java.util.Map$Entry<K, V2>> asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #155                // class com/google/common/collect/Maps$13
       8: dup
       9: aload_0
      10: invokespecial #156                // Method com/google/common/collect/Maps$13."<init>":(Lcom/google/common/collect/Maps$EntryTransformer;)V
      13: areturn

  static <K> com.google.common.base.Predicate<java.util.Map$Entry<K, ?>> keyPredicateOnEntries(com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_0
       1: invokestatic  #157                // Method keyFunction:()Lcom/google/common/base/Function;
       4: invokestatic  #158                // Method com/google/common/base/Predicates.compose:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Function;)Lcom/google/common/base/Predicate;
       7: areturn

  static <V> com.google.common.base.Predicate<java.util.Map$Entry<?, V>> valuePredicateOnEntries(com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_0
       1: invokestatic  #159                // Method valueFunction:()Lcom/google/common/base/Function;
       4: invokestatic  #158                // Method com/google/common/base/Predicates.compose:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Function;)Lcom/google/common/base/Predicate;
       7: areturn

  public static <K, V> java.util.Map<K, V> filterKeys(java.util.Map<K, V>, com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_1
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #160                // Method keyPredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       9: astore_2
      10: aload_0
      11: instanceof    #161                // class com/google/common/collect/Maps$AbstractFilteredMap
      14: ifeq          28
      17: aload_0
      18: checkcast     #161                // class com/google/common/collect/Maps$AbstractFilteredMap
      21: aload_2
      22: invokestatic  #162                // Method filterFiltered:(Lcom/google/common/collect/Maps$AbstractFilteredMap;Lcom/google/common/base/Predicate;)Ljava/util/Map;
      25: goto          44
      28: new           #163                // class com/google/common/collect/Maps$FilteredKeyMap
      31: dup
      32: aload_0
      33: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #164                // class java/util/Map
      39: aload_1
      40: aload_2
      41: invokespecial #165                // Method com/google/common/collect/Maps$FilteredKeyMap."<init>":(Ljava/util/Map;Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)V
      44: areturn

  public static <K, V> java.util.SortedMap<K, V> filterKeys(java.util.SortedMap<K, V>, com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #160                // Method keyPredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #166                // Method filterEntries:(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
       8: areturn

  public static <K, V> java.util.NavigableMap<K, V> filterKeys(java.util.NavigableMap<K, V>, com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #160                // Method keyPredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #167                // Method filterEntries:(Ljava/util/NavigableMap;Lcom/google/common/base/Predicate;)Ljava/util/NavigableMap;
       8: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> filterKeys(com.google.common.collect.BiMap<K, V>, com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_1
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokestatic  #160                // Method keyPredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
      10: invokestatic  #168                // Method filterEntries:(Lcom/google/common/collect/BiMap;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/BiMap;
      13: areturn

  public static <K, V> java.util.Map<K, V> filterValues(java.util.Map<K, V>, com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #169                // Method valuePredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #170                // Method filterEntries:(Ljava/util/Map;Lcom/google/common/base/Predicate;)Ljava/util/Map;
       8: areturn

  public static <K, V> java.util.SortedMap<K, V> filterValues(java.util.SortedMap<K, V>, com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #169                // Method valuePredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #166                // Method filterEntries:(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
       8: areturn

  public static <K, V> java.util.NavigableMap<K, V> filterValues(java.util.NavigableMap<K, V>, com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #169                // Method valuePredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #167                // Method filterEntries:(Ljava/util/NavigableMap;Lcom/google/common/base/Predicate;)Ljava/util/NavigableMap;
       8: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> filterValues(com.google.common.collect.BiMap<K, V>, com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #169                // Method valuePredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #168                // Method filterEntries:(Lcom/google/common/collect/BiMap;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/BiMap;
       8: areturn

  public static <K, V> java.util.Map<K, V> filterEntries(java.util.Map<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_1
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #161                // class com/google/common/collect/Maps$AbstractFilteredMap
       9: ifeq          23
      12: aload_0
      13: checkcast     #161                // class com/google/common/collect/Maps$AbstractFilteredMap
      16: aload_1
      17: invokestatic  #162                // Method filterFiltered:(Lcom/google/common/collect/Maps$AbstractFilteredMap;Lcom/google/common/base/Predicate;)Ljava/util/Map;
      20: goto          38
      23: new           #171                // class com/google/common/collect/Maps$FilteredEntryMap
      26: dup
      27: aload_0
      28: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #164                // class java/util/Map
      34: aload_1
      35: invokespecial #172                // Method com/google/common/collect/Maps$FilteredEntryMap."<init>":(Ljava/util/Map;Lcom/google/common/base/Predicate;)V
      38: areturn

  public static <K, V> java.util.SortedMap<K, V> filterEntries(java.util.SortedMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_1
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #173                // class com/google/common/collect/Maps$FilteredEntrySortedMap
       9: ifeq          23
      12: aload_0
      13: checkcast     #173                // class com/google/common/collect/Maps$FilteredEntrySortedMap
      16: aload_1
      17: invokestatic  #174                // Method filterFiltered:(Lcom/google/common/collect/Maps$FilteredEntrySortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
      20: goto          38
      23: new           #173                // class com/google/common/collect/Maps$FilteredEntrySortedMap
      26: dup
      27: aload_0
      28: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #60                 // class java/util/SortedMap
      34: aload_1
      35: invokespecial #175                // Method com/google/common/collect/Maps$FilteredEntrySortedMap."<init>":(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)V
      38: areturn

  public static <K, V> java.util.NavigableMap<K, V> filterEntries(java.util.NavigableMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_1
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #176                // class com/google/common/collect/Maps$FilteredEntryNavigableMap
       9: ifeq          23
      12: aload_0
      13: checkcast     #176                // class com/google/common/collect/Maps$FilteredEntryNavigableMap
      16: aload_1
      17: invokestatic  #177                // Method filterFiltered:(Lcom/google/common/collect/Maps$FilteredEntryNavigableMap;Lcom/google/common/base/Predicate;)Ljava/util/NavigableMap;
      20: goto          38
      23: new           #176                // class com/google/common/collect/Maps$FilteredEntryNavigableMap
      26: dup
      27: aload_0
      28: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #178                // class java/util/NavigableMap
      34: aload_1
      35: invokespecial #179                // Method com/google/common/collect/Maps$FilteredEntryNavigableMap."<init>":(Ljava/util/NavigableMap;Lcom/google/common/base/Predicate;)V
      38: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> filterEntries(com.google.common.collect.BiMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: instanceof    #180                // class com/google/common/collect/Maps$FilteredEntryBiMap
      14: ifeq          28
      17: aload_0
      18: checkcast     #180                // class com/google/common/collect/Maps$FilteredEntryBiMap
      21: aload_1
      22: invokestatic  #181                // Method filterFiltered:(Lcom/google/common/collect/Maps$FilteredEntryBiMap;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/BiMap;
      25: goto          37
      28: new           #180                // class com/google/common/collect/Maps$FilteredEntryBiMap
      31: dup
      32: aload_0
      33: aload_1
      34: invokespecial #182                // Method com/google/common/collect/Maps$FilteredEntryBiMap."<init>":(Lcom/google/common/collect/BiMap;Lcom/google/common/base/Predicate;)V
      37: areturn

  private static <K, V> java.util.Map<K, V> filterFiltered(com.google.common.collect.Maps$AbstractFilteredMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: new           #171                // class com/google/common/collect/Maps$FilteredEntryMap
       3: dup
       4: aload_0
       5: getfield      #183                // Field com/google/common/collect/Maps$AbstractFilteredMap.unfiltered:Ljava/util/Map;
       8: aload_0
       9: getfield      #184                // Field com/google/common/collect/Maps$AbstractFilteredMap.predicate:Lcom/google/common/base/Predicate;
      12: aload_1
      13: invokestatic  #185                // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
      16: invokespecial #172                // Method com/google/common/collect/Maps$FilteredEntryMap."<init>":(Ljava/util/Map;Lcom/google/common/base/Predicate;)V
      19: areturn

  private static <K, V> java.util.SortedMap<K, V> filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: getfield      #186                // Field com/google/common/collect/Maps$FilteredEntrySortedMap.predicate:Lcom/google/common/base/Predicate;
       4: aload_1
       5: invokestatic  #185                // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       8: astore_2
       9: new           #173                // class com/google/common/collect/Maps$FilteredEntrySortedMap
      12: dup
      13: aload_0
      14: invokevirtual #187                // Method com/google/common/collect/Maps$FilteredEntrySortedMap.sortedMap:()Ljava/util/SortedMap;
      17: aload_2
      18: invokespecial #175                // Method com/google/common/collect/Maps$FilteredEntrySortedMap."<init>":(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)V
      21: areturn

  private static <K, V> java.util.NavigableMap<K, V> filterFiltered(com.google.common.collect.Maps$FilteredEntryNavigableMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: invokestatic  #188                // Method com/google/common/collect/Maps$FilteredEntryNavigableMap.access$500:(Lcom/google/common/collect/Maps$FilteredEntryNavigableMap;)Lcom/google/common/base/Predicate;
       4: aload_1
       5: invokestatic  #185                // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       8: astore_2
       9: new           #176                // class com/google/common/collect/Maps$FilteredEntryNavigableMap
      12: dup
      13: aload_0
      14: invokestatic  #189                // Method com/google/common/collect/Maps$FilteredEntryNavigableMap.access$600:(Lcom/google/common/collect/Maps$FilteredEntryNavigableMap;)Ljava/util/NavigableMap;
      17: aload_2
      18: invokespecial #179                // Method com/google/common/collect/Maps$FilteredEntryNavigableMap."<init>":(Ljava/util/NavigableMap;Lcom/google/common/base/Predicate;)V
      21: areturn

  private static <K, V> com.google.common.collect.BiMap<K, V> filterFiltered(com.google.common.collect.Maps$FilteredEntryBiMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: getfield      #190                // Field com/google/common/collect/Maps$FilteredEntryBiMap.predicate:Lcom/google/common/base/Predicate;
       4: aload_1
       5: invokestatic  #185                // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       8: astore_2
       9: new           #180                // class com/google/common/collect/Maps$FilteredEntryBiMap
      12: dup
      13: aload_0
      14: invokevirtual #191                // Method com/google/common/collect/Maps$FilteredEntryBiMap.unfiltered:()Lcom/google/common/collect/BiMap;
      17: aload_2
      18: invokespecial #182                // Method com/google/common/collect/Maps$FilteredEntryBiMap."<init>":(Lcom/google/common/collect/BiMap;Lcom/google/common/base/Predicate;)V
      21: areturn

  public static <K, V> java.util.NavigableMap<K, V> unmodifiableNavigableMap(java.util.NavigableMap<K, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #192                // class com/google/common/collect/Maps$UnmodifiableNavigableMap
       9: ifeq          16
      12: aload_0
      13: astore_1
      14: aload_1
      15: areturn
      16: new           #192                // class com/google/common/collect/Maps$UnmodifiableNavigableMap
      19: dup
      20: aload_0
      21: invokespecial #193                // Method com/google/common/collect/Maps$UnmodifiableNavigableMap."<init>":(Ljava/util/NavigableMap;)V
      24: areturn

  private static <K, V> java.util.Map$Entry<K, V> unmodifiableOrNull(java.util.Map$Entry<K, ? extends V>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          12
       8: aload_0
       9: invokestatic  #194                // Method unmodifiableEntry:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
      12: areturn

  public static <K, V> java.util.NavigableMap<K, V> synchronizedNavigableMap(java.util.NavigableMap<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #195                // Method com/google/common/collect/Synchronized.navigableMap:(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;
       4: areturn

  static <V> V safeGet(java.util.Map<?, V>, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokeinterface #196,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn
      13: astore_2
      14: aconst_null
      15: areturn
    Exception table:
       from    to  target type
           5    12    13   Class java/lang/ClassCastException
           5    12    13   Class java/lang/NullPointerException

  static boolean safeContainsKey(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokeinterface #74,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      12: ireturn
      13: astore_2
      14: iconst_0
      15: ireturn
    Exception table:
       from    to  target type
           5    12    13   Class java/lang/ClassCastException
           5    12    13   Class java/lang/NullPointerException

  static <V> V safeRemove(java.util.Map<?, V>, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokeinterface #75,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn
      13: astore_2
      14: aconst_null
      15: areturn
    Exception table:
       from    to  target type
           5    12    13   Class java/lang/ClassCastException
           5    12    13   Class java/lang/NullPointerException

  static boolean containsKeyImpl(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #14,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: invokestatic  #199                // Method keyIterator:(Ljava/util/Iterator;)Ljava/util/Iterator;
      14: aload_1
      15: invokestatic  #200                // Method com/google/common/collect/Iterators.contains:(Ljava/util/Iterator;Ljava/lang/Object;)Z
      18: ireturn

  static boolean containsValueImpl(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #14,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: invokestatic  #201                // Method valueIterator:(Ljava/util/Iterator;)Ljava/util/Iterator;
      14: aload_1
      15: invokestatic  #200                // Method com/google/common/collect/Iterators.contains:(Ljava/util/Iterator;Ljava/lang/Object;)Z
      18: ireturn

  static <K, V> boolean containsEntryImpl(java.util.Collection<java.util.Map$Entry<K, V>>, java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #19                 // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: checkcast     #19                 // class java/util/Map$Entry
      14: invokestatic  #194                // Method unmodifiableEntry:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
      17: invokeinterface #202,  2          // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      22: ireturn

  static <K, V> boolean removeEntryImpl(java.util.Collection<java.util.Map$Entry<K, V>>, java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #19                 // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: checkcast     #19                 // class java/util/Map$Entry
      14: invokestatic  #194                // Method unmodifiableEntry:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
      17: invokeinterface #203,  2          // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      22: ireturn

  static boolean equalsImpl(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #164                // class java/util/Map
      11: ifeq          37
      14: aload_1
      15: checkcast     #164                // class java/util/Map
      18: astore_2
      19: aload_0
      20: invokeinterface #14,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      25: aload_2
      26: invokeinterface #14,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      31: invokeinterface #204,  2          // InterfaceMethod java/util/Set.equals:(Ljava/lang/Object;)Z
      36: ireturn
      37: iconst_0
      38: ireturn

  static java.lang.String toStringImpl(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: invokeinterface #205,  1          // InterfaceMethod java/util/Map.size:()I
       6: invokestatic  #206                // Method com/google/common/collect/Collections2.newStringBuilderForCollection:(I)Ljava/lang/StringBuilder;
       9: bipush        123
      11: invokevirtual #207                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: astore_1
      15: iconst_1
      16: istore_2
      17: aload_0
      18: invokeinterface #14,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      23: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      28: astore_3
      29: aload_3
      30: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          92
      38: aload_3
      39: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #19                 // class java/util/Map$Entry
      47: astore        4
      49: iload_2
      50: ifne          60
      53: aload_1
      54: ldc           #208                // String ,
      56: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: iconst_0
      61: istore_2
      62: aload_1
      63: aload         4
      65: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      70: invokevirtual #209                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: bipush        61
      75: invokevirtual #207                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      78: aload         4
      80: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      85: invokevirtual #209                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      88: pop
      89: goto          29
      92: aload_1
      93: bipush        125
      95: invokevirtual #207                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      98: invokevirtual #115                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: areturn

  static <K, V> void putAllImpl(java.util.Map<K, V>, java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_1
       1: invokeinterface #14,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          53
      21: aload_2
      22: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #19                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: aload_3
      39: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      44: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: goto          12
      53: return

  static <K> K keyOrNull(java.util.Map$Entry<K, ?>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          14
       8: aload_0
       9: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      14: areturn

  static <V> V valueOrNull(java.util.Map$Entry<?, V>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          14
       8: aload_0
       9: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      14: areturn

  static <E> com.google.common.collect.ImmutableMap<E, java.lang.Integer> indexMap(java.util.Collection<E>);
    Code:
       0: new           #210                // class com/google/common/collect/ImmutableMap$Builder
       3: dup
       4: aload_0
       5: invokeinterface #104,  1          // InterfaceMethod java/util/Collection.size:()I
      10: invokespecial #211                // Method com/google/common/collect/ImmutableMap$Builder."<init>":(I)V
      13: astore_1
      14: iconst_0
      15: istore_2
      16: aload_0
      17: invokeinterface #212,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          57
      32: aload_3
      33: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: astore        4
      40: aload_1
      41: aload         4
      43: iload_2
      44: iinc          2, 1
      47: invokestatic  #213                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      50: invokevirtual #101                // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      53: pop
      54: goto          23
      57: aload_1
      58: invokevirtual #108                // Method com/google/common/collect/ImmutableMap$Builder.buildOrThrow:()Lcom/google/common/collect/ImmutableMap;
      61: areturn

  public static <K extends java.lang.Comparable<? super K>, V> java.util.NavigableMap<K, V> subMap(java.util.NavigableMap<K, V>, com.google.common.collect.Range<K>);
    Code:
       0: aload_0
       1: invokeinterface #214,  1          // InterfaceMethod java/util/NavigableMap.comparator:()Ljava/util/Comparator;
       6: ifnull        67
       9: aload_0
      10: invokeinterface #214,  1          // InterfaceMethod java/util/NavigableMap.comparator:()Ljava/util/Comparator;
      15: invokestatic  #82                 // Method com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
      18: if_acmpeq     67
      21: aload_1
      22: invokevirtual #215                // Method com/google/common/collect/Range.hasLowerBound:()Z
      25: ifeq          67
      28: aload_1
      29: invokevirtual #216                // Method com/google/common/collect/Range.hasUpperBound:()Z
      32: ifeq          67
      35: aload_0
      36: invokeinterface #214,  1          // InterfaceMethod java/util/NavigableMap.comparator:()Ljava/util/Comparator;
      41: aload_1
      42: invokevirtual #217                // Method com/google/common/collect/Range.lowerEndpoint:()Ljava/lang/Comparable;
      45: aload_1
      46: invokevirtual #218                // Method com/google/common/collect/Range.upperEndpoint:()Ljava/lang/Comparable;
      49: invokeinterface #219,  3          // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      54: ifgt          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ldc           #220                // String map is using a custom comparator which is inconsistent with the natural ordering.
      64: invokestatic  #221                // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      67: aload_1
      68: invokevirtual #215                // Method com/google/common/collect/Range.hasLowerBound:()Z
      71: ifeq          126
      74: aload_1
      75: invokevirtual #216                // Method com/google/common/collect/Range.hasUpperBound:()Z
      78: ifeq          126
      81: aload_0
      82: aload_1
      83: invokevirtual #217                // Method com/google/common/collect/Range.lowerEndpoint:()Ljava/lang/Comparable;
      86: aload_1
      87: invokevirtual #222                // Method com/google/common/collect/Range.lowerBoundType:()Lcom/google/common/collect/BoundType;
      90: getstatic     #223                // Field com/google/common/collect/BoundType.CLOSED:Lcom/google/common/collect/BoundType;
      93: if_acmpne     100
      96: iconst_1
      97: goto          101
     100: iconst_0
     101: aload_1
     102: invokevirtual #218                // Method com/google/common/collect/Range.upperEndpoint:()Ljava/lang/Comparable;
     105: aload_1
     106: invokevirtual #224                // Method com/google/common/collect/Range.upperBoundType:()Lcom/google/common/collect/BoundType;
     109: getstatic     #223                // Field com/google/common/collect/BoundType.CLOSED:Lcom/google/common/collect/BoundType;
     112: if_acmpne     119
     115: iconst_1
     116: goto          120
     119: iconst_0
     120: invokeinterface #225,  5          // InterfaceMethod java/util/NavigableMap.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;
     125: areturn
     126: aload_1
     127: invokevirtual #215                // Method com/google/common/collect/Range.hasLowerBound:()Z
     130: ifeq          159
     133: aload_0
     134: aload_1
     135: invokevirtual #217                // Method com/google/common/collect/Range.lowerEndpoint:()Ljava/lang/Comparable;
     138: aload_1
     139: invokevirtual #222                // Method com/google/common/collect/Range.lowerBoundType:()Lcom/google/common/collect/BoundType;
     142: getstatic     #223                // Field com/google/common/collect/BoundType.CLOSED:Lcom/google/common/collect/BoundType;
     145: if_acmpne     152
     148: iconst_1
     149: goto          153
     152: iconst_0
     153: invokeinterface #226,  3          // InterfaceMethod java/util/NavigableMap.tailMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
     158: areturn
     159: aload_1
     160: invokevirtual #216                // Method com/google/common/collect/Range.hasUpperBound:()Z
     163: ifeq          192
     166: aload_0
     167: aload_1
     168: invokevirtual #218                // Method com/google/common/collect/Range.upperEndpoint:()Ljava/lang/Comparable;
     171: aload_1
     172: invokevirtual #224                // Method com/google/common/collect/Range.upperBoundType:()Lcom/google/common/collect/BoundType;
     175: getstatic     #223                // Field com/google/common/collect/BoundType.CLOSED:Lcom/google/common/collect/BoundType;
     178: if_acmpne     185
     181: iconst_1
     182: goto          186
     185: iconst_0
     186: invokeinterface #227,  3          // InterfaceMethod java/util/NavigableMap.headMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
     191: areturn
     192: aload_0
     193: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
     196: checkcast     #178                // class java/util/NavigableMap
     199: areturn

  static java.util.Map access$100(java.util.Map);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       4: areturn

  static java.util.Set access$200(java.util.Set);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method removeOnlySet:(Ljava/util/Set;)Ljava/util/Set;
       4: areturn

  static java.util.SortedSet access$300(java.util.SortedSet);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method removeOnlySortedSet:(Ljava/util/SortedSet;)Ljava/util/SortedSet;
       4: areturn

  static java.util.NavigableSet access$400(java.util.NavigableSet);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method removeOnlyNavigableSet:(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;
       4: areturn

  static java.util.Map$Entry access$800(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method unmodifiableOrNull:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
       4: areturn
}
