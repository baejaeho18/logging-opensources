Compiled from "ThreadFactoryBuilder.java"
class com.google.common.util.concurrent.ThreadFactoryBuilder$1 implements java.util.concurrent.ThreadFactory {
  final java.util.concurrent.ThreadFactory val$backingThreadFactory;

  final java.lang.String val$nameFormat;

  final java.util.concurrent.atomic.AtomicLong val$count;

  final java.lang.Boolean val$daemon;

  final java.lang.Integer val$priority;

  final java.lang.Thread$UncaughtExceptionHandler val$uncaughtExceptionHandler;

  com.google.common.util.concurrent.ThreadFactoryBuilder$1(java.util.concurrent.ThreadFactory, java.lang.String, java.util.concurrent.atomic.AtomicLong, java.lang.Boolean, java.lang.Integer, java.lang.Thread$UncaughtExceptionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$backingThreadFactory:Ljava/util/concurrent/ThreadFactory;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$nameFormat:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$count:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$daemon:Ljava/lang/Boolean;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$priority:Ljava/lang/Integer;
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field val$uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
      33: aload_0
      34: invokespecial #7                  // Method java/lang/Object."<init>":()V
      37: return

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$backingThreadFactory:Ljava/util/concurrent/ThreadFactory;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
      10: astore_2
      11: aload_2
      12: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: getfield      #2                  // Field val$nameFormat:Ljava/lang/String;
      20: ifnull        57
      23: aload_2
      24: aload_0
      25: getfield      #2                  // Field val$nameFormat:Ljava/lang/String;
      28: iconst_1
      29: anewarray     #10                 // class java/lang/Object
      32: dup
      33: iconst_0
      34: aload_0
      35: getfield      #3                  // Field val$count:Ljava/util/concurrent/atomic/AtomicLong;
      38: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #11                 // class java/util/concurrent/atomic/AtomicLong
      44: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      47: invokestatic  #13                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      50: aastore
      51: invokestatic  #14                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.access$000:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      54: invokevirtual #15                 // Method java/lang/Thread.setName:(Ljava/lang/String;)V
      57: aload_0
      58: getfield      #4                  // Field val$daemon:Ljava/lang/Boolean;
      61: ifnull        75
      64: aload_2
      65: aload_0
      66: getfield      #4                  // Field val$daemon:Ljava/lang/Boolean;
      69: invokevirtual #16                 // Method java/lang/Boolean.booleanValue:()Z
      72: invokevirtual #17                 // Method java/lang/Thread.setDaemon:(Z)V
      75: aload_0
      76: getfield      #5                  // Field val$priority:Ljava/lang/Integer;
      79: ifnull        93
      82: aload_2
      83: aload_0
      84: getfield      #5                  // Field val$priority:Ljava/lang/Integer;
      87: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
      90: invokevirtual #19                 // Method java/lang/Thread.setPriority:(I)V
      93: aload_0
      94: getfield      #6                  // Field val$uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
      97: ifnull        108
     100: aload_2
     101: aload_0
     102: getfield      #6                  // Field val$uncaughtExceptionHandler:Ljava/lang/Thread$UncaughtExceptionHandler;
     105: invokevirtual #20                 // Method java/lang/Thread.setUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V
     108: aload_2
     109: areturn
}
