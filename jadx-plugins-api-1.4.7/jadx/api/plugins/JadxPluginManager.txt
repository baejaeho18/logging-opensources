Compiled from "JadxPluginManager.java"
public class jadx.api.plugins.JadxPluginManager {
  private static final org.slf4j.Logger LOG;

  private final java.util.Set<jadx.api.plugins.JadxPluginManager$PluginData> allPlugins;

  private final java.util.Map<java.lang.String, java.lang.String> provideSuggestions;

  private java.util.List<jadx.api.plugins.JadxPlugin> resolvedPlugins;

  public jadx.api.plugins.JadxPluginManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/TreeSet
       8: dup
       9: invokespecial #3                  // Method java/util/TreeSet."<init>":()V
      12: putfield      #4                  // Field allPlugins:Ljava/util/Set;
      15: aload_0
      16: new           #5                  // class java/util/TreeMap
      19: dup
      20: invokespecial #6                  // Method java/util/TreeMap."<init>":()V
      23: putfield      #7                  // Field provideSuggestions:Ljava/util/Map;
      26: aload_0
      27: invokestatic  #8                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      30: putfield      #9                  // Field resolvedPlugins:Ljava/util/List;
      33: return

  public void providesSuggestion(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field provideSuggestions:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public void load();
    Code:
       0: aload_0
       1: getfield      #4                  // Field allPlugins:Ljava/util/Set;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/Set.clear:()V
       9: ldc           #12                 // class jadx/api/plugins/JadxPlugin
      11: invokestatic  #13                 // Method java/util/ServiceLoader.load:(Ljava/lang/Class;)Ljava/util/ServiceLoader;
      14: astore_1
      15: aload_1
      16: invokevirtual #14                 // Method java/util/ServiceLoader.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          67
      29: aload_2
      30: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #12                 // class jadx/api/plugins/JadxPlugin
      38: astore_3
      39: aload_0
      40: aload_3
      41: invokespecial #17                 // Method addPlugin:(Ljadx/api/plugins/JadxPlugin;)Ljadx/api/plugins/JadxPluginManager$PluginData;
      44: pop
      45: getstatic     #18                 // Field LOG:Lorg/slf4j/Logger;
      48: ldc           #19                 // String Loading plugin: {}
      50: aload_3
      51: invokeinterface #20,  1           // InterfaceMethod jadx/api/plugins/JadxPlugin.getPluginInfo:()Ljadx/api/plugins/JadxPluginInfo;
      56: invokevirtual #21                 // Method jadx/api/plugins/JadxPluginInfo.getPluginId:()Ljava/lang/String;
      59: invokeinterface #22,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      64: goto          20
      67: aload_0
      68: invokespecial #23                 // Method resolve:()V
      71: return

  public void register(jadx.api.plugins.JadxPlugin);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokespecial #17                 // Method addPlugin:(Ljadx/api/plugins/JadxPlugin;)Ljadx/api/plugins/JadxPluginManager$PluginData;
      10: astore_2
      11: getstatic     #18                 // Field LOG:Lorg/slf4j/Logger;
      14: ldc           #25                 // String Register plugin: {}
      16: aload_2
      17: invokevirtual #26                 // Method jadx/api/plugins/JadxPluginManager$PluginData.getPluginId:()Ljava/lang/String;
      20: invokeinterface #22,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      25: aload_0
      26: invokespecial #23                 // Method resolve:()V
      29: return

  private jadx.api.plugins.JadxPluginManager$PluginData addPlugin(jadx.api.plugins.JadxPlugin);
    Code:
       0: new           #27                 // class jadx/api/plugins/JadxPluginManager$PluginData
       3: dup
       4: aload_1
       5: aload_1
       6: invokeinterface #20,  1           // InterfaceMethod jadx/api/plugins/JadxPlugin.getPluginInfo:()Ljadx/api/plugins/JadxPluginInfo;
      11: aconst_null
      12: invokespecial #28                 // Method jadx/api/plugins/JadxPluginManager$PluginData."<init>":(Ljadx/api/plugins/JadxPlugin;Ljadx/api/plugins/JadxPluginInfo;Ljadx/api/plugins/JadxPluginManager$1;)V
      15: astore_2
      16: aload_0
      17: getfield      #4                  // Field allPlugins:Ljava/util/Set;
      20: aload_2
      21: invokeinterface #29,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      26: ifne          68
      29: new           #30                 // class java/lang/IllegalArgumentException
      32: dup
      33: new           #31                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #33                 // String Duplicate plugin id:
      42: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_2
      46: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: ldc           #36                 // String , class
      51: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_1
      55: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      58: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_1
      69: instanceof    #40                 // class jadx/api/plugins/options/JadxPluginOptions
      72: ifeq          87
      75: aload_0
      76: aload_1
      77: checkcast     #40                 // class jadx/api/plugins/options/JadxPluginOptions
      80: aload_2
      81: invokevirtual #26                 // Method jadx/api/plugins/JadxPluginManager$PluginData.getPluginId:()Ljava/lang/String;
      84: invokespecial #41                 // Method verifyOptions:(Ljadx/api/plugins/options/JadxPluginOptions;Ljava/lang/String;)V
      87: aload_2
      88: areturn

  private void verifyOptions(jadx.api.plugins.options.JadxPluginOptions, java.lang.String);
    Code:
       0: aload_1
       1: invokeinterface #42,  1           // InterfaceMethod jadx/api/plugins/options/JadxPluginOptions.getOptionsDescriptions:()Ljava/util/List;
       6: astore_3
       7: aload_3
       8: ifnonnull     38
      11: new           #30                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #31                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #43                 // String Null option descriptions in plugin id:
      24: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_2
      28: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: new           #31                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      45: aload_2
      46: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: bipush        46
      51: invokevirtual #44                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      54: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: astore        4
      59: aload_3
      60: aload         4
      62: aload_2
      63: invokedynamic #45,  0             // InvokeDynamic #0:accept:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Consumer;
      68: invokeinterface #46,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      73: return

  public boolean unload(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field allPlugins:Ljava/util/Set;
       4: aload_1
       5: invokedynamic #47,  0             // InvokeDynamic #1:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      10: invokeinterface #48,  2           // InterfaceMethod java/util/Set.removeIf:(Ljava/util/function/Predicate;)Z
      15: istore_2
      16: aload_0
      17: invokespecial #23                 // Method resolve:()V
      20: iload_2
      21: ireturn

  public java.util.List<jadx.api.plugins.JadxPlugin> getAllPlugins();
    Code:
       0: aload_0
       1: getfield      #4                  // Field allPlugins:Ljava/util/Set;
       4: invokeinterface #49,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
       9: ifeq          16
      12: aload_0
      13: invokevirtual #50                 // Method load:()V
      16: aload_0
      17: getfield      #4                  // Field allPlugins:Ljava/util/Set;
      20: invokeinterface #51,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      25: invokedynamic #52,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      30: invokeinterface #53,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      35: invokestatic  #54                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      38: invokeinterface #55,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      43: checkcast     #56                 // class java/util/List
      46: areturn

  public java.util.List<jadx.api.plugins.JadxPlugin> getResolvedPlugins();
    Code:
       0: aload_0
       1: getfield      #9                  // Field resolvedPlugins:Ljava/util/List;
       4: invokestatic  #57                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public java.util.List<jadx.api.plugins.input.JadxInputPlugin> getInputPlugins();
    Code:
       0: aload_0
       1: getfield      #9                  // Field resolvedPlugins:Ljava/util/List;
       4: invokeinterface #58,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: ldc           #59                 // class jadx/api/plugins/input/JadxInputPlugin
      11: dup
      12: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: pop
      16: invokedynamic #60,  0             // InvokeDynamic #3:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
      21: invokeinterface #61,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      26: ldc           #59                 // class jadx/api/plugins/input/JadxInputPlugin
      28: dup
      29: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: pop
      33: invokedynamic #62,  0             // InvokeDynamic #4:apply:(Ljava/lang/Class;)Ljava/util/function/Function;
      38: invokeinterface #53,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      43: invokestatic  #54                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      46: invokeinterface #55,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      51: checkcast     #56                 // class java/util/List
      54: areturn

  public java.util.List<jadx.api.plugins.options.JadxPluginOptions> getPluginsWithOptions();
    Code:
       0: aload_0
       1: getfield      #9                  // Field resolvedPlugins:Ljava/util/List;
       4: invokeinterface #58,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: ldc           #40                 // class jadx/api/plugins/options/JadxPluginOptions
      11: dup
      12: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: pop
      16: invokedynamic #60,  0             // InvokeDynamic #3:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
      21: invokeinterface #61,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      26: ldc           #40                 // class jadx/api/plugins/options/JadxPluginOptions
      28: dup
      29: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: pop
      33: invokedynamic #63,  0             // InvokeDynamic #5:apply:(Ljava/lang/Class;)Ljava/util/function/Function;
      38: invokeinterface #53,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      43: invokestatic  #54                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      46: invokeinterface #55,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      51: checkcast     #56                 // class java/util/List
      54: areturn

  private synchronized void resolve();
    Code:
       0: aload_0
       1: getfield      #4                  // Field allPlugins:Ljava/util/Set;
       4: invokeinterface #51,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #64,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      14: invokestatic  #65                 // Method java/util/stream/Collectors.groupingBy:(Ljava/util/function/Function;)Ljava/util/stream/Collector;
      17: invokeinterface #55,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      22: checkcast     #66                 // class java/util/Map
      25: astore_1
      26: new           #67                 // class java/util/ArrayList
      29: dup
      30: aload_1
      31: invokeinterface #68,  1           // InterfaceMethod java/util/Map.size:()I
      36: invokespecial #69                 // Method java/util/ArrayList."<init>":(I)V
      39: astore_2
      40: aload_1
      41: aload_0
      42: aload_2
      43: invokedynamic #70,  0             // InvokeDynamic #7:accept:(Ljadx/api/plugins/JadxPluginManager;Ljava/util/List;)Ljava/util/function/BiConsumer;
      48: invokeinterface #71,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      53: aload_2
      54: invokestatic  #72                 // Method java/util/Collections.sort:(Ljava/util/List;)V
      57: aload_0
      58: aload_2
      59: invokeinterface #58,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      64: invokedynamic #52,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      69: invokeinterface #53,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      74: invokestatic  #54                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      77: invokeinterface #55,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      82: checkcast     #56                 // class java/util/List
      85: putfield      #9                  // Field resolvedPlugins:Ljava/util/List;
      88: return

  private void lambda$resolve$4(java.util.List, java.lang.String, java.util.List);
    Code:
       0: aload_3
       1: invokeinterface #73,  1           // InterfaceMethod java/util/List.size:()I
       6: iconst_1
       7: if_icmpne     27
      10: aload_1
      11: aload_3
      12: iconst_0
      13: invokeinterface #74,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      18: invokeinterface #75,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: goto          135
      27: aload_0
      28: getfield      #7                  // Field provideSuggestions:Ljava/util/Map;
      31: aload_2
      32: invokeinterface #76,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #77                 // class java/lang/String
      40: astore        4
      42: aload         4
      44: ifnull        87
      47: aload_3
      48: invokeinterface #58,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      53: aload         4
      55: invokedynamic #78,  0             // InvokeDynamic #8:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      60: invokeinterface #61,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      65: invokeinterface #79,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      70: aload_1
      71: dup
      72: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      75: pop
      76: invokedynamic #80,  0             // InvokeDynamic #9:accept:(Ljava/util/List;)Ljava/util/function/Consumer;
      81: invokevirtual #81                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      84: goto          135
      87: aload_3
      88: iconst_0
      89: invokeinterface #74,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      94: checkcast     #27                 // class jadx/api/plugins/JadxPluginManager$PluginData
      97: astore        5
      99: aload_1
     100: aload         5
     102: invokeinterface #75,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     107: pop
     108: getstatic     #18                 // Field LOG:Lorg/slf4j/Logger;
     111: ldc           #82                 // String Select providing \'{}\' plugin \'{}\', candidates: {}
     113: iconst_3
     114: anewarray     #83                 // class java/lang/Object
     117: dup
     118: iconst_0
     119: aload_2
     120: aastore
     121: dup
     122: iconst_1
     123: aload         5
     125: aastore
     126: dup
     127: iconst_2
     128: aload_3
     129: aastore
     130: invokeinterface #84,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     135: return

  private static boolean lambda$null$3(java.lang.String, jadx.api.plugins.JadxPluginManager$PluginData);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method jadx/api/plugins/JadxPluginManager$PluginData.getPluginId:()Ljava/lang/String;
       4: aload_0
       5: invokevirtual #85                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ireturn

  private static java.lang.String lambda$resolve$2(jadx.api.plugins.JadxPluginManager$PluginData);
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method jadx/api/plugins/JadxPluginManager$PluginData.getInfo:()Ljadx/api/plugins/JadxPluginInfo;
       4: invokevirtual #87                 // Method jadx/api/plugins/JadxPluginInfo.getProvides:()Ljava/lang/String;
       7: areturn

  private static boolean lambda$unload$1(java.lang.String, jadx.api.plugins.JadxPluginManager$PluginData);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method jadx/api/plugins/JadxPluginManager$PluginData.getPluginId:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: aload_0
       7: invokevirtual #85                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: istore_3
      11: iload_3
      12: ifeq          26
      15: getstatic     #18                 // Field LOG:Lorg/slf4j/Logger;
      18: ldc           #88                 // String Unload plugin: {}
      20: aload_2
      21: invokeinterface #22,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      26: iload_3
      27: ireturn

  private static void lambda$verifyOptions$0(java.lang.String, java.lang.String, jadx.api.plugins.options.OptionDescription);
    Code:
       0: aload_2
       1: invokeinterface #89,  1           // InterfaceMethod jadx/api/plugins/options/OptionDescription.name:()Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: ifnull        19
      11: aload_3
      12: aload_0
      13: invokevirtual #90                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      16: ifne          55
      19: new           #30                 // class java/lang/IllegalArgumentException
      22: dup
      23: new           #31                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #91                 // String Plugin option name should start with plugin id: \'
      32: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #92                 // String \', option:
      41: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_3
      45: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_2
      56: invokeinterface #93,  1           // InterfaceMethod jadx/api/plugins/options/OptionDescription.description:()Ljava/lang/String;
      61: astore        4
      63: aload         4
      65: ifnull        76
      68: aload         4
      70: invokevirtual #94                 // Method java/lang/String.isEmpty:()Z
      73: ifeq          103
      76: new           #30                 // class java/lang/IllegalArgumentException
      79: dup
      80: new           #31                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #95                 // String Plugin option description not set, plugin:
      89: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_1
      93: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     102: athrow
     103: aload_2
     104: invokeinterface #96,  1           // InterfaceMethod jadx/api/plugins/options/OptionDescription.values:()Ljava/util/List;
     109: astore        5
     111: aload         5
     113: ifnonnull     152
     116: new           #30                 // class java/lang/IllegalArgumentException
     119: dup
     120: new           #31                 // class java/lang/StringBuilder
     123: dup
     124: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     127: ldc           #97                 // String Plugin option values is null, option:
     129: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_3
     133: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: ldc           #98                 // String , plugin:
     138: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: aload_1
     142: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     151: athrow
     152: return

  static {};
    Code:
       0: ldc           #99                 // class jadx/api/plugins/JadxPluginManager
       2: invokestatic  #100                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #18                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
