Compiled from "ZipSecurity.java"
public class jadx.api.plugins.utils.ZipSecurity {
  private static final org.slf4j.Logger LOG;

  private static final int MAX_SIZE_DIFF;

  private static final int MAX_ENTRIES_COUNT;

  private jadx.api.plugins.utils.ZipSecurity();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static boolean isInSubDirectoryInternal(java.io.File, java.io.File);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: aload_0
       8: invokevirtual #2                  // Method java/io/File.equals:(Ljava/lang/Object;)Z
      11: ifeq          16
      14: iconst_1
      15: ireturn
      16: aload_0
      17: aload_1
      18: invokevirtual #3                  // Method java/io/File.getParentFile:()Ljava/io/File;
      21: invokestatic  #4                  // Method isInSubDirectoryInternal:(Ljava/io/File;Ljava/io/File;)Z
      24: ireturn

  public static boolean isInSubDirectory(java.io.File, java.io.File);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method java/io/File.getCanonicalFile:()Ljava/io/File;
       4: astore_1
       5: aload_0
       6: invokevirtual #5                  // Method java/io/File.getCanonicalFile:()Ljava/io/File;
       9: astore_0
      10: goto          16
      13: astore_2
      14: iconst_0
      15: ireturn
      16: aload_0
      17: aload_1
      18: invokestatic  #4                  // Method isInSubDirectoryInternal:(Ljava/io/File;Ljava/io/File;)Z
      21: ireturn
    Exception table:
       from    to  target type
           0    10    13   Class java/io/IOException

  public static boolean isValidZipEntryName(java.lang.String);
    Code:
       0: getstatic     #7                  // Field jadx/api/plugins/utils/CommonFileUtils.CWD:Ljava/io/File;
       3: astore_1
       4: new           #8                  // class java/io/File
       7: dup
       8: aload_1
       9: aload_0
      10: invokespecial #9                  // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      13: invokevirtual #5                  // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      16: astore_2
      17: aload_1
      18: aload_2
      19: invokestatic  #4                  // Method isInSubDirectoryInternal:(Ljava/io/File;Ljava/io/File;)Z
      22: ifeq          27
      25: iconst_1
      26: ireturn
      27: getstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
      30: ldc           #11                 // String Invalid file name or path traversal attack detected: {}
      32: aload_0
      33: invokeinterface #12,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      38: iconst_0
      39: ireturn
      40: astore_1
      41: getstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
      44: ldc           #11                 // String Invalid file name or path traversal attack detected: {}
      46: aload_0
      47: invokeinterface #12,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      52: iconst_0
      53: ireturn
    Exception table:
       from    to  target type
           0    26    40   Class java/lang/Exception
          27    39    40   Class java/lang/Exception

  public static boolean isZipBomb(java.util.zip.ZipEntry);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method java/util/zip/ZipEntry.getCompressedSize:()J
       4: lstore_1
       5: aload_0
       6: invokevirtual #15                 // Method java/util/zip/ZipEntry.getSize:()J
       9: lstore_3
      10: lload_1
      11: lconst_0
      12: lcmp
      13: iflt          22
      16: lload_3
      17: lconst_0
      18: lcmp
      19: ifge          59
      22: getstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
      25: ldc           #16                 // String Zip bomb attack detected, invalid sizes: compressed {}, uncompressed {}, name {}
      27: iconst_3
      28: anewarray     #17                 // class java/lang/Object
      31: dup
      32: iconst_0
      33: lload_1
      34: invokestatic  #18                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      37: aastore
      38: dup
      39: iconst_1
      40: lload_3
      41: invokestatic  #18                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      44: aastore
      45: dup
      46: iconst_2
      47: aload_0
      48: invokevirtual #19                 // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;
      51: aastore
      52: invokeinterface #20,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
      57: iconst_1
      58: ireturn
      59: lload_1
      60: ldc2_w        #22                 // long 100l
      63: lmul
      64: lload_3
      65: lcmp
      66: ifge          106
      69: getstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
      72: ldc           #16                 // String Zip bomb attack detected, invalid sizes: compressed {}, uncompressed {}, name {}
      74: iconst_3
      75: anewarray     #17                 // class java/lang/Object
      78: dup
      79: iconst_0
      80: lload_1
      81: invokestatic  #18                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      84: aastore
      85: dup
      86: iconst_1
      87: lload_3
      88: invokestatic  #18                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      91: aastore
      92: dup
      93: iconst_2
      94: aload_0
      95: invokevirtual #19                 // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;
      98: aastore
      99: invokeinterface #20,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     104: iconst_1
     105: ireturn
     106: iconst_0
     107: ireturn

  public static boolean isValidZipEntry(java.util.zip.ZipEntry);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;
       4: invokestatic  #24                 // Method isValidZipEntryName:(Ljava/lang/String;)Z
       7: ifeq          21
      10: aload_0
      11: invokestatic  #25                 // Method isZipBomb:(Ljava/util/zip/ZipEntry;)Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public static java.io.InputStream getInputStreamForEntry(java.util.zip.ZipFile, java.util.zip.ZipEntry) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method java/util/zip/ZipFile.getInputStream:(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;
       5: astore_2
       6: new           #27                 // class jadx/api/plugins/utils/LimitedInputStream
       9: dup
      10: aload_2
      11: aload_1
      12: invokevirtual #15                 // Method java/util/zip/ZipEntry.getSize:()J
      15: invokespecial #28                 // Method jadx/api/plugins/utils/LimitedInputStream."<init>":(Ljava/io/InputStream;J)V
      18: astore_3
      19: new           #29                 // class java/io/BufferedInputStream
      22: dup
      23: aload_3
      24: invokespecial #30                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      27: areturn

  public static <R> R visitZipEntries(java.io.File, java.util.function.BiFunction<java.util.zip.ZipFile, java.util.zip.ZipEntry, R>);
    Code:
       0: new           #31                 // class java/util/zip/ZipFile
       3: dup
       4: aload_0
       5: invokespecial #32                 // Method java/util/zip/ZipFile."<init>":(Ljava/io/File;)V
       8: astore_2
       9: aconst_null
      10: astore_3
      11: aload_2
      12: invokevirtual #33                 // Method java/util/zip/ZipFile.entries:()Ljava/util/Enumeration;
      15: astore        4
      17: iconst_0
      18: istore        5
      20: aload         4
      22: invokeinterface #34,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      27: ifeq          147
      30: aload         4
      32: invokeinterface #35,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      37: checkcast     #36                 // class java/util/zip/ZipEntry
      40: astore        6
      42: aload         6
      44: invokestatic  #37                 // Method isValidZipEntry:(Ljava/util/zip/ZipEntry;)Z
      47: ifeq          144
      50: aload_1
      51: aload_2
      52: aload         6
      54: invokeinterface #38,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: astore        7
      61: aload         7
      63: ifnull        103
      66: aload         7
      68: astore        8
      70: aload_2
      71: ifnull        100
      74: aload_3
      75: ifnull        96
      78: aload_2
      79: invokevirtual #39                 // Method java/util/zip/ZipFile.close:()V
      82: goto          100
      85: astore        9
      87: aload_3
      88: aload         9
      90: invokevirtual #41                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      93: goto          100
      96: aload_2
      97: invokevirtual #39                 // Method java/util/zip/ZipFile.close:()V
     100: aload         8
     102: areturn
     103: iinc          5, 1
     106: iload         5
     108: ldc           #42                 // int 100000
     110: if_icmple     144
     113: new           #43                 // class java/lang/IllegalStateException
     116: dup
     117: new           #44                 // class java/lang/StringBuilder
     120: dup
     121: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
     124: ldc           #46                 // String Zip entries count limit exceeded: 100000, last entry:
     126: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload         6
     131: invokevirtual #19                 // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;
     134: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: invokespecial #49                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     143: athrow
     144: goto          20
     147: aload_2
     148: ifnull        223
     151: aload_3
     152: ifnull        173
     155: aload_2
     156: invokevirtual #39                 // Method java/util/zip/ZipFile.close:()V
     159: goto          223
     162: astore        4
     164: aload_3
     165: aload         4
     167: invokevirtual #41                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     170: goto          223
     173: aload_2
     174: invokevirtual #39                 // Method java/util/zip/ZipFile.close:()V
     177: goto          223
     180: astore        4
     182: aload         4
     184: astore_3
     185: aload         4
     187: athrow
     188: astore        10
     190: aload_2
     191: ifnull        220
     194: aload_3
     195: ifnull        216
     198: aload_2
     199: invokevirtual #39                 // Method java/util/zip/ZipFile.close:()V
     202: goto          220
     205: astore        11
     207: aload_3
     208: aload         11
     210: invokevirtual #41                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     213: goto          220
     216: aload_2
     217: invokevirtual #39                 // Method java/util/zip/ZipFile.close:()V
     220: aload         10
     222: athrow
     223: goto          258
     226: astore_2
     227: new           #50                 // class java/lang/RuntimeException
     230: dup
     231: new           #44                 // class java/lang/StringBuilder
     234: dup
     235: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
     238: ldc           #51                 // String Failed to process zip file:
     240: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     243: aload_0
     244: invokevirtual #52                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     247: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     250: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     253: aload_2
     254: invokespecial #53                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     257: athrow
     258: aconst_null
     259: areturn
    Exception table:
       from    to  target type
          78    82    85   Class java/lang/Throwable
         155   159   162   Class java/lang/Throwable
          11    70   180   Class java/lang/Throwable
         103   147   180   Class java/lang/Throwable
          11    70   188   any
         103   147   188   any
         198   202   205   Class java/lang/Throwable
         180   190   188   any
           0   100   226   Class java/lang/Exception
         103   223   226   Class java/lang/Exception

  public static void readZipEntries(java.io.File, java.util.function.BiConsumer<java.util.zip.ZipEntry, java.io.InputStream>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #54,  0             // InvokeDynamic #0:apply:(Ljava/util/function/BiConsumer;)Ljava/util/function/BiFunction;
       7: invokestatic  #55                 // Method visitZipEntries:(Ljava/io/File;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      10: pop
      11: return

  private static java.lang.Object lambda$readZipEntries$0(java.util.function.BiConsumer, java.util.zip.ZipFile, java.util.zip.ZipEntry);
    Code:
       0: aload_2
       1: invokevirtual #56                 // Method java/util/zip/ZipEntry.isDirectory:()Z
       4: ifne          139
       7: aload_1
       8: aload_2
       9: invokestatic  #57                 // Method getInputStreamForEntry:(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;
      12: astore_3
      13: aconst_null
      14: astore        4
      16: aload_0
      17: aload_2
      18: aload_3
      19: invokeinterface #58,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      24: aload_3
      25: ifnull        105
      28: aload         4
      30: ifnull        52
      33: aload_3
      34: invokevirtual #59                 // Method java/io/InputStream.close:()V
      37: goto          105
      40: astore        5
      42: aload         4
      44: aload         5
      46: invokevirtual #41                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      49: goto          105
      52: aload_3
      53: invokevirtual #59                 // Method java/io/InputStream.close:()V
      56: goto          105
      59: astore        5
      61: aload         5
      63: astore        4
      65: aload         5
      67: athrow
      68: astore        6
      70: aload_3
      71: ifnull        102
      74: aload         4
      76: ifnull        98
      79: aload_3
      80: invokevirtual #59                 // Method java/io/InputStream.close:()V
      83: goto          102
      86: astore        7
      88: aload         4
      90: aload         7
      92: invokevirtual #41                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      95: goto          102
      98: aload_3
      99: invokevirtual #59                 // Method java/io/InputStream.close:()V
     102: aload         6
     104: athrow
     105: goto          139
     108: astore_3
     109: new           #50                 // class java/lang/RuntimeException
     112: dup
     113: new           #44                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #60                 // String Error process zip entry:
     122: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_2
     126: invokevirtual #19                 // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;
     129: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokespecial #61                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     138: athrow
     139: aconst_null
     140: areturn
    Exception table:
       from    to  target type
          33    37    40   Class java/lang/Throwable
          16    24    59   Class java/lang/Throwable
          16    24    68   any
          79    83    86   Class java/lang/Throwable
          59    70    68   any
           7   105   108   Class java/lang/Exception

  static {};
    Code:
       0: ldc           #21                 // class jadx/api/plugins/utils/ZipSecurity
       2: invokestatic  #62                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #10                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
