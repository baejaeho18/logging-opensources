Compiled from "BaseOptionsParser.java"
public class jadx.api.plugins.options.impl.BaseOptionsParser {
  public jadx.api.plugins.options.impl.BaseOptionsParser();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean getBooleanOption(java.util.Map<java.lang.String, java.lang.String>, java.lang.String, boolean);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #2,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #3                  // class java/lang/String
      10: astore        4
      12: aload         4
      14: ifnonnull     19
      17: iload_3
      18: ireturn
      19: aload         4
      21: getstatic     #4                  // Field java/util/Locale.ROOT:Ljava/util/Locale;
      24: invokevirtual #5                  // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      27: astore        5
      29: aload         5
      31: ldc           #6                  // String yes
      33: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      36: ifne          49
      39: aload         5
      41: ldc           #8                  // String true
      43: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      46: ifeq          51
      49: iconst_1
      50: ireturn
      51: aload         5
      53: ldc           #9                  // String no
      55: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      58: ifne          71
      61: aload         5
      63: ldc           #10                 // String false
      65: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifeq          73
      71: iconst_0
      72: ireturn
      73: new           #11                 // class java/lang/IllegalArgumentException
      76: dup
      77: new           #12                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #14                 // String Unknown value \'
      86: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload         4
      91: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: ldc           #16                 // String \' for option \'
      96: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_2
     100: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: ldc           #17                 // String \', expect: \'yes\' or \'no\'
     105: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     114: athrow

  public <T> T getOption(java.util.Map<java.lang.String, java.lang.String>, java.lang.String, java.util.function.Function<java.lang.String, T>, T);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #2,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #3                  // class java/lang/String
      10: astore        5
      12: aload         5
      14: ifnonnull     20
      17: aload         4
      19: areturn
      20: aload_3
      21: aload         5
      23: invokeinterface #20,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: areturn
}
