Compiled from "BitArray.java"
public final class com.google.zxing.common.BitArray implements java.lang.Cloneable {
  private static final int[] EMPTY_BITS;

  private static final float LOAD_FACTOR;

  private int[] bits;

  private int size;

  public com.google.zxing.common.BitArray();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field size:I
       9: aload_0
      10: getstatic     #3                  // Field EMPTY_BITS:[I
      13: putfield      #4                  // Field bits:[I
      16: return

  public com.google.zxing.common.BitArray(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field size:I
       9: aload_0
      10: iload_1
      11: invokestatic  #5                  // Method makeArray:(I)[I
      14: putfield      #4                  // Field bits:[I
      17: return

  com.google.zxing.common.BitArray(int[], int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field bits:[I
       9: aload_0
      10: iload_2
      11: putfield      #2                  // Field size:I
      14: return

  public int getSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field size:I
       4: ireturn

  public int getSizeInBytes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field size:I
       4: bipush        7
       6: iadd
       7: bipush        8
       9: idiv
      10: ireturn

  private void ensureCapacity(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #4                  // Field bits:[I
       5: arraylength
       6: bipush        32
       8: imul
       9: if_icmple     46
      12: iload_1
      13: i2f
      14: ldc           #7                  // float 0.75f
      16: fdiv
      17: f2d
      18: invokestatic  #8                  // Method java/lang/Math.ceil:(D)D
      21: d2i
      22: invokestatic  #5                  // Method makeArray:(I)[I
      25: astore_2
      26: aload_0
      27: getfield      #4                  // Field bits:[I
      30: iconst_0
      31: aload_2
      32: iconst_0
      33: aload_0
      34: getfield      #4                  // Field bits:[I
      37: arraylength
      38: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      41: aload_0
      42: aload_2
      43: putfield      #4                  // Field bits:[I
      46: return

  public boolean get(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field bits:[I
       4: iload_1
       5: bipush        32
       7: idiv
       8: iaload
       9: iconst_1
      10: iload_1
      11: bipush        31
      13: iand
      14: ishl
      15: iand
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public void set(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field bits:[I
       4: iload_1
       5: bipush        32
       7: idiv
       8: dup2
       9: iaload
      10: iconst_1
      11: iload_1
      12: bipush        31
      14: iand
      15: ishl
      16: ior
      17: iastore
      18: return

  public void flip(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field bits:[I
       4: iload_1
       5: bipush        32
       7: idiv
       8: dup2
       9: iaload
      10: iconst_1
      11: iload_1
      12: bipush        31
      14: iand
      15: ishl
      16: ixor
      17: iastore
      18: return

  public int getNextSet(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #2                  // Field size:I
       5: if_icmplt     13
       8: aload_0
       9: getfield      #2                  // Field size:I
      12: ireturn
      13: iload_1
      14: bipush        32
      16: idiv
      17: istore_2
      18: aload_0
      19: getfield      #4                  // Field bits:[I
      22: iload_2
      23: iaload
      24: istore_3
      25: iload_3
      26: iconst_1
      27: iload_1
      28: bipush        31
      30: iand
      31: ishl
      32: ineg
      33: iand
      34: istore_3
      35: iload_3
      36: ifne          66
      39: iinc          2, 1
      42: iload_2
      43: aload_0
      44: getfield      #4                  // Field bits:[I
      47: arraylength
      48: if_icmpne     56
      51: aload_0
      52: getfield      #2                  // Field size:I
      55: ireturn
      56: aload_0
      57: getfield      #4                  // Field bits:[I
      60: iload_2
      61: iaload
      62: istore_3
      63: goto          35
      66: iload_2
      67: bipush        32
      69: imul
      70: iload_3
      71: invokestatic  #10                 // Method java/lang/Integer.numberOfTrailingZeros:(I)I
      74: iadd
      75: istore        4
      77: iload         4
      79: aload_0
      80: getfield      #2                  // Field size:I
      83: invokestatic  #11                 // Method java/lang/Math.min:(II)I
      86: ireturn

  public int getNextUnset(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #2                  // Field size:I
       5: if_icmplt     13
       8: aload_0
       9: getfield      #2                  // Field size:I
      12: ireturn
      13: iload_1
      14: bipush        32
      16: idiv
      17: istore_2
      18: aload_0
      19: getfield      #4                  // Field bits:[I
      22: iload_2
      23: iaload
      24: iconst_m1
      25: ixor
      26: istore_3
      27: iload_3
      28: iconst_1
      29: iload_1
      30: bipush        31
      32: iand
      33: ishl
      34: ineg
      35: iand
      36: istore_3
      37: iload_3
      38: ifne          70
      41: iinc          2, 1
      44: iload_2
      45: aload_0
      46: getfield      #4                  // Field bits:[I
      49: arraylength
      50: if_icmpne     58
      53: aload_0
      54: getfield      #2                  // Field size:I
      57: ireturn
      58: aload_0
      59: getfield      #4                  // Field bits:[I
      62: iload_2
      63: iaload
      64: iconst_m1
      65: ixor
      66: istore_3
      67: goto          37
      70: iload_2
      71: bipush        32
      73: imul
      74: iload_3
      75: invokestatic  #10                 // Method java/lang/Integer.numberOfTrailingZeros:(I)I
      78: iadd
      79: istore        4
      81: iload         4
      83: aload_0
      84: getfield      #2                  // Field size:I
      87: invokestatic  #11                 // Method java/lang/Math.min:(II)I
      90: ireturn

  public void setBulk(int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field bits:[I
       4: iload_1
       5: bipush        32
       7: idiv
       8: iload_2
       9: iastore
      10: return

  public void setRange(int, int);
    Code:
       0: iload_2
       1: iload_1
       2: if_icmplt     17
       5: iload_1
       6: iflt          17
       9: iload_2
      10: aload_0
      11: getfield      #2                  // Field size:I
      14: if_icmple     25
      17: new           #12                 // class java/lang/IllegalArgumentException
      20: dup
      21: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":()V
      24: athrow
      25: iload_2
      26: iload_1
      27: if_icmpne     31
      30: return
      31: iinc          2, -1
      34: iload_1
      35: bipush        32
      37: idiv
      38: istore_3
      39: iload_2
      40: bipush        32
      42: idiv
      43: istore        4
      45: iload_3
      46: istore        5
      48: iload         5
      50: iload         4
      52: if_icmpgt     118
      55: iload         5
      57: iload_3
      58: if_icmple     65
      61: iconst_0
      62: goto          69
      65: iload_1
      66: bipush        31
      68: iand
      69: istore        6
      71: iload         5
      73: iload         4
      75: if_icmpge     83
      78: bipush        31
      80: goto          87
      83: iload_2
      84: bipush        31
      86: iand
      87: istore        7
      89: iconst_2
      90: iload         7
      92: ishl
      93: iconst_1
      94: iload         6
      96: ishl
      97: isub
      98: istore        8
     100: aload_0
     101: getfield      #4                  // Field bits:[I
     104: iload         5
     106: dup2
     107: iaload
     108: iload         8
     110: ior
     111: iastore
     112: iinc          5, 1
     115: goto          48
     118: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bits:[I
       4: arraylength
       5: istore_1
       6: iconst_0
       7: istore_2
       8: iload_2
       9: iload_1
      10: if_icmpge     26
      13: aload_0
      14: getfield      #4                  // Field bits:[I
      17: iload_2
      18: iconst_0
      19: iastore
      20: iinc          2, 1
      23: goto          8
      26: return

  public boolean isRange(int, int, boolean);
    Code:
       0: iload_2
       1: iload_1
       2: if_icmplt     17
       5: iload_1
       6: iflt          17
       9: iload_2
      10: aload_0
      11: getfield      #2                  // Field size:I
      14: if_icmple     25
      17: new           #12                 // class java/lang/IllegalArgumentException
      20: dup
      21: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":()V
      24: athrow
      25: iload_2
      26: iload_1
      27: if_icmpne     32
      30: iconst_1
      31: ireturn
      32: iinc          2, -1
      35: iload_1
      36: bipush        32
      38: idiv
      39: istore        4
      41: iload_2
      42: bipush        32
      44: idiv
      45: istore        5
      47: iload         4
      49: istore        6
      51: iload         6
      53: iload         5
      55: if_icmpgt     135
      58: iload         6
      60: iload         4
      62: if_icmple     69
      65: iconst_0
      66: goto          73
      69: iload_1
      70: bipush        31
      72: iand
      73: istore        7
      75: iload         6
      77: iload         5
      79: if_icmpge     87
      82: bipush        31
      84: goto          91
      87: iload_2
      88: bipush        31
      90: iand
      91: istore        8
      93: iconst_2
      94: iload         8
      96: ishl
      97: iconst_1
      98: iload         7
     100: ishl
     101: isub
     102: istore        9
     104: aload_0
     105: getfield      #4                  // Field bits:[I
     108: iload         6
     110: iaload
     111: iload         9
     113: iand
     114: iload_3
     115: ifeq          123
     118: iload         9
     120: goto          124
     123: iconst_0
     124: if_icmpeq     129
     127: iconst_0
     128: ireturn
     129: iinc          6, 1
     132: goto          51
     135: iconst_1
     136: ireturn

  public void appendBit(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field size:I
       5: iconst_1
       6: iadd
       7: invokespecial #14                 // Method ensureCapacity:(I)V
      10: iload_1
      11: ifeq          38
      14: aload_0
      15: getfield      #4                  // Field bits:[I
      18: aload_0
      19: getfield      #2                  // Field size:I
      22: bipush        32
      24: idiv
      25: dup2
      26: iaload
      27: iconst_1
      28: aload_0
      29: getfield      #2                  // Field size:I
      32: bipush        31
      34: iand
      35: ishl
      36: ior
      37: iastore
      38: aload_0
      39: dup
      40: getfield      #2                  // Field size:I
      43: iconst_1
      44: iadd
      45: putfield      #2                  // Field size:I
      48: return

  public void appendBits(int, int);
    Code:
       0: iload_2
       1: iflt          10
       4: iload_2
       5: bipush        32
       7: if_icmple     20
      10: new           #12                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #15                 // String Num bits must be between 0 and 32
      16: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #2                  // Field size:I
      24: istore_3
      25: aload_0
      26: iload_3
      27: iload_2
      28: iadd
      29: invokespecial #14                 // Method ensureCapacity:(I)V
      32: iload_2
      33: iconst_1
      34: isub
      35: istore        4
      37: iload         4
      39: iflt          78
      42: iload_1
      43: iconst_1
      44: iload         4
      46: ishl
      47: iand
      48: ifeq          69
      51: aload_0
      52: getfield      #4                  // Field bits:[I
      55: iload_3
      56: bipush        32
      58: idiv
      59: dup2
      60: iaload
      61: iconst_1
      62: iload_3
      63: bipush        31
      65: iand
      66: ishl
      67: ior
      68: iastore
      69: iinc          3, 1
      72: iinc          4, -1
      75: goto          37
      78: aload_0
      79: iload_3
      80: putfield      #2                  // Field size:I
      83: return

  public void appendBitArray(com.google.zxing.common.BitArray);
    Code:
       0: aload_1
       1: getfield      #2                  // Field size:I
       4: istore_2
       5: aload_0
       6: aload_0
       7: getfield      #2                  // Field size:I
      10: iload_2
      11: iadd
      12: invokespecial #14                 // Method ensureCapacity:(I)V
      15: iconst_0
      16: istore_3
      17: iload_3
      18: iload_2
      19: if_icmpge     37
      22: aload_0
      23: aload_1
      24: iload_3
      25: invokevirtual #17                 // Method get:(I)Z
      28: invokevirtual #18                 // Method appendBit:(Z)V
      31: iinc          3, 1
      34: goto          17
      37: return

  public void xor(com.google.zxing.common.BitArray);
    Code:
       0: aload_0
       1: getfield      #2                  // Field size:I
       4: aload_1
       5: getfield      #2                  // Field size:I
       8: if_icmpeq     21
      11: new           #12                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #19                 // String Sizes don\'t match
      17: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: iconst_0
      22: istore_2
      23: iload_2
      24: aload_0
      25: getfield      #4                  // Field bits:[I
      28: arraylength
      29: if_icmpge     53
      32: aload_0
      33: getfield      #4                  // Field bits:[I
      36: iload_2
      37: dup2
      38: iaload
      39: aload_1
      40: getfield      #4                  // Field bits:[I
      43: iload_2
      44: iaload
      45: ixor
      46: iastore
      47: iinc          2, 1
      50: goto          23
      53: return

  public void toBytes(int, byte[], int, int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: iload         4
       7: if_icmpge     67
      10: iconst_0
      11: istore        6
      13: iconst_0
      14: istore        7
      16: iload         7
      18: bipush        8
      20: if_icmpge     52
      23: aload_0
      24: iload_1
      25: invokevirtual #17                 // Method get:(I)Z
      28: ifeq          43
      31: iload         6
      33: iconst_1
      34: bipush        7
      36: iload         7
      38: isub
      39: ishl
      40: ior
      41: istore        6
      43: iinc          1, 1
      46: iinc          7, 1
      49: goto          16
      52: aload_2
      53: iload_3
      54: iload         5
      56: iadd
      57: iload         6
      59: i2b
      60: bastore
      61: iinc          5, 1
      64: goto          3
      67: return

  public int[] getBitArray();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bits:[I
       4: areturn

  public void reverse();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bits:[I
       4: arraylength
       5: newarray       int
       7: astore_1
       8: aload_0
       9: getfield      #2                  // Field size:I
      12: iconst_1
      13: isub
      14: bipush        32
      16: idiv
      17: istore_2
      18: iload_2
      19: iconst_1
      20: iadd
      21: istore_3
      22: iconst_0
      23: istore        4
      25: iload         4
      27: iload_3
      28: if_icmpge     53
      31: aload_1
      32: iload_2
      33: iload         4
      35: isub
      36: aload_0
      37: getfield      #4                  // Field bits:[I
      40: iload         4
      42: iaload
      43: invokestatic  #20                 // Method java/lang/Integer.reverse:(I)I
      46: iastore
      47: iinc          4, 1
      50: goto          25
      53: aload_0
      54: getfield      #2                  // Field size:I
      57: iload_3
      58: bipush        32
      60: imul
      61: if_icmpeq     139
      64: iload_3
      65: bipush        32
      67: imul
      68: aload_0
      69: getfield      #2                  // Field size:I
      72: isub
      73: istore        4
      75: aload_1
      76: iconst_0
      77: iaload
      78: iload         4
      80: iushr
      81: istore        5
      83: iconst_1
      84: istore        6
      86: iload         6
      88: iload_3
      89: if_icmpge     132
      92: aload_1
      93: iload         6
      95: iaload
      96: istore        7
      98: iload         5
     100: iload         7
     102: bipush        32
     104: iload         4
     106: isub
     107: ishl
     108: ior
     109: istore        5
     111: aload_1
     112: iload         6
     114: iconst_1
     115: isub
     116: iload         5
     118: iastore
     119: iload         7
     121: iload         4
     123: iushr
     124: istore        5
     126: iinc          6, 1
     129: goto          86
     132: aload_1
     133: iload_3
     134: iconst_1
     135: isub
     136: iload         5
     138: iastore
     139: aload_0
     140: aload_1
     141: putfield      #4                  // Field bits:[I
     144: return

  private static int[] makeArray(int);
    Code:
       0: iload_0
       1: bipush        31
       3: iadd
       4: bipush        32
       6: idiv
       7: newarray       int
       9: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #6                  // class com/google/zxing/common/BitArray
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #6                  // class com/google/zxing/common/BitArray
      13: astore_2
      14: aload_0
      15: getfield      #2                  // Field size:I
      18: aload_2
      19: getfield      #2                  // Field size:I
      22: if_icmpne     43
      25: aload_0
      26: getfield      #4                  // Field bits:[I
      29: aload_2
      30: getfield      #4                  // Field bits:[I
      33: invokestatic  #21                 // Method java/util/Arrays.equals:([I[I)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: aload_0
       3: getfield      #2                  // Field size:I
       6: imul
       7: aload_0
       8: getfield      #4                  // Field bits:[I
      11: invokestatic  #22                 // Method java/util/Arrays.hashCode:([I)I
      14: iadd
      15: ireturn

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: getfield      #2                  // Field size:I
       8: aload_0
       9: getfield      #2                  // Field size:I
      12: bipush        8
      14: idiv
      15: iadd
      16: iconst_1
      17: iadd
      18: invokespecial #24                 // Method java/lang/StringBuilder."<init>":(I)V
      21: astore_1
      22: iconst_0
      23: istore_2
      24: iload_2
      25: aload_0
      26: getfield      #2                  // Field size:I
      29: if_icmpge     72
      32: iload_2
      33: bipush        7
      35: iand
      36: ifne          46
      39: aload_1
      40: bipush        32
      42: invokevirtual #25                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      45: pop
      46: aload_1
      47: aload_0
      48: iload_2
      49: invokevirtual #17                 // Method get:(I)Z
      52: ifeq          60
      55: bipush        88
      57: goto          62
      60: bipush        46
      62: invokevirtual #25                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      65: pop
      66: iinc          2, 1
      69: goto          24
      72: aload_1
      73: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: areturn

  public com.google.zxing.common.BitArray clone();
    Code:
       0: new           #6                  // class com/google/zxing/common/BitArray
       3: dup
       4: aload_0
       5: getfield      #4                  // Field bits:[I
       8: invokevirtual #27                 // Method "[I".clone:()Ljava/lang/Object;
      11: checkcast     #28                 // class "[I"
      14: aload_0
      15: getfield      #2                  // Field size:I
      18: invokespecial #29                 // Method "<init>":([II)V
      21: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method clone:()Lcom/google/zxing/common/BitArray;
       4: areturn

  static {};
    Code:
       0: iconst_0
       1: newarray       int
       3: putstatic     #3                  // Field EMPTY_BITS:[I
       6: return
}
