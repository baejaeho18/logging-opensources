Compiled from "ReplayProcessor.java"
public final class io.reactivex.rxjava3.processors.ReplayProcessor<T> extends io.reactivex.rxjava3.processors.FlowableProcessor<T> {
  private static final java.lang.Object[] EMPTY_ARRAY;

  final io.reactivex.rxjava3.processors.ReplayProcessor$ReplayBuffer<T> buffer;

  boolean done;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.processors.ReplayProcessor$ReplaySubscription<T>[]> subscribers;

  static final io.reactivex.rxjava3.processors.ReplayProcessor$ReplaySubscription[] EMPTY;

  static final io.reactivex.rxjava3.processors.ReplayProcessor$ReplaySubscription[] TERMINATED;

  public static <T> io.reactivex.rxjava3.processors.ReplayProcessor<T> create();
    Code:
       0: new           #1                  // class io/reactivex/rxjava3/processors/ReplayProcessor
       3: dup
       4: new           #2                  // class io/reactivex/rxjava3/processors/ReplayProcessor$UnboundedReplayBuffer
       7: dup
       8: bipush        16
      10: invokespecial #3                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$UnboundedReplayBuffer."<init>":(I)V
      13: invokespecial #4                  // Method "<init>":(Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;)V
      16: areturn

  public static <T> io.reactivex.rxjava3.processors.ReplayProcessor<T> create(int);
    Code:
       0: iload_0
       1: ldc           #5                  // String capacityHint
       3: invokestatic  #6                  // Method io/reactivex/rxjava3/internal/functions/ObjectHelper.verifyPositive:(ILjava/lang/String;)I
       6: pop
       7: new           #1                  // class io/reactivex/rxjava3/processors/ReplayProcessor
      10: dup
      11: new           #2                  // class io/reactivex/rxjava3/processors/ReplayProcessor$UnboundedReplayBuffer
      14: dup
      15: iload_0
      16: invokespecial #3                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$UnboundedReplayBuffer."<init>":(I)V
      19: invokespecial #4                  // Method "<init>":(Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;)V
      22: areturn

  public static <T> io.reactivex.rxjava3.processors.ReplayProcessor<T> createWithSize(int);
    Code:
       0: iload_0
       1: ldc           #7                  // String maxSize
       3: invokestatic  #6                  // Method io/reactivex/rxjava3/internal/functions/ObjectHelper.verifyPositive:(ILjava/lang/String;)I
       6: pop
       7: new           #1                  // class io/reactivex/rxjava3/processors/ReplayProcessor
      10: dup
      11: new           #8                  // class io/reactivex/rxjava3/processors/ReplayProcessor$SizeBoundReplayBuffer
      14: dup
      15: iload_0
      16: invokespecial #9                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$SizeBoundReplayBuffer."<init>":(I)V
      19: invokespecial #4                  // Method "<init>":(Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;)V
      22: areturn

  static <T> io.reactivex.rxjava3.processors.ReplayProcessor<T> createUnbounded();
    Code:
       0: new           #1                  // class io/reactivex/rxjava3/processors/ReplayProcessor
       3: dup
       4: new           #8                  // class io/reactivex/rxjava3/processors/ReplayProcessor$SizeBoundReplayBuffer
       7: dup
       8: ldc           #11                 // int 2147483647
      10: invokespecial #9                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$SizeBoundReplayBuffer."<init>":(I)V
      13: invokespecial #4                  // Method "<init>":(Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;)V
      16: areturn

  public static <T> io.reactivex.rxjava3.processors.ReplayProcessor<T> createWithTime(long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler);
    Code:
       0: lload_0
       1: ldc           #12                 // String maxAge
       3: invokestatic  #13                 // Method io/reactivex/rxjava3/internal/functions/ObjectHelper.verifyPositive:(JLjava/lang/String;)J
       6: pop2
       7: aload_2
       8: ldc           #14                 // String unit is null
      10: invokestatic  #15                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_3
      15: ldc           #16                 // String scheduler is null
      17: invokestatic  #15                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: new           #1                  // class io/reactivex/rxjava3/processors/ReplayProcessor
      24: dup
      25: new           #17                 // class io/reactivex/rxjava3/processors/ReplayProcessor$SizeAndTimeBoundReplayBuffer
      28: dup
      29: ldc           #11                 // int 2147483647
      31: lload_0
      32: aload_2
      33: aload_3
      34: invokespecial #18                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$SizeAndTimeBoundReplayBuffer."<init>":(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V
      37: invokespecial #4                  // Method "<init>":(Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;)V
      40: areturn

  public static <T> io.reactivex.rxjava3.processors.ReplayProcessor<T> createWithTimeAndSize(long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler, int);
    Code:
       0: iload         4
       2: ldc           #7                  // String maxSize
       4: invokestatic  #6                  // Method io/reactivex/rxjava3/internal/functions/ObjectHelper.verifyPositive:(ILjava/lang/String;)I
       7: pop
       8: lload_0
       9: ldc           #12                 // String maxAge
      11: invokestatic  #13                 // Method io/reactivex/rxjava3/internal/functions/ObjectHelper.verifyPositive:(JLjava/lang/String;)J
      14: pop2
      15: aload_2
      16: ldc           #14                 // String unit is null
      18: invokestatic  #15                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: aload_3
      23: ldc           #16                 // String scheduler is null
      25: invokestatic  #15                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      28: pop
      29: new           #1                  // class io/reactivex/rxjava3/processors/ReplayProcessor
      32: dup
      33: new           #17                 // class io/reactivex/rxjava3/processors/ReplayProcessor$SizeAndTimeBoundReplayBuffer
      36: dup
      37: iload         4
      39: lload_0
      40: aload_2
      41: aload_3
      42: invokespecial #18                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$SizeAndTimeBoundReplayBuffer."<init>":(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V
      45: invokespecial #4                  // Method "<init>":(Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;)V
      48: areturn

  io.reactivex.rxjava3.processors.ReplayProcessor(io.reactivex.rxjava3.processors.ReplayProcessor$ReplayBuffer<T>);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method io/reactivex/rxjava3/processors/FlowableProcessor."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #20                 // Field buffer:Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;
       9: aload_0
      10: new           #21                 // class java/util/concurrent/atomic/AtomicReference
      13: dup
      14: getstatic     #22                 // Field EMPTY:[Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;
      17: invokespecial #23                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      20: putfield      #24                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      23: return

  protected void subscribeActual(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: new           #25                 // class io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #26                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription."<init>":(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/processors/ReplayProcessor;)V
       9: astore_2
      10: aload_1
      11: aload_2
      12: invokeinterface #27,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      17: aload_0
      18: aload_2
      19: invokevirtual #28                 // Method add:(Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;)Z
      22: ifeq          38
      25: aload_2
      26: getfield      #29                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.cancelled:Z
      29: ifeq          38
      32: aload_0
      33: aload_2
      34: invokevirtual #30                 // Method remove:(Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;)V
      37: return
      38: aload_0
      39: getfield      #20                 // Field buffer:Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;
      42: aload_2
      43: invokeinterface #31,  2           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.replay:(Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;)V
      48: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #32                 // Field done:Z
       4: ifeq          14
       7: aload_1
       8: invokeinterface #33,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      13: return
      14: aload_1
      15: ldc2_w        #35                 // long 9223372036854775807l
      18: invokeinterface #37,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      23: return

  public void onNext(T);
    Code:
       0: aload_1
       1: ldc           #38                 // String onNext called with a null value.
       3: invokestatic  #39                 // Method io/reactivex/rxjava3/internal/util/ExceptionHelper.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #32                 // Field done:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: getfield      #20                 // Field buffer:Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;
      19: astore_2
      20: aload_2
      21: aload_1
      22: invokeinterface #40,  2           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.next:(Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #24                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      31: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      34: checkcast     #42                 // class "[Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;"
      37: astore_3
      38: aload_3
      39: arraylength
      40: istore        4
      42: iconst_0
      43: istore        5
      45: iload         5
      47: iload         4
      49: if_icmpge     72
      52: aload_3
      53: iload         5
      55: aaload
      56: astore        6
      58: aload_2
      59: aload         6
      61: invokeinterface #31,  2           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.replay:(Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;)V
      66: iinc          5, 1
      69: goto          45
      72: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_1
       1: ldc           #43                 // String onError called with a null Throwable.
       3: invokestatic  #39                 // Method io/reactivex/rxjava3/internal/util/ExceptionHelper.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #32                 // Field done:Z
      11: ifeq          19
      14: aload_1
      15: invokestatic  #44                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      18: return
      19: aload_0
      20: iconst_1
      21: putfield      #32                 // Field done:Z
      24: aload_0
      25: getfield      #20                 // Field buffer:Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;
      28: astore_2
      29: aload_2
      30: aload_1
      31: invokeinterface #45,  2           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.error:(Ljava/lang/Throwable;)V
      36: aload_0
      37: getfield      #24                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      40: getstatic     #46                 // Field TERMINATED:[Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;
      43: invokevirtual #47                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #42                 // class "[Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;"
      49: astore_3
      50: aload_3
      51: arraylength
      52: istore        4
      54: iconst_0
      55: istore        5
      57: iload         5
      59: iload         4
      61: if_icmpge     84
      64: aload_3
      65: iload         5
      67: aaload
      68: astore        6
      70: aload_2
      71: aload         6
      73: invokeinterface #31,  2           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.replay:(Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;)V
      78: iinc          5, 1
      81: goto          57
      84: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #32                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #32                 // Field done:Z
      13: aload_0
      14: getfield      #20                 // Field buffer:Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;
      17: astore_1
      18: aload_1
      19: invokeinterface #48,  1           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.complete:()V
      24: aload_0
      25: getfield      #24                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      28: getstatic     #46                 // Field TERMINATED:[Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;
      31: invokevirtual #47                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #42                 // class "[Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;"
      37: astore_2
      38: aload_2
      39: arraylength
      40: istore_3
      41: iconst_0
      42: istore        4
      44: iload         4
      46: iload_3
      47: if_icmpge     70
      50: aload_2
      51: iload         4
      53: aaload
      54: astore        5
      56: aload_1
      57: aload         5
      59: invokeinterface #31,  2           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.replay:(Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;)V
      64: iinc          4, 1
      67: goto          44
      70: return

  public boolean hasSubscribers();
    Code:
       0: aload_0
       1: getfield      #24                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #42                 // class "[Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;"
      10: arraylength
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  int subscriberCount();
    Code:
       0: aload_0
       1: getfield      #24                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #42                 // class "[Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;"
      10: arraylength
      11: ireturn

  public java.lang.Throwable getThrowable();
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;
       4: astore_1
       5: aload_1
       6: invokeinterface #49,  1           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.isDone:()Z
      11: ifeq          21
      14: aload_1
      15: invokeinterface #50,  1           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.getError:()Ljava/lang/Throwable;
      20: areturn
      21: aconst_null
      22: areturn

  public void cleanupBuffer();
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;
       4: invokeinterface #51,  1           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.trimHead:()V
       9: return

  public T getValue();
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;
       4: invokeinterface #52,  1           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.getValue:()Ljava/lang/Object;
       9: areturn

  public java.lang.Object[] getValues();
    Code:
       0: getstatic     #53                 // Field EMPTY_ARRAY:[Ljava/lang/Object;
       3: checkcast     #54                 // class "[Ljava/lang/Object;"
       6: astore_1
       7: aload_0
       8: aload_1
       9: invokevirtual #55                 // Method getValues:([Ljava/lang/Object;)[Ljava/lang/Object;
      12: astore_2
      13: aload_2
      14: getstatic     #53                 // Field EMPTY_ARRAY:[Ljava/lang/Object;
      17: if_acmpne     25
      20: iconst_0
      21: anewarray     #56                 // class java/lang/Object
      24: areturn
      25: aload_2
      26: areturn

  public T[] getValues(T[]);
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;
       4: aload_1
       5: invokeinterface #57,  2           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.getValues:([Ljava/lang/Object;)[Ljava/lang/Object;
      10: areturn

  public boolean hasComplete();
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;
       4: astore_1
       5: aload_1
       6: invokeinterface #49,  1           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.isDone:()Z
      11: ifeq          27
      14: aload_1
      15: invokeinterface #50,  1           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.getError:()Ljava/lang/Throwable;
      20: ifnonnull     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public boolean hasThrowable();
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;
       4: astore_1
       5: aload_1
       6: invokeinterface #49,  1           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.isDone:()Z
      11: ifeq          27
      14: aload_1
      15: invokeinterface #50,  1           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.getError:()Ljava/lang/Throwable;
      20: ifnull        27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public boolean hasValue();
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;
       4: invokeinterface #58,  1           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.size:()I
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  int size();
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;
       4: invokeinterface #58,  1           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.size:()I
       9: ireturn

  boolean add(io.reactivex.rxjava3.processors.ReplayProcessor$ReplaySubscription<T>);
    Code:
       0: aload_0
       1: getfield      #24                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #42                 // class "[Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;"
      10: astore_2
      11: aload_2
      12: getstatic     #46                 // Field TERMINATED:[Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;
      15: if_acmpne     20
      18: iconst_0
      19: ireturn
      20: aload_2
      21: arraylength
      22: istore_3
      23: iload_3
      24: iconst_1
      25: iadd
      26: anewarray     #25                 // class io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription
      29: astore        4
      31: aload_2
      32: iconst_0
      33: aload         4
      35: iconst_0
      36: iload_3
      37: invokestatic  #59                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      40: aload         4
      42: iload_3
      43: aload_1
      44: aastore
      45: aload_0
      46: getfield      #24                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      49: aload_2
      50: aload         4
      52: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      55: ifeq          60
      58: iconst_1
      59: ireturn
      60: goto          0

  void remove(io.reactivex.rxjava3.processors.ReplayProcessor$ReplaySubscription<T>);
    Code:
       0: aload_0
       1: getfield      #24                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #42                 // class "[Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;"
      10: astore_2
      11: aload_2
      12: getstatic     #46                 // Field TERMINATED:[Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;
      15: if_acmpeq     25
      18: aload_2
      19: getstatic     #22                 // Field EMPTY:[Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;
      22: if_acmpne     26
      25: return
      26: aload_2
      27: arraylength
      28: istore_3
      29: iconst_m1
      30: istore        4
      32: iconst_0
      33: istore        5
      35: iload         5
      37: iload_3
      38: if_icmpge     62
      41: aload_2
      42: iload         5
      44: aaload
      45: aload_1
      46: if_acmpne     56
      49: iload         5
      51: istore        4
      53: goto          62
      56: iinc          5, 1
      59: goto          35
      62: iload         4
      64: ifge          68
      67: return
      68: iload_3
      69: iconst_1
      70: if_icmpne     81
      73: getstatic     #22                 // Field EMPTY:[Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;
      76: astore        5
      78: goto          117
      81: iload_3
      82: iconst_1
      83: isub
      84: anewarray     #25                 // class io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription
      87: astore        5
      89: aload_2
      90: iconst_0
      91: aload         5
      93: iconst_0
      94: iload         4
      96: invokestatic  #59                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      99: aload_2
     100: iload         4
     102: iconst_1
     103: iadd
     104: aload         5
     106: iload         4
     108: iload_3
     109: iload         4
     111: isub
     112: iconst_1
     113: isub
     114: invokestatic  #59                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     117: aload_0
     118: getfield      #24                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
     121: aload_2
     122: aload         5
     124: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     127: ifeq          131
     130: return
     131: goto          0

  static {};
    Code:
       0: iconst_0
       1: anewarray     #56                 // class java/lang/Object
       4: putstatic     #53                 // Field EMPTY_ARRAY:[Ljava/lang/Object;
       7: iconst_0
       8: anewarray     #25                 // class io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription
      11: putstatic     #22                 // Field EMPTY:[Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;
      14: iconst_0
      15: anewarray     #25                 // class io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription
      18: putstatic     #46                 // Field TERMINATED:[Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;
      21: return
}
