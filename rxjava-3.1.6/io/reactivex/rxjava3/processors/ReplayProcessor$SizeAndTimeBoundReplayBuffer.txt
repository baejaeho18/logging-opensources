Compiled from "ReplayProcessor.java"
final class io.reactivex.rxjava3.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer<T> implements io.reactivex.rxjava3.processors.ReplayProcessor$ReplayBuffer<T> {
  final int maxSize;

  final long maxAge;

  final java.util.concurrent.TimeUnit unit;

  final io.reactivex.rxjava3.core.Scheduler scheduler;

  int size;

  volatile io.reactivex.rxjava3.processors.ReplayProcessor$TimedNode<T> head;

  io.reactivex.rxjava3.processors.ReplayProcessor$TimedNode<T> tail;

  java.lang.Throwable error;

  volatile boolean done;

  io.reactivex.rxjava3.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer(int, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field maxSize:I
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field maxAge:J
      14: aload_0
      15: aload         4
      17: putfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      20: aload_0
      21: aload         5
      23: putfield      #5                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      26: new           #6                  // class io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode
      29: dup
      30: aconst_null
      31: lconst_0
      32: invokespecial #7                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode."<init>":(Ljava/lang/Object;J)V
      35: astore        6
      37: aload_0
      38: aload         6
      40: putfield      #8                  // Field tail:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
      43: aload_0
      44: aload         6
      46: putfield      #9                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
      49: return

  void trim();
    Code:
       0: aload_0
       1: getfield      #10                 // Field size:I
       4: aload_0
       5: getfield      #2                  // Field maxSize:I
       8: if_icmple     37
      11: aload_0
      12: dup
      13: getfield      #10                 // Field size:I
      16: iconst_1
      17: isub
      18: putfield      #10                 // Field size:I
      21: aload_0
      22: getfield      #9                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
      25: astore_1
      26: aload_0
      27: aload_1
      28: invokevirtual #11                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.get:()Ljava/lang/Object;
      31: checkcast     #6                  // class io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode
      34: putfield      #9                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
      37: aload_0
      38: getfield      #5                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      41: aload_0
      42: getfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      45: invokevirtual #12                 // Method io/reactivex/rxjava3/core/Scheduler.now:(Ljava/util/concurrent/TimeUnit;)J
      48: aload_0
      49: getfield      #3                  // Field maxAge:J
      52: lsub
      53: lstore_1
      54: aload_0
      55: getfield      #9                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
      58: astore_3
      59: aload_0
      60: getfield      #10                 // Field size:I
      63: iconst_1
      64: if_icmpgt     75
      67: aload_0
      68: aload_3
      69: putfield      #9                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
      72: goto          118
      75: aload_3
      76: invokevirtual #11                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.get:()Ljava/lang/Object;
      79: checkcast     #6                  // class io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode
      82: astore        4
      84: aload         4
      86: getfield      #13                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.time:J
      89: lload_1
      90: lcmp
      91: ifle          102
      94: aload_0
      95: aload_3
      96: putfield      #9                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
      99: goto          118
     102: aload         4
     104: astore_3
     105: aload_0
     106: dup
     107: getfield      #10                 // Field size:I
     110: iconst_1
     111: isub
     112: putfield      #10                 // Field size:I
     115: goto          59
     118: return

  void trimFinal();
    Code:
       0: aload_0
       1: getfield      #5                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
       4: aload_0
       5: getfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #12                 // Method io/reactivex/rxjava3/core/Scheduler.now:(Ljava/util/concurrent/TimeUnit;)J
      11: aload_0
      12: getfield      #3                  // Field maxAge:J
      15: lsub
      16: lstore_1
      17: aload_0
      18: getfield      #9                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
      21: astore_3
      22: aload_3
      23: invokevirtual #11                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.get:()Ljava/lang/Object;
      26: checkcast     #6                  // class io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode
      29: astore        4
      31: aload         4
      33: ifnonnull     67
      36: aload_3
      37: getfield      #14                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.value:Ljava/lang/Object;
      40: ifnull        59
      43: aload_0
      44: new           #6                  // class io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode
      47: dup
      48: aconst_null
      49: lconst_0
      50: invokespecial #7                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode."<init>":(Ljava/lang/Object;J)V
      53: putfield      #9                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
      56: goto          127
      59: aload_0
      60: aload_3
      61: putfield      #9                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
      64: goto          127
      67: aload         4
      69: getfield      #13                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.time:J
      72: lload_1
      73: lcmp
      74: ifle          121
      77: aload_3
      78: getfield      #14                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.value:Ljava/lang/Object;
      81: ifnull        113
      84: new           #6                  // class io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode
      87: dup
      88: aconst_null
      89: lconst_0
      90: invokespecial #7                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode."<init>":(Ljava/lang/Object;J)V
      93: astore        5
      95: aload         5
      97: aload_3
      98: invokevirtual #11                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.get:()Ljava/lang/Object;
     101: invokevirtual #15                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.lazySet:(Ljava/lang/Object;)V
     104: aload_0
     105: aload         5
     107: putfield      #9                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
     110: goto          127
     113: aload_0
     114: aload_3
     115: putfield      #9                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
     118: goto          127
     121: aload         4
     123: astore_3
     124: goto          22
     127: return

  public void trimHead();
    Code:
       0: aload_0
       1: getfield      #9                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
       4: getfield      #14                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.value:Ljava/lang/Object;
       7: ifnull        36
      10: new           #6                  // class io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode
      13: dup
      14: aconst_null
      15: lconst_0
      16: invokespecial #7                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode."<init>":(Ljava/lang/Object;J)V
      19: astore_1
      20: aload_1
      21: aload_0
      22: getfield      #9                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
      25: invokevirtual #11                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.get:()Ljava/lang/Object;
      28: invokevirtual #15                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.lazySet:(Ljava/lang/Object;)V
      31: aload_0
      32: aload_1
      33: putfield      #9                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
      36: return

  public void next(T);
    Code:
       0: new           #6                  // class io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #5                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
       9: aload_0
      10: getfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      13: invokevirtual #12                 // Method io/reactivex/rxjava3/core/Scheduler.now:(Ljava/util/concurrent/TimeUnit;)J
      16: invokespecial #7                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode."<init>":(Ljava/lang/Object;J)V
      19: astore_2
      20: aload_0
      21: getfield      #8                  // Field tail:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
      24: astore_3
      25: aload_0
      26: aload_2
      27: putfield      #8                  // Field tail:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
      30: aload_0
      31: dup
      32: getfield      #10                 // Field size:I
      35: iconst_1
      36: iadd
      37: putfield      #10                 // Field size:I
      40: aload_3
      41: aload_2
      42: invokevirtual #16                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.set:(Ljava/lang/Object;)V
      45: aload_0
      46: invokevirtual #17                 // Method trim:()V
      49: return

  public void error(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method trimFinal:()V
       4: aload_0
       5: aload_1
       6: putfield      #19                 // Field error:Ljava/lang/Throwable;
       9: aload_0
      10: iconst_1
      11: putfield      #20                 // Field done:Z
      14: return

  public void complete();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method trimFinal:()V
       4: aload_0
       5: iconst_1
       6: putfield      #20                 // Field done:Z
       9: return

  public T getValue();
    Code:
       0: aload_0
       1: getfield      #9                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
       4: astore_1
       5: aload_1
       6: invokevirtual #11                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.get:()Ljava/lang/Object;
       9: checkcast     #6                  // class io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode
      12: astore_2
      13: aload_2
      14: ifnonnull     20
      17: goto          25
      20: aload_2
      21: astore_1
      22: goto          5
      25: aload_0
      26: getfield      #5                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      29: aload_0
      30: getfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      33: invokevirtual #12                 // Method io/reactivex/rxjava3/core/Scheduler.now:(Ljava/util/concurrent/TimeUnit;)J
      36: aload_0
      37: getfield      #3                  // Field maxAge:J
      40: lsub
      41: lstore_2
      42: aload_1
      43: getfield      #13                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.time:J
      46: lload_2
      47: lcmp
      48: ifge          53
      51: aconst_null
      52: areturn
      53: aload_1
      54: getfield      #14                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.value:Ljava/lang/Object;
      57: areturn

  public T[] getValues(T[]);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getHead:()Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #22                 // Method size:(Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;)I
      10: istore_3
      11: iload_3
      12: ifne          27
      15: aload_1
      16: arraylength
      17: ifeq          97
      20: aload_1
      21: iconst_0
      22: aconst_null
      23: aastore
      24: goto          97
      27: aload_1
      28: arraylength
      29: iload_3
      30: if_icmpge     51
      33: aload_1
      34: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      37: invokevirtual #24                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      40: iload_3
      41: invokestatic  #25                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      44: checkcast     #26                 // class "[Ljava/lang/Object;"
      47: checkcast     #26                 // class "[Ljava/lang/Object;"
      50: astore_1
      51: iconst_0
      52: istore        4
      54: iload         4
      56: iload_3
      57: if_icmpeq     87
      60: aload_2
      61: invokevirtual #11                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.get:()Ljava/lang/Object;
      64: checkcast     #6                  // class io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode
      67: astore        5
      69: aload_1
      70: iload         4
      72: aload         5
      74: getfield      #14                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.value:Ljava/lang/Object;
      77: aastore
      78: iinc          4, 1
      81: aload         5
      83: astore_2
      84: goto          54
      87: aload_1
      88: arraylength
      89: iload_3
      90: if_icmple     97
      93: aload_1
      94: iload_3
      95: aconst_null
      96: aastore
      97: aload_1
      98: areturn

  io.reactivex.rxjava3.processors.ReplayProcessor$TimedNode<T> getHead();
    Code:
       0: aload_0
       1: getfield      #9                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
       4: astore_1
       5: aload_0
       6: getfield      #5                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
       9: aload_0
      10: getfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      13: invokevirtual #12                 // Method io/reactivex/rxjava3/core/Scheduler.now:(Ljava/util/concurrent/TimeUnit;)J
      16: aload_0
      17: getfield      #3                  // Field maxAge:J
      20: lsub
      21: lstore_2
      22: aload_1
      23: invokevirtual #11                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.get:()Ljava/lang/Object;
      26: checkcast     #6                  // class io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode
      29: astore        4
      31: aload         4
      33: ifnull        68
      36: aload         4
      38: getfield      #13                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.time:J
      41: lstore        5
      43: lload         5
      45: lload_2
      46: lcmp
      47: ifle          53
      50: goto          68
      53: aload         4
      55: astore_1
      56: aload_1
      57: invokevirtual #11                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.get:()Ljava/lang/Object;
      60: checkcast     #6                  // class io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode
      63: astore        4
      65: goto          31
      68: aload_1
      69: areturn

  public void replay(io.reactivex.rxjava3.processors.ReplayProcessor$ReplaySubscription<T>);
    Code:
       0: aload_1
       1: invokevirtual #27                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.getAndIncrement:()I
       4: ifeq          8
       7: return
       8: iconst_1
       9: istore_2
      10: aload_1
      11: getfield      #28                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.downstream:Lorg/reactivestreams/Subscriber;
      14: astore_3
      15: aload_1
      16: getfield      #29                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.index:Ljava/lang/Object;
      19: checkcast     #6                  // class io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode
      22: astore        4
      24: aload         4
      26: ifnonnull     35
      29: aload_0
      30: invokevirtual #21                 // Method getHead:()Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
      33: astore        4
      35: aload_1
      36: getfield      #30                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.emitted:J
      39: lstore        5
      41: aload_1
      42: getfield      #31                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.requested:Ljava/util/concurrent/atomic/AtomicLong;
      45: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      48: lstore        7
      50: lload         5
      52: lload         7
      54: lcmp
      55: ifeq          180
      58: aload_1
      59: getfield      #33                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.cancelled:Z
      62: ifeq          71
      65: aload_1
      66: aconst_null
      67: putfield      #29                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.index:Ljava/lang/Object;
      70: return
      71: aload_0
      72: getfield      #20                 // Field done:Z
      75: istore        9
      77: aload         4
      79: invokevirtual #11                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.get:()Ljava/lang/Object;
      82: checkcast     #6                  // class io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode
      85: astore        10
      87: aload         10
      89: ifnonnull     96
      92: iconst_1
      93: goto          97
      96: iconst_0
      97: istore        11
      99: iload         9
     101: ifeq          148
     104: iload         11
     106: ifeq          148
     109: aload_1
     110: aconst_null
     111: putfield      #29                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.index:Ljava/lang/Object;
     114: aload_1
     115: iconst_1
     116: putfield      #33                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.cancelled:Z
     119: aload_0
     120: getfield      #19                 // Field error:Ljava/lang/Throwable;
     123: astore        12
     125: aload         12
     127: ifnonnull     139
     130: aload_3
     131: invokeinterface #34,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     136: goto          147
     139: aload_3
     140: aload         12
     142: invokeinterface #35,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     147: return
     148: iload         11
     150: ifeq          156
     153: goto          180
     156: aload_3
     157: aload         10
     159: getfield      #14                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.value:Ljava/lang/Object;
     162: invokeinterface #36,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     167: lload         5
     169: lconst_1
     170: ladd
     171: lstore        5
     173: aload         10
     175: astore        4
     177: goto          50
     180: lload         5
     182: lload         7
     184: lcmp
     185: ifne          259
     188: aload_1
     189: getfield      #33                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.cancelled:Z
     192: ifeq          201
     195: aload_1
     196: aconst_null
     197: putfield      #29                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.index:Ljava/lang/Object;
     200: return
     201: aload_0
     202: getfield      #20                 // Field done:Z
     205: istore        9
     207: iload         9
     209: ifeq          259
     212: aload         4
     214: invokevirtual #11                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.get:()Ljava/lang/Object;
     217: ifnonnull     259
     220: aload_1
     221: aconst_null
     222: putfield      #29                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.index:Ljava/lang/Object;
     225: aload_1
     226: iconst_1
     227: putfield      #33                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.cancelled:Z
     230: aload_0
     231: getfield      #19                 // Field error:Ljava/lang/Throwable;
     234: astore        10
     236: aload         10
     238: ifnonnull     250
     241: aload_3
     242: invokeinterface #34,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     247: goto          258
     250: aload_3
     251: aload         10
     253: invokeinterface #35,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     258: return
     259: aload_1
     260: aload         4
     262: putfield      #29                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.index:Ljava/lang/Object;
     265: aload_1
     266: lload         5
     268: putfield      #30                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.emitted:J
     271: aload_1
     272: iload_2
     273: ineg
     274: invokevirtual #37                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.addAndGet:(I)I
     277: istore_2
     278: iload_2
     279: ifne          285
     282: goto          288
     285: goto          41
     288: return

  public int size();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #21                 // Method getHead:()Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;
       5: invokevirtual #22                 // Method size:(Lio/reactivex/rxjava3/processors/ReplayProcessor$TimedNode;)I
       8: ireturn

  int size(io.reactivex.rxjava3.processors.ReplayProcessor$TimedNode<T>);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: ldc           #39                 // int 2147483647
       5: if_icmpeq     31
       8: aload_1
       9: invokevirtual #11                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode.get:()Ljava/lang/Object;
      12: checkcast     #6                  // class io/reactivex/rxjava3/processors/ReplayProcessor$TimedNode
      15: astore_3
      16: aload_3
      17: ifnonnull     23
      20: goto          31
      23: iinc          2, 1
      26: aload_3
      27: astore_1
      28: goto          2
      31: iload_2
      32: ireturn

  public java.lang.Throwable getError();
    Code:
       0: aload_0
       1: getfield      #19                 // Field error:Ljava/lang/Throwable;
       4: areturn

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #20                 // Field done:Z
       4: ireturn
}
