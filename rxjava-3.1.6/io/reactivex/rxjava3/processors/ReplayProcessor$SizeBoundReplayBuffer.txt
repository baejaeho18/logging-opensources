Compiled from "ReplayProcessor.java"
final class io.reactivex.rxjava3.processors.ReplayProcessor$SizeBoundReplayBuffer<T> implements io.reactivex.rxjava3.processors.ReplayProcessor$ReplayBuffer<T> {
  final int maxSize;

  int size;

  volatile io.reactivex.rxjava3.processors.ReplayProcessor$Node<T> head;

  io.reactivex.rxjava3.processors.ReplayProcessor$Node<T> tail;

  java.lang.Throwable error;

  volatile boolean done;

  io.reactivex.rxjava3.processors.ReplayProcessor$SizeBoundReplayBuffer(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field maxSize:I
       9: new           #3                  // class io/reactivex/rxjava3/processors/ReplayProcessor$Node
      12: dup
      13: aconst_null
      14: invokespecial #4                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$Node."<init>":(Ljava/lang/Object;)V
      17: astore_2
      18: aload_0
      19: aload_2
      20: putfield      #5                  // Field tail:Lio/reactivex/rxjava3/processors/ReplayProcessor$Node;
      23: aload_0
      24: aload_2
      25: putfield      #6                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$Node;
      28: return

  void trim();
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:I
       4: aload_0
       5: getfield      #2                  // Field maxSize:I
       8: if_icmple     37
      11: aload_0
      12: dup
      13: getfield      #7                  // Field size:I
      16: iconst_1
      17: isub
      18: putfield      #7                  // Field size:I
      21: aload_0
      22: getfield      #6                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$Node;
      25: astore_1
      26: aload_0
      27: aload_1
      28: invokevirtual #8                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$Node.get:()Ljava/lang/Object;
      31: checkcast     #3                  // class io/reactivex/rxjava3/processors/ReplayProcessor$Node
      34: putfield      #6                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$Node;
      37: return

  public void next(T);
    Code:
       0: new           #3                  // class io/reactivex/rxjava3/processors/ReplayProcessor$Node
       3: dup
       4: aload_1
       5: invokespecial #4                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$Node."<init>":(Ljava/lang/Object;)V
       8: astore_2
       9: aload_0
      10: getfield      #5                  // Field tail:Lio/reactivex/rxjava3/processors/ReplayProcessor$Node;
      13: astore_3
      14: aload_0
      15: aload_2
      16: putfield      #5                  // Field tail:Lio/reactivex/rxjava3/processors/ReplayProcessor$Node;
      19: aload_0
      20: dup
      21: getfield      #7                  // Field size:I
      24: iconst_1
      25: iadd
      26: putfield      #7                  // Field size:I
      29: aload_3
      30: aload_2
      31: invokevirtual #9                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$Node.set:(Ljava/lang/Object;)V
      34: aload_0
      35: invokevirtual #10                 // Method trim:()V
      38: return

  public void error(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field error:Ljava/lang/Throwable;
       5: aload_0
       6: invokevirtual #12                 // Method trimHead:()V
       9: aload_0
      10: iconst_1
      11: putfield      #13                 // Field done:Z
      14: return

  public void complete();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method trimHead:()V
       4: aload_0
       5: iconst_1
       6: putfield      #13                 // Field done:Z
       9: return

  public void trimHead();
    Code:
       0: aload_0
       1: getfield      #6                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$Node;
       4: getfield      #14                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$Node.value:Ljava/lang/Object;
       7: ifnull        35
      10: new           #3                  // class io/reactivex/rxjava3/processors/ReplayProcessor$Node
      13: dup
      14: aconst_null
      15: invokespecial #4                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$Node."<init>":(Ljava/lang/Object;)V
      18: astore_1
      19: aload_1
      20: aload_0
      21: getfield      #6                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$Node;
      24: invokevirtual #8                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$Node.get:()Ljava/lang/Object;
      27: invokevirtual #15                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$Node.lazySet:(Ljava/lang/Object;)V
      30: aload_0
      31: aload_1
      32: putfield      #6                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$Node;
      35: return

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #13                 // Field done:Z
       4: ireturn

  public java.lang.Throwable getError();
    Code:
       0: aload_0
       1: getfield      #11                 // Field error:Ljava/lang/Throwable;
       4: areturn

  public T getValue();
    Code:
       0: aload_0
       1: getfield      #6                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$Node;
       4: astore_1
       5: aload_1
       6: invokevirtual #8                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$Node.get:()Ljava/lang/Object;
       9: checkcast     #3                  // class io/reactivex/rxjava3/processors/ReplayProcessor$Node
      12: astore_2
      13: aload_2
      14: ifnonnull     22
      17: aload_1
      18: getfield      #14                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$Node.value:Ljava/lang/Object;
      21: areturn
      22: aload_2
      23: astore_1
      24: goto          5

  public T[] getValues(T[]);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #6                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$Node;
       6: astore_3
       7: aload_3
       8: astore        4
      10: aload         4
      12: invokevirtual #8                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$Node.get:()Ljava/lang/Object;
      15: checkcast     #3                  // class io/reactivex/rxjava3/processors/ReplayProcessor$Node
      18: astore        5
      20: aload         5
      22: ifnonnull     28
      25: goto          38
      28: iinc          2, 1
      31: aload         5
      33: astore        4
      35: goto          10
      38: aload_1
      39: arraylength
      40: iload_2
      41: if_icmpge     62
      44: aload_1
      45: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      48: invokevirtual #17                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      51: iload_2
      52: invokestatic  #18                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      55: checkcast     #19                 // class "[Ljava/lang/Object;"
      58: checkcast     #19                 // class "[Ljava/lang/Object;"
      61: astore_1
      62: iconst_0
      63: istore        5
      65: iload         5
      67: iload_2
      68: if_icmpge     93
      71: aload_3
      72: invokevirtual #8                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$Node.get:()Ljava/lang/Object;
      75: checkcast     #3                  // class io/reactivex/rxjava3/processors/ReplayProcessor$Node
      78: astore_3
      79: aload_1
      80: iload         5
      82: aload_3
      83: getfield      #14                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$Node.value:Ljava/lang/Object;
      86: aastore
      87: iinc          5, 1
      90: goto          65
      93: aload_1
      94: arraylength
      95: iload_2
      96: if_icmple     103
      99: aload_1
     100: iload_2
     101: aconst_null
     102: aastore
     103: aload_1
     104: areturn

  public void replay(io.reactivex.rxjava3.processors.ReplayProcessor$ReplaySubscription<T>);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.getAndIncrement:()I
       4: ifeq          8
       7: return
       8: iconst_1
       9: istore_2
      10: aload_1
      11: getfield      #21                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.downstream:Lorg/reactivestreams/Subscriber;
      14: astore_3
      15: aload_1
      16: getfield      #22                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.index:Ljava/lang/Object;
      19: checkcast     #3                  // class io/reactivex/rxjava3/processors/ReplayProcessor$Node
      22: astore        4
      24: aload         4
      26: ifnonnull     35
      29: aload_0
      30: getfield      #6                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$Node;
      33: astore        4
      35: aload_1
      36: getfield      #23                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.emitted:J
      39: lstore        5
      41: aload_1
      42: getfield      #24                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.requested:Ljava/util/concurrent/atomic/AtomicLong;
      45: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      48: lstore        7
      50: lload         5
      52: lload         7
      54: lcmp
      55: ifeq          180
      58: aload_1
      59: getfield      #26                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.cancelled:Z
      62: ifeq          71
      65: aload_1
      66: aconst_null
      67: putfield      #22                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.index:Ljava/lang/Object;
      70: return
      71: aload_0
      72: getfield      #13                 // Field done:Z
      75: istore        9
      77: aload         4
      79: invokevirtual #8                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$Node.get:()Ljava/lang/Object;
      82: checkcast     #3                  // class io/reactivex/rxjava3/processors/ReplayProcessor$Node
      85: astore        10
      87: aload         10
      89: ifnonnull     96
      92: iconst_1
      93: goto          97
      96: iconst_0
      97: istore        11
      99: iload         9
     101: ifeq          148
     104: iload         11
     106: ifeq          148
     109: aload_1
     110: aconst_null
     111: putfield      #22                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.index:Ljava/lang/Object;
     114: aload_1
     115: iconst_1
     116: putfield      #26                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.cancelled:Z
     119: aload_0
     120: getfield      #11                 // Field error:Ljava/lang/Throwable;
     123: astore        12
     125: aload         12
     127: ifnonnull     139
     130: aload_3
     131: invokeinterface #27,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     136: goto          147
     139: aload_3
     140: aload         12
     142: invokeinterface #28,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     147: return
     148: iload         11
     150: ifeq          156
     153: goto          180
     156: aload_3
     157: aload         10
     159: getfield      #14                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$Node.value:Ljava/lang/Object;
     162: invokeinterface #29,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     167: lload         5
     169: lconst_1
     170: ladd
     171: lstore        5
     173: aload         10
     175: astore        4
     177: goto          50
     180: lload         5
     182: lload         7
     184: lcmp
     185: ifne          259
     188: aload_1
     189: getfield      #26                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.cancelled:Z
     192: ifeq          201
     195: aload_1
     196: aconst_null
     197: putfield      #22                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.index:Ljava/lang/Object;
     200: return
     201: aload_0
     202: getfield      #13                 // Field done:Z
     205: istore        9
     207: iload         9
     209: ifeq          259
     212: aload         4
     214: invokevirtual #8                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$Node.get:()Ljava/lang/Object;
     217: ifnonnull     259
     220: aload_1
     221: aconst_null
     222: putfield      #22                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.index:Ljava/lang/Object;
     225: aload_1
     226: iconst_1
     227: putfield      #26                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.cancelled:Z
     230: aload_0
     231: getfield      #11                 // Field error:Ljava/lang/Throwable;
     234: astore        10
     236: aload         10
     238: ifnonnull     250
     241: aload_3
     242: invokeinterface #27,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     247: goto          258
     250: aload_3
     251: aload         10
     253: invokeinterface #28,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     258: return
     259: aload_1
     260: aload         4
     262: putfield      #22                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.index:Ljava/lang/Object;
     265: aload_1
     266: lload         5
     268: putfield      #23                 // Field io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.emitted:J
     271: aload_1
     272: iload_2
     273: ineg
     274: invokevirtual #30                 // Method io/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription.addAndGet:(I)I
     277: istore_2
     278: iload_2
     279: ifne          285
     282: goto          288
     285: goto          41
     288: return

  public int size();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #6                  // Field head:Lio/reactivex/rxjava3/processors/ReplayProcessor$Node;
       6: astore_2
       7: iload_1
       8: ldc           #32                 // int 2147483647
      10: if_icmpeq     36
      13: aload_2
      14: invokevirtual #8                  // Method io/reactivex/rxjava3/processors/ReplayProcessor$Node.get:()Ljava/lang/Object;
      17: checkcast     #3                  // class io/reactivex/rxjava3/processors/ReplayProcessor$Node
      20: astore_3
      21: aload_3
      22: ifnonnull     28
      25: goto          36
      28: iinc          1, 1
      31: aload_3
      32: astore_2
      33: goto          7
      36: iload_1
      37: ireturn
}
