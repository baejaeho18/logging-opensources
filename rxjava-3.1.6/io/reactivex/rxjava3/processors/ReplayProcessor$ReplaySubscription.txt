Compiled from "ReplayProcessor.java"
final class io.reactivex.rxjava3.processors.ReplayProcessor$ReplaySubscription<T> extends java.util.concurrent.atomic.AtomicInteger implements org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super T> downstream;

  final io.reactivex.rxjava3.processors.ReplayProcessor<T> state;

  java.lang.Object index;

  final java.util.concurrent.atomic.AtomicLong requested;

  volatile boolean cancelled;

  long emitted;

  io.reactivex.rxjava3.processors.ReplayProcessor$ReplaySubscription(org.reactivestreams.Subscriber<? super T>, io.reactivex.rxjava3.processors.ReplayProcessor<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field state:Lio/reactivex/rxjava3/processors/ReplayProcessor;
      14: aload_0
      15: new           #4                  // class java/util/concurrent/atomic/AtomicLong
      18: dup
      19: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      22: putfield      #6                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      25: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #7                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          29
       7: aload_0
       8: getfield      #6                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      11: lload_1
      12: invokestatic  #8                  // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      15: pop2
      16: aload_0
      17: getfield      #3                  // Field state:Lio/reactivex/rxjava3/processors/ReplayProcessor;
      20: getfield      #9                  // Field io/reactivex/rxjava3/processors/ReplayProcessor.buffer:Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer;
      23: aload_0
      24: invokeinterface #10,  2           // InterfaceMethod io/reactivex/rxjava3/processors/ReplayProcessor$ReplayBuffer.replay:(Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;)V
      29: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #11                 // Field cancelled:Z
       4: ifne          20
       7: aload_0
       8: iconst_1
       9: putfield      #11                 // Field cancelled:Z
      12: aload_0
      13: getfield      #3                  // Field state:Lio/reactivex/rxjava3/processors/ReplayProcessor;
      16: aload_0
      17: invokevirtual #12                 // Method io/reactivex/rxjava3/processors/ReplayProcessor.remove:(Lio/reactivex/rxjava3/processors/ReplayProcessor$ReplaySubscription;)V
      20: return
}
