Compiled from "AsyncProcessor.java"
public final class io.reactivex.rxjava3.processors.AsyncProcessor<T> extends io.reactivex.rxjava3.processors.FlowableProcessor<T> {
  static final io.reactivex.rxjava3.processors.AsyncProcessor$AsyncSubscription[] EMPTY;

  static final io.reactivex.rxjava3.processors.AsyncProcessor$AsyncSubscription[] TERMINATED;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.processors.AsyncProcessor$AsyncSubscription<T>[]> subscribers;

  java.lang.Throwable error;

  T value;

  public static <T> io.reactivex.rxjava3.processors.AsyncProcessor<T> create();
    Code:
       0: new           #1                  // class io/reactivex/rxjava3/processors/AsyncProcessor
       3: dup
       4: invokespecial #2                  // Method "<init>":()V
       7: areturn

  io.reactivex.rxjava3.processors.AsyncProcessor();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method io/reactivex/rxjava3/processors/FlowableProcessor."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: getstatic     #5                  // Field EMPTY:[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;
      12: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      15: putfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      18: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #9                  // Field TERMINATED:[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;
      10: if_acmpne     20
      13: aload_1
      14: invokeinterface #10,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      19: return
      20: aload_1
      21: ldc2_w        #12                 // long 9223372036854775807l
      24: invokeinterface #14,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      29: return

  public void onNext(T);
    Code:
       0: aload_1
       1: ldc           #15                 // String onNext called with a null value.
       3: invokestatic  #16                 // Method io/reactivex/rxjava3/internal/util/ExceptionHelper.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      11: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      14: getstatic     #9                  // Field TERMINATED:[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;
      17: if_acmpne     21
      20: return
      21: aload_0
      22: aload_1
      23: putfield      #17                 // Field value:Ljava/lang/Object;
      26: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_1
       1: ldc           #18                 // String onError called with a null Throwable.
       3: invokestatic  #16                 // Method io/reactivex/rxjava3/internal/util/ExceptionHelper.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      11: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      14: getstatic     #9                  // Field TERMINATED:[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;
      17: if_acmpne     25
      20: aload_1
      21: invokestatic  #19                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      24: return
      25: aload_0
      26: aconst_null
      27: putfield      #17                 // Field value:Ljava/lang/Object;
      30: aload_0
      31: aload_1
      32: putfield      #20                 // Field error:Ljava/lang/Throwable;
      35: aload_0
      36: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      39: getstatic     #9                  // Field TERMINATED:[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;
      42: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #22                 // class "[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;"
      48: astore_2
      49: aload_2
      50: arraylength
      51: istore_3
      52: iconst_0
      53: istore        4
      55: iload         4
      57: iload_3
      58: if_icmpge     79
      61: aload_2
      62: iload         4
      64: aaload
      65: astore        5
      67: aload         5
      69: aload_1
      70: invokevirtual #23                 // Method io/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription.onError:(Ljava/lang/Throwable;)V
      73: iinc          4, 1
      76: goto          55
      79: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #9                  // Field TERMINATED:[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;
      10: if_acmpne     14
      13: return
      14: aload_0
      15: getfield      #17                 // Field value:Ljava/lang/Object;
      18: astore_1
      19: aload_0
      20: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      23: getstatic     #9                  // Field TERMINATED:[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;
      26: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #22                 // class "[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;"
      32: astore_2
      33: aload_1
      34: ifnonnull     73
      37: aload_2
      38: astore_3
      39: aload_3
      40: arraylength
      41: istore        4
      43: iconst_0
      44: istore        5
      46: iload         5
      48: iload         4
      50: if_icmpge     70
      53: aload_3
      54: iload         5
      56: aaload
      57: astore        6
      59: aload         6
      61: invokevirtual #24                 // Method io/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription.onComplete:()V
      64: iinc          5, 1
      67: goto          46
      70: goto          107
      73: aload_2
      74: astore_3
      75: aload_3
      76: arraylength
      77: istore        4
      79: iconst_0
      80: istore        5
      82: iload         5
      84: iload         4
      86: if_icmpge     107
      89: aload_3
      90: iload         5
      92: aaload
      93: astore        6
      95: aload         6
      97: aload_1
      98: invokevirtual #25                 // Method io/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription.complete:(Ljava/lang/Object;)V
     101: iinc          5, 1
     104: goto          82
     107: return

  public boolean hasSubscribers();
    Code:
       0: aload_0
       1: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #22                 // class "[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;"
      10: arraylength
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean hasThrowable();
    Code:
       0: aload_0
       1: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #9                  // Field TERMINATED:[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;
      10: if_acmpne     24
      13: aload_0
      14: getfield      #20                 // Field error:Ljava/lang/Throwable;
      17: ifnull        24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean hasComplete();
    Code:
       0: aload_0
       1: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #9                  // Field TERMINATED:[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;
      10: if_acmpne     24
      13: aload_0
      14: getfield      #20                 // Field error:Ljava/lang/Throwable;
      17: ifnonnull     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public java.lang.Throwable getThrowable();
    Code:
       0: aload_0
       1: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #9                  // Field TERMINATED:[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;
      10: if_acmpne     20
      13: aload_0
      14: getfield      #20                 // Field error:Ljava/lang/Throwable;
      17: goto          21
      20: aconst_null
      21: areturn

  protected void subscribeActual(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: new           #26                 // class io/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #27                 // Method io/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription."<init>":(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/processors/AsyncProcessor;)V
       9: astore_2
      10: aload_1
      11: aload_2
      12: invokeinterface #28,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      17: aload_0
      18: aload_2
      19: invokevirtual #29                 // Method add:(Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;)Z
      22: ifeq          40
      25: aload_2
      26: invokevirtual #30                 // Method io/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription.isCancelled:()Z
      29: ifeq          83
      32: aload_0
      33: aload_2
      34: invokevirtual #31                 // Method remove:(Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;)V
      37: goto          83
      40: aload_0
      41: getfield      #20                 // Field error:Ljava/lang/Throwable;
      44: astore_3
      45: aload_3
      46: ifnull        59
      49: aload_1
      50: aload_3
      51: invokeinterface #32,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      56: goto          83
      59: aload_0
      60: getfield      #17                 // Field value:Ljava/lang/Object;
      63: astore        4
      65: aload         4
      67: ifnull        79
      70: aload_2
      71: aload         4
      73: invokevirtual #25                 // Method io/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription.complete:(Ljava/lang/Object;)V
      76: goto          83
      79: aload_2
      80: invokevirtual #24                 // Method io/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription.onComplete:()V
      83: return

  boolean add(io.reactivex.rxjava3.processors.AsyncProcessor$AsyncSubscription<T>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #22                 // class "[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;"
      10: astore_2
      11: aload_2
      12: getstatic     #9                  // Field TERMINATED:[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;
      15: if_acmpne     20
      18: iconst_0
      19: ireturn
      20: aload_2
      21: arraylength
      22: istore_3
      23: iload_3
      24: iconst_1
      25: iadd
      26: anewarray     #26                 // class io/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription
      29: astore        4
      31: aload_2
      32: iconst_0
      33: aload         4
      35: iconst_0
      36: iload_3
      37: invokestatic  #33                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      40: aload         4
      42: iload_3
      43: aload_1
      44: aastore
      45: aload_0
      46: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      49: aload_2
      50: aload         4
      52: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      55: ifeq          60
      58: iconst_1
      59: ireturn
      60: goto          0

  void remove(io.reactivex.rxjava3.processors.AsyncProcessor$AsyncSubscription<T>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #22                 // class "[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;"
      10: astore_2
      11: aload_2
      12: arraylength
      13: istore_3
      14: iload_3
      15: ifne          19
      18: return
      19: iconst_m1
      20: istore        4
      22: iconst_0
      23: istore        5
      25: iload         5
      27: iload_3
      28: if_icmpge     52
      31: aload_2
      32: iload         5
      34: aaload
      35: aload_1
      36: if_acmpne     46
      39: iload         5
      41: istore        4
      43: goto          52
      46: iinc          5, 1
      49: goto          25
      52: iload         4
      54: ifge          58
      57: return
      58: iload_3
      59: iconst_1
      60: if_icmpne     71
      63: getstatic     #5                  // Field EMPTY:[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;
      66: astore        5
      68: goto          107
      71: iload_3
      72: iconst_1
      73: isub
      74: anewarray     #26                 // class io/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription
      77: astore        5
      79: aload_2
      80: iconst_0
      81: aload         5
      83: iconst_0
      84: iload         4
      86: invokestatic  #33                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      89: aload_2
      90: iload         4
      92: iconst_1
      93: iadd
      94: aload         5
      96: iload         4
      98: iload_3
      99: iload         4
     101: isub
     102: iconst_1
     103: isub
     104: invokestatic  #33                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     107: aload_0
     108: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
     111: aload_2
     112: aload         5
     114: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     117: ifeq          121
     120: return
     121: goto          0

  public boolean hasValue();
    Code:
       0: aload_0
       1: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #9                  // Field TERMINATED:[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;
      10: if_acmpne     24
      13: aload_0
      14: getfield      #17                 // Field value:Ljava/lang/Object;
      17: ifnull        24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public T getValue();
    Code:
       0: aload_0
       1: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #9                  // Field TERMINATED:[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;
      10: if_acmpne     20
      13: aload_0
      14: getfield      #17                 // Field value:Ljava/lang/Object;
      17: goto          21
      20: aconst_null
      21: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #26                 // class io/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription
       4: putstatic     #5                  // Field EMPTY:[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;
       7: iconst_0
       8: anewarray     #26                 // class io/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription
      11: putstatic     #9                  // Field TERMINATED:[Lio/reactivex/rxjava3/processors/AsyncProcessor$AsyncSubscription;
      14: return
}
