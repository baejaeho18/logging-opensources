Compiled from "UnicastProcessor.java"
public final class io.reactivex.rxjava3.processors.UnicastProcessor<T> extends io.reactivex.rxjava3.processors.FlowableProcessor<T> {
  final io.reactivex.rxjava3.operators.SpscLinkedArrayQueue<T> queue;

  final java.util.concurrent.atomic.AtomicReference<java.lang.Runnable> onTerminate;

  final boolean delayError;

  volatile boolean done;

  java.lang.Throwable error;

  final java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscriber<? super T>> downstream;

  volatile boolean cancelled;

  final java.util.concurrent.atomic.AtomicBoolean once;

  final io.reactivex.rxjava3.internal.subscriptions.BasicIntQueueSubscription<T> wip;

  final java.util.concurrent.atomic.AtomicLong requested;

  boolean enableOperatorFusion;

  public static <T> io.reactivex.rxjava3.processors.UnicastProcessor<T> create();
    Code:
       0: new           #1                  // class io/reactivex/rxjava3/processors/UnicastProcessor
       3: dup
       4: invokestatic  #2                  // Method bufferSize:()I
       7: aconst_null
       8: iconst_1
       9: invokespecial #3                  // Method "<init>":(ILjava/lang/Runnable;Z)V
      12: areturn

  public static <T> io.reactivex.rxjava3.processors.UnicastProcessor<T> create(int);
    Code:
       0: iload_0
       1: ldc           #4                  // String capacityHint
       3: invokestatic  #5                  // Method io/reactivex/rxjava3/internal/functions/ObjectHelper.verifyPositive:(ILjava/lang/String;)I
       6: pop
       7: new           #1                  // class io/reactivex/rxjava3/processors/UnicastProcessor
      10: dup
      11: iload_0
      12: aconst_null
      13: iconst_1
      14: invokespecial #3                  // Method "<init>":(ILjava/lang/Runnable;Z)V
      17: areturn

  public static <T> io.reactivex.rxjava3.processors.UnicastProcessor<T> create(boolean);
    Code:
       0: new           #1                  // class io/reactivex/rxjava3/processors/UnicastProcessor
       3: dup
       4: invokestatic  #2                  // Method bufferSize:()I
       7: aconst_null
       8: iload_0
       9: invokespecial #3                  // Method "<init>":(ILjava/lang/Runnable;Z)V
      12: areturn

  public static <T> io.reactivex.rxjava3.processors.UnicastProcessor<T> create(int, java.lang.Runnable);
    Code:
       0: iload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #6                  // Method create:(ILjava/lang/Runnable;Z)Lio/reactivex/rxjava3/processors/UnicastProcessor;
       6: areturn

  public static <T> io.reactivex.rxjava3.processors.UnicastProcessor<T> create(int, java.lang.Runnable, boolean);
    Code:
       0: aload_1
       1: ldc           #7                  // String onTerminate
       3: invokestatic  #8                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: iload_0
       8: ldc           #4                  // String capacityHint
      10: invokestatic  #5                  // Method io/reactivex/rxjava3/internal/functions/ObjectHelper.verifyPositive:(ILjava/lang/String;)I
      13: pop
      14: new           #1                  // class io/reactivex/rxjava3/processors/UnicastProcessor
      17: dup
      18: iload_0
      19: aload_1
      20: iload_2
      21: invokespecial #3                  // Method "<init>":(ILjava/lang/Runnable;Z)V
      24: areturn

  io.reactivex.rxjava3.processors.UnicastProcessor(int, java.lang.Runnable, boolean);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method io/reactivex/rxjava3/processors/FlowableProcessor."<init>":()V
       4: aload_0
       5: new           #10                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
       8: dup
       9: iload_1
      10: invokespecial #11                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue."<init>":(I)V
      13: putfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
      16: aload_0
      17: new           #13                 // class java/util/concurrent/atomic/AtomicReference
      20: dup
      21: aload_2
      22: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      25: putfield      #15                 // Field onTerminate:Ljava/util/concurrent/atomic/AtomicReference;
      28: aload_0
      29: iload_3
      30: putfield      #16                 // Field delayError:Z
      33: aload_0
      34: new           #13                 // class java/util/concurrent/atomic/AtomicReference
      37: dup
      38: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      41: putfield      #18                 // Field downstream:Ljava/util/concurrent/atomic/AtomicReference;
      44: aload_0
      45: new           #19                 // class java/util/concurrent/atomic/AtomicBoolean
      48: dup
      49: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      52: putfield      #21                 // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
      55: aload_0
      56: new           #22                 // class io/reactivex/rxjava3/processors/UnicastProcessor$UnicastQueueSubscription
      59: dup
      60: aload_0
      61: invokespecial #23                 // Method io/reactivex/rxjava3/processors/UnicastProcessor$UnicastQueueSubscription."<init>":(Lio/reactivex/rxjava3/processors/UnicastProcessor;)V
      64: putfield      #24                 // Field wip:Lio/reactivex/rxjava3/internal/subscriptions/BasicIntQueueSubscription;
      67: aload_0
      68: new           #25                 // class java/util/concurrent/atomic/AtomicLong
      71: dup
      72: invokespecial #26                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      75: putfield      #27                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      78: return

  void doTerminate();
    Code:
       0: aload_0
       1: getfield      #15                 // Field onTerminate:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #29                 // class java/lang/Runnable
      11: astore_1
      12: aload_1
      13: ifnull        22
      16: aload_1
      17: invokeinterface #30,  1           // InterfaceMethod java/lang/Runnable.run:()V
      22: return

  void drainRegular(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: getfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
       6: astore_3
       7: aload_0
       8: getfield      #16                 // Field delayError:Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: istore        4
      21: aload_0
      22: getfield      #27                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      25: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      28: lstore        5
      30: lconst_0
      31: lstore        7
      33: lload         5
      35: lload         7
      37: lcmp
      38: ifeq          106
      41: aload_0
      42: getfield      #32                 // Field done:Z
      45: istore        9
      47: aload_3
      48: invokevirtual #33                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.poll:()Ljava/lang/Object;
      51: astore        10
      53: aload         10
      55: ifnonnull     62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: istore        11
      65: aload_0
      66: iload         4
      68: iload         9
      70: iload         11
      72: aload_1
      73: aload_3
      74: invokevirtual #34                 // Method checkTerminated:(ZZZLorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;)Z
      77: ifeq          81
      80: return
      81: iload         11
      83: ifeq          89
      86: goto          106
      89: aload_1
      90: aload         10
      92: invokeinterface #35,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      97: lload         7
      99: lconst_1
     100: ladd
     101: lstore        7
     103: goto          33
     106: lload         5
     108: lload         7
     110: lcmp
     111: ifne          134
     114: aload_0
     115: iload         4
     117: aload_0
     118: getfield      #32                 // Field done:Z
     121: aload_3
     122: invokevirtual #36                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.isEmpty:()Z
     125: aload_1
     126: aload_3
     127: invokevirtual #34                 // Method checkTerminated:(ZZZLorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;)Z
     130: ifeq          134
     133: return
     134: lload         7
     136: lconst_0
     137: lcmp
     138: ifeq          161
     141: lload         5
     143: ldc2_w        #38                 // long 9223372036854775807l
     146: lcmp
     147: ifeq          161
     150: aload_0
     151: getfield      #27                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     154: lload         7
     156: lneg
     157: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
     160: pop2
     161: aload_0
     162: getfield      #24                 // Field wip:Lio/reactivex/rxjava3/internal/subscriptions/BasicIntQueueSubscription;
     165: iload_2
     166: ineg
     167: invokevirtual #41                 // Method io/reactivex/rxjava3/internal/subscriptions/BasicIntQueueSubscription.addAndGet:(I)I
     170: istore_2
     171: iload_2
     172: ifne          178
     175: goto          181
     178: goto          21
     181: return

  void drainFused(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: getfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
       6: astore_3
       7: aload_0
       8: getfield      #16                 // Field delayError:Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: istore        4
      21: aload_0
      22: getfield      #42                 // Field cancelled:Z
      25: ifeq          37
      28: aload_0
      29: getfield      #18                 // Field downstream:Ljava/util/concurrent/atomic/AtomicReference;
      32: aconst_null
      33: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
      36: return
      37: aload_0
      38: getfield      #32                 // Field done:Z
      41: istore        5
      43: iload         4
      45: ifeq          83
      48: iload         5
      50: ifeq          83
      53: aload_0
      54: getfield      #44                 // Field error:Ljava/lang/Throwable;
      57: ifnull        83
      60: aload_3
      61: invokevirtual #45                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.clear:()V
      64: aload_0
      65: getfield      #18                 // Field downstream:Ljava/util/concurrent/atomic/AtomicReference;
      68: aconst_null
      69: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
      72: aload_1
      73: aload_0
      74: getfield      #44                 // Field error:Ljava/lang/Throwable;
      77: invokeinterface #46,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      82: return
      83: aload_1
      84: aconst_null
      85: invokeinterface #35,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      90: iload         5
      92: ifeq          132
      95: aload_0
      96: getfield      #18                 // Field downstream:Ljava/util/concurrent/atomic/AtomicReference;
      99: aconst_null
     100: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
     103: aload_0
     104: getfield      #44                 // Field error:Ljava/lang/Throwable;
     107: astore        6
     109: aload         6
     111: ifnull        125
     114: aload_1
     115: aload         6
     117: invokeinterface #46,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     122: goto          131
     125: aload_1
     126: invokeinterface #47,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     131: return
     132: aload_0
     133: getfield      #24                 // Field wip:Lio/reactivex/rxjava3/internal/subscriptions/BasicIntQueueSubscription;
     136: iload_2
     137: ineg
     138: invokevirtual #41                 // Method io/reactivex/rxjava3/internal/subscriptions/BasicIntQueueSubscription.addAndGet:(I)I
     141: istore_2
     142: iload_2
     143: ifne          149
     146: goto          152
     149: goto          21
     152: return

  void drain();
    Code:
       0: aload_0
       1: getfield      #24                 // Field wip:Lio/reactivex/rxjava3/internal/subscriptions/BasicIntQueueSubscription;
       4: invokevirtual #48                 // Method io/reactivex/rxjava3/internal/subscriptions/BasicIntQueueSubscription.getAndIncrement:()I
       7: ifeq          11
      10: return
      11: iconst_1
      12: istore_1
      13: aload_0
      14: getfield      #18                 // Field downstream:Ljava/util/concurrent/atomic/AtomicReference;
      17: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      20: checkcast     #50                 // class org/reactivestreams/Subscriber
      23: astore_2
      24: aload_2
      25: ifnull        49
      28: aload_0
      29: getfield      #51                 // Field enableOperatorFusion:Z
      32: ifeq          43
      35: aload_0
      36: aload_2
      37: invokevirtual #52                 // Method drainFused:(Lorg/reactivestreams/Subscriber;)V
      40: goto          48
      43: aload_0
      44: aload_2
      45: invokevirtual #53                 // Method drainRegular:(Lorg/reactivestreams/Subscriber;)V
      48: return
      49: aload_0
      50: getfield      #24                 // Field wip:Lio/reactivex/rxjava3/internal/subscriptions/BasicIntQueueSubscription;
      53: iload_1
      54: ineg
      55: invokevirtual #41                 // Method io/reactivex/rxjava3/internal/subscriptions/BasicIntQueueSubscription.addAndGet:(I)I
      58: istore_1
      59: iload_1
      60: ifne          66
      63: goto          80
      66: aload_0
      67: getfield      #18                 // Field downstream:Ljava/util/concurrent/atomic/AtomicReference;
      70: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      73: checkcast     #50                 // class org/reactivestreams/Subscriber
      76: astore_2
      77: goto          24
      80: return

  boolean checkTerminated(boolean, boolean, boolean, org.reactivestreams.Subscriber<? super T>, io.reactivex.rxjava3.operators.SpscLinkedArrayQueue<T>);
    Code:
       0: aload_0
       1: getfield      #42                 // Field cancelled:Z
       4: ifeq          22
       7: aload         5
       9: invokevirtual #45                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.clear:()V
      12: aload_0
      13: getfield      #18                 // Field downstream:Ljava/util/concurrent/atomic/AtomicReference;
      16: aconst_null
      17: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
      20: iconst_1
      21: ireturn
      22: iload_2
      23: ifeq          107
      26: iload_1
      27: ifeq          63
      30: aload_0
      31: getfield      #44                 // Field error:Ljava/lang/Throwable;
      34: ifnull        63
      37: aload         5
      39: invokevirtual #45                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.clear:()V
      42: aload_0
      43: getfield      #18                 // Field downstream:Ljava/util/concurrent/atomic/AtomicReference;
      46: aconst_null
      47: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
      50: aload         4
      52: aload_0
      53: getfield      #44                 // Field error:Ljava/lang/Throwable;
      56: invokeinterface #46,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      61: iconst_1
      62: ireturn
      63: iload_3
      64: ifeq          107
      67: aload_0
      68: getfield      #44                 // Field error:Ljava/lang/Throwable;
      71: astore        6
      73: aload_0
      74: getfield      #18                 // Field downstream:Ljava/util/concurrent/atomic/AtomicReference;
      77: aconst_null
      78: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
      81: aload         6
      83: ifnull        98
      86: aload         4
      88: aload         6
      90: invokeinterface #46,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      95: goto          105
      98: aload         4
     100: invokeinterface #47,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     105: iconst_1
     106: ireturn
     107: iconst_0
     108: ireturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #32                 // Field done:Z
       4: ifne          14
       7: aload_0
       8: getfield      #42                 // Field cancelled:Z
      11: ifeq          23
      14: aload_1
      15: invokeinterface #54,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      20: goto          32
      23: aload_1
      24: ldc2_w        #38                 // long 9223372036854775807l
      27: invokeinterface #55,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      32: return

  public void onNext(T);
    Code:
       0: aload_1
       1: ldc           #56                 // String onNext called with a null value.
       3: invokestatic  #57                 // Method io/reactivex/rxjava3/internal/util/ExceptionHelper.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #32                 // Field done:Z
      11: ifne          21
      14: aload_0
      15: getfield      #42                 // Field cancelled:Z
      18: ifeq          22
      21: return
      22: aload_0
      23: getfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
      26: aload_1
      27: invokevirtual #58                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.offer:(Ljava/lang/Object;)Z
      30: pop
      31: aload_0
      32: invokevirtual #59                 // Method drain:()V
      35: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_1
       1: ldc           #60                 // String onError called with a null Throwable.
       3: invokestatic  #57                 // Method io/reactivex/rxjava3/internal/util/ExceptionHelper.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #32                 // Field done:Z
      11: ifne          21
      14: aload_0
      15: getfield      #42                 // Field cancelled:Z
      18: ifeq          26
      21: aload_1
      22: invokestatic  #61                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      25: return
      26: aload_0
      27: aload_1
      28: putfield      #44                 // Field error:Ljava/lang/Throwable;
      31: aload_0
      32: iconst_1
      33: putfield      #32                 // Field done:Z
      36: aload_0
      37: invokevirtual #62                 // Method doTerminate:()V
      40: aload_0
      41: invokevirtual #59                 // Method drain:()V
      44: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #32                 // Field done:Z
       4: ifne          14
       7: aload_0
       8: getfield      #42                 // Field cancelled:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: iconst_1
      17: putfield      #32                 // Field done:Z
      20: aload_0
      21: invokevirtual #62                 // Method doTerminate:()V
      24: aload_0
      25: invokevirtual #59                 // Method drain:()V
      28: return

  protected void subscribeActual(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #21                 // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          65
      10: aload_0
      11: getfield      #21                 // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
      14: iconst_0
      15: iconst_1
      16: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      19: ifeq          65
      22: aload_1
      23: aload_0
      24: getfield      #24                 // Field wip:Lio/reactivex/rxjava3/internal/subscriptions/BasicIntQueueSubscription;
      27: invokeinterface #65,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      32: aload_0
      33: getfield      #18                 // Field downstream:Ljava/util/concurrent/atomic/AtomicReference;
      36: aload_1
      37: invokevirtual #66                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      40: aload_0
      41: getfield      #42                 // Field cancelled:Z
      44: ifeq          58
      47: aload_0
      48: getfield      #18                 // Field downstream:Ljava/util/concurrent/atomic/AtomicReference;
      51: aconst_null
      52: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
      55: goto          78
      58: aload_0
      59: invokevirtual #59                 // Method drain:()V
      62: goto          78
      65: new           #67                 // class java/lang/IllegalStateException
      68: dup
      69: ldc           #68                 // String This processor allows only a single Subscriber
      71: invokespecial #69                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      74: aload_1
      75: invokestatic  #70                 // Method io/reactivex/rxjava3/internal/subscriptions/EmptySubscription.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V
      78: return

  public boolean hasSubscribers();
    Code:
       0: aload_0
       1: getfield      #18                 // Field downstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public java.lang.Throwable getThrowable();
    Code:
       0: aload_0
       1: getfield      #32                 // Field done:Z
       4: ifeq          12
       7: aload_0
       8: getfield      #44                 // Field error:Ljava/lang/Throwable;
      11: areturn
      12: aconst_null
      13: areturn

  public boolean hasComplete();
    Code:
       0: aload_0
       1: getfield      #32                 // Field done:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #44                 // Field error:Ljava/lang/Throwable;
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean hasThrowable();
    Code:
       0: aload_0
       1: getfield      #32                 // Field done:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #44                 // Field error:Ljava/lang/Throwable;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn
}
