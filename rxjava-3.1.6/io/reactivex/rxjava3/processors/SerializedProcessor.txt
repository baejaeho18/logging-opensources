Compiled from "SerializedProcessor.java"
final class io.reactivex.rxjava3.processors.SerializedProcessor<T> extends io.reactivex.rxjava3.processors.FlowableProcessor<T> {
  final io.reactivex.rxjava3.processors.FlowableProcessor<T> actual;

  boolean emitting;

  io.reactivex.rxjava3.internal.util.AppendOnlyLinkedArrayList<java.lang.Object> queue;

  volatile boolean done;

  io.reactivex.rxjava3.processors.SerializedProcessor(io.reactivex.rxjava3.processors.FlowableProcessor<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/processors/FlowableProcessor."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lio/reactivex/rxjava3/processors/FlowableProcessor;
       9: return

  protected void subscribeActual(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lio/reactivex/rxjava3/processors/FlowableProcessor;
       4: aload_1
       5: invokevirtual #3                  // Method io/reactivex/rxjava3/processors/FlowableProcessor.subscribe:(Lorg/reactivestreams/Subscriber;)V
       8: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #4                  // Field done:Z
       4: ifne          91
       7: aload_0
       8: dup
       9: astore_3
      10: monitorenter
      11: aload_0
      12: getfield      #4                  // Field done:Z
      15: ifeq          23
      18: iconst_1
      19: istore_2
      20: goto          76
      23: aload_0
      24: getfield      #5                  // Field emitting:Z
      27: ifeq          69
      30: aload_0
      31: getfield      #6                  // Field queue:Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;
      34: astore        4
      36: aload         4
      38: ifnonnull     57
      41: new           #7                  // class io/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList
      44: dup
      45: iconst_4
      46: invokespecial #8                  // Method io/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList."<init>":(I)V
      49: astore        4
      51: aload_0
      52: aload         4
      54: putfield      #6                  // Field queue:Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;
      57: aload         4
      59: aload_1
      60: invokestatic  #9                  // Method io/reactivex/rxjava3/internal/util/NotificationLite.subscription:(Lorg/reactivestreams/Subscription;)Ljava/lang/Object;
      63: invokevirtual #10                 // Method io/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList.add:(Ljava/lang/Object;)V
      66: aload_3
      67: monitorexit
      68: return
      69: aload_0
      70: iconst_1
      71: putfield      #5                  // Field emitting:Z
      74: iconst_0
      75: istore_2
      76: aload_3
      77: monitorexit
      78: goto          88
      81: astore        5
      83: aload_3
      84: monitorexit
      85: aload         5
      87: athrow
      88: goto          93
      91: iconst_1
      92: istore_2
      93: iload_2
      94: ifeq          106
      97: aload_1
      98: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     103: goto          118
     106: aload_0
     107: getfield      #2                  // Field actual:Lio/reactivex/rxjava3/processors/FlowableProcessor;
     110: aload_1
     111: invokevirtual #12                 // Method io/reactivex/rxjava3/processors/FlowableProcessor.onSubscribe:(Lorg/reactivestreams/Subscription;)V
     114: aload_0
     115: invokevirtual #13                 // Method emitLoop:()V
     118: return
    Exception table:
       from    to  target type
          11    68    81   any
          69    78    81   any
          81    85    81   any

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #4                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: dup
      10: astore_2
      11: monitorenter
      12: aload_0
      13: getfield      #4                  // Field done:Z
      16: ifeq          22
      19: aload_2
      20: monitorexit
      21: return
      22: aload_0
      23: getfield      #5                  // Field emitting:Z
      26: ifeq          63
      29: aload_0
      30: getfield      #6                  // Field queue:Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;
      33: astore_3
      34: aload_3
      35: ifnonnull     52
      38: new           #7                  // class io/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList
      41: dup
      42: iconst_4
      43: invokespecial #8                  // Method io/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList."<init>":(I)V
      46: astore_3
      47: aload_0
      48: aload_3
      49: putfield      #6                  // Field queue:Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;
      52: aload_3
      53: aload_1
      54: invokestatic  #14                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.next:(Ljava/lang/Object;)Ljava/lang/Object;
      57: invokevirtual #10                 // Method io/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList.add:(Ljava/lang/Object;)V
      60: aload_2
      61: monitorexit
      62: return
      63: aload_0
      64: iconst_1
      65: putfield      #5                  // Field emitting:Z
      68: aload_2
      69: monitorexit
      70: goto          80
      73: astore        4
      75: aload_2
      76: monitorexit
      77: aload         4
      79: athrow
      80: aload_0
      81: getfield      #2                  // Field actual:Lio/reactivex/rxjava3/processors/FlowableProcessor;
      84: aload_1
      85: invokevirtual #15                 // Method io/reactivex/rxjava3/processors/FlowableProcessor.onNext:(Ljava/lang/Object;)V
      88: aload_0
      89: invokevirtual #13                 // Method emitLoop:()V
      92: return
    Exception table:
       from    to  target type
          12    21    73   any
          22    62    73   any
          63    70    73   any
          73    77    73   any

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field done:Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #16                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      11: return
      12: aload_0
      13: dup
      14: astore_3
      15: monitorenter
      16: aload_0
      17: getfield      #4                  // Field done:Z
      20: ifeq          28
      23: iconst_1
      24: istore_2
      25: goto          86
      28: aload_0
      29: iconst_1
      30: putfield      #4                  // Field done:Z
      33: aload_0
      34: getfield      #5                  // Field emitting:Z
      37: ifeq          79
      40: aload_0
      41: getfield      #6                  // Field queue:Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;
      44: astore        4
      46: aload         4
      48: ifnonnull     67
      51: new           #7                  // class io/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList
      54: dup
      55: iconst_4
      56: invokespecial #8                  // Method io/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList."<init>":(I)V
      59: astore        4
      61: aload_0
      62: aload         4
      64: putfield      #6                  // Field queue:Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;
      67: aload         4
      69: aload_1
      70: invokestatic  #17                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.error:(Ljava/lang/Throwable;)Ljava/lang/Object;
      73: invokevirtual #18                 // Method io/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList.setFirst:(Ljava/lang/Object;)V
      76: aload_3
      77: monitorexit
      78: return
      79: iconst_0
      80: istore_2
      81: aload_0
      82: iconst_1
      83: putfield      #5                  // Field emitting:Z
      86: aload_3
      87: monitorexit
      88: goto          98
      91: astore        5
      93: aload_3
      94: monitorexit
      95: aload         5
      97: athrow
      98: iload_2
      99: ifeq          107
     102: aload_1
     103: invokestatic  #16                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
     106: return
     107: aload_0
     108: getfield      #2                  // Field actual:Lio/reactivex/rxjava3/processors/FlowableProcessor;
     111: aload_1
     112: invokevirtual #19                 // Method io/reactivex/rxjava3/processors/FlowableProcessor.onError:(Ljava/lang/Throwable;)V
     115: return
    Exception table:
       from    to  target type
          16    78    91   any
          79    88    91   any
          91    95    91   any

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #4                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: dup
      10: astore_1
      11: monitorenter
      12: aload_0
      13: getfield      #4                  // Field done:Z
      16: ifeq          22
      19: aload_1
      20: monitorexit
      21: return
      22: aload_0
      23: iconst_1
      24: putfield      #4                  // Field done:Z
      27: aload_0
      28: getfield      #5                  // Field emitting:Z
      31: ifeq          67
      34: aload_0
      35: getfield      #6                  // Field queue:Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;
      38: astore_2
      39: aload_2
      40: ifnonnull     57
      43: new           #7                  // class io/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList
      46: dup
      47: iconst_4
      48: invokespecial #8                  // Method io/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList."<init>":(I)V
      51: astore_2
      52: aload_0
      53: aload_2
      54: putfield      #6                  // Field queue:Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;
      57: aload_2
      58: invokestatic  #20                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.complete:()Ljava/lang/Object;
      61: invokevirtual #10                 // Method io/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList.add:(Ljava/lang/Object;)V
      64: aload_1
      65: monitorexit
      66: return
      67: aload_0
      68: iconst_1
      69: putfield      #5                  // Field emitting:Z
      72: aload_1
      73: monitorexit
      74: goto          82
      77: astore_3
      78: aload_1
      79: monitorexit
      80: aload_3
      81: athrow
      82: aload_0
      83: getfield      #2                  // Field actual:Lio/reactivex/rxjava3/processors/FlowableProcessor;
      86: invokevirtual #21                 // Method io/reactivex/rxjava3/processors/FlowableProcessor.onComplete:()V
      89: return
    Exception table:
       from    to  target type
          12    21    77   any
          22    66    77   any
          67    74    77   any
          77    80    77   any

  void emitLoop();
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #6                  // Field queue:Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;
       8: astore_1
       9: aload_1
      10: ifnonnull     21
      13: aload_0
      14: iconst_0
      15: putfield      #5                  // Field emitting:Z
      18: aload_2
      19: monitorexit
      20: return
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field queue:Lio/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList;
      26: aload_2
      27: monitorexit
      28: goto          36
      31: astore_3
      32: aload_2
      33: monitorexit
      34: aload_3
      35: athrow
      36: aload_1
      37: aload_0
      38: getfield      #2                  // Field actual:Lio/reactivex/rxjava3/processors/FlowableProcessor;
      41: invokevirtual #22                 // Method io/reactivex/rxjava3/internal/util/AppendOnlyLinkedArrayList.accept:(Lorg/reactivestreams/Subscriber;)Z
      44: pop
      45: goto          0
    Exception table:
       from    to  target type
           4    20    31   any
          21    28    31   any
          31    34    31   any

  public boolean hasSubscribers();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lio/reactivex/rxjava3/processors/FlowableProcessor;
       4: invokevirtual #23                 // Method io/reactivex/rxjava3/processors/FlowableProcessor.hasSubscribers:()Z
       7: ireturn

  public boolean hasThrowable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lio/reactivex/rxjava3/processors/FlowableProcessor;
       4: invokevirtual #24                 // Method io/reactivex/rxjava3/processors/FlowableProcessor.hasThrowable:()Z
       7: ireturn

  public java.lang.Throwable getThrowable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lio/reactivex/rxjava3/processors/FlowableProcessor;
       4: invokevirtual #25                 // Method io/reactivex/rxjava3/processors/FlowableProcessor.getThrowable:()Ljava/lang/Throwable;
       7: areturn

  public boolean hasComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lio/reactivex/rxjava3/processors/FlowableProcessor;
       4: invokevirtual #26                 // Method io/reactivex/rxjava3/processors/FlowableProcessor.hasComplete:()Z
       7: ireturn
}
