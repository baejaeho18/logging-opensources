Compiled from "TestObserver.java"
public class io.reactivex.rxjava3.observers.TestObserver<T> extends io.reactivex.rxjava3.observers.BaseTestConsumer<T, io.reactivex.rxjava3.observers.TestObserver<T>> implements io.reactivex.rxjava3.core.Observer<T>, io.reactivex.rxjava3.disposables.Disposable, io.reactivex.rxjava3.core.MaybeObserver<T>, io.reactivex.rxjava3.core.SingleObserver<T>, io.reactivex.rxjava3.core.CompletableObserver {
  private final io.reactivex.rxjava3.core.Observer<? super T> downstream;

  private final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> upstream;

  public static <T> io.reactivex.rxjava3.observers.TestObserver<T> create();
    Code:
       0: new           #1                  // class io/reactivex/rxjava3/observers/TestObserver
       3: dup
       4: invokespecial #2                  // Method "<init>":()V
       7: areturn

  public static <T> io.reactivex.rxjava3.observers.TestObserver<T> create(io.reactivex.rxjava3.core.Observer<? super T>);
    Code:
       0: new           #1                  // class io/reactivex/rxjava3/observers/TestObserver
       3: dup
       4: aload_0
       5: invokespecial #3                  // Method "<init>":(Lio/reactivex/rxjava3/core/Observer;)V
       8: areturn

  public io.reactivex.rxjava3.observers.TestObserver();
    Code:
       0: aload_0
       1: getstatic     #4                  // Field io/reactivex/rxjava3/observers/TestObserver$EmptyObserver.INSTANCE:Lio/reactivex/rxjava3/observers/TestObserver$EmptyObserver;
       4: invokespecial #3                  // Method "<init>":(Lio/reactivex/rxjava3/core/Observer;)V
       7: return

  public io.reactivex.rxjava3.observers.TestObserver(io.reactivex.rxjava3.core.Observer<? super T>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method io/reactivex/rxjava3/observers/BaseTestConsumer."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #8                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: aload_1
      17: putfield      #9                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      20: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: putfield      #11                 // Field lastThread:Ljava/lang/Thread;
       7: aload_1
       8: ifnonnull     31
      11: aload_0
      12: getfield      #12                 // Field errors:Ljava/util/List;
      15: new           #13                 // class java/lang/NullPointerException
      18: dup
      19: ldc           #14                 // String onSubscribe received a null Subscription
      21: invokespecial #15                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      24: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: return
      31: aload_0
      32: getfield      #8                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      35: aconst_null
      36: aload_1
      37: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      40: ifne          99
      43: aload_1
      44: invokeinterface #18,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      49: aload_0
      50: getfield      #8                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      53: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      56: getstatic     #20                 // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
      59: if_acmpeq     98
      62: aload_0
      63: getfield      #12                 // Field errors:Ljava/util/List;
      66: new           #21                 // class java/lang/IllegalStateException
      69: dup
      70: new           #22                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      77: ldc           #24                 // String onSubscribe received multiple subscriptions:
      79: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_1
      83: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      92: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      97: pop
      98: return
      99: aload_0
     100: getfield      #9                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
     103: aload_1
     104: invokeinterface #29,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
     109: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #30                 // Field checkSubscriptionOnce:Z
       4: ifne          41
       7: aload_0
       8: iconst_1
       9: putfield      #30                 // Field checkSubscriptionOnce:Z
      12: aload_0
      13: getfield      #8                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      16: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      19: ifnonnull     41
      22: aload_0
      23: getfield      #12                 // Field errors:Ljava/util/List;
      26: new           #21                 // class java/lang/IllegalStateException
      29: dup
      30: ldc           #31                 // String onSubscribe not called in proper order
      32: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      35: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: aload_0
      42: invokestatic  #10                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      45: putfield      #11                 // Field lastThread:Ljava/lang/Thread;
      48: aload_0
      49: getfield      #32                 // Field values:Ljava/util/List;
      52: aload_1
      53: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_1
      60: ifnonnull     82
      63: aload_0
      64: getfield      #12                 // Field errors:Ljava/util/List;
      67: new           #13                 // class java/lang/NullPointerException
      70: dup
      71: ldc           #33                 // String onNext received a null value
      73: invokespecial #15                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      76: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      81: pop
      82: aload_0
      83: getfield      #9                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      86: aload_1
      87: invokeinterface #34,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      92: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #30                 // Field checkSubscriptionOnce:Z
       4: ifne          41
       7: aload_0
       8: iconst_1
       9: putfield      #30                 // Field checkSubscriptionOnce:Z
      12: aload_0
      13: getfield      #8                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      16: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      19: ifnonnull     41
      22: aload_0
      23: getfield      #12                 // Field errors:Ljava/util/List;
      26: new           #21                 // class java/lang/IllegalStateException
      29: dup
      30: ldc           #31                 // String onSubscribe not called in proper order
      32: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      35: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: aload_0
      42: invokestatic  #10                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      45: putfield      #11                 // Field lastThread:Ljava/lang/Thread;
      48: aload_1
      49: ifnonnull     74
      52: aload_0
      53: getfield      #12                 // Field errors:Ljava/util/List;
      56: new           #13                 // class java/lang/NullPointerException
      59: dup
      60: ldc           #35                 // String onError received a null Throwable
      62: invokespecial #15                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      65: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: goto          85
      74: aload_0
      75: getfield      #12                 // Field errors:Ljava/util/List;
      78: aload_1
      79: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      84: pop
      85: aload_0
      86: getfield      #9                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      89: aload_1
      90: invokeinterface #36,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
      95: aload_0
      96: getfield      #37                 // Field done:Ljava/util/concurrent/CountDownLatch;
      99: invokevirtual #38                 // Method java/util/concurrent/CountDownLatch.countDown:()V
     102: goto          115
     105: astore_2
     106: aload_0
     107: getfield      #37                 // Field done:Ljava/util/concurrent/CountDownLatch;
     110: invokevirtual #38                 // Method java/util/concurrent/CountDownLatch.countDown:()V
     113: aload_2
     114: athrow
     115: return
    Exception table:
       from    to  target type
          41    95   105   any

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #30                 // Field checkSubscriptionOnce:Z
       4: ifne          41
       7: aload_0
       8: iconst_1
       9: putfield      #30                 // Field checkSubscriptionOnce:Z
      12: aload_0
      13: getfield      #8                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      16: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      19: ifnonnull     41
      22: aload_0
      23: getfield      #12                 // Field errors:Ljava/util/List;
      26: new           #21                 // class java/lang/IllegalStateException
      29: dup
      30: ldc           #31                 // String onSubscribe not called in proper order
      32: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      35: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: aload_0
      42: invokestatic  #10                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      45: putfield      #11                 // Field lastThread:Ljava/lang/Thread;
      48: aload_0
      49: dup
      50: getfield      #39                 // Field completions:J
      53: lconst_1
      54: ladd
      55: putfield      #39                 // Field completions:J
      58: aload_0
      59: getfield      #9                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      62: invokeinterface #40,  1           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
      67: aload_0
      68: getfield      #37                 // Field done:Ljava/util/concurrent/CountDownLatch;
      71: invokevirtual #38                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      74: goto          87
      77: astore_1
      78: aload_0
      79: getfield      #37                 // Field done:Ljava/util/concurrent/CountDownLatch;
      82: invokevirtual #38                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      85: aload_1
      86: athrow
      87: return
    Exception table:
       from    to  target type
          41    67    77   any

  public final void dispose();
    Code:
       0: aload_0
       1: getfield      #8                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #41                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: return

  public final boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #42                 // class io/reactivex/rxjava3/disposables/Disposable
      10: invokestatic  #43                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      13: ireturn

  public final boolean hasSubscription();
    Code:
       0: aload_0
       1: getfield      #8                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected final io.reactivex.rxjava3.observers.TestObserver<T> assertSubscribed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnonnull     17
      10: aload_0
      11: ldc           #44                 // String Not subscribed!
      13: invokevirtual #45                 // Method fail:(Ljava/lang/String;)Ljava/lang/AssertionError;
      16: athrow
      17: aload_0
      18: areturn

  public void onSuccess(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method onNext:(Ljava/lang/Object;)V
       5: aload_0
       6: invokevirtual #47                 // Method onComplete:()V
       9: return

  protected io.reactivex.rxjava3.observers.BaseTestConsumer assertSubscribed();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method assertSubscribed:()Lio/reactivex/rxjava3/observers/TestObserver;
       4: areturn
}
