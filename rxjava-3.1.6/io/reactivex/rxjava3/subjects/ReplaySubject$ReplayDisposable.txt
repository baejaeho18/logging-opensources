Compiled from "ReplaySubject.java"
final class io.reactivex.rxjava3.subjects.ReplaySubject$ReplayDisposable<T> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super T> downstream;

  final io.reactivex.rxjava3.subjects.ReplaySubject<T> state;

  java.lang.Object index;

  volatile boolean cancelled;

  io.reactivex.rxjava3.subjects.ReplaySubject$ReplayDisposable(io.reactivex.rxjava3.core.Observer<? super T>, io.reactivex.rxjava3.subjects.ReplaySubject<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field state:Lio/reactivex/rxjava3/subjects/ReplaySubject;
      14: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cancelled:Z
       4: ifne          20
       7: aload_0
       8: iconst_1
       9: putfield      #4                  // Field cancelled:Z
      12: aload_0
      13: getfield      #3                  // Field state:Lio/reactivex/rxjava3/subjects/ReplaySubject;
      16: aload_0
      17: invokevirtual #5                  // Method io/reactivex/rxjava3/subjects/ReplaySubject.remove:(Lio/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable;)V
      20: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cancelled:Z
       4: ireturn
}
