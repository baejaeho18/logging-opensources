Compiled from "MaybeSubject.java"
public final class io.reactivex.rxjava3.subjects.MaybeSubject<T> extends io.reactivex.rxjava3.core.Maybe<T> implements io.reactivex.rxjava3.core.MaybeObserver<T> {
  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.subjects.MaybeSubject$MaybeDisposable<T>[]> observers;

  static final io.reactivex.rxjava3.subjects.MaybeSubject$MaybeDisposable[] EMPTY;

  static final io.reactivex.rxjava3.subjects.MaybeSubject$MaybeDisposable[] TERMINATED;

  final java.util.concurrent.atomic.AtomicBoolean once;

  T value;

  java.lang.Throwable error;

  public static <T> io.reactivex.rxjava3.subjects.MaybeSubject<T> create();
    Code:
       0: new           #1                  // class io/reactivex/rxjava3/subjects/MaybeSubject
       3: dup
       4: invokespecial #2                  // Method "<init>":()V
       7: areturn

  io.reactivex.rxjava3.subjects.MaybeSubject();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method io/reactivex/rxjava3/core/Maybe."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #6                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: new           #7                  // class java/util/concurrent/atomic/AtomicReference
      19: dup
      20: getstatic     #8                  // Field EMPTY:[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;
      23: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      26: putfield      #10                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
      29: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #12                 // Field TERMINATED:[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;
      10: if_acmpne     19
      13: aload_1
      14: invokeinterface #13,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      19: return

  public void onSuccess(T);
    Code:
       0: aload_1
       1: ldc           #14                 // String onSuccess called with a null value.
       3: invokestatic  #15                 // Method io/reactivex/rxjava3/internal/util/ExceptionHelper.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #6                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: iconst_0
      12: iconst_1
      13: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      16: ifeq          73
      19: aload_0
      20: aload_1
      21: putfield      #17                 // Field value:Ljava/lang/Object;
      24: aload_0
      25: getfield      #10                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
      28: getstatic     #12                 // Field TERMINATED:[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;
      31: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #19                 // class "[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;"
      37: astore_2
      38: aload_2
      39: arraylength
      40: istore_3
      41: iconst_0
      42: istore        4
      44: iload         4
      46: iload_3
      47: if_icmpge     73
      50: aload_2
      51: iload         4
      53: aaload
      54: astore        5
      56: aload         5
      58: getfield      #20                 // Field io/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable.downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      61: aload_1
      62: invokeinterface #21,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSuccess:(Ljava/lang/Object;)V
      67: iinc          4, 1
      70: goto          44
      73: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_1
       1: ldc           #22                 // String onError called with a null Throwable.
       3: invokestatic  #15                 // Method io/reactivex/rxjava3/internal/util/ExceptionHelper.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #6                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: iconst_0
      12: iconst_1
      13: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      16: ifeq          76
      19: aload_0
      20: aload_1
      21: putfield      #23                 // Field error:Ljava/lang/Throwable;
      24: aload_0
      25: getfield      #10                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
      28: getstatic     #12                 // Field TERMINATED:[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;
      31: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #19                 // class "[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;"
      37: astore_2
      38: aload_2
      39: arraylength
      40: istore_3
      41: iconst_0
      42: istore        4
      44: iload         4
      46: iload_3
      47: if_icmpge     73
      50: aload_2
      51: iload         4
      53: aaload
      54: astore        5
      56: aload         5
      58: getfield      #20                 // Field io/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable.downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      61: aload_1
      62: invokeinterface #24,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      67: iinc          4, 1
      70: goto          44
      73: goto          80
      76: aload_1
      77: invokestatic  #25                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      80: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          57
      12: aload_0
      13: getfield      #10                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
      16: getstatic     #12                 // Field TERMINATED:[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;
      19: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #19                 // class "[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;"
      25: astore_1
      26: aload_1
      27: arraylength
      28: istore_2
      29: iconst_0
      30: istore_3
      31: iload_3
      32: iload_2
      33: if_icmpge     57
      36: aload_1
      37: iload_3
      38: aaload
      39: astore        4
      41: aload         4
      43: getfield      #20                 // Field io/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable.downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      46: invokeinterface #26,  1           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onComplete:()V
      51: iinc          3, 1
      54: goto          31
      57: return

  protected void subscribeActual(io.reactivex.rxjava3.core.MaybeObserver<? super T>);
    Code:
       0: new           #27                 // class io/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #28                 // Method io/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable."<init>":(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/subjects/MaybeSubject;)V
       9: astore_2
      10: aload_1
      11: aload_2
      12: invokeinterface #29,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      17: aload_0
      18: aload_2
      19: invokevirtual #30                 // Method add:(Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;)Z
      22: ifeq          40
      25: aload_2
      26: invokevirtual #31                 // Method io/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable.isDisposed:()Z
      29: ifeq          87
      32: aload_0
      33: aload_2
      34: invokevirtual #32                 // Method remove:(Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;)V
      37: goto          87
      40: aload_0
      41: getfield      #23                 // Field error:Ljava/lang/Throwable;
      44: astore_3
      45: aload_3
      46: ifnull        59
      49: aload_1
      50: aload_3
      51: invokeinterface #24,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      56: goto          87
      59: aload_0
      60: getfield      #17                 // Field value:Ljava/lang/Object;
      63: astore        4
      65: aload         4
      67: ifnonnull     79
      70: aload_1
      71: invokeinterface #26,  1           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onComplete:()V
      76: goto          87
      79: aload_1
      80: aload         4
      82: invokeinterface #21,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSuccess:(Ljava/lang/Object;)V
      87: return

  boolean add(io.reactivex.rxjava3.subjects.MaybeSubject$MaybeDisposable<T>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #19                 // class "[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;"
      10: astore_2
      11: aload_2
      12: getstatic     #12                 // Field TERMINATED:[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;
      15: if_acmpne     20
      18: iconst_0
      19: ireturn
      20: aload_2
      21: arraylength
      22: istore_3
      23: iload_3
      24: iconst_1
      25: iadd
      26: anewarray     #27                 // class io/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable
      29: astore        4
      31: aload_2
      32: iconst_0
      33: aload         4
      35: iconst_0
      36: iload_3
      37: invokestatic  #33                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      40: aload         4
      42: iload_3
      43: aload_1
      44: aastore
      45: aload_0
      46: getfield      #10                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
      49: aload_2
      50: aload         4
      52: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      55: ifeq          60
      58: iconst_1
      59: ireturn
      60: goto          0

  void remove(io.reactivex.rxjava3.subjects.MaybeSubject$MaybeDisposable<T>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #19                 // class "[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;"
      10: astore_2
      11: aload_2
      12: arraylength
      13: istore_3
      14: iload_3
      15: ifne          19
      18: return
      19: iconst_m1
      20: istore        4
      22: iconst_0
      23: istore        5
      25: iload         5
      27: iload_3
      28: if_icmpge     52
      31: aload_2
      32: iload         5
      34: aaload
      35: aload_1
      36: if_acmpne     46
      39: iload         5
      41: istore        4
      43: goto          52
      46: iinc          5, 1
      49: goto          25
      52: iload         4
      54: ifge          58
      57: return
      58: iload_3
      59: iconst_1
      60: if_icmpne     71
      63: getstatic     #8                  // Field EMPTY:[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;
      66: astore        5
      68: goto          107
      71: iload_3
      72: iconst_1
      73: isub
      74: anewarray     #27                 // class io/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable
      77: astore        5
      79: aload_2
      80: iconst_0
      81: aload         5
      83: iconst_0
      84: iload         4
      86: invokestatic  #33                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      89: aload_2
      90: iload         4
      92: iconst_1
      93: iadd
      94: aload         5
      96: iload         4
      98: iload_3
      99: iload         4
     101: isub
     102: iconst_1
     103: isub
     104: invokestatic  #33                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     107: aload_0
     108: getfield      #10                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
     111: aload_2
     112: aload         5
     114: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     117: ifeq          121
     120: return
     121: goto          0

  public T getValue();
    Code:
       0: aload_0
       1: getfield      #10                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #12                 // Field TERMINATED:[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;
      10: if_acmpne     18
      13: aload_0
      14: getfield      #17                 // Field value:Ljava/lang/Object;
      17: areturn
      18: aconst_null
      19: areturn

  public boolean hasValue();
    Code:
       0: aload_0
       1: getfield      #10                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #12                 // Field TERMINATED:[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;
      10: if_acmpne     24
      13: aload_0
      14: getfield      #17                 // Field value:Ljava/lang/Object;
      17: ifnull        24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public java.lang.Throwable getThrowable();
    Code:
       0: aload_0
       1: getfield      #10                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #12                 // Field TERMINATED:[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;
      10: if_acmpne     18
      13: aload_0
      14: getfield      #23                 // Field error:Ljava/lang/Throwable;
      17: areturn
      18: aconst_null
      19: areturn

  public boolean hasThrowable();
    Code:
       0: aload_0
       1: getfield      #10                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #12                 // Field TERMINATED:[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;
      10: if_acmpne     24
      13: aload_0
      14: getfield      #23                 // Field error:Ljava/lang/Throwable;
      17: ifnull        24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean hasComplete();
    Code:
       0: aload_0
       1: getfield      #10                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #12                 // Field TERMINATED:[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;
      10: if_acmpne     31
      13: aload_0
      14: getfield      #17                 // Field value:Ljava/lang/Object;
      17: ifnonnull     31
      20: aload_0
      21: getfield      #23                 // Field error:Ljava/lang/Throwable;
      24: ifnonnull     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public boolean hasObservers();
    Code:
       0: aload_0
       1: getfield      #10                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #19                 // class "[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;"
      10: arraylength
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  int observerCount();
    Code:
       0: aload_0
       1: getfield      #10                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #19                 // class "[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;"
      10: arraylength
      11: ireturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #27                 // class io/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable
       4: putstatic     #8                  // Field EMPTY:[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;
       7: iconst_0
       8: anewarray     #27                 // class io/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable
      11: putstatic     #12                 // Field TERMINATED:[Lio/reactivex/rxjava3/subjects/MaybeSubject$MaybeDisposable;
      14: return
}
