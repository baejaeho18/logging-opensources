Compiled from "ReplaySubject.java"
final class io.reactivex.rxjava3.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer<T> extends java.util.concurrent.atomic.AtomicReference<java.lang.Object> implements io.reactivex.rxjava3.subjects.ReplaySubject$ReplayBuffer<T> {
  private static final long serialVersionUID;

  final int maxSize;

  final long maxAge;

  final java.util.concurrent.TimeUnit unit;

  final io.reactivex.rxjava3.core.Scheduler scheduler;

  int size;

  volatile io.reactivex.rxjava3.subjects.ReplaySubject$TimedNode<java.lang.Object> head;

  io.reactivex.rxjava3.subjects.ReplaySubject$TimedNode<java.lang.Object> tail;

  volatile boolean done;

  io.reactivex.rxjava3.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer(int, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field maxSize:I
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field maxAge:J
      14: aload_0
      15: aload         4
      17: putfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      20: aload_0
      21: aload         5
      23: putfield      #5                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      26: new           #6                  // class io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode
      29: dup
      30: aconst_null
      31: lconst_0
      32: invokespecial #7                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode."<init>":(Ljava/lang/Object;J)V
      35: astore        6
      37: aload_0
      38: aload         6
      40: putfield      #8                  // Field tail:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
      43: aload_0
      44: aload         6
      46: putfield      #9                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
      49: return

  void trim();
    Code:
       0: aload_0
       1: getfield      #10                 // Field size:I
       4: aload_0
       5: getfield      #2                  // Field maxSize:I
       8: if_icmple     37
      11: aload_0
      12: dup
      13: getfield      #10                 // Field size:I
      16: iconst_1
      17: isub
      18: putfield      #10                 // Field size:I
      21: aload_0
      22: getfield      #9                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
      25: astore_1
      26: aload_0
      27: aload_1
      28: invokevirtual #11                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.get:()Ljava/lang/Object;
      31: checkcast     #6                  // class io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode
      34: putfield      #9                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
      37: aload_0
      38: getfield      #5                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      41: aload_0
      42: getfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      45: invokevirtual #12                 // Method io/reactivex/rxjava3/core/Scheduler.now:(Ljava/util/concurrent/TimeUnit;)J
      48: aload_0
      49: getfield      #3                  // Field maxAge:J
      52: lsub
      53: lstore_1
      54: aload_0
      55: getfield      #9                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
      58: astore_3
      59: aload_0
      60: getfield      #10                 // Field size:I
      63: iconst_1
      64: if_icmpgt     75
      67: aload_0
      68: aload_3
      69: putfield      #9                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
      72: goto          118
      75: aload_3
      76: invokevirtual #11                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.get:()Ljava/lang/Object;
      79: checkcast     #6                  // class io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode
      82: astore        4
      84: aload         4
      86: getfield      #13                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.time:J
      89: lload_1
      90: lcmp
      91: ifle          102
      94: aload_0
      95: aload_3
      96: putfield      #9                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
      99: goto          118
     102: aload         4
     104: astore_3
     105: aload_0
     106: dup
     107: getfield      #10                 // Field size:I
     110: iconst_1
     111: isub
     112: putfield      #10                 // Field size:I
     115: goto          59
     118: return

  void trimFinal();
    Code:
       0: aload_0
       1: getfield      #5                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
       4: aload_0
       5: getfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #12                 // Method io/reactivex/rxjava3/core/Scheduler.now:(Ljava/util/concurrent/TimeUnit;)J
      11: aload_0
      12: getfield      #3                  // Field maxAge:J
      15: lsub
      16: lstore_1
      17: aload_0
      18: getfield      #9                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
      21: astore_3
      22: aload_3
      23: invokevirtual #11                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.get:()Ljava/lang/Object;
      26: checkcast     #6                  // class io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode
      29: astore        4
      31: aload         4
      33: invokevirtual #11                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.get:()Ljava/lang/Object;
      36: ifnonnull     83
      39: aload_3
      40: getfield      #14                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.value:Ljava/lang/Object;
      43: ifnull        75
      46: new           #6                  // class io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode
      49: dup
      50: aconst_null
      51: lconst_0
      52: invokespecial #7                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode."<init>":(Ljava/lang/Object;J)V
      55: astore        5
      57: aload         5
      59: aload_3
      60: invokevirtual #11                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.get:()Ljava/lang/Object;
      63: invokevirtual #15                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.lazySet:(Ljava/lang/Object;)V
      66: aload_0
      67: aload         5
      69: putfield      #9                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
      72: goto          143
      75: aload_0
      76: aload_3
      77: putfield      #9                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
      80: goto          143
      83: aload         4
      85: getfield      #13                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.time:J
      88: lload_1
      89: lcmp
      90: ifle          137
      93: aload_3
      94: getfield      #14                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.value:Ljava/lang/Object;
      97: ifnull        129
     100: new           #6                  // class io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode
     103: dup
     104: aconst_null
     105: lconst_0
     106: invokespecial #7                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode."<init>":(Ljava/lang/Object;J)V
     109: astore        5
     111: aload         5
     113: aload_3
     114: invokevirtual #11                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.get:()Ljava/lang/Object;
     117: invokevirtual #15                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.lazySet:(Ljava/lang/Object;)V
     120: aload_0
     121: aload         5
     123: putfield      #9                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
     126: goto          143
     129: aload_0
     130: aload_3
     131: putfield      #9                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
     134: goto          143
     137: aload         4
     139: astore_3
     140: goto          22
     143: return

  public void add(T);
    Code:
       0: new           #6                  // class io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #5                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
       9: aload_0
      10: getfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      13: invokevirtual #12                 // Method io/reactivex/rxjava3/core/Scheduler.now:(Ljava/util/concurrent/TimeUnit;)J
      16: invokespecial #7                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode."<init>":(Ljava/lang/Object;J)V
      19: astore_2
      20: aload_0
      21: getfield      #8                  // Field tail:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
      24: astore_3
      25: aload_0
      26: aload_2
      27: putfield      #8                  // Field tail:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
      30: aload_0
      31: dup
      32: getfield      #10                 // Field size:I
      35: iconst_1
      36: iadd
      37: putfield      #10                 // Field size:I
      40: aload_3
      41: aload_2
      42: invokevirtual #16                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.set:(Ljava/lang/Object;)V
      45: aload_0
      46: invokevirtual #17                 // Method trim:()V
      49: return

  public void addFinal(java.lang.Object);
    Code:
       0: new           #6                  // class io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode
       3: dup
       4: aload_1
       5: ldc2_w        #19                 // long 9223372036854775807l
       8: invokespecial #7                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode."<init>":(Ljava/lang/Object;J)V
      11: astore_2
      12: aload_0
      13: getfield      #8                  // Field tail:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
      16: astore_3
      17: aload_0
      18: aload_2
      19: putfield      #8                  // Field tail:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
      22: aload_0
      23: dup
      24: getfield      #10                 // Field size:I
      27: iconst_1
      28: iadd
      29: putfield      #10                 // Field size:I
      32: aload_3
      33: aload_2
      34: invokevirtual #15                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.lazySet:(Ljava/lang/Object;)V
      37: aload_0
      38: invokevirtual #21                 // Method trimFinal:()V
      41: aload_0
      42: iconst_1
      43: putfield      #22                 // Field done:Z
      46: return

  public void trimHead();
    Code:
       0: aload_0
       1: getfield      #9                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
       4: astore_1
       5: aload_1
       6: getfield      #14                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.value:Ljava/lang/Object;
       9: ifnull        35
      12: new           #6                  // class io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode
      15: dup
      16: aconst_null
      17: lconst_0
      18: invokespecial #7                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode."<init>":(Ljava/lang/Object;J)V
      21: astore_2
      22: aload_2
      23: aload_1
      24: invokevirtual #11                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.get:()Ljava/lang/Object;
      27: invokevirtual #15                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.lazySet:(Ljava/lang/Object;)V
      30: aload_0
      31: aload_2
      32: putfield      #9                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
      35: return

  public T getValue();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #9                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
       6: astore_2
       7: aload_2
       8: invokevirtual #11                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.get:()Ljava/lang/Object;
      11: checkcast     #6                  // class io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode
      14: astore_3
      15: aload_3
      16: ifnonnull     22
      19: goto          29
      22: aload_2
      23: astore_1
      24: aload_3
      25: astore_2
      26: goto          7
      29: aload_0
      30: getfield      #5                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      33: aload_0
      34: getfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      37: invokevirtual #12                 // Method io/reactivex/rxjava3/core/Scheduler.now:(Ljava/util/concurrent/TimeUnit;)J
      40: aload_0
      41: getfield      #3                  // Field maxAge:J
      44: lsub
      45: lstore_3
      46: aload_2
      47: getfield      #13                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.time:J
      50: lload_3
      51: lcmp
      52: ifge          57
      55: aconst_null
      56: areturn
      57: aload_2
      58: getfield      #14                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.value:Ljava/lang/Object;
      61: astore        5
      63: aload         5
      65: ifnonnull     70
      68: aconst_null
      69: areturn
      70: aload         5
      72: invokestatic  #23                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.isComplete:(Ljava/lang/Object;)Z
      75: ifne          86
      78: aload         5
      80: invokestatic  #24                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.isError:(Ljava/lang/Object;)Z
      83: ifeq          91
      86: aload_1
      87: getfield      #14                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.value:Ljava/lang/Object;
      90: areturn
      91: aload         5
      93: areturn

  io.reactivex.rxjava3.subjects.ReplaySubject$TimedNode<java.lang.Object> getHead();
    Code:
       0: aload_0
       1: getfield      #9                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
       4: astore_1
       5: aload_0
       6: getfield      #5                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
       9: aload_0
      10: getfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      13: invokevirtual #12                 // Method io/reactivex/rxjava3/core/Scheduler.now:(Ljava/util/concurrent/TimeUnit;)J
      16: aload_0
      17: getfield      #3                  // Field maxAge:J
      20: lsub
      21: lstore_2
      22: aload_1
      23: invokevirtual #11                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.get:()Ljava/lang/Object;
      26: checkcast     #6                  // class io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode
      29: astore        4
      31: aload         4
      33: ifnull        68
      36: aload         4
      38: getfield      #13                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.time:J
      41: lstore        5
      43: lload         5
      45: lload_2
      46: lcmp
      47: ifle          53
      50: goto          68
      53: aload         4
      55: astore_1
      56: aload_1
      57: invokevirtual #11                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.get:()Ljava/lang/Object;
      60: checkcast     #6                  // class io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode
      63: astore        4
      65: goto          31
      68: aload_1
      69: areturn

  public T[] getValues(T[]);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getHead:()Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #26                 // Method size:(Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;)I
      10: istore_3
      11: iload_3
      12: ifne          27
      15: aload_1
      16: arraylength
      17: ifeq          97
      20: aload_1
      21: iconst_0
      22: aconst_null
      23: aastore
      24: goto          97
      27: aload_1
      28: arraylength
      29: iload_3
      30: if_icmpge     51
      33: aload_1
      34: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      37: invokevirtual #28                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      40: iload_3
      41: invokestatic  #29                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      44: checkcast     #30                 // class "[Ljava/lang/Object;"
      47: checkcast     #30                 // class "[Ljava/lang/Object;"
      50: astore_1
      51: iconst_0
      52: istore        4
      54: iload         4
      56: iload_3
      57: if_icmpeq     87
      60: aload_2
      61: invokevirtual #11                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.get:()Ljava/lang/Object;
      64: checkcast     #6                  // class io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode
      67: astore        5
      69: aload_1
      70: iload         4
      72: aload         5
      74: getfield      #14                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.value:Ljava/lang/Object;
      77: aastore
      78: iinc          4, 1
      81: aload         5
      83: astore_2
      84: goto          54
      87: aload_1
      88: arraylength
      89: iload_3
      90: if_icmple     97
      93: aload_1
      94: iload_3
      95: aconst_null
      96: aastore
      97: aload_1
      98: areturn

  public void replay(io.reactivex.rxjava3.subjects.ReplaySubject$ReplayDisposable<T>);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.getAndIncrement:()I
       4: ifeq          8
       7: return
       8: iconst_1
       9: istore_2
      10: aload_1
      11: getfield      #32                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.downstream:Lio/reactivex/rxjava3/core/Observer;
      14: astore_3
      15: aload_1
      16: getfield      #33                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.index:Ljava/lang/Object;
      19: checkcast     #6                  // class io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode
      22: astore        4
      24: aload         4
      26: ifnonnull     35
      29: aload_0
      30: invokevirtual #25                 // Method getHead:()Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
      33: astore        4
      35: aload_1
      36: getfield      #34                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.cancelled:Z
      39: ifeq          48
      42: aload_1
      43: aconst_null
      44: putfield      #33                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.index:Ljava/lang/Object;
      47: return
      48: aload         4
      50: invokevirtual #11                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.get:()Ljava/lang/Object;
      53: checkcast     #6                  // class io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode
      56: astore        5
      58: aload         5
      60: ifnonnull     66
      63: goto          142
      66: aload         5
      68: getfield      #14                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.value:Ljava/lang/Object;
      71: astore        6
      73: aload_0
      74: getfield      #22                 // Field done:Z
      77: ifeq          127
      80: aload         5
      82: invokevirtual #11                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.get:()Ljava/lang/Object;
      85: ifnonnull     127
      88: aload         6
      90: invokestatic  #23                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.isComplete:(Ljava/lang/Object;)Z
      93: ifeq          105
      96: aload_3
      97: invokeinterface #35,  1           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
     102: goto          116
     105: aload_3
     106: aload         6
     108: invokestatic  #36                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;
     111: invokeinterface #37,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
     116: aload_1
     117: aconst_null
     118: putfield      #33                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.index:Ljava/lang/Object;
     121: aload_1
     122: iconst_1
     123: putfield      #34                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.cancelled:Z
     126: return
     127: aload_3
     128: aload         6
     130: invokeinterface #38,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
     135: aload         5
     137: astore        4
     139: goto          35
     142: aload_1
     143: aload         4
     145: putfield      #33                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.index:Ljava/lang/Object;
     148: aload_1
     149: iload_2
     150: ineg
     151: invokevirtual #39                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.addAndGet:(I)I
     154: istore_2
     155: iload_2
     156: ifne          35
     159: goto          162
     162: return

  public int size();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #25                 // Method getHead:()Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;
       5: invokevirtual #26                 // Method size:(Lio/reactivex/rxjava3/subjects/ReplaySubject$TimedNode;)I
       8: ireturn

  int size(io.reactivex.rxjava3.subjects.ReplaySubject$TimedNode<java.lang.Object>);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: ldc           #41                 // int 2147483647
       5: if_icmpeq     56
       8: aload_1
       9: invokevirtual #11                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.get:()Ljava/lang/Object;
      12: checkcast     #6                  // class io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode
      15: astore_3
      16: aload_3
      17: ifnonnull     48
      20: aload_1
      21: getfield      #14                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$TimedNode.value:Ljava/lang/Object;
      24: astore        4
      26: aload         4
      28: invokestatic  #23                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.isComplete:(Ljava/lang/Object;)Z
      31: ifne          42
      34: aload         4
      36: invokestatic  #24                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.isError:(Ljava/lang/Object;)Z
      39: ifeq          56
      42: iinc          2, -1
      45: goto          56
      48: iinc          2, 1
      51: aload_3
      52: astore_1
      53: goto          2
      56: iload_2
      57: ireturn
}
