Compiled from "ReplaySubject.java"
final class io.reactivex.rxjava3.subjects.ReplaySubject$SizeBoundReplayBuffer<T> extends java.util.concurrent.atomic.AtomicReference<java.lang.Object> implements io.reactivex.rxjava3.subjects.ReplaySubject$ReplayBuffer<T> {
  private static final long serialVersionUID;

  final int maxSize;

  int size;

  volatile io.reactivex.rxjava3.subjects.ReplaySubject$Node<java.lang.Object> head;

  io.reactivex.rxjava3.subjects.ReplaySubject$Node<java.lang.Object> tail;

  volatile boolean done;

  io.reactivex.rxjava3.subjects.ReplaySubject$SizeBoundReplayBuffer(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field maxSize:I
       9: new           #3                  // class io/reactivex/rxjava3/subjects/ReplaySubject$Node
      12: dup
      13: aconst_null
      14: invokespecial #4                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$Node."<init>":(Ljava/lang/Object;)V
      17: astore_2
      18: aload_0
      19: aload_2
      20: putfield      #5                  // Field tail:Lio/reactivex/rxjava3/subjects/ReplaySubject$Node;
      23: aload_0
      24: aload_2
      25: putfield      #6                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$Node;
      28: return

  void trim();
    Code:
       0: aload_0
       1: getfield      #7                  // Field size:I
       4: aload_0
       5: getfield      #2                  // Field maxSize:I
       8: if_icmple     37
      11: aload_0
      12: dup
      13: getfield      #7                  // Field size:I
      16: iconst_1
      17: isub
      18: putfield      #7                  // Field size:I
      21: aload_0
      22: getfield      #6                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$Node;
      25: astore_1
      26: aload_0
      27: aload_1
      28: invokevirtual #8                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$Node.get:()Ljava/lang/Object;
      31: checkcast     #3                  // class io/reactivex/rxjava3/subjects/ReplaySubject$Node
      34: putfield      #6                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$Node;
      37: return

  public void add(T);
    Code:
       0: new           #3                  // class io/reactivex/rxjava3/subjects/ReplaySubject$Node
       3: dup
       4: aload_1
       5: invokespecial #4                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$Node."<init>":(Ljava/lang/Object;)V
       8: astore_2
       9: aload_0
      10: getfield      #5                  // Field tail:Lio/reactivex/rxjava3/subjects/ReplaySubject$Node;
      13: astore_3
      14: aload_0
      15: aload_2
      16: putfield      #5                  // Field tail:Lio/reactivex/rxjava3/subjects/ReplaySubject$Node;
      19: aload_0
      20: dup
      21: getfield      #7                  // Field size:I
      24: iconst_1
      25: iadd
      26: putfield      #7                  // Field size:I
      29: aload_3
      30: aload_2
      31: invokevirtual #9                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$Node.set:(Ljava/lang/Object;)V
      34: aload_0
      35: invokevirtual #10                 // Method trim:()V
      38: return

  public void addFinal(java.lang.Object);
    Code:
       0: new           #3                  // class io/reactivex/rxjava3/subjects/ReplaySubject$Node
       3: dup
       4: aload_1
       5: invokespecial #4                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$Node."<init>":(Ljava/lang/Object;)V
       8: astore_2
       9: aload_0
      10: getfield      #5                  // Field tail:Lio/reactivex/rxjava3/subjects/ReplaySubject$Node;
      13: astore_3
      14: aload_0
      15: aload_2
      16: putfield      #5                  // Field tail:Lio/reactivex/rxjava3/subjects/ReplaySubject$Node;
      19: aload_0
      20: dup
      21: getfield      #7                  // Field size:I
      24: iconst_1
      25: iadd
      26: putfield      #7                  // Field size:I
      29: aload_3
      30: aload_2
      31: invokevirtual #11                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$Node.lazySet:(Ljava/lang/Object;)V
      34: aload_0
      35: invokevirtual #12                 // Method trimHead:()V
      38: aload_0
      39: iconst_1
      40: putfield      #13                 // Field done:Z
      43: return

  public void trimHead();
    Code:
       0: aload_0
       1: getfield      #6                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$Node;
       4: astore_1
       5: aload_1
       6: getfield      #14                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$Node.value:Ljava/lang/Object;
       9: ifnull        34
      12: new           #3                  // class io/reactivex/rxjava3/subjects/ReplaySubject$Node
      15: dup
      16: aconst_null
      17: invokespecial #4                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$Node."<init>":(Ljava/lang/Object;)V
      20: astore_2
      21: aload_2
      22: aload_1
      23: invokevirtual #8                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$Node.get:()Ljava/lang/Object;
      26: invokevirtual #11                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$Node.lazySet:(Ljava/lang/Object;)V
      29: aload_0
      30: aload_2
      31: putfield      #6                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$Node;
      34: return

  public T getValue();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #6                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$Node;
       6: astore_2
       7: aload_2
       8: invokevirtual #8                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$Node.get:()Ljava/lang/Object;
      11: checkcast     #3                  // class io/reactivex/rxjava3/subjects/ReplaySubject$Node
      14: astore_3
      15: aload_3
      16: ifnonnull     22
      19: goto          29
      22: aload_2
      23: astore_1
      24: aload_3
      25: astore_2
      26: goto          7
      29: aload_2
      30: getfield      #14                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$Node.value:Ljava/lang/Object;
      33: astore_3
      34: aload_3
      35: ifnonnull     40
      38: aconst_null
      39: areturn
      40: aload_3
      41: invokestatic  #15                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.isComplete:(Ljava/lang/Object;)Z
      44: ifne          54
      47: aload_3
      48: invokestatic  #16                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.isError:(Ljava/lang/Object;)Z
      51: ifeq          59
      54: aload_1
      55: getfield      #14                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$Node.value:Ljava/lang/Object;
      58: areturn
      59: aload_3
      60: areturn

  public T[] getValues(T[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$Node;
       4: astore_2
       5: aload_0
       6: invokevirtual #17                 // Method size:()I
       9: istore_3
      10: iload_3
      11: ifne          26
      14: aload_1
      15: arraylength
      16: ifeq          96
      19: aload_1
      20: iconst_0
      21: aconst_null
      22: aastore
      23: goto          96
      26: aload_1
      27: arraylength
      28: iload_3
      29: if_icmpge     50
      32: aload_1
      33: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      36: invokevirtual #19                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      39: iload_3
      40: invokestatic  #20                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      43: checkcast     #21                 // class "[Ljava/lang/Object;"
      46: checkcast     #21                 // class "[Ljava/lang/Object;"
      49: astore_1
      50: iconst_0
      51: istore        4
      53: iload         4
      55: iload_3
      56: if_icmpeq     86
      59: aload_2
      60: invokevirtual #8                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$Node.get:()Ljava/lang/Object;
      63: checkcast     #3                  // class io/reactivex/rxjava3/subjects/ReplaySubject$Node
      66: astore        5
      68: aload_1
      69: iload         4
      71: aload         5
      73: getfield      #14                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$Node.value:Ljava/lang/Object;
      76: aastore
      77: iinc          4, 1
      80: aload         5
      82: astore_2
      83: goto          53
      86: aload_1
      87: arraylength
      88: iload_3
      89: if_icmple     96
      92: aload_1
      93: iload_3
      94: aconst_null
      95: aastore
      96: aload_1
      97: areturn

  public void replay(io.reactivex.rxjava3.subjects.ReplaySubject$ReplayDisposable<T>);
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.getAndIncrement:()I
       4: ifeq          8
       7: return
       8: iconst_1
       9: istore_2
      10: aload_1
      11: getfield      #23                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.downstream:Lio/reactivex/rxjava3/core/Observer;
      14: astore_3
      15: aload_1
      16: getfield      #24                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.index:Ljava/lang/Object;
      19: checkcast     #3                  // class io/reactivex/rxjava3/subjects/ReplaySubject$Node
      22: astore        4
      24: aload         4
      26: ifnonnull     35
      29: aload_0
      30: getfield      #6                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$Node;
      33: astore        4
      35: aload_1
      36: getfield      #25                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.cancelled:Z
      39: ifeq          48
      42: aload_1
      43: aconst_null
      44: putfield      #24                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.index:Ljava/lang/Object;
      47: return
      48: aload         4
      50: invokevirtual #8                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$Node.get:()Ljava/lang/Object;
      53: checkcast     #3                  // class io/reactivex/rxjava3/subjects/ReplaySubject$Node
      56: astore        5
      58: aload         5
      60: ifnonnull     66
      63: goto          142
      66: aload         5
      68: getfield      #14                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$Node.value:Ljava/lang/Object;
      71: astore        6
      73: aload_0
      74: getfield      #13                 // Field done:Z
      77: ifeq          127
      80: aload         5
      82: invokevirtual #8                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$Node.get:()Ljava/lang/Object;
      85: ifnonnull     127
      88: aload         6
      90: invokestatic  #15                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.isComplete:(Ljava/lang/Object;)Z
      93: ifeq          105
      96: aload_3
      97: invokeinterface #26,  1           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
     102: goto          116
     105: aload_3
     106: aload         6
     108: invokestatic  #27                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.getError:(Ljava/lang/Object;)Ljava/lang/Throwable;
     111: invokeinterface #28,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
     116: aload_1
     117: aconst_null
     118: putfield      #24                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.index:Ljava/lang/Object;
     121: aload_1
     122: iconst_1
     123: putfield      #25                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.cancelled:Z
     126: return
     127: aload_3
     128: aload         6
     130: invokeinterface #29,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
     135: aload         5
     137: astore        4
     139: goto          35
     142: aload         4
     144: invokevirtual #8                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$Node.get:()Ljava/lang/Object;
     147: ifnull        153
     150: goto          35
     153: aload_1
     154: aload         4
     156: putfield      #24                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.index:Ljava/lang/Object;
     159: aload_1
     160: iload_2
     161: ineg
     162: invokevirtual #30                 // Method io/reactivex/rxjava3/subjects/ReplaySubject$ReplayDisposable.addAndGet:(I)I
     165: istore_2
     166: iload_2
     167: ifne          35
     170: goto          173
     173: return

  public int size();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #6                  // Field head:Lio/reactivex/rxjava3/subjects/ReplaySubject$Node;
       6: astore_2
       7: iload_1
       8: ldc           #32                 // int 2147483647
      10: if_icmpeq     61
      13: aload_2
      14: invokevirtual #8                  // Method io/reactivex/rxjava3/subjects/ReplaySubject$Node.get:()Ljava/lang/Object;
      17: checkcast     #3                  // class io/reactivex/rxjava3/subjects/ReplaySubject$Node
      20: astore_3
      21: aload_3
      22: ifnonnull     53
      25: aload_2
      26: getfield      #14                 // Field io/reactivex/rxjava3/subjects/ReplaySubject$Node.value:Ljava/lang/Object;
      29: astore        4
      31: aload         4
      33: invokestatic  #15                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.isComplete:(Ljava/lang/Object;)Z
      36: ifne          47
      39: aload         4
      41: invokestatic  #16                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.isError:(Ljava/lang/Object;)Z
      44: ifeq          61
      47: iinc          1, -1
      50: goto          61
      53: iinc          1, 1
      56: aload_3
      57: astore_2
      58: goto          7
      61: iload_1
      62: ireturn
}
