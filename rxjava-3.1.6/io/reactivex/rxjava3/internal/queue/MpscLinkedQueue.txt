Compiled from "MpscLinkedQueue.java"
public final class io.reactivex.rxjava3.internal.queue.MpscLinkedQueue<T> implements io.reactivex.rxjava3.operators.SimplePlainQueue<T> {
  private final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$LinkedQueueNode<T>> producerNode;

  private final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$LinkedQueueNode<T>> consumerNode;

  public io.reactivex.rxjava3.internal.queue.MpscLinkedQueue();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field producerNode:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/atomic/AtomicReference
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      23: putfield      #5                  // Field consumerNode:Ljava/util/concurrent/atomic/AtomicReference;
      26: new           #6                  // class io/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode
      29: dup
      30: invokespecial #7                  // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode."<init>":()V
      33: astore_1
      34: aload_0
      35: aload_1
      36: invokevirtual #8                  // Method spConsumerNode:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode;)V
      39: aload_0
      40: aload_1
      41: invokevirtual #9                  // Method xchgProducerNode:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode;)Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode;
      44: pop
      45: return

  public boolean offer(T);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     15
       5: new           #10                 // class java/lang/NullPointerException
       8: dup
       9: ldc           #11                 // String Null is not a valid element
      11: invokespecial #12                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: new           #6                  // class io/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode
      18: dup
      19: aload_1
      20: invokespecial #13                 // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode."<init>":(Ljava/lang/Object;)V
      23: astore_2
      24: aload_0
      25: aload_2
      26: invokevirtual #9                  // Method xchgProducerNode:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode;)Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode;
      29: astore_3
      30: aload_3
      31: aload_2
      32: invokevirtual #14                 // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode.soNext:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode;)V
      35: iconst_1
      36: ireturn

  public T poll();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method lpConsumerNode:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode;
       4: astore_1
       5: aload_1
       6: invokevirtual #16                 // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode.lvNext:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode;
       9: astore_2
      10: aload_2
      11: ifnull        26
      14: aload_2
      15: invokevirtual #17                 // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode.getAndNullValue:()Ljava/lang/Object;
      18: astore_3
      19: aload_0
      20: aload_2
      21: invokevirtual #8                  // Method spConsumerNode:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode;)V
      24: aload_3
      25: areturn
      26: aload_1
      27: aload_0
      28: invokevirtual #18                 // Method lvProducerNode:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode;
      31: if_acmpeq     58
      34: aload_1
      35: invokevirtual #16                 // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode.lvNext:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode;
      38: dup
      39: astore_2
      40: ifnonnull     46
      43: goto          34
      46: aload_2
      47: invokevirtual #17                 // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode.getAndNullValue:()Ljava/lang/Object;
      50: astore_3
      51: aload_0
      52: aload_2
      53: invokevirtual #8                  // Method spConsumerNode:(Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode;)V
      56: aload_3
      57: areturn
      58: aconst_null
      59: areturn

  public boolean offer(T, T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method offer:(Ljava/lang/Object;)Z
       5: pop
       6: aload_0
       7: aload_2
       8: invokevirtual #19                 // Method offer:(Ljava/lang/Object;)Z
      11: pop
      12: iconst_1
      13: ireturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method poll:()Ljava/lang/Object;
       4: ifnull        17
       7: aload_0
       8: invokevirtual #21                 // Method isEmpty:()Z
      11: ifne          17
      14: goto          0
      17: return

  io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$LinkedQueueNode<T> lvProducerNode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field producerNode:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #6                  // class io/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode
      10: areturn

  io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$LinkedQueueNode<T> xchgProducerNode(io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$LinkedQueueNode<T>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field producerNode:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #6                  // class io/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode
      11: areturn

  io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$LinkedQueueNode<T> lvConsumerNode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field consumerNode:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #6                  // class io/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode
      10: areturn

  io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$LinkedQueueNode<T> lpConsumerNode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field consumerNode:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #6                  // class io/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode
      10: areturn

  void spConsumerNode(io.reactivex.rxjava3.internal.queue.MpscLinkedQueue$LinkedQueueNode<T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field consumerNode:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
       8: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method lvConsumerNode:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode;
       4: aload_0
       5: invokevirtual #18                 // Method lvProducerNode:()Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue$LinkedQueueNode;
       8: if_acmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn
}
