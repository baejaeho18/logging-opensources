Compiled from "FlowableFromStream.java"
abstract class io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$AbstractStreamSubscription<T> extends java.util.concurrent.atomic.AtomicLong implements io.reactivex.rxjava3.operators.QueueSubscription<T> {
  private static final long serialVersionUID;

  java.util.Iterator<T> iterator;

  java.lang.AutoCloseable closeable;

  volatile boolean cancelled;

  boolean once;

  io.reactivex.rxjava3.internal.jdk8.FlowableFromStream$AbstractStreamSubscription(java.util.Iterator<T>, java.lang.AutoCloseable);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field iterator:Ljava/util/Iterator;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field closeable:Ljava/lang/AutoCloseable;
      14: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #4                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          22
       7: aload_0
       8: lload_1
       9: invokestatic  #5                  // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      12: lconst_0
      13: lcmp
      14: ifne          22
      17: aload_0
      18: lload_1
      19: invokevirtual #6                  // Method run:(J)V
      22: return

  abstract void run(long);

  public void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #7                  // Field cancelled:Z
       5: aload_0
       6: lconst_1
       7: invokevirtual #8                  // Method request:(J)V
      10: return

  public int requestFusion(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iand
       3: ifeq          15
       6: aload_0
       7: ldc2_w        #11                 // long 9223372036854775807l
      10: invokevirtual #13                 // Method lazySet:(J)V
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: ireturn

  public boolean offer(T);
    Code:
       0: new           #14                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #15                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean offer(T, T);
    Code:
       0: new           #14                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #15                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public T poll();
    Code:
       0: aload_0
       1: getfield      #2                  // Field iterator:Ljava/util/Iterator;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #16                 // Field once:Z
      13: ifne          24
      16: aload_0
      17: iconst_1
      18: putfield      #16                 // Field once:Z
      21: goto          42
      24: aload_0
      25: getfield      #2                  // Field iterator:Ljava/util/Iterator;
      28: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifne          42
      36: aload_0
      37: invokevirtual #18                 // Method clear:()V
      40: aconst_null
      41: areturn
      42: aload_0
      43: getfield      #2                  // Field iterator:Ljava/util/Iterator;
      46: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: ldc           #20                 // String The Stream\'s Iterator.next() returned a null value
      53: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      56: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field iterator:Ljava/util/Iterator;
       4: astore_1
       5: aload_1
       6: ifnull        31
       9: aload_0
      10: getfield      #16                 // Field once:Z
      13: ifeq          25
      16: aload_1
      17: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          27
      25: iconst_0
      26: ireturn
      27: aload_0
      28: invokevirtual #18                 // Method clear:()V
      31: iconst_1
      32: ireturn

  public void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #2                  // Field iterator:Ljava/util/Iterator;
       5: aload_0
       6: getfield      #3                  // Field closeable:Ljava/lang/AutoCloseable;
       9: astore_1
      10: aload_0
      11: aconst_null
      12: putfield      #3                  // Field closeable:Ljava/lang/AutoCloseable;
      15: aload_1
      16: ifnull        23
      19: aload_1
      20: invokestatic  #22                 // Method io/reactivex/rxjava3/internal/jdk8/FlowableFromStream.closeSafely:(Ljava/lang/AutoCloseable;)V
      23: return
}
