Compiled from "ParallelMapTryOptional.java"
public final class io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional<T, R> extends io.reactivex.rxjava3.parallel.ParallelFlowable<R> {
  final io.reactivex.rxjava3.parallel.ParallelFlowable<T> source;

  final io.reactivex.rxjava3.functions.Function<? super T, java.util.Optional<? extends R>> mapper;

  final io.reactivex.rxjava3.functions.BiFunction<? super java.lang.Long, ? super java.lang.Throwable, io.reactivex.rxjava3.parallel.ParallelFailureHandling> errorHandler;

  public io.reactivex.rxjava3.internal.jdk8.ParallelMapTryOptional(io.reactivex.rxjava3.parallel.ParallelFlowable<T>, io.reactivex.rxjava3.functions.Function<? super T, java.util.Optional<? extends R>>, io.reactivex.rxjava3.functions.BiFunction<? super java.lang.Long, ? super java.lang.Throwable, io.reactivex.rxjava3.parallel.ParallelFailureHandling>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/parallel/ParallelFlowable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lio/reactivex/rxjava3/parallel/ParallelFlowable;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field errorHandler:Lio/reactivex/rxjava3/functions/BiFunction;
      19: return

  public void subscribe(org.reactivestreams.Subscriber<? super R>[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method validate:([Lorg/reactivestreams/Subscriber;)Z
       5: ifne          9
       8: return
       9: aload_1
      10: arraylength
      11: istore_2
      12: iload_2
      13: anewarray     #6                  // class org/reactivestreams/Subscriber
      16: astore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_2
      23: if_icmpge     94
      26: aload_1
      27: iload         4
      29: aaload
      30: astore        5
      32: aload         5
      34: instanceof    #7                  // class io/reactivex/rxjava3/operators/ConditionalSubscriber
      37: ifeq          67
      40: aload_3
      41: iload         4
      43: new           #8                  // class io/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$ParallelMapTryConditionalSubscriber
      46: dup
      47: aload         5
      49: checkcast     #7                  // class io/reactivex/rxjava3/operators/ConditionalSubscriber
      52: aload_0
      53: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      56: aload_0
      57: getfield      #4                  // Field errorHandler:Lio/reactivex/rxjava3/functions/BiFunction;
      60: invokespecial #9                  // Method io/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$ParallelMapTryConditionalSubscriber."<init>":(Lio/reactivex/rxjava3/operators/ConditionalSubscriber;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V
      63: aastore
      64: goto          88
      67: aload_3
      68: iload         4
      70: new           #10                 // class io/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$ParallelMapTrySubscriber
      73: dup
      74: aload         5
      76: aload_0
      77: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      80: aload_0
      81: getfield      #4                  // Field errorHandler:Lio/reactivex/rxjava3/functions/BiFunction;
      84: invokespecial #11                 // Method io/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional$ParallelMapTrySubscriber."<init>":(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiFunction;)V
      87: aastore
      88: iinc          4, 1
      91: goto          20
      94: aload_0
      95: getfield      #2                  // Field source:Lio/reactivex/rxjava3/parallel/ParallelFlowable;
      98: aload_3
      99: invokevirtual #12                 // Method io/reactivex/rxjava3/parallel/ParallelFlowable.subscribe:([Lorg/reactivestreams/Subscriber;)V
     102: return

  public int parallelism();
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lio/reactivex/rxjava3/parallel/ParallelFlowable;
       4: invokevirtual #13                 // Method io/reactivex/rxjava3/parallel/ParallelFlowable.parallelism:()I
       7: ireturn
}
