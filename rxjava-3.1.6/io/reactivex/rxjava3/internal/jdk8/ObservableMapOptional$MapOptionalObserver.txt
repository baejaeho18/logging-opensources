Compiled from "ObservableMapOptional.java"
final class io.reactivex.rxjava3.internal.jdk8.ObservableMapOptional$MapOptionalObserver<T, R> extends io.reactivex.rxjava3.internal.observers.BasicFuseableObserver<T, R> {
  final io.reactivex.rxjava3.functions.Function<? super T, java.util.Optional<? extends R>> mapper;

  io.reactivex.rxjava3.internal.jdk8.ObservableMapOptional$MapOptionalObserver(io.reactivex.rxjava3.core.Observer<? super R>, io.reactivex.rxjava3.functions.Function<? super T, java.util.Optional<? extends R>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/observers/BasicFuseableObserver."<init>":(Lio/reactivex/rxjava3/core/Observer;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      10: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #4                  // Field sourceMode:I
      12: ifeq          26
      15: aload_0
      16: getfield      #5                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      19: aconst_null
      20: invokeinterface #6,  2            // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      25: return
      26: aload_0
      27: getfield      #2                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      30: aload_1
      31: invokeinterface #7,  2            // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: ldc           #8                  // String The mapper returned a null Optional
      38: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      41: checkcast     #10                 // class java/util/Optional
      44: astore_2
      45: goto          55
      48: astore_3
      49: aload_0
      50: aload_3
      51: invokevirtual #12                 // Method fail:(Ljava/lang/Throwable;)V
      54: return
      55: aload_2
      56: invokevirtual #13                 // Method java/util/Optional.isPresent:()Z
      59: ifeq          75
      62: aload_0
      63: getfield      #5                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      66: aload_2
      67: invokevirtual #14                 // Method java/util/Optional.get:()Ljava/lang/Object;
      70: invokeinterface #6,  2            // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      75: return
    Exception table:
       from    to  target type
          26    45    48   Class java/lang/Throwable

  public int requestFusion(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #15                 // Method transitiveBoundaryFusion:(I)I
       5: ireturn

  public R poll() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #16                 // Field qd:Lio/reactivex/rxjava3/operators/QueueDisposable;
       4: invokeinterface #17,  1           // InterfaceMethod io/reactivex/rxjava3/operators/QueueDisposable.poll:()Ljava/lang/Object;
       9: astore_1
      10: aload_1
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_0
      17: getfield      #2                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      20: aload_1
      21: invokeinterface #7,  2            // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: ldc           #8                  // String The mapper returned a null Optional
      28: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      31: checkcast     #10                 // class java/util/Optional
      34: astore_2
      35: aload_2
      36: invokevirtual #13                 // Method java/util/Optional.isPresent:()Z
      39: ifeq          47
      42: aload_2
      43: invokevirtual #14                 // Method java/util/Optional.get:()Ljava/lang/Object;
      46: areturn
      47: goto          0
}
