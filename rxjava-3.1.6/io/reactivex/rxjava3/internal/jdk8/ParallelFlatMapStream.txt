Compiled from "ParallelFlatMapStream.java"
public final class io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream<T, R> extends io.reactivex.rxjava3.parallel.ParallelFlowable<R> {
  final io.reactivex.rxjava3.parallel.ParallelFlowable<T> source;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends java.util.stream.Stream<? extends R>> mapper;

  final int prefetch;

  public io.reactivex.rxjava3.internal.jdk8.ParallelFlatMapStream(io.reactivex.rxjava3.parallel.ParallelFlowable<T>, io.reactivex.rxjava3.functions.Function<? super T, ? extends java.util.stream.Stream<? extends R>>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/parallel/ParallelFlowable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lio/reactivex/rxjava3/parallel/ParallelFlowable;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field prefetch:I
      19: return

  public int parallelism();
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lio/reactivex/rxjava3/parallel/ParallelFlowable;
       4: invokevirtual #5                  // Method io/reactivex/rxjava3/parallel/ParallelFlowable.parallelism:()I
       7: ireturn

  public void subscribe(org.reactivestreams.Subscriber<? super R>[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method validate:([Lorg/reactivestreams/Subscriber;)Z
       5: ifne          9
       8: return
       9: aload_1
      10: arraylength
      11: istore_2
      12: iload_2
      13: anewarray     #7                  // class org/reactivestreams/Subscriber
      16: astore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_2
      23: if_icmpge     51
      26: aload_3
      27: iload         4
      29: aload_1
      30: iload         4
      32: aaload
      33: aload_0
      34: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      37: aload_0
      38: getfield      #4                  // Field prefetch:I
      41: invokestatic  #8                  // Method io/reactivex/rxjava3/internal/jdk8/FlowableFlatMapStream.subscribe:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;I)Lorg/reactivestreams/Subscriber;
      44: aastore
      45: iinc          4, 1
      48: goto          20
      51: aload_0
      52: getfield      #2                  // Field source:Lio/reactivex/rxjava3/parallel/ParallelFlowable;
      55: aload_3
      56: invokevirtual #9                  // Method io/reactivex/rxjava3/parallel/ParallelFlowable.subscribe:([Lorg/reactivestreams/Subscriber;)V
      59: return
}
