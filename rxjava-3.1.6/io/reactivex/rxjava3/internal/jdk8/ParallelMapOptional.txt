Compiled from "ParallelMapOptional.java"
public final class io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional<T, R> extends io.reactivex.rxjava3.parallel.ParallelFlowable<R> {
  final io.reactivex.rxjava3.parallel.ParallelFlowable<T> source;

  final io.reactivex.rxjava3.functions.Function<? super T, java.util.Optional<? extends R>> mapper;

  public io.reactivex.rxjava3.internal.jdk8.ParallelMapOptional(io.reactivex.rxjava3.parallel.ParallelFlowable<T>, io.reactivex.rxjava3.functions.Function<? super T, java.util.Optional<? extends R>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/parallel/ParallelFlowable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lio/reactivex/rxjava3/parallel/ParallelFlowable;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      14: return

  public void subscribe(org.reactivestreams.Subscriber<? super R>[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method validate:([Lorg/reactivestreams/Subscriber;)Z
       5: ifne          9
       8: return
       9: aload_1
      10: arraylength
      11: istore_2
      12: iload_2
      13: anewarray     #5                  // class org/reactivestreams/Subscriber
      16: astore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_2
      23: if_icmpge     86
      26: aload_1
      27: iload         4
      29: aaload
      30: astore        5
      32: aload         5
      34: instanceof    #6                  // class io/reactivex/rxjava3/operators/ConditionalSubscriber
      37: ifeq          63
      40: aload_3
      41: iload         4
      43: new           #7                  // class io/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$ParallelMapConditionalSubscriber
      46: dup
      47: aload         5
      49: checkcast     #6                  // class io/reactivex/rxjava3/operators/ConditionalSubscriber
      52: aload_0
      53: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      56: invokespecial #8                  // Method io/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$ParallelMapConditionalSubscriber."<init>":(Lio/reactivex/rxjava3/operators/ConditionalSubscriber;Lio/reactivex/rxjava3/functions/Function;)V
      59: aastore
      60: goto          80
      63: aload_3
      64: iload         4
      66: new           #9                  // class io/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$ParallelMapSubscriber
      69: dup
      70: aload         5
      72: aload_0
      73: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      76: invokespecial #10                 // Method io/reactivex/rxjava3/internal/jdk8/ParallelMapOptional$ParallelMapSubscriber."<init>":(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)V
      79: aastore
      80: iinc          4, 1
      83: goto          20
      86: aload_0
      87: getfield      #2                  // Field source:Lio/reactivex/rxjava3/parallel/ParallelFlowable;
      90: aload_3
      91: invokevirtual #11                 // Method io/reactivex/rxjava3/parallel/ParallelFlowable.subscribe:([Lorg/reactivestreams/Subscriber;)V
      94: return

  public int parallelism();
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lio/reactivex/rxjava3/parallel/ParallelFlowable;
       4: invokevirtual #12                 // Method io/reactivex/rxjava3/parallel/ParallelFlowable.parallelism:()I
       7: ireturn
}
