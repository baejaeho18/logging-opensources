Compiled from "ParallelFlatMapIterable.java"
public final class io.reactivex.rxjava3.internal.operators.parallel.ParallelFlatMapIterable<T, R> extends io.reactivex.rxjava3.parallel.ParallelFlowable<R> {
  final io.reactivex.rxjava3.parallel.ParallelFlowable<T> source;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends java.lang.Iterable<? extends R>> mapper;

  final int prefetch;

  public io.reactivex.rxjava3.internal.operators.parallel.ParallelFlatMapIterable(io.reactivex.rxjava3.parallel.ParallelFlowable<T>, io.reactivex.rxjava3.functions.Function<? super T, ? extends java.lang.Iterable<? extends R>>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/parallel/ParallelFlowable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lio/reactivex/rxjava3/parallel/ParallelFlowable;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field prefetch:I
      19: return

  public int parallelism();
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lio/reactivex/rxjava3/parallel/ParallelFlowable;
       4: invokevirtual #5                  // Method io/reactivex/rxjava3/parallel/ParallelFlowable.parallelism:()I
       7: ireturn

  public void subscribe(org.reactivestreams.Subscriber<? super R>[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #6                  // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onSubscribe:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;[Lorg/reactivestreams/Subscriber;)[Lorg/reactivestreams/Subscriber;
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokevirtual #7                  // Method validate:([Lorg/reactivestreams/Subscriber;)Z
      11: ifne          15
      14: return
      15: aload_1
      16: arraylength
      17: istore_2
      18: iload_2
      19: anewarray     #8                  // class org/reactivestreams/Subscriber
      22: astore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: iload_2
      29: if_icmpge     57
      32: aload_3
      33: iload         4
      35: aload_1
      36: iload         4
      38: aaload
      39: aload_0
      40: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      43: aload_0
      44: getfield      #4                  // Field prefetch:I
      47: invokestatic  #9                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlattenIterable.subscribe:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;I)Lorg/reactivestreams/Subscriber;
      50: aastore
      51: iinc          4, 1
      54: goto          26
      57: aload_0
      58: getfield      #2                  // Field source:Lio/reactivex/rxjava3/parallel/ParallelFlowable;
      61: aload_3
      62: invokevirtual #10                 // Method io/reactivex/rxjava3/parallel/ParallelFlowable.subscribe:([Lorg/reactivestreams/Subscriber;)V
      65: return
}
