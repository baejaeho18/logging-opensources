Compiled from "ParallelFilterTry.java"
abstract class io.reactivex.rxjava3.internal.operators.parallel.ParallelFilterTry$BaseFilterSubscriber<T> implements io.reactivex.rxjava3.operators.ConditionalSubscriber<T>, org.reactivestreams.Subscription {
  final io.reactivex.rxjava3.functions.Predicate<? super T> predicate;

  final io.reactivex.rxjava3.functions.BiFunction<? super java.lang.Long, ? super java.lang.Throwable, io.reactivex.rxjava3.parallel.ParallelFailureHandling> errorHandler;

  org.reactivestreams.Subscription upstream;

  boolean done;

  io.reactivex.rxjava3.internal.operators.parallel.ParallelFilterTry$BaseFilterSubscriber(io.reactivex.rxjava3.functions.Predicate<? super T>, io.reactivex.rxjava3.functions.BiFunction<? super java.lang.Long, ? super java.lang.Throwable, io.reactivex.rxjava3.parallel.ParallelFailureHandling>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field predicate:Lio/reactivex/rxjava3/functions/Predicate;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field errorHandler:Lio/reactivex/rxjava3/functions/BiFunction;
      14: return

  public final void request(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #5,  3            // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public final void cancel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: invokeinterface #6,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return

  public final void onNext(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method tryOnNext:(Ljava/lang/Object;)Z
       5: ifne          25
       8: aload_0
       9: getfield      #8                  // Field done:Z
      12: ifne          25
      15: aload_0
      16: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
      19: lconst_1
      20: invokeinterface #5,  3            // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      25: return
}
