Compiled from "ParallelDoOnNextTry.java"
final class io.reactivex.rxjava3.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber<T> implements io.reactivex.rxjava3.operators.ConditionalSubscriber<T>, org.reactivestreams.Subscription {
  final io.reactivex.rxjava3.operators.ConditionalSubscriber<? super T> downstream;

  final io.reactivex.rxjava3.functions.Consumer<? super T> onNext;

  final io.reactivex.rxjava3.functions.BiFunction<? super java.lang.Long, ? super java.lang.Throwable, io.reactivex.rxjava3.parallel.ParallelFailureHandling> errorHandler;

  org.reactivestreams.Subscription upstream;

  boolean done;

  io.reactivex.rxjava3.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber(io.reactivex.rxjava3.operators.ConditionalSubscriber<? super T>, io.reactivex.rxjava3.functions.Consumer<? super T>, io.reactivex.rxjava3.functions.BiFunction<? super java.lang.Long, ? super java.lang.Throwable, io.reactivex.rxjava3.parallel.ParallelFailureHandling>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field onNext:Lio/reactivex/rxjava3/functions/Consumer;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field errorHandler:Lio/reactivex/rxjava3/functions/BiFunction;
      19: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #6,  3            // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: invokeinterface #7,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #5                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #8                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #5                  // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
      20: aload_0
      21: invokeinterface #9,  2            // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method tryOnNext:(Ljava/lang/Object;)Z
       5: ifne          25
       8: aload_0
       9: getfield      #11                 // Field done:Z
      12: ifne          25
      15: aload_0
      16: getfield      #5                  // Field upstream:Lorg/reactivestreams/Subscription;
      19: lconst_1
      20: invokeinterface #6,  3            // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      25: return

  public boolean tryOnNext(T);
    Code:
       0: aload_0
       1: getfield      #11                 // Field done:Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: lconst_0
      10: lstore_2
      11: aload_0
      12: getfield      #3                  // Field onNext:Lio/reactivex/rxjava3/functions/Consumer;
      15: aload_1
      16: invokeinterface #12,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Consumer.accept:(Ljava/lang/Object;)V
      21: goto          163
      24: astore        4
      26: aload         4
      28: invokestatic  #14                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      31: aload_0
      32: getfield      #4                  // Field errorHandler:Lio/reactivex/rxjava3/functions/BiFunction;
      35: lload_2
      36: lconst_1
      37: ladd
      38: dup2
      39: lstore_2
      40: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      43: aload         4
      45: invokeinterface #16,  3           // InterfaceMethod io/reactivex/rxjava3/functions/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: ldc           #17                 // String The errorHandler returned a null ParallelFailureHandling
      52: invokestatic  #18                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      55: checkcast     #19                 // class io/reactivex/rxjava3/parallel/ParallelFailureHandling
      58: astore        5
      60: goto          101
      63: astore        6
      65: aload         6
      67: invokestatic  #14                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      70: aload_0
      71: invokevirtual #20                 // Method cancel:()V
      74: aload_0
      75: new           #21                 // class io/reactivex/rxjava3/exceptions/CompositeException
      78: dup
      79: iconst_2
      80: anewarray     #22                 // class java/lang/Throwable
      83: dup
      84: iconst_0
      85: aload         4
      87: aastore
      88: dup
      89: iconst_1
      90: aload         6
      92: aastore
      93: invokespecial #23                 // Method io/reactivex/rxjava3/exceptions/CompositeException."<init>":([Ljava/lang/Throwable;)V
      96: invokevirtual #24                 // Method onError:(Ljava/lang/Throwable;)V
      99: iconst_0
     100: ireturn
     101: getstatic     #25                 // Field io/reactivex/rxjava3/internal/operators/parallel/ParallelDoOnNextTry$1.$SwitchMap$io$reactivex$rxjava3$parallel$ParallelFailureHandling:[I
     104: aload         5
     106: invokevirtual #26                 // Method io/reactivex/rxjava3/parallel/ParallelFailureHandling.ordinal:()I
     109: iaload
     110: tableswitch   { // 1 to 3
                     1: 136
                     2: 139
                     3: 141
               default: 151
          }
     136: goto          11
     139: iconst_0
     140: ireturn
     141: aload_0
     142: invokevirtual #20                 // Method cancel:()V
     145: aload_0
     146: invokevirtual #27                 // Method onComplete:()V
     149: iconst_0
     150: ireturn
     151: aload_0
     152: invokevirtual #20                 // Method cancel:()V
     155: aload_0
     156: aload         4
     158: invokevirtual #24                 // Method onError:(Ljava/lang/Throwable;)V
     161: iconst_0
     162: ireturn
     163: aload_0
     164: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
     167: aload_1
     168: invokeinterface #28,  2           // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.tryOnNext:(Ljava/lang/Object;)Z
     173: ireturn
    Exception table:
       from    to  target type
          11    21    24   Class java/lang/Throwable
          31    60    63   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #11                 // Field done:Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #29                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      11: return
      12: aload_0
      13: iconst_1
      14: putfield      #11                 // Field done:Z
      17: aload_0
      18: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
      21: aload_1
      22: invokeinterface #30,  2           // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.onError:(Ljava/lang/Throwable;)V
      27: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #11                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #11                 // Field done:Z
      13: aload_0
      14: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
      17: invokeinterface #31,  1           // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.onComplete:()V
      22: return
}
