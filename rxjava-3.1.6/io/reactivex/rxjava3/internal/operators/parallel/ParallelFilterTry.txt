Compiled from "ParallelFilterTry.java"
public final class io.reactivex.rxjava3.internal.operators.parallel.ParallelFilterTry<T> extends io.reactivex.rxjava3.parallel.ParallelFlowable<T> {
  final io.reactivex.rxjava3.parallel.ParallelFlowable<T> source;

  final io.reactivex.rxjava3.functions.Predicate<? super T> predicate;

  final io.reactivex.rxjava3.functions.BiFunction<? super java.lang.Long, ? super java.lang.Throwable, io.reactivex.rxjava3.parallel.ParallelFailureHandling> errorHandler;

  public io.reactivex.rxjava3.internal.operators.parallel.ParallelFilterTry(io.reactivex.rxjava3.parallel.ParallelFlowable<T>, io.reactivex.rxjava3.functions.Predicate<? super T>, io.reactivex.rxjava3.functions.BiFunction<? super java.lang.Long, ? super java.lang.Throwable, io.reactivex.rxjava3.parallel.ParallelFailureHandling>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/parallel/ParallelFlowable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lio/reactivex/rxjava3/parallel/ParallelFlowable;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field predicate:Lio/reactivex/rxjava3/functions/Predicate;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field errorHandler:Lio/reactivex/rxjava3/functions/BiFunction;
      19: return

  public void subscribe(org.reactivestreams.Subscriber<? super T>[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onSubscribe:(Lio/reactivex/rxjava3/parallel/ParallelFlowable;[Lorg/reactivestreams/Subscriber;)[Lorg/reactivestreams/Subscriber;
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokevirtual #6                  // Method validate:([Lorg/reactivestreams/Subscriber;)Z
      11: ifne          15
      14: return
      15: aload_1
      16: arraylength
      17: istore_2
      18: iload_2
      19: anewarray     #7                  // class org/reactivestreams/Subscriber
      22: astore_3
      23: iconst_0
      24: istore        4
      26: iload         4
      28: iload_2
      29: if_icmpge     100
      32: aload_1
      33: iload         4
      35: aaload
      36: astore        5
      38: aload         5
      40: instanceof    #8                  // class io/reactivex/rxjava3/operators/ConditionalSubscriber
      43: ifeq          73
      46: aload_3
      47: iload         4
      49: new           #9                  // class io/reactivex/rxjava3/internal/operators/parallel/ParallelFilterTry$ParallelFilterConditionalSubscriber
      52: dup
      53: aload         5
      55: checkcast     #8                  // class io/reactivex/rxjava3/operators/ConditionalSubscriber
      58: aload_0
      59: getfield      #3                  // Field predicate:Lio/reactivex/rxjava3/functions/Predicate;
      62: aload_0
      63: getfield      #4                  // Field errorHandler:Lio/reactivex/rxjava3/functions/BiFunction;
      66: invokespecial #10                 // Method io/reactivex/rxjava3/internal/operators/parallel/ParallelFilterTry$ParallelFilterConditionalSubscriber."<init>":(Lio/reactivex/rxjava3/operators/ConditionalSubscriber;Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/BiFunction;)V
      69: aastore
      70: goto          94
      73: aload_3
      74: iload         4
      76: new           #11                 // class io/reactivex/rxjava3/internal/operators/parallel/ParallelFilterTry$ParallelFilterSubscriber
      79: dup
      80: aload         5
      82: aload_0
      83: getfield      #3                  // Field predicate:Lio/reactivex/rxjava3/functions/Predicate;
      86: aload_0
      87: getfield      #4                  // Field errorHandler:Lio/reactivex/rxjava3/functions/BiFunction;
      90: invokespecial #12                 // Method io/reactivex/rxjava3/internal/operators/parallel/ParallelFilterTry$ParallelFilterSubscriber."<init>":(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Predicate;Lio/reactivex/rxjava3/functions/BiFunction;)V
      93: aastore
      94: iinc          4, 1
      97: goto          26
     100: aload_0
     101: getfield      #2                  // Field source:Lio/reactivex/rxjava3/parallel/ParallelFlowable;
     104: aload_3
     105: invokevirtual #13                 // Method io/reactivex/rxjava3/parallel/ParallelFlowable.subscribe:([Lorg/reactivestreams/Subscriber;)V
     108: return

  public int parallelism();
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lio/reactivex/rxjava3/parallel/ParallelFlowable;
       4: invokevirtual #14                 // Method io/reactivex/rxjava3/parallel/ParallelFlowable.parallelism:()I
       7: ireturn
}
