Compiled from "ParallelMap.java"
final class io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$ParallelMapConditionalSubscriber<T, R> implements io.reactivex.rxjava3.operators.ConditionalSubscriber<T>, org.reactivestreams.Subscription {
  final io.reactivex.rxjava3.operators.ConditionalSubscriber<? super R> downstream;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends R> mapper;

  org.reactivestreams.Subscription upstream;

  boolean done;

  io.reactivex.rxjava3.internal.operators.parallel.ParallelMap$ParallelMapConditionalSubscriber(io.reactivex.rxjava3.operators.ConditionalSubscriber<? super R>, io.reactivex.rxjava3.functions.Function<? super T, ? extends R>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      14: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #5,  3            // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: invokeinterface #6,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #7                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
      20: aload_0
      21: invokeinterface #8,  2            // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      12: aload_1
      13: invokeinterface #10,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: ldc           #11                 // String The mapper returned a null value
      20: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      23: astore_2
      24: goto          42
      27: astore_3
      28: aload_3
      29: invokestatic  #14                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      32: aload_0
      33: invokevirtual #15                 // Method cancel:()V
      36: aload_0
      37: aload_3
      38: invokevirtual #16                 // Method onError:(Ljava/lang/Throwable;)V
      41: return
      42: aload_0
      43: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
      46: aload_2
      47: invokeinterface #17,  2           // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.onNext:(Ljava/lang/Object;)V
      52: return
    Exception table:
       from    to  target type
           8    24    27   Class java/lang/Throwable

  public boolean tryOnNext(T);
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      13: aload_1
      14: invokeinterface #10,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      19: ldc           #11                 // String The mapper returned a null value
      21: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: astore_2
      25: goto          44
      28: astore_3
      29: aload_3
      30: invokestatic  #14                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      33: aload_0
      34: invokevirtual #15                 // Method cancel:()V
      37: aload_0
      38: aload_3
      39: invokevirtual #16                 // Method onError:(Ljava/lang/Throwable;)V
      42: iconst_0
      43: ireturn
      44: aload_0
      45: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
      48: aload_2
      49: invokeinterface #18,  2           // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.tryOnNext:(Ljava/lang/Object;)Z
      54: ireturn
    Exception table:
       from    to  target type
           9    25    28   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #19                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      11: return
      12: aload_0
      13: iconst_1
      14: putfield      #9                  // Field done:Z
      17: aload_0
      18: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
      21: aload_1
      22: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.onError:(Ljava/lang/Throwable;)V
      27: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #9                  // Field done:Z
      13: aload_0
      14: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
      17: invokeinterface #21,  1           // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.onComplete:()V
      22: return
}
