Compiled from "ObservableWindowTimed.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver<T> extends io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$AbstractWindowObserver<T> implements java.lang.Runnable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Scheduler scheduler;

  final boolean restartTimerOnMaxSize;

  final long maxSize;

  final io.reactivex.rxjava3.core.Scheduler$Worker worker;

  long count;

  io.reactivex.rxjava3.subjects.UnicastSubject<T> window;

  final io.reactivex.rxjava3.internal.disposables.SequentialDisposable timer;

  io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver(io.reactivex.rxjava3.core.Observer<? super io.reactivex.rxjava3.core.Observable<T>>, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler, int, long, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: iload         6
       7: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$AbstractWindowObserver."<init>":(Lio/reactivex/rxjava3/core/Observer;JLjava/util/concurrent/TimeUnit;I)V
      10: aload_0
      11: aload         5
      13: putfield      #2                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      16: aload_0
      17: lload         7
      19: putfield      #3                  // Field maxSize:J
      22: aload_0
      23: iload         9
      25: putfield      #4                  // Field restartTimerOnMaxSize:Z
      28: iload         9
      30: ifeq          45
      33: aload_0
      34: aload         5
      36: invokevirtual #5                  // Method io/reactivex/rxjava3/core/Scheduler.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;
      39: putfield      #6                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      42: goto          50
      45: aload_0
      46: aconst_null
      47: putfield      #6                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      50: aload_0
      51: new           #7                  // class io/reactivex/rxjava3/internal/disposables/SequentialDisposable
      54: dup
      55: invokespecial #8                  // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable."<init>":()V
      58: putfield      #9                  // Field timer:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
      61: return

  void createFirstWindow();
    Code:
       0: aload_0
       1: getfield      #10                 // Field downstreamCancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          147
      10: aload_0
      11: lconst_1
      12: putfield      #12                 // Field emitted:J
      15: aload_0
      16: getfield      #13                 // Field windowCount:Ljava/util/concurrent/atomic/AtomicInteger;
      19: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      22: pop
      23: aload_0
      24: aload_0
      25: getfield      #15                 // Field bufferSize:I
      28: aload_0
      29: invokestatic  #16                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/subjects/UnicastSubject;
      32: putfield      #17                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
      35: new           #18                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept
      38: dup
      39: aload_0
      40: getfield      #17                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
      43: invokespecial #19                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept."<init>":(Lio/reactivex/rxjava3/subjects/Subject;)V
      46: astore_1
      47: aload_0
      48: getfield      #20                 // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      51: aload_1
      52: invokeinterface #21,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      57: new           #22                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowExactBoundedObserver$WindowBoundaryRunnable
      60: dup
      61: aload_0
      62: lconst_1
      63: invokespecial #23                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowExactBoundedObserver$WindowBoundaryRunnable."<init>":(Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowExactBoundedObserver;J)V
      66: astore_2
      67: aload_0
      68: getfield      #4                  // Field restartTimerOnMaxSize:Z
      71: ifeq          105
      74: aload_0
      75: getfield      #9                  // Field timer:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
      78: aload_0
      79: getfield      #6                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      82: aload_2
      83: aload_0
      84: getfield      #24                 // Field timespan:J
      87: aload_0
      88: getfield      #24                 // Field timespan:J
      91: aload_0
      92: getfield      #25                 // Field unit:Ljava/util/concurrent/TimeUnit;
      95: invokevirtual #26                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedulePeriodically:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
      98: invokevirtual #27                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
     101: pop
     102: goto          133
     105: aload_0
     106: getfield      #9                  // Field timer:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
     109: aload_0
     110: getfield      #2                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
     113: aload_2
     114: aload_0
     115: getfield      #24                 // Field timespan:J
     118: aload_0
     119: getfield      #24                 // Field timespan:J
     122: aload_0
     123: getfield      #25                 // Field unit:Ljava/util/concurrent/TimeUnit;
     126: invokevirtual #28                 // Method io/reactivex/rxjava3/core/Scheduler.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
     129: invokevirtual #27                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
     132: pop
     133: aload_1
     134: invokevirtual #29                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept.tryAbandon:()Z
     137: ifeq          147
     140: aload_0
     141: getfield      #17                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
     144: invokevirtual #30                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
     147: return

  public void run();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method windowDone:()V
       4: return

  void cleanupResources();
    Code:
       0: aload_0
       1: getfield      #9                  // Field timer:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
       4: invokevirtual #32                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.dispose:()V
       7: aload_0
       8: getfield      #6                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      11: astore_1
      12: aload_1
      13: ifnull        20
      16: aload_1
      17: invokevirtual #33                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      20: return

  void boundary(io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver$WindowBoundaryRunnable);
    Code:
       0: aload_0
       1: getfield      #34                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokevirtual #36                 // Method drain:()V
      15: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: iconst_1
       9: istore_1
      10: aload_0
      11: getfield      #34                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      14: astore_2
      15: aload_0
      16: getfield      #20                 // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      19: astore_3
      20: aload_0
      21: getfield      #17                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
      24: astore        4
      26: aload_0
      27: getfield      #38                 // Field upstreamCancelled:Z
      30: ifeq          50
      33: aload_2
      34: invokeinterface #39,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.clear:()V
      39: aconst_null
      40: astore        4
      42: aload_0
      43: aconst_null
      44: putfield      #17                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
      47: goto          263
      50: aload_0
      51: getfield      #40                 // Field done:Z
      54: istore        5
      56: aload_2
      57: invokeinterface #41,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.poll:()Ljava/lang/Object;
      62: astore        6
      64: aload         6
      66: ifnonnull     73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: istore        7
      76: iload         5
      78: ifeq          148
      81: iload         7
      83: ifeq          148
      86: aload_0
      87: getfield      #42                 // Field error:Ljava/lang/Throwable;
      90: astore        8
      92: aload         8
      94: ifnull        120
      97: aload         4
      99: ifnull        109
     102: aload         4
     104: aload         8
     106: invokevirtual #43                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onError:(Ljava/lang/Throwable;)V
     109: aload_3
     110: aload         8
     112: invokeinterface #44,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
     117: goto          136
     120: aload         4
     122: ifnull        130
     125: aload         4
     127: invokevirtual #30                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
     130: aload_3
     131: invokeinterface #45,  1           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
     136: aload_0
     137: invokevirtual #46                 // Method cleanupResources:()V
     140: aload_0
     141: iconst_1
     142: putfield      #38                 // Field upstreamCancelled:Z
     145: goto          26
     148: iload         7
     150: ifne          263
     153: aload         6
     155: instanceof    #22                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowExactBoundedObserver$WindowBoundaryRunnable
     158: ifeq          204
     161: aload         6
     163: checkcast     #22                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowExactBoundedObserver$WindowBoundaryRunnable
     166: astore        8
     168: aload         8
     170: getfield      #47                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowExactBoundedObserver$WindowBoundaryRunnable.index:J
     173: aload_0
     174: getfield      #12                 // Field emitted:J
     177: lcmp
     178: ifeq          188
     181: aload_0
     182: getfield      #4                  // Field restartTimerOnMaxSize:Z
     185: ifne          201
     188: aload_0
     189: lconst_0
     190: putfield      #48                 // Field count:J
     193: aload_0
     194: aload         4
     196: invokevirtual #49                 // Method createNewWindow:(Lio/reactivex/rxjava3/subjects/UnicastSubject;)Lio/reactivex/rxjava3/subjects/UnicastSubject;
     199: astore        4
     201: goto          26
     204: aload         4
     206: ifnull        26
     209: aload         6
     211: astore        8
     213: aload         4
     215: aload         8
     217: invokevirtual #50                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onNext:(Ljava/lang/Object;)V
     220: aload_0
     221: getfield      #48                 // Field count:J
     224: lconst_1
     225: ladd
     226: lstore        9
     228: lload         9
     230: aload_0
     231: getfield      #3                  // Field maxSize:J
     234: lcmp
     235: ifne          254
     238: aload_0
     239: lconst_0
     240: putfield      #48                 // Field count:J
     243: aload_0
     244: aload         4
     246: invokevirtual #49                 // Method createNewWindow:(Lio/reactivex/rxjava3/subjects/UnicastSubject;)Lio/reactivex/rxjava3/subjects/UnicastSubject;
     249: astore        4
     251: goto          260
     254: aload_0
     255: lload         9
     257: putfield      #48                 // Field count:J
     260: goto          26
     263: aload_0
     264: iload_1
     265: ineg
     266: invokevirtual #51                 // Method addAndGet:(I)I
     269: istore_1
     270: iload_1
     271: ifne          26
     274: goto          277
     277: return

  io.reactivex.rxjava3.subjects.UnicastSubject<T> createNewWindow(io.reactivex.rxjava3.subjects.UnicastSubject<T>);
    Code:
       0: aload_1
       1: ifnull        10
       4: aload_1
       5: invokevirtual #30                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
       8: aconst_null
       9: astore_1
      10: aload_0
      11: getfield      #10                 // Field downstreamCancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
      14: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      17: ifeq          27
      20: aload_0
      21: invokevirtual #46                 // Method cleanupResources:()V
      24: goto          139
      27: aload_0
      28: getfield      #12                 // Field emitted:J
      31: lstore_2
      32: aload_0
      33: lload_2
      34: lconst_1
      35: ladd
      36: dup2
      37: lstore_2
      38: putfield      #12                 // Field emitted:J
      41: aload_0
      42: getfield      #13                 // Field windowCount:Ljava/util/concurrent/atomic/AtomicInteger;
      45: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      48: pop
      49: aload_0
      50: getfield      #15                 // Field bufferSize:I
      53: aload_0
      54: invokestatic  #52                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/subjects/UnicastSubject;
      57: astore_1
      58: aload_0
      59: aload_1
      60: putfield      #17                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
      63: new           #18                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept
      66: dup
      67: aload_1
      68: invokespecial #19                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept."<init>":(Lio/reactivex/rxjava3/subjects/Subject;)V
      71: astore        4
      73: aload_0
      74: getfield      #20                 // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      77: aload         4
      79: invokeinterface #21,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      84: aload_0
      85: getfield      #4                  // Field restartTimerOnMaxSize:Z
      88: ifeq          127
      91: aload_0
      92: getfield      #9                  // Field timer:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
      95: aload_0
      96: getfield      #6                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      99: new           #22                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowExactBoundedObserver$WindowBoundaryRunnable
     102: dup
     103: aload_0
     104: lload_2
     105: invokespecial #23                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowExactBoundedObserver$WindowBoundaryRunnable."<init>":(Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowExactBoundedObserver;J)V
     108: aload_0
     109: getfield      #24                 // Field timespan:J
     112: aload_0
     113: getfield      #24                 // Field timespan:J
     116: aload_0
     117: getfield      #25                 // Field unit:Ljava/util/concurrent/TimeUnit;
     120: invokevirtual #26                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedulePeriodically:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
     123: invokevirtual #53                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.update:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
     126: pop
     127: aload         4
     129: invokevirtual #29                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept.tryAbandon:()Z
     132: ifeq          139
     135: aload_1
     136: invokevirtual #30                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
     139: aload_1
     140: areturn
}
