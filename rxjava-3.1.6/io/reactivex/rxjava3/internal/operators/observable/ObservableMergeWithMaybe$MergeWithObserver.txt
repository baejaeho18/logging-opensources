Compiled from "ObservableMergeWithMaybe.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver<T> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.Observer<T>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super T> downstream;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> mainDisposable;

  final io.reactivex.rxjava3.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver$OtherObserver<T> otherObserver;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable errors;

  volatile io.reactivex.rxjava3.operators.SimplePlainQueue<T> queue;

  T singleItem;

  volatile boolean disposed;

  volatile boolean mainDone;

  volatile int otherState;

  static final int OTHER_STATE_HAS_VALUE;

  static final int OTHER_STATE_CONSUMED_OR_EMPTY;

  io.reactivex.rxjava3.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver(io.reactivex.rxjava3.core.Observer<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicReference
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      17: putfield      #5                  // Field mainDisposable:Ljava/util/concurrent/atomic/AtomicReference;
      20: aload_0
      21: new           #6                  // class io/reactivex/rxjava3/internal/operators/observable/ObservableMergeWithMaybe$MergeWithObserver$OtherObserver
      24: dup
      25: aload_0
      26: invokespecial #7                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservableMergeWithMaybe$MergeWithObserver$OtherObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/observable/ObservableMergeWithMaybe$MergeWithObserver;)V
      29: putfield      #8                  // Field otherObserver:Lio/reactivex/rxjava3/internal/operators/observable/ObservableMergeWithMaybe$MergeWithObserver$OtherObserver;
      32: aload_0
      33: new           #9                  // class io/reactivex/rxjava3/internal/util/AtomicThrowable
      36: dup
      37: invokespecial #10                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      40: putfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      43: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mainDisposable:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokestatic  #12                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: pop
       9: return

  public void onNext(T);
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_1
       3: invokevirtual #13                 // Method compareAndSet:(II)Z
       6: ifeq          27
       9: aload_0
      10: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      13: aload_1
      14: invokeinterface #14,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      19: aload_0
      20: invokevirtual #15                 // Method decrementAndGet:()I
      23: ifne          48
      26: return
      27: aload_0
      28: invokevirtual #16                 // Method getOrCreateQueue:()Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      31: astore_2
      32: aload_2
      33: aload_1
      34: invokeinterface #17,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      39: pop
      40: aload_0
      41: invokevirtual #18                 // Method getAndIncrement:()I
      44: ifeq          48
      47: return
      48: aload_0
      49: invokevirtual #19                 // Method drainLoop:()V
      52: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       4: aload_1
       5: invokevirtual #20                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
       8: ifeq          23
      11: aload_0
      12: getfield      #8                  // Field otherObserver:Lio/reactivex/rxjava3/internal/operators/observable/ObservableMergeWithMaybe$MergeWithObserver$OtherObserver;
      15: invokestatic  #21                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      18: pop
      19: aload_0
      20: invokevirtual #22                 // Method drain:()V
      23: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #23                 // Field mainDone:Z
       5: aload_0
       6: invokevirtual #22                 // Method drain:()V
       9: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mainDisposable:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #25                 // class io/reactivex/rxjava3/disposables/Disposable
      10: invokestatic  #26                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      13: ireturn

  public void dispose();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #27                 // Field disposed:Z
       5: aload_0
       6: getfield      #5                  // Field mainDisposable:Ljava/util/concurrent/atomic/AtomicReference;
       9: invokestatic  #21                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      12: pop
      13: aload_0
      14: getfield      #8                  // Field otherObserver:Lio/reactivex/rxjava3/internal/operators/observable/ObservableMergeWithMaybe$MergeWithObserver$OtherObserver;
      17: invokestatic  #21                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      20: pop
      21: aload_0
      22: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      25: invokevirtual #28                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      28: aload_0
      29: invokevirtual #18                 // Method getAndIncrement:()I
      32: ifne          45
      35: aload_0
      36: aconst_null
      37: putfield      #29                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      40: aload_0
      41: aconst_null
      42: putfield      #30                 // Field singleItem:Ljava/lang/Object;
      45: return

  void otherSuccess(T);
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_1
       3: invokevirtual #13                 // Method compareAndSet:(II)Z
       6: ifeq          27
       9: aload_0
      10: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      13: aload_1
      14: invokeinterface #14,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      19: aload_0
      20: iconst_2
      21: putfield      #32                 // Field otherState:I
      24: goto          45
      27: aload_0
      28: aload_1
      29: putfield      #30                 // Field singleItem:Ljava/lang/Object;
      32: aload_0
      33: iconst_1
      34: putfield      #32                 // Field otherState:I
      37: aload_0
      38: invokevirtual #18                 // Method getAndIncrement:()I
      41: ifeq          45
      44: return
      45: aload_0
      46: invokevirtual #19                 // Method drainLoop:()V
      49: return

  void otherError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       4: aload_1
       5: invokevirtual #20                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
       8: ifeq          23
      11: aload_0
      12: getfield      #5                  // Field mainDisposable:Ljava/util/concurrent/atomic/AtomicReference;
      15: invokestatic  #21                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      18: pop
      19: aload_0
      20: invokevirtual #22                 // Method drain:()V
      23: return

  void otherComplete();
    Code:
       0: aload_0
       1: iconst_2
       2: putfield      #32                 // Field otherState:I
       5: aload_0
       6: invokevirtual #22                 // Method drain:()V
       9: return

  io.reactivex.rxjava3.operators.SimplePlainQueue<T> getOrCreateQueue();
    Code:
       0: aload_0
       1: getfield      #29                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
       4: astore_1
       5: aload_1
       6: ifnonnull     25
       9: new           #33                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      12: dup
      13: invokestatic  #34                 // Method io/reactivex/rxjava3/core/Observable.bufferSize:()I
      16: invokespecial #35                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue."<init>":(I)V
      19: astore_1
      20: aload_0
      21: aload_1
      22: putfield      #29                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      25: aload_1
      26: areturn

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getAndIncrement:()I
       4: ifne          11
       7: aload_0
       8: invokevirtual #19                 // Method drainLoop:()V
      11: return

  void drainLoop();
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: astore_1
       5: iconst_1
       6: istore_2
       7: aload_0
       8: getfield      #27                 // Field disposed:Z
      11: ifeq          25
      14: aload_0
      15: aconst_null
      16: putfield      #30                 // Field singleItem:Ljava/lang/Object;
      19: aload_0
      20: aconst_null
      21: putfield      #29                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      24: return
      25: aload_0
      26: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      29: invokevirtual #36                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
      32: ifnull        54
      35: aload_0
      36: aconst_null
      37: putfield      #30                 // Field singleItem:Ljava/lang/Object;
      40: aload_0
      41: aconst_null
      42: putfield      #29                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      45: aload_0
      46: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      49: aload_1
      50: invokevirtual #37                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V
      53: return
      54: aload_0
      55: getfield      #32                 // Field otherState:I
      58: istore_3
      59: iload_3
      60: iconst_1
      61: if_icmpne     90
      64: aload_0
      65: getfield      #30                 // Field singleItem:Ljava/lang/Object;
      68: astore        4
      70: aload_0
      71: aconst_null
      72: putfield      #30                 // Field singleItem:Ljava/lang/Object;
      75: aload_0
      76: iconst_2
      77: putfield      #32                 // Field otherState:I
      80: iconst_2
      81: istore_3
      82: aload_1
      83: aload         4
      85: invokeinterface #14,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      90: aload_0
      91: getfield      #23                 // Field mainDone:Z
      94: istore        4
      96: aload_0
      97: getfield      #29                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
     100: astore        5
     102: aload         5
     104: ifnull        117
     107: aload         5
     109: invokeinterface #38,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.poll:()Ljava/lang/Object;
     114: goto          118
     117: aconst_null
     118: astore        6
     120: aload         6
     122: ifnonnull     129
     125: iconst_1
     126: goto          130
     129: iconst_0
     130: istore        7
     132: iload         4
     134: ifeq          159
     137: iload         7
     139: ifeq          159
     142: iload_3
     143: iconst_2
     144: if_icmpne     159
     147: aload_0
     148: aconst_null
     149: putfield      #29                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
     152: aload_1
     153: invokeinterface #39,  1           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
     158: return
     159: iload         7
     161: ifeq          167
     164: goto          178
     167: aload_1
     168: aload         6
     170: invokeinterface #14,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
     175: goto          7
     178: aload_0
     179: iload_2
     180: ineg
     181: invokevirtual #40                 // Method addAndGet:(I)I
     184: istore_2
     185: iload_2
     186: ifne          7
     189: goto          192
     192: return
}
