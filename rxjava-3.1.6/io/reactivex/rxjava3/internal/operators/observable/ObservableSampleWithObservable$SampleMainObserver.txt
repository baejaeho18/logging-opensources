Compiled from "ObservableSampleWithObservable.java"
abstract class io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver<T> extends java.util.concurrent.atomic.AtomicReference<T> implements io.reactivex.rxjava3.core.Observer<T>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super T> downstream;

  final io.reactivex.rxjava3.core.ObservableSource<?> sampler;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> other;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  io.reactivex.rxjava3.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver(io.reactivex.rxjava3.core.Observer<? super T>, io.reactivex.rxjava3.core.ObservableSource<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #3                  // Field other:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: aload_1
      17: putfield      #4                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      20: aload_0
      21: aload_2
      22: putfield      #5                  // Field sampler:Lio/reactivex/rxjava3/core/ObservableSource;
      25: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #7                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          53
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_0
      17: getfield      #4                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      20: aload_0
      21: invokeinterface #8,  2            // InterfaceMethod io/reactivex/rxjava3/core/Observer.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      26: aload_0
      27: getfield      #3                  // Field other:Ljava/util/concurrent/atomic/AtomicReference;
      30: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      33: ifnonnull     53
      36: aload_0
      37: getfield      #5                  // Field sampler:Lio/reactivex/rxjava3/core/ObservableSource;
      40: new           #10                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableSampleWithObservable$SamplerObserver
      43: dup
      44: aload_0
      45: invokespecial #11                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableSampleWithObservable$SamplerObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/observable/ObservableSampleWithObservable$SampleMainObserver;)V
      48: invokeinterface #12,  2           // InterfaceMethod io/reactivex/rxjava3/core/ObservableSource.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
      53: return

  public void onNext(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method lazySet:(Ljava/lang/Object;)V
       5: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field other:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #14                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: getfield      #4                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      12: aload_1
      13: invokeinterface #15,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
      18: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #3                  // Field other:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #14                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: invokevirtual #16                 // Method completion:()V
      12: return

  boolean setOther(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field other:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokestatic  #17                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ireturn

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #3                  // Field other:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #14                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: getfield      #6                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      12: invokeinterface #18,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      17: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #3                  // Field other:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #19                 // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
      10: if_acmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public void error(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: invokeinterface #18,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
       9: aload_0
      10: getfield      #4                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      13: aload_1
      14: invokeinterface #15,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
      19: return

  public void complete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: invokeinterface #18,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
       9: aload_0
      10: invokevirtual #16                 // Method completion:()V
      13: return

  void emit();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #20                 // Method getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_1
       6: aload_1
       7: ifnull        20
      10: aload_0
      11: getfield      #4                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      14: aload_1
      15: invokeinterface #21,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      20: return

  abstract void completion();

  abstract void run();
}
