Compiled from "ObservableFlatMap.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap$MergeObserver<T, U> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.disposables.Disposable, io.reactivex.rxjava3.core.Observer<T> {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super U> downstream;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.ObservableSource<? extends U>> mapper;

  final boolean delayErrors;

  final int maxConcurrency;

  final int bufferSize;

  volatile io.reactivex.rxjava3.operators.SimplePlainQueue<U> queue;

  volatile boolean done;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable errors;

  volatile boolean disposed;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap$InnerObserver<?, ?>[]> observers;

  static final io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap$InnerObserver<?, ?>[] EMPTY;

  static final io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap$InnerObserver<?, ?>[] CANCELLED;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  long uniqueId;

  int lastIndex;

  java.util.Queue<io.reactivex.rxjava3.core.ObservableSource<? extends U>> sources;

  int wip;

  io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap$MergeObserver(io.reactivex.rxjava3.core.Observer<? super U>, io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.ObservableSource<? extends U>>, boolean, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: new           #2                  // class io/reactivex/rxjava3/internal/util/AtomicThrowable
       8: dup
       9: invokespecial #3                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      12: putfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      25: aload_0
      26: iload_3
      27: putfield      #7                  // Field delayErrors:Z
      30: aload_0
      31: iload         4
      33: putfield      #8                  // Field maxConcurrency:I
      36: aload_0
      37: iload         5
      39: putfield      #9                  // Field bufferSize:I
      42: iload         4
      44: ldc           #11                 // int 2147483647
      46: if_icmpeq     62
      49: aload_0
      50: new           #12                 // class java/util/ArrayDeque
      53: dup
      54: iload         4
      56: invokespecial #13                 // Method java/util/ArrayDeque."<init>":(I)V
      59: putfield      #14                 // Field sources:Ljava/util/Queue;
      62: aload_0
      63: new           #15                 // class java/util/concurrent/atomic/AtomicReference
      66: dup
      67: getstatic     #16                 // Field EMPTY:[Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver;
      70: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      73: putfield      #18                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
      76: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #19                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #20                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #19                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_0
      17: getfield      #5                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      20: aload_0
      21: invokeinterface #21,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #22                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #6                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      12: aload_1
      13: invokeinterface #23,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: ldc           #24                 // String The mapper returned a null ObservableSource
      20: invokestatic  #25                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      23: checkcast     #26                 // class io/reactivex/rxjava3/core/ObservableSource
      26: astore_2
      27: goto          50
      30: astore_3
      31: aload_3
      32: invokestatic  #28                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      35: aload_0
      36: getfield      #19                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      39: invokeinterface #29,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      44: aload_0
      45: aload_3
      46: invokevirtual #30                 // Method onError:(Ljava/lang/Throwable;)V
      49: return
      50: aload_0
      51: getfield      #8                  // Field maxConcurrency:I
      54: ldc           #11                 // int 2147483647
      56: if_icmpeq     110
      59: aload_0
      60: dup
      61: astore_3
      62: monitorenter
      63: aload_0
      64: getfield      #31                 // Field wip:I
      67: aload_0
      68: getfield      #8                  // Field maxConcurrency:I
      71: if_icmpne     88
      74: aload_0
      75: getfield      #14                 // Field sources:Ljava/util/Queue;
      78: aload_2
      79: invokeinterface #32,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      84: pop
      85: aload_3
      86: monitorexit
      87: return
      88: aload_0
      89: dup
      90: getfield      #31                 // Field wip:I
      93: iconst_1
      94: iadd
      95: putfield      #31                 // Field wip:I
      98: aload_3
      99: monitorexit
     100: goto          110
     103: astore        4
     105: aload_3
     106: monitorexit
     107: aload         4
     109: athrow
     110: aload_0
     111: aload_2
     112: invokevirtual #33                 // Method subscribeInner:(Lio/reactivex/rxjava3/core/ObservableSource;)V
     115: return
    Exception table:
       from    to  target type
           8    27    30   Class java/lang/Throwable
          63    87   103   any
          88   100   103   any
         103   107   103   any

  void subscribeInner(io.reactivex.rxjava3.core.ObservableSource<? extends U>);
    Code:
       0: aload_1
       1: instanceof    #34                 // class io/reactivex/rxjava3/functions/Supplier
       4: ifeq          88
       7: aload_0
       8: aload_1
       9: checkcast     #34                 // class io/reactivex/rxjava3/functions/Supplier
      12: invokevirtual #35                 // Method tryEmitScalar:(Lio/reactivex/rxjava3/functions/Supplier;)Z
      15: ifeq          126
      18: aload_0
      19: getfield      #8                  // Field maxConcurrency:I
      22: ldc           #11                 // int 2147483647
      24: if_icmpeq     126
      27: iconst_0
      28: istore_2
      29: aload_0
      30: dup
      31: astore_3
      32: monitorenter
      33: aload_0
      34: getfield      #14                 // Field sources:Ljava/util/Queue;
      37: invokeinterface #36,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      42: checkcast     #26                 // class io/reactivex/rxjava3/core/ObservableSource
      45: astore_1
      46: aload_1
      47: ifnonnull     62
      50: aload_0
      51: dup
      52: getfield      #31                 // Field wip:I
      55: iconst_1
      56: isub
      57: putfield      #31                 // Field wip:I
      60: iconst_1
      61: istore_2
      62: aload_3
      63: monitorexit
      64: goto          74
      67: astore        4
      69: aload_3
      70: monitorexit
      71: aload         4
      73: athrow
      74: iload_2
      75: ifeq          85
      78: aload_0
      79: invokevirtual #37                 // Method drain:()V
      82: goto          126
      85: goto          0
      88: new           #38                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver
      91: dup
      92: aload_0
      93: aload_0
      94: dup
      95: getfield      #39                 // Field uniqueId:J
      98: dup2_x1
      99: lconst_1
     100: ladd
     101: putfield      #39                 // Field uniqueId:J
     104: invokespecial #40                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver;J)V
     107: astore_2
     108: aload_0
     109: aload_2
     110: invokevirtual #41                 // Method addInner:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver;)Z
     113: ifeq          126
     116: aload_1
     117: aload_2
     118: invokeinterface #42,  2           // InterfaceMethod io/reactivex/rxjava3/core/ObservableSource.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
     123: goto          126
     126: return
    Exception table:
       from    to  target type
          33    64    67   any
          67    71    67   any

  boolean addInner(io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap$InnerObserver<T, U>);
    Code:
       0: aload_0
       1: getfield      #18                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #44                 // class "[Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver;"
      10: astore_2
      11: aload_2
      12: getstatic     #45                 // Field CANCELLED:[Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver;
      15: if_acmpne     24
      18: aload_1
      19: invokevirtual #46                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver.dispose:()V
      22: iconst_0
      23: ireturn
      24: aload_2
      25: arraylength
      26: istore_3
      27: iload_3
      28: iconst_1
      29: iadd
      30: anewarray     #38                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver
      33: astore        4
      35: aload_2
      36: iconst_0
      37: aload         4
      39: iconst_0
      40: iload_3
      41: invokestatic  #47                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      44: aload         4
      46: iload_3
      47: aload_1
      48: aastore
      49: aload_0
      50: getfield      #18                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
      53: aload_2
      54: aload         4
      56: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      59: ifeq          64
      62: iconst_1
      63: ireturn
      64: goto          0

  void removeInner(io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap$InnerObserver<T, U>);
    Code:
       0: aload_0
       1: getfield      #18                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #44                 // class "[Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver;"
      10: astore_2
      11: aload_2
      12: arraylength
      13: istore_3
      14: iconst_m1
      15: istore        4
      17: iconst_0
      18: istore        5
      20: iload         5
      22: iload_3
      23: if_icmpge     47
      26: aload_2
      27: iload         5
      29: aaload
      30: aload_1
      31: if_acmpne     41
      34: iload         5
      36: istore        4
      38: goto          47
      41: iinc          5, 1
      44: goto          20
      47: iload         4
      49: ifge          53
      52: return
      53: iload_3
      54: iconst_1
      55: if_icmpne     66
      58: getstatic     #16                 // Field EMPTY:[Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver;
      61: astore        5
      63: goto          102
      66: iload_3
      67: iconst_1
      68: isub
      69: anewarray     #38                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver
      72: astore        5
      74: aload_2
      75: iconst_0
      76: aload         5
      78: iconst_0
      79: iload         4
      81: invokestatic  #47                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      84: aload_2
      85: iload         4
      87: iconst_1
      88: iadd
      89: aload         5
      91: iload         4
      93: iload_3
      94: iload         4
      96: isub
      97: iconst_1
      98: isub
      99: invokestatic  #47                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     102: aload_0
     103: getfield      #18                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
     106: aload_2
     107: aload         5
     109: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     112: ifeq          116
     115: return
     116: goto          0

  boolean tryEmitScalar(io.reactivex.rxjava3.functions.Supplier<? extends U>);
    Code:
       0: aload_1
       1: invokeinterface #49,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
       6: astore_2
       7: goto          30
      10: astore_3
      11: aload_3
      12: invokestatic  #28                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      15: aload_0
      16: getfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      19: aload_3
      20: invokevirtual #50                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      23: pop
      24: aload_0
      25: invokevirtual #37                 // Method drain:()V
      28: iconst_1
      29: ireturn
      30: aload_2
      31: ifnonnull     36
      34: iconst_1
      35: ireturn
      36: aload_0
      37: invokevirtual #51                 // Method get:()I
      40: ifne          71
      43: aload_0
      44: iconst_0
      45: iconst_1
      46: invokevirtual #52                 // Method compareAndSet:(II)Z
      49: ifeq          71
      52: aload_0
      53: getfield      #5                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      56: aload_2
      57: invokeinterface #53,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      62: aload_0
      63: invokevirtual #54                 // Method decrementAndGet:()I
      66: ifne          138
      69: iconst_1
      70: ireturn
      71: aload_0
      72: getfield      #55                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      75: astore_3
      76: aload_3
      77: ifnonnull     121
      80: aload_0
      81: getfield      #8                  // Field maxConcurrency:I
      84: ldc           #11                 // int 2147483647
      86: if_icmpne     104
      89: new           #56                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      92: dup
      93: aload_0
      94: getfield      #9                  // Field bufferSize:I
      97: invokespecial #57                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue."<init>":(I)V
     100: astore_3
     101: goto          116
     104: new           #58                 // class io/reactivex/rxjava3/operators/SpscArrayQueue
     107: dup
     108: aload_0
     109: getfield      #8                  // Field maxConcurrency:I
     112: invokespecial #59                 // Method io/reactivex/rxjava3/operators/SpscArrayQueue."<init>":(I)V
     115: astore_3
     116: aload_0
     117: aload_3
     118: putfield      #55                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
     121: aload_3
     122: aload_2
     123: invokeinterface #60,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
     128: pop
     129: aload_0
     130: invokevirtual #61                 // Method getAndIncrement:()I
     133: ifeq          138
     136: iconst_0
     137: ireturn
     138: aload_0
     139: invokevirtual #62                 // Method drainLoop:()V
     142: iconst_1
     143: ireturn
    Exception table:
       from    to  target type
           0     7    10   Class java/lang/Throwable

  void tryEmit(U, io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap$InnerObserver<T, U>);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method get:()I
       4: ifne          34
       7: aload_0
       8: iconst_0
       9: iconst_1
      10: invokevirtual #52                 // Method compareAndSet:(II)Z
      13: ifeq          34
      16: aload_0
      17: getfield      #5                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      20: aload_1
      21: invokeinterface #53,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      26: aload_0
      27: invokevirtual #54                 // Method decrementAndGet:()I
      30: ifne          76
      33: return
      34: aload_2
      35: getfield      #63                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver.queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      38: astore_3
      39: aload_3
      40: ifnonnull     60
      43: new           #56                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      46: dup
      47: aload_0
      48: getfield      #9                  // Field bufferSize:I
      51: invokespecial #57                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue."<init>":(I)V
      54: astore_3
      55: aload_2
      56: aload_3
      57: putfield      #63                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver.queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      60: aload_3
      61: aload_1
      62: invokeinterface #64,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.offer:(Ljava/lang/Object;)Z
      67: pop
      68: aload_0
      69: invokevirtual #61                 // Method getAndIncrement:()I
      72: ifeq          76
      75: return
      76: aload_0
      77: invokevirtual #62                 // Method drainLoop:()V
      80: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #22                 // Field done:Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #65                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      11: return
      12: aload_0
      13: getfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      16: aload_1
      17: invokevirtual #50                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      20: ifeq          32
      23: aload_0
      24: iconst_1
      25: putfield      #22                 // Field done:Z
      28: aload_0
      29: invokevirtual #37                 // Method drain:()V
      32: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #22                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #22                 // Field done:Z
      13: aload_0
      14: invokevirtual #37                 // Method drain:()V
      17: return

  public void dispose();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #66                 // Field disposed:Z
       5: aload_0
       6: invokevirtual #67                 // Method disposeAll:()Z
       9: ifeq          19
      12: aload_0
      13: getfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      16: invokevirtual #68                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      19: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #66                 // Field disposed:Z
       4: ireturn

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method getAndIncrement:()I
       4: ifne          11
       7: aload_0
       8: invokevirtual #62                 // Method drainLoop:()V
      11: return

  void drainLoop();
    Code:
       0: aload_0
       1: getfield      #5                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: astore_1
       5: iconst_1
       6: istore_2
       7: aload_0
       8: invokevirtual #69                 // Method checkTerminate:()Z
      11: ifeq          15
      14: return
      15: iconst_0
      16: istore_3
      17: aload_0
      18: getfield      #55                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      21: astore        4
      23: aload         4
      25: ifnull        67
      28: aload_0
      29: invokevirtual #69                 // Method checkTerminate:()Z
      32: ifeq          36
      35: return
      36: aload         4
      38: invokeinterface #70,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.poll:()Ljava/lang/Object;
      43: astore        5
      45: aload         5
      47: ifnonnull     53
      50: goto          67
      53: aload_1
      54: aload         5
      56: invokeinterface #53,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      61: iinc          3, 1
      64: goto          28
      67: iload_3
      68: ifeq          90
      71: aload_0
      72: getfield      #8                  // Field maxConcurrency:I
      75: ldc           #11                 // int 2147483647
      77: if_icmpeq     7
      80: aload_0
      81: iload_3
      82: invokevirtual #71                 // Method subscribeMore:(I)V
      85: iconst_0
      86: istore_3
      87: goto          7
      90: aload_0
      91: getfield      #22                 // Field done:Z
      94: istore        5
      96: aload_0
      97: getfield      #55                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
     100: astore        4
     102: aload_0
     103: getfield      #18                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
     106: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     109: checkcast     #44                 // class "[Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver;"
     112: astore        6
     114: aload         6
     116: arraylength
     117: istore        7
     119: iconst_0
     120: istore        8
     122: aload_0
     123: getfield      #8                  // Field maxConcurrency:I
     126: ldc           #11                 // int 2147483647
     128: if_icmpeq     161
     131: aload_0
     132: dup
     133: astore        9
     135: monitorenter
     136: aload_0
     137: getfield      #14                 // Field sources:Ljava/util/Queue;
     140: invokeinterface #72,  1           // InterfaceMethod java/util/Queue.size:()I
     145: istore        8
     147: aload         9
     149: monitorexit
     150: goto          161
     153: astore        10
     155: aload         9
     157: monitorexit
     158: aload         10
     160: athrow
     161: iload         5
     163: ifeq          203
     166: aload         4
     168: ifnull        181
     171: aload         4
     173: invokeinterface #73,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.isEmpty:()Z
     178: ifeq          203
     181: iload         7
     183: ifne          203
     186: iload         8
     188: ifne          203
     191: aload_0
     192: getfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     195: aload_0
     196: getfield      #5                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
     199: invokevirtual #74                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V
     202: return
     203: iload         7
     205: ifeq          420
     208: iload         7
     210: iconst_1
     211: isub
     212: aload_0
     213: getfield      #75                 // Field lastIndex:I
     216: invokestatic  #76                 // Method java/lang/Math.min:(II)I
     219: istore        9
     221: iconst_0
     222: istore        10
     224: iload         10
     226: iload         7
     228: if_icmpge     414
     231: aload_0
     232: invokevirtual #69                 // Method checkTerminate:()Z
     235: ifeq          239
     238: return
     239: aload         6
     241: iload         9
     243: aaload
     244: astore        11
     246: aload         11
     248: getfield      #63                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver.queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
     251: astore        12
     253: aload         12
     255: ifnull        352
     258: aload         12
     260: invokeinterface #77,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.poll:()Ljava/lang/Object;
     265: astore        13
     267: goto          325
     270: astore        14
     272: aload         14
     274: invokestatic  #28                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     277: aload         11
     279: invokevirtual #46                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver.dispose:()V
     282: aload_0
     283: getfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     286: aload         14
     288: invokevirtual #50                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     291: pop
     292: aload_0
     293: invokevirtual #69                 // Method checkTerminate:()Z
     296: ifeq          300
     299: return
     300: aload_0
     301: aload         11
     303: invokevirtual #78                 // Method removeInner:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver;)V
     306: iinc          3, 1
     309: iinc          9, 1
     312: iload         9
     314: iload         7
     316: if_icmpne     322
     319: iconst_0
     320: istore        9
     322: goto          408
     325: aload         13
     327: ifnonnull     333
     330: goto          352
     333: aload_1
     334: aload         13
     336: invokeinterface #53,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
     341: aload_0
     342: invokevirtual #69                 // Method checkTerminate:()Z
     345: ifeq          349
     348: return
     349: goto          258
     352: aload         11
     354: getfield      #79                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver.done:Z
     357: istore        13
     359: aload         11
     361: getfield      #63                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver.queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
     364: astore        14
     366: iload         13
     368: ifeq          395
     371: aload         14
     373: ifnull        386
     376: aload         14
     378: invokeinterface #80,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.isEmpty:()Z
     383: ifeq          395
     386: aload_0
     387: aload         11
     389: invokevirtual #78                 // Method removeInner:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver;)V
     392: iinc          3, 1
     395: iinc          9, 1
     398: iload         9
     400: iload         7
     402: if_icmpne     408
     405: iconst_0
     406: istore        9
     408: iinc          10, 1
     411: goto          224
     414: aload_0
     415: iload         9
     417: putfield      #75                 // Field lastIndex:I
     420: iload_3
     421: ifeq          443
     424: aload_0
     425: getfield      #8                  // Field maxConcurrency:I
     428: ldc           #11                 // int 2147483647
     430: if_icmpeq     7
     433: aload_0
     434: iload_3
     435: invokevirtual #71                 // Method subscribeMore:(I)V
     438: iconst_0
     439: istore_3
     440: goto          7
     443: aload_0
     444: iload_2
     445: ineg
     446: invokevirtual #81                 // Method addAndGet:(I)I
     449: istore_2
     450: iload_2
     451: ifne          457
     454: goto          460
     457: goto          7
     460: return
    Exception table:
       from    to  target type
         136   150   153   any
         153   158   153   any
         258   267   270   Class java/lang/Throwable

  void subscribeMore(int);
    Code:
       0: iload_1
       1: iinc          1, -1
       4: ifeq          63
       7: aload_0
       8: dup
       9: astore_3
      10: monitorenter
      11: aload_0
      12: getfield      #14                 // Field sources:Ljava/util/Queue;
      15: invokeinterface #36,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      20: checkcast     #26                 // class io/reactivex/rxjava3/core/ObservableSource
      23: astore_2
      24: aload_2
      25: ifnonnull     43
      28: aload_0
      29: dup
      30: getfield      #31                 // Field wip:I
      33: iconst_1
      34: isub
      35: putfield      #31                 // Field wip:I
      38: aload_3
      39: monitorexit
      40: goto          0
      43: aload_3
      44: monitorexit
      45: goto          55
      48: astore        4
      50: aload_3
      51: monitorexit
      52: aload         4
      54: athrow
      55: aload_0
      56: aload_2
      57: invokevirtual #33                 // Method subscribeInner:(Lio/reactivex/rxjava3/core/ObservableSource;)V
      60: goto          0
      63: return
    Exception table:
       from    to  target type
          11    40    48   any
          43    45    48   any
          48    52    48   any

  boolean checkTerminate();
    Code:
       0: aload_0
       1: getfield      #66                 // Field disposed:Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: getfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      13: invokevirtual #82                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
      16: checkcast     #27                 // class java/lang/Throwable
      19: astore_1
      20: aload_0
      21: getfield      #7                  // Field delayErrors:Z
      24: ifne          49
      27: aload_1
      28: ifnull        49
      31: aload_0
      32: invokevirtual #67                 // Method disposeAll:()Z
      35: pop
      36: aload_0
      37: getfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      40: aload_0
      41: getfield      #5                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      44: invokevirtual #74                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V
      47: iconst_1
      48: ireturn
      49: iconst_0
      50: ireturn

  boolean disposeAll();
    Code:
       0: aload_0
       1: getfield      #19                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: invokeinterface #29,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
       9: aload_0
      10: getfield      #18                 // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
      13: getstatic     #45                 // Field CANCELLED:[Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver;
      16: invokevirtual #83                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #44                 // class "[Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver;"
      22: astore_1
      23: aload_1
      24: getstatic     #45                 // Field CANCELLED:[Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver;
      27: if_acmpeq     63
      30: aload_1
      31: astore_2
      32: aload_2
      33: arraylength
      34: istore_3
      35: iconst_0
      36: istore        4
      38: iload         4
      40: iload_3
      41: if_icmpge     61
      44: aload_2
      45: iload         4
      47: aaload
      48: astore        5
      50: aload         5
      52: invokevirtual #46                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver.dispose:()V
      55: iinc          4, 1
      58: goto          38
      61: iconst_1
      62: ireturn
      63: iconst_0
      64: ireturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #38                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver
       4: putstatic     #16                 // Field EMPTY:[Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver;
       7: iconst_0
       8: anewarray     #38                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver
      11: putstatic     #45                 // Field CANCELLED:[Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver;
      14: return
}
