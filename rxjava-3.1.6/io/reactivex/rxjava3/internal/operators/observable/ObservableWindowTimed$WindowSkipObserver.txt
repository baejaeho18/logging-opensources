Compiled from "ObservableWindowTimed.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver<T> extends io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$AbstractWindowObserver<T> implements java.lang.Runnable {
  private static final long serialVersionUID;

  final long timeskip;

  final io.reactivex.rxjava3.core.Scheduler$Worker worker;

  final java.util.List<io.reactivex.rxjava3.subjects.UnicastSubject<T>> windows;

  static final java.lang.Object WINDOW_OPEN;

  static final java.lang.Object WINDOW_CLOSE;

  io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver(io.reactivex.rxjava3.core.Observer<? super io.reactivex.rxjava3.core.Observable<T>>, long, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler$Worker, int);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         6
       5: iload         8
       7: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$AbstractWindowObserver."<init>":(Lio/reactivex/rxjava3/core/Observer;JLjava/util/concurrent/TimeUnit;I)V
      10: aload_0
      11: lload         4
      13: putfield      #2                  // Field timeskip:J
      16: aload_0
      17: aload         7
      19: putfield      #3                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      22: aload_0
      23: new           #4                  // class java/util/LinkedList
      26: dup
      27: invokespecial #5                  // Method java/util/LinkedList."<init>":()V
      30: putfield      #6                  // Field windows:Ljava/util/List;
      33: return

  void createFirstWindow();
    Code:
       0: aload_0
       1: getfield      #7                  // Field downstreamCancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          138
      10: aload_0
      11: lconst_1
      12: putfield      #9                  // Field emitted:J
      15: aload_0
      16: getfield      #10                 // Field windowCount:Ljava/util/concurrent/atomic/AtomicInteger;
      19: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      22: pop
      23: aload_0
      24: getfield      #12                 // Field bufferSize:I
      27: aload_0
      28: invokestatic  #13                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/subjects/UnicastSubject;
      31: astore_1
      32: aload_0
      33: getfield      #6                  // Field windows:Ljava/util/List;
      36: aload_1
      37: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: new           #15                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept
      46: dup
      47: aload_1
      48: invokespecial #16                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept."<init>":(Lio/reactivex/rxjava3/subjects/Subject;)V
      51: astore_2
      52: aload_0
      53: getfield      #17                 // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      56: aload_2
      57: invokeinterface #18,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      62: aload_0
      63: getfield      #3                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      66: new           #19                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowSkipObserver$WindowBoundaryRunnable
      69: dup
      70: aload_0
      71: iconst_0
      72: invokespecial #20                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowSkipObserver$WindowBoundaryRunnable."<init>":(Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowSkipObserver;Z)V
      75: aload_0
      76: getfield      #21                 // Field timespan:J
      79: aload_0
      80: getfield      #22                 // Field unit:Ljava/util/concurrent/TimeUnit;
      83: invokevirtual #23                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
      86: pop
      87: aload_0
      88: getfield      #3                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      91: new           #19                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowSkipObserver$WindowBoundaryRunnable
      94: dup
      95: aload_0
      96: iconst_1
      97: invokespecial #20                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowSkipObserver$WindowBoundaryRunnable."<init>":(Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowSkipObserver;Z)V
     100: aload_0
     101: getfield      #2                  // Field timeskip:J
     104: aload_0
     105: getfield      #2                  // Field timeskip:J
     108: aload_0
     109: getfield      #22                 // Field unit:Ljava/util/concurrent/TimeUnit;
     112: invokevirtual #24                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedulePeriodically:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
     115: pop
     116: aload_2
     117: invokevirtual #25                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept.tryAbandon:()Z
     120: ifeq          138
     123: aload_1
     124: invokevirtual #26                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
     127: aload_0
     128: getfield      #6                  // Field windows:Ljava/util/List;
     131: aload_1
     132: invokeinterface #27,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     137: pop
     138: return

  void cleanupResources();
    Code:
       0: aload_0
       1: getfield      #3                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
       4: invokevirtual #28                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
       7: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: iconst_1
       9: istore_1
      10: aload_0
      11: getfield      #30                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      14: astore_2
      15: aload_0
      16: getfield      #17                 // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      19: astore_3
      20: aload_0
      21: getfield      #6                  // Field windows:Ljava/util/List;
      24: astore        4
      26: aload_0
      27: getfield      #31                 // Field upstreamCancelled:Z
      30: ifeq          49
      33: aload_2
      34: invokeinterface #32,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.clear:()V
      39: aload         4
      41: invokeinterface #33,  1           // InterfaceMethod java/util/List.clear:()V
      46: goto          416
      49: aload_0
      50: getfield      #34                 // Field done:Z
      53: istore        5
      55: aload_2
      56: invokeinterface #35,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.poll:()Ljava/lang/Object;
      61: astore        6
      63: aload         6
      65: ifnonnull     72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: istore        7
      75: iload         5
      77: ifeq          205
      80: iload         7
      82: ifeq          205
      85: aload_0
      86: getfield      #36                 // Field error:Ljava/lang/Throwable;
      89: astore        8
      91: aload         8
      93: ifnull        148
      96: aload         4
      98: invokeinterface #37,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     103: astore        9
     105: aload         9
     107: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     112: ifeq          137
     115: aload         9
     117: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     122: checkcast     #40                 // class io/reactivex/rxjava3/subjects/UnicastSubject
     125: astore        10
     127: aload         10
     129: aload         8
     131: invokevirtual #41                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onError:(Ljava/lang/Throwable;)V
     134: goto          105
     137: aload_3
     138: aload         8
     140: invokeinterface #42,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
     145: goto          193
     148: aload         4
     150: invokeinterface #37,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     155: astore        9
     157: aload         9
     159: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     164: ifeq          187
     167: aload         9
     169: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     174: checkcast     #40                 // class io/reactivex/rxjava3/subjects/UnicastSubject
     177: astore        10
     179: aload         10
     181: invokevirtual #26                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
     184: goto          157
     187: aload_3
     188: invokeinterface #43,  1           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
     193: aload_0
     194: invokevirtual #44                 // Method cleanupResources:()V
     197: aload_0
     198: iconst_1
     199: putfield      #31                 // Field upstreamCancelled:Z
     202: goto          26
     205: iload         7
     207: ifne          416
     210: aload         6
     212: getstatic     #45                 // Field WINDOW_OPEN:Ljava/lang/Object;
     215: if_acmpne     333
     218: aload_0
     219: getfield      #7                  // Field downstreamCancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
     222: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     225: ifne          26
     228: aload_0
     229: getfield      #9                  // Field emitted:J
     232: lstore        8
     234: aload_0
     235: lload         8
     237: lconst_1
     238: ladd
     239: dup2
     240: lstore        8
     242: putfield      #9                  // Field emitted:J
     245: aload_0
     246: getfield      #10                 // Field windowCount:Ljava/util/concurrent/atomic/AtomicInteger;
     249: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
     252: pop
     253: aload_0
     254: getfield      #12                 // Field bufferSize:I
     257: aload_0
     258: invokestatic  #46                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/subjects/UnicastSubject;
     261: astore        10
     263: aload         4
     265: aload         10
     267: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     272: pop
     273: new           #15                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept
     276: dup
     277: aload         10
     279: invokespecial #16                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept."<init>":(Lio/reactivex/rxjava3/subjects/Subject;)V
     282: astore        11
     284: aload_3
     285: aload         11
     287: invokeinterface #18,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
     292: aload_0
     293: getfield      #3                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     296: new           #19                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowSkipObserver$WindowBoundaryRunnable
     299: dup
     300: aload_0
     301: iconst_0
     302: invokespecial #20                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowSkipObserver$WindowBoundaryRunnable."<init>":(Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowSkipObserver;Z)V
     305: aload_0
     306: getfield      #21                 // Field timespan:J
     309: aload_0
     310: getfield      #22                 // Field unit:Ljava/util/concurrent/TimeUnit;
     313: invokevirtual #23                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
     316: pop
     317: aload         11
     319: invokevirtual #25                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept.tryAbandon:()Z
     322: ifeq          330
     325: aload         10
     327: invokevirtual #26                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
     330: goto          26
     333: aload         6
     335: getstatic     #47                 // Field WINDOW_CLOSE:Ljava/lang/Object;
     338: if_acmpne     368
     341: aload         4
     343: invokeinterface #48,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     348: ifne          26
     351: aload         4
     353: iconst_0
     354: invokeinterface #49,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     359: checkcast     #40                 // class io/reactivex/rxjava3/subjects/UnicastSubject
     362: invokevirtual #26                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
     365: goto          26
     368: aload         6
     370: astore        8
     372: aload         4
     374: invokeinterface #37,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     379: astore        9
     381: aload         9
     383: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     388: ifeq          413
     391: aload         9
     393: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     398: checkcast     #40                 // class io/reactivex/rxjava3/subjects/UnicastSubject
     401: astore        10
     403: aload         10
     405: aload         8
     407: invokevirtual #50                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onNext:(Ljava/lang/Object;)V
     410: goto          381
     413: goto          26
     416: aload_0
     417: iload_1
     418: ineg
     419: invokevirtual #51                 // Method addAndGet:(I)I
     422: istore_1
     423: iload_1
     424: ifne          26
     427: goto          430
     430: return

  public void run();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method windowDone:()V
       4: return

  void boundary(boolean);
    Code:
       0: aload_0
       1: getfield      #30                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
       4: iload_1
       5: ifeq          14
       8: getstatic     #45                 // Field WINDOW_OPEN:Ljava/lang/Object;
      11: goto          17
      14: getstatic     #47                 // Field WINDOW_CLOSE:Ljava/lang/Object;
      17: invokeinterface #53,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      22: pop
      23: aload_0
      24: invokevirtual #54                 // Method drain:()V
      27: return

  static {};
    Code:
       0: new           #55                 // class java/lang/Object
       3: dup
       4: invokespecial #56                 // Method java/lang/Object."<init>":()V
       7: putstatic     #45                 // Field WINDOW_OPEN:Ljava/lang/Object;
      10: new           #55                 // class java/lang/Object
      13: dup
      14: invokespecial #56                 // Method java/lang/Object."<init>":()V
      17: putstatic     #47                 // Field WINDOW_CLOSE:Ljava/lang/Object;
      20: return
}
