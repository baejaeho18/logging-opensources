Compiled from "ObservablePublish.java"
public final class io.reactivex.rxjava3.internal.operators.observable.ObservablePublish<T> extends io.reactivex.rxjava3.observables.ConnectableObservable<T> implements io.reactivex.rxjava3.internal.fuseable.HasUpstreamObservableSource<T> {
  final io.reactivex.rxjava3.core.ObservableSource<T> source;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.observable.ObservablePublish$PublishConnection<T>> current;

  public io.reactivex.rxjava3.internal.operators.observable.ObservablePublish(io.reactivex.rxjava3.core.ObservableSource<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/observables/ConnectableObservable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lio/reactivex/rxjava3/core/ObservableSource;
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicReference
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      17: putfield      #5                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      20: return

  public void connect(io.reactivex.rxjava3.functions.Consumer<? super io.reactivex.rxjava3.disposables.Disposable>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #5                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
       6: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       9: checkcast     #7                  // class io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$PublishConnection
      12: astore_3
      13: aload_3
      14: ifnull        24
      17: aload_3
      18: invokevirtual #8                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$PublishConnection.isDisposed:()Z
      21: ifeq          56
      24: new           #7                  // class io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$PublishConnection
      27: dup
      28: aload_0
      29: getfield      #5                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      32: invokespecial #9                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$PublishConnection."<init>":(Ljava/util/concurrent/atomic/AtomicReference;)V
      35: astore        4
      37: aload_0
      38: getfield      #5                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      41: aload_3
      42: aload         4
      44: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      47: ifne          53
      50: goto          2
      53: aload         4
      55: astore_3
      56: aload_3
      57: getfield      #11                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$PublishConnection.connect:Ljava/util/concurrent/atomic/AtomicBoolean;
      60: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      63: ifne          82
      66: aload_3
      67: getfield      #11                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$PublishConnection.connect:Ljava/util/concurrent/atomic/AtomicBoolean;
      70: iconst_0
      71: iconst_1
      72: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      75: ifeq          82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: istore_2
      84: goto          87
      87: aload_1
      88: aload_3
      89: invokeinterface #14,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Consumer.accept:(Ljava/lang/Object;)V
      94: goto          110
      97: astore        4
      99: aload         4
     101: invokestatic  #16                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     104: aload         4
     106: invokestatic  #17                 // Method io/reactivex/rxjava3/internal/util/ExceptionHelper.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     109: athrow
     110: iload_2
     111: ifeq          124
     114: aload_0
     115: getfield      #2                  // Field source:Lio/reactivex/rxjava3/core/ObservableSource;
     118: aload_3
     119: invokeinterface #18,  2           // InterfaceMethod io/reactivex/rxjava3/core/ObservableSource.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
     124: return
    Exception table:
       from    to  target type
          87    94    97   Class java/lang/Throwable

  protected void subscribeActual(io.reactivex.rxjava3.core.Observer<? super T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #7                  // class io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$PublishConnection
      10: astore_2
      11: aload_2
      12: ifnonnull     47
      15: new           #7                  // class io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$PublishConnection
      18: dup
      19: aload_0
      20: getfield      #5                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      23: invokespecial #9                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$PublishConnection."<init>":(Ljava/util/concurrent/atomic/AtomicReference;)V
      26: astore_3
      27: aload_0
      28: getfield      #5                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      31: aload_2
      32: aload_3
      33: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      36: ifne          42
      39: goto          0
      42: aload_3
      43: astore_2
      44: goto          47
      47: new           #19                 // class io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$InnerDisposable
      50: dup
      51: aload_1
      52: aload_2
      53: invokespecial #20                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$InnerDisposable."<init>":(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublish$PublishConnection;)V
      56: astore_3
      57: aload_1
      58: aload_3
      59: invokeinterface #21,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      64: aload_2
      65: aload_3
      66: invokevirtual #22                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$PublishConnection.add:(Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublish$InnerDisposable;)Z
      69: ifeq          85
      72: aload_3
      73: invokevirtual #23                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$InnerDisposable.isDisposed:()Z
      76: ifeq          84
      79: aload_2
      80: aload_3
      81: invokevirtual #24                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$PublishConnection.remove:(Lio/reactivex/rxjava3/internal/operators/observable/ObservablePublish$InnerDisposable;)V
      84: return
      85: aload_2
      86: getfield      #25                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$PublishConnection.error:Ljava/lang/Throwable;
      89: astore        4
      91: aload         4
      93: ifnull        107
      96: aload_1
      97: aload         4
      99: invokeinterface #26,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
     104: goto          113
     107: aload_1
     108: invokeinterface #27,  1           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
     113: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #5                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #7                  // class io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$PublishConnection
      10: astore_1
      11: aload_1
      12: ifnull        32
      15: aload_1
      16: invokevirtual #8                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservablePublish$PublishConnection.isDisposed:()Z
      19: ifeq          32
      22: aload_0
      23: getfield      #5                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      26: aload_1
      27: aconst_null
      28: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      31: pop
      32: return

  public io.reactivex.rxjava3.core.ObservableSource<T> source();
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lio/reactivex/rxjava3/core/ObservableSource;
       4: areturn
}
