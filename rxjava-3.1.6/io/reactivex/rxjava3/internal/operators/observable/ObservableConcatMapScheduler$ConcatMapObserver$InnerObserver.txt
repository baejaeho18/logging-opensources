Compiled from "ObservableConcatMapScheduler.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler$ConcatMapObserver$InnerObserver<U> extends java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> implements io.reactivex.rxjava3.core.Observer<U> {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super U> downstream;

  final io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler$ConcatMapObserver<?, ?> parent;

  io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler$ConcatMapObserver$InnerObserver(io.reactivex.rxjava3.core.Observer<? super U>, io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler$ConcatMapObserver<?, ?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapObserver;
      14: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       5: pop
       6: return

  public void onNext(U);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapObserver;
       4: invokevirtual #6                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapObserver.dispose:()V
       7: aload_0
       8: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      11: aload_1
      12: invokeinterface #7,  2            // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
      17: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapObserver;
       4: invokevirtual #8                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapObserver.innerComplete:()V
       7: return

  void dispose();
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: return
}
