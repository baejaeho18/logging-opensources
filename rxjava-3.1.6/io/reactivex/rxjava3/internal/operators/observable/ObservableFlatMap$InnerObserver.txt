Compiled from "ObservableFlatMap.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap$InnerObserver<T, U> extends java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> implements io.reactivex.rxjava3.core.Observer<U> {
  private static final long serialVersionUID;

  final long id;

  final io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap$MergeObserver<T, U> parent;

  volatile boolean done;

  volatile io.reactivex.rxjava3.operators.SimpleQueue<U> queue;

  int fusionMode;

  io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap$InnerObserver(io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap$MergeObserver<T, U>, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: lload_2
       6: putfield      #2                  // Field id:J
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver;
      14: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       5: ifeq          72
       8: aload_1
       9: instanceof    #5                  // class io/reactivex/rxjava3/operators/QueueDisposable
      12: ifeq          72
      15: aload_1
      16: checkcast     #5                  // class io/reactivex/rxjava3/operators/QueueDisposable
      19: astore_2
      20: aload_2
      21: bipush        7
      23: invokeinterface #6,  2            // InterfaceMethod io/reactivex/rxjava3/operators/QueueDisposable.requestFusion:(I)I
      28: istore_3
      29: iload_3
      30: iconst_1
      31: if_icmpne     57
      34: aload_0
      35: iload_3
      36: putfield      #7                  // Field fusionMode:I
      39: aload_0
      40: aload_2
      41: putfield      #8                  // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      44: aload_0
      45: iconst_1
      46: putfield      #9                  // Field done:Z
      49: aload_0
      50: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver;
      53: invokevirtual #10                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver.drain:()V
      56: return
      57: iload_3
      58: iconst_2
      59: if_icmpne     72
      62: aload_0
      63: iload_3
      64: putfield      #7                  // Field fusionMode:I
      67: aload_0
      68: aload_2
      69: putfield      #8                  // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      72: return

  public void onNext(U);
    Code:
       0: aload_0
       1: getfield      #7                  // Field fusionMode:I
       4: ifne          19
       7: aload_0
       8: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver;
      11: aload_1
      12: aload_0
      13: invokevirtual #11                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver.tryEmit:(Ljava/lang/Object;Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$InnerObserver;)V
      16: goto          26
      19: aload_0
      20: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver;
      23: invokevirtual #10                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver.drain:()V
      26: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver;
       4: getfield      #12                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver.errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       7: aload_1
       8: invokevirtual #13                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      11: ifeq          44
      14: aload_0
      15: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver;
      18: getfield      #14                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver.delayErrors:Z
      21: ifne          32
      24: aload_0
      25: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver;
      28: invokevirtual #15                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver.disposeAll:()Z
      31: pop
      32: aload_0
      33: iconst_1
      34: putfield      #9                  // Field done:Z
      37: aload_0
      38: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver;
      41: invokevirtual #10                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver.drain:()V
      44: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #9                  // Field done:Z
       5: aload_0
       6: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver;
       9: invokevirtual #10                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver.drain:()V
      12: return

  public void dispose();
    Code:
       0: aload_0
       1: invokestatic  #16                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: return
}
