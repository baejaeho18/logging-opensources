Compiled from "ObservableCreate.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableCreate$SerializedEmitter<T> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.ObservableEmitter<T> {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.ObservableEmitter<T> emitter;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable errors;

  final io.reactivex.rxjava3.operators.SpscLinkedArrayQueue<T> queue;

  volatile boolean done;

  io.reactivex.rxjava3.internal.operators.observable.ObservableCreate$SerializedEmitter(io.reactivex.rxjava3.core.ObservableEmitter<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field emitter:Lio/reactivex/rxjava3/core/ObservableEmitter;
       9: aload_0
      10: new           #3                  // class io/reactivex/rxjava3/internal/util/AtomicThrowable
      13: dup
      14: invokespecial #4                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      17: putfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      20: aload_0
      21: new           #6                  // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      24: dup
      25: bipush        16
      27: invokespecial #7                  // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue."<init>":(I)V
      30: putfield      #8                  // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
      33: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifne          19
       7: aload_0
       8: getfield      #2                  // Field emitter:Lio/reactivex/rxjava3/core/ObservableEmitter;
      11: invokeinterface #10,  1           // InterfaceMethod io/reactivex/rxjava3/core/ObservableEmitter.isDisposed:()Z
      16: ifeq          20
      19: return
      20: aload_1
      21: ifnonnull     34
      24: aload_0
      25: ldc           #11                 // String onNext called with a null value.
      27: invokestatic  #12                 // Method io/reactivex/rxjava3/internal/util/ExceptionHelper.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;
      30: invokevirtual #13                 // Method onError:(Ljava/lang/Throwable;)V
      33: return
      34: aload_0
      35: invokevirtual #14                 // Method get:()I
      38: ifne          68
      41: aload_0
      42: iconst_0
      43: iconst_1
      44: invokevirtual #15                 // Method compareAndSet:(II)Z
      47: ifeq          68
      50: aload_0
      51: getfield      #2                  // Field emitter:Lio/reactivex/rxjava3/core/ObservableEmitter;
      54: aload_1
      55: invokeinterface #16,  2           // InterfaceMethod io/reactivex/rxjava3/core/ObservableEmitter.onNext:(Ljava/lang/Object;)V
      60: aload_0
      61: invokevirtual #17                 // Method decrementAndGet:()I
      64: ifne          105
      67: return
      68: aload_0
      69: getfield      #8                  // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
      72: astore_2
      73: aload_2
      74: dup
      75: astore_3
      76: monitorenter
      77: aload_2
      78: aload_1
      79: invokeinterface #18,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.offer:(Ljava/lang/Object;)Z
      84: pop
      85: aload_3
      86: monitorexit
      87: goto          97
      90: astore        4
      92: aload_3
      93: monitorexit
      94: aload         4
      96: athrow
      97: aload_0
      98: invokevirtual #19                 // Method getAndIncrement:()I
     101: ifeq          105
     104: return
     105: aload_0
     106: invokevirtual #20                 // Method drainLoop:()V
     109: return
    Exception table:
       from    to  target type
          77    87    90   any
          90    94    90   any

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method tryOnError:(Ljava/lang/Throwable;)Z
       5: ifne          12
       8: aload_1
       9: invokestatic  #22                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      12: return

  public boolean tryOnError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifne          19
       7: aload_0
       8: getfield      #2                  // Field emitter:Lio/reactivex/rxjava3/core/ObservableEmitter;
      11: invokeinterface #10,  1           // InterfaceMethod io/reactivex/rxjava3/core/ObservableEmitter.isDisposed:()Z
      16: ifeq          21
      19: iconst_0
      20: ireturn
      21: aload_1
      22: ifnonnull     31
      25: ldc           #23                 // String onError called with a null Throwable.
      27: invokestatic  #12                 // Method io/reactivex/rxjava3/internal/util/ExceptionHelper.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;
      30: astore_1
      31: aload_0
      32: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      35: aload_1
      36: invokevirtual #24                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowable:(Ljava/lang/Throwable;)Z
      39: ifeq          53
      42: aload_0
      43: iconst_1
      44: putfield      #9                  // Field done:Z
      47: aload_0
      48: invokevirtual #25                 // Method drain:()V
      51: iconst_1
      52: ireturn
      53: iconst_0
      54: ireturn

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifne          19
       7: aload_0
       8: getfield      #2                  // Field emitter:Lio/reactivex/rxjava3/core/ObservableEmitter;
      11: invokeinterface #10,  1           // InterfaceMethod io/reactivex/rxjava3/core/ObservableEmitter.isDisposed:()Z
      16: ifeq          20
      19: return
      20: aload_0
      21: iconst_1
      22: putfield      #9                  // Field done:Z
      25: aload_0
      26: invokevirtual #25                 // Method drain:()V
      29: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getAndIncrement:()I
       4: ifne          11
       7: aload_0
       8: invokevirtual #20                 // Method drainLoop:()V
      11: return

  void drainLoop();
    Code:
       0: aload_0
       1: getfield      #2                  // Field emitter:Lio/reactivex/rxjava3/core/ObservableEmitter;
       4: astore_1
       5: aload_0
       6: getfield      #8                  // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
       9: astore_2
      10: aload_0
      11: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      14: astore_3
      15: iconst_1
      16: istore        4
      18: aload_1
      19: invokeinterface #10,  1           // InterfaceMethod io/reactivex/rxjava3/core/ObservableEmitter.isDisposed:()Z
      24: ifeq          32
      27: aload_2
      28: invokevirtual #26                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.clear:()V
      31: return
      32: aload_3
      33: invokevirtual #27                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
      36: ifnull        49
      39: aload_2
      40: invokevirtual #26                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.clear:()V
      43: aload_3
      44: aload_1
      45: invokevirtual #28                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Emitter;)V
      48: return
      49: aload_0
      50: getfield      #9                  // Field done:Z
      53: istore        5
      55: aload_2
      56: invokevirtual #29                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.poll:()Ljava/lang/Object;
      59: astore        6
      61: aload         6
      63: ifnonnull     70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: istore        7
      73: iload         5
      75: ifeq          90
      78: iload         7
      80: ifeq          90
      83: aload_1
      84: invokeinterface #30,  1           // InterfaceMethod io/reactivex/rxjava3/core/ObservableEmitter.onComplete:()V
      89: return
      90: iload         7
      92: ifeq          98
      95: goto          109
      98: aload_1
      99: aload         6
     101: invokeinterface #16,  2           // InterfaceMethod io/reactivex/rxjava3/core/ObservableEmitter.onNext:(Ljava/lang/Object;)V
     106: goto          18
     109: aload_0
     110: iload         4
     112: ineg
     113: invokevirtual #31                 // Method addAndGet:(I)I
     116: istore        4
     118: iload         4
     120: ifne          18
     123: goto          126
     126: return

  public void setDisposable(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field emitter:Lio/reactivex/rxjava3/core/ObservableEmitter;
       4: aload_1
       5: invokeinterface #32,  2           // InterfaceMethod io/reactivex/rxjava3/core/ObservableEmitter.setDisposable:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      10: return

  public void setCancellable(io.reactivex.rxjava3.functions.Cancellable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field emitter:Lio/reactivex/rxjava3/core/ObservableEmitter;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod io/reactivex/rxjava3/core/ObservableEmitter.setCancellable:(Lio/reactivex/rxjava3/functions/Cancellable;)V
      10: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field emitter:Lio/reactivex/rxjava3/core/ObservableEmitter;
       4: invokeinterface #10,  1           // InterfaceMethod io/reactivex/rxjava3/core/ObservableEmitter.isDisposed:()Z
       9: ireturn

  public io.reactivex.rxjava3.core.ObservableEmitter<T> serialize();
    Code:
       0: aload_0
       1: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field emitter:Lio/reactivex/rxjava3/core/ObservableEmitter;
       4: invokevirtual #34                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn
}
