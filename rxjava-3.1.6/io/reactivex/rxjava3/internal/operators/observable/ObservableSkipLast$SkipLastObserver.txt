Compiled from "ObservableSkipLast.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$SkipLastObserver<T> extends java.util.ArrayDeque<T> implements io.reactivex.rxjava3.core.Observer<T>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super T> downstream;

  final int skip;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  io.reactivex.rxjava3.internal.operators.observable.ObservableSkipLast$SkipLastObserver(io.reactivex.rxjava3.core.Observer<? super T>, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #1                  // Method java/util/ArrayDeque."<init>":(I)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      10: aload_0
      11: iload_2
      12: putfield      #3                  // Field skip:I
      15: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #5                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      20: aload_0
      21: invokeinterface #6,  2            // InterfaceMethod io/reactivex/rxjava3/core/Observer.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      26: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #4                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: invokeinterface #7,  1            // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
       9: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: invokeinterface #8,  1            // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.isDisposed:()Z
       9: ireturn

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field skip:I
       4: aload_0
       5: invokevirtual #9                  // Method size:()I
       8: if_icmpne     24
      11: aload_0
      12: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      15: aload_0
      16: invokevirtual #10                 // Method poll:()Ljava/lang/Object;
      19: invokeinterface #11,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      24: aload_0
      25: aload_1
      26: invokevirtual #12                 // Method offer:(Ljava/lang/Object;)Z
      29: pop
      30: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: invokeinterface #14,  1           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
       9: return
}
