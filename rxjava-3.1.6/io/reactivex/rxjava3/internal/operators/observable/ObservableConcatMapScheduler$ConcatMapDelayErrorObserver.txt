Compiled from "ObservableConcatMapScheduler.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler$ConcatMapDelayErrorObserver<T, R> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.Observer<T>, io.reactivex.rxjava3.disposables.Disposable, java.lang.Runnable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super R> downstream;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.ObservableSource<? extends R>> mapper;

  final int bufferSize;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable errors;

  final io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler$ConcatMapDelayErrorObserver$DelayErrorInnerObserver<R> observer;

  final boolean tillTheEnd;

  final io.reactivex.rxjava3.core.Scheduler$Worker worker;

  io.reactivex.rxjava3.operators.SimpleQueue<T> queue;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  volatile boolean active;

  volatile boolean done;

  volatile boolean cancelled;

  int sourceMode;

  io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler$ConcatMapDelayErrorObserver(io.reactivex.rxjava3.core.Observer<? super R>, io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.ObservableSource<? extends R>>, int, boolean, io.reactivex.rxjava3.core.Scheduler$Worker);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field bufferSize:I
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field tillTheEnd:Z
      25: aload_0
      26: new           #6                  // class io/reactivex/rxjava3/internal/util/AtomicThrowable
      29: dup
      30: invokespecial #7                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      33: putfield      #8                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      36: aload_0
      37: new           #9                  // class io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver$DelayErrorInnerObserver
      40: dup
      41: aload_1
      42: aload_0
      43: invokespecial #10                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver$DelayErrorInnerObserver."<init>":(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver;)V
      46: putfield      #11                 // Field observer:Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver$DelayErrorInnerObserver;
      49: aload_0
      50: aload         5
      52: putfield      #12                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      55: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #14                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          122
      11: aload_0
      12: aload_1
      13: putfield      #13                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_1
      17: instanceof    #15                 // class io/reactivex/rxjava3/operators/QueueDisposable
      20: ifeq          97
      23: aload_1
      24: checkcast     #15                 // class io/reactivex/rxjava3/operators/QueueDisposable
      27: astore_2
      28: aload_2
      29: iconst_3
      30: invokeinterface #16,  2           // InterfaceMethod io/reactivex/rxjava3/operators/QueueDisposable.requestFusion:(I)I
      35: istore_3
      36: iload_3
      37: iconst_1
      38: if_icmpne     71
      41: aload_0
      42: iload_3
      43: putfield      #17                 // Field sourceMode:I
      46: aload_0
      47: aload_2
      48: putfield      #18                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      51: aload_0
      52: iconst_1
      53: putfield      #19                 // Field done:Z
      56: aload_0
      57: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      60: aload_0
      61: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      66: aload_0
      67: invokevirtual #21                 // Method drain:()V
      70: return
      71: iload_3
      72: iconst_2
      73: if_icmpne     97
      76: aload_0
      77: iload_3
      78: putfield      #17                 // Field sourceMode:I
      81: aload_0
      82: aload_2
      83: putfield      #18                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      86: aload_0
      87: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      90: aload_0
      91: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      96: return
      97: aload_0
      98: new           #22                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
     101: dup
     102: aload_0
     103: getfield      #4                  // Field bufferSize:I
     106: invokespecial #23                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue."<init>":(I)V
     109: putfield      #18                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
     112: aload_0
     113: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
     116: aload_0
     117: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
     122: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #17                 // Field sourceMode:I
       4: ifne          18
       7: aload_0
       8: getfield      #18                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      11: aload_1
      12: invokeinterface #24,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.offer:(Ljava/lang/Object;)Z
      17: pop
      18: aload_0
      19: invokevirtual #21                 // Method drain:()V
      22: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       4: aload_1
       5: invokevirtual #25                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
       8: ifeq          20
      11: aload_0
      12: iconst_1
      13: putfield      #19                 // Field done:Z
      16: aload_0
      17: invokevirtual #21                 // Method drain:()V
      20: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #19                 // Field done:Z
       5: aload_0
       6: invokevirtual #21                 // Method drain:()V
       9: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #26                 // Field cancelled:Z
       4: ireturn

  public void dispose();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #26                 // Field cancelled:Z
       5: aload_0
       6: getfield      #13                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       9: invokeinterface #27,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      14: aload_0
      15: getfield      #11                 // Field observer:Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver$DelayErrorInnerObserver;
      18: invokevirtual #28                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver$DelayErrorInnerObserver.dispose:()V
      21: aload_0
      22: getfield      #12                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      25: invokevirtual #29                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      28: aload_0
      29: getfield      #8                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      32: invokevirtual #30                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      35: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #12                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      12: aload_0
      13: invokevirtual #32                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedule:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/disposables/Disposable;
      16: pop
      17: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: astore_1
       5: aload_0
       6: getfield      #18                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
       9: astore_2
      10: aload_0
      11: getfield      #8                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      14: astore_3
      15: aload_0
      16: getfield      #33                 // Field active:Z
      19: ifne          334
      22: aload_0
      23: getfield      #26                 // Field cancelled:Z
      26: ifeq          36
      29: aload_2
      30: invokeinterface #34,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.clear:()V
      35: return
      36: aload_0
      37: getfield      #5                  // Field tillTheEnd:Z
      40: ifne          81
      43: aload_3
      44: invokevirtual #35                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
      47: checkcast     #36                 // class java/lang/Throwable
      50: astore        4
      52: aload         4
      54: ifnull        81
      57: aload_2
      58: invokeinterface #34,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.clear:()V
      63: aload_0
      64: iconst_1
      65: putfield      #26                 // Field cancelled:Z
      68: aload_3
      69: aload_1
      70: invokevirtual #37                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V
      73: aload_0
      74: getfield      #12                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      77: invokevirtual #29                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      80: return
      81: aload_0
      82: getfield      #19                 // Field done:Z
      85: istore        4
      87: aload_2
      88: invokeinterface #38,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.poll:()Ljava/lang/Object;
      93: astore        5
      95: goto          139
      98: astore        6
     100: aload         6
     102: invokestatic  #39                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     105: aload_0
     106: iconst_1
     107: putfield      #26                 // Field cancelled:Z
     110: aload_0
     111: getfield      #13                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
     114: invokeinterface #27,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
     119: aload_3
     120: aload         6
     122: invokevirtual #25                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     125: pop
     126: aload_3
     127: aload_1
     128: invokevirtual #37                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V
     131: aload_0
     132: getfield      #12                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     135: invokevirtual #29                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
     138: return
     139: aload         5
     141: ifnonnull     148
     144: iconst_1
     145: goto          149
     148: iconst_0
     149: istore        6
     151: iload         4
     153: ifeq          179
     156: iload         6
     158: ifeq          179
     161: aload_0
     162: iconst_1
     163: putfield      #26                 // Field cancelled:Z
     166: aload_3
     167: aload_1
     168: invokevirtual #37                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V
     171: aload_0
     172: getfield      #12                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     175: invokevirtual #29                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
     178: return
     179: iload         6
     181: ifne          334
     184: aload_0
     185: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
     188: aload         5
     190: invokeinterface #40,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     195: ldc           #41                 // String The mapper returned a null ObservableSource
     197: invokestatic  #42                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     200: checkcast     #43                 // class io/reactivex/rxjava3/core/ObservableSource
     203: astore        7
     205: goto          255
     208: astore        8
     210: aload         8
     212: invokestatic  #39                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     215: aload_0
     216: iconst_1
     217: putfield      #26                 // Field cancelled:Z
     220: aload_0
     221: getfield      #13                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
     224: invokeinterface #27,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
     229: aload_2
     230: invokeinterface #34,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.clear:()V
     235: aload_3
     236: aload         8
     238: invokevirtual #25                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     241: pop
     242: aload_3
     243: aload_1
     244: invokevirtual #37                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V
     247: aload_0
     248: getfield      #12                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     251: invokevirtual #29                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
     254: return
     255: aload         7
     257: instanceof    #44                 // class io/reactivex/rxjava3/functions/Supplier
     260: ifeq          318
     263: aload         7
     265: checkcast     #44                 // class io/reactivex/rxjava3/functions/Supplier
     268: invokeinterface #45,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
     273: astore        8
     275: goto          295
     278: astore        9
     280: aload         9
     282: invokestatic  #39                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     285: aload_3
     286: aload         9
     288: invokevirtual #25                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     291: pop
     292: goto          15
     295: aload         8
     297: ifnull        15
     300: aload_0
     301: getfield      #26                 // Field cancelled:Z
     304: ifne          15
     307: aload_1
     308: aload         8
     310: invokeinterface #46,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
     315: goto          15
     318: aload_0
     319: iconst_1
     320: putfield      #33                 // Field active:Z
     323: aload         7
     325: aload_0
     326: getfield      #11                 // Field observer:Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver$DelayErrorInnerObserver;
     329: invokeinterface #47,  2           // InterfaceMethod io/reactivex/rxjava3/core/ObservableSource.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
     334: aload_0
     335: invokevirtual #48                 // Method decrementAndGet:()I
     338: ifne          15
     341: goto          344
     344: return
    Exception table:
       from    to  target type
          87    95    98   Class java/lang/Throwable
         184   205   208   Class java/lang/Throwable
         263   275   278   Class java/lang/Throwable
}
