Compiled from "ObservableWithLatestFromMany.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver extends java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> implements io.reactivex.rxjava3.core.Observer<java.lang.Object> {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver<?, ?> parent;

  final int index;

  boolean hasValue;

  io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver(io.reactivex.rxjava3.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver<?, ?>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field index:I
      14: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       5: pop
       6: return

  public void onNext(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field hasValue:Z
       4: ifne          12
       7: aload_0
       8: iconst_1
       9: putfield      #5                  // Field hasValue:Z
      12: aload_0
      13: getfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver;
      16: aload_0
      17: getfield      #3                  // Field index:I
      20: aload_1
      21: invokevirtual #6                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver.innerNext:(ILjava/lang/Object;)V
      24: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver;
       4: aload_0
       5: getfield      #3                  // Field index:I
       8: aload_1
       9: invokevirtual #7                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver.innerError:(ILjava/lang/Throwable;)V
      12: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver;
       4: aload_0
       5: getfield      #3                  // Field index:I
       8: aload_0
       9: getfield      #5                  // Field hasValue:Z
      12: invokevirtual #8                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWithLatestFromMany$WithLatestFromObserver.innerComplete:(IZ)V
      15: return

  public void dispose();
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: return
}
