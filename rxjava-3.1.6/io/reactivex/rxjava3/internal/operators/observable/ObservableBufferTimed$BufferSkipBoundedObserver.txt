Compiled from "ObservableBufferTimed.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver<T, U extends java.util.Collection<? super T>> extends io.reactivex.rxjava3.internal.observers.QueueDrainObserver<T, U, U> implements java.lang.Runnable, io.reactivex.rxjava3.disposables.Disposable {
  final io.reactivex.rxjava3.functions.Supplier<U> bufferSupplier;

  final long timespan;

  final long timeskip;

  final java.util.concurrent.TimeUnit unit;

  final io.reactivex.rxjava3.core.Scheduler$Worker w;

  final java.util.List<U> buffers;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver(io.reactivex.rxjava3.core.Observer<? super U>, io.reactivex.rxjava3.functions.Supplier<U>, long, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler$Worker);
    Code:
       0: aload_0
       1: aload_1
       2: new           #2                  // class io/reactivex/rxjava3/internal/queue/MpscLinkedQueue
       5: dup
       6: invokespecial #3                  // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue."<init>":()V
       9: invokespecial #4                  // Method io/reactivex/rxjava3/internal/observers/QueueDrainObserver."<init>":(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/operators/SimplePlainQueue;)V
      12: aload_0
      13: aload_2
      14: putfield      #5                  // Field bufferSupplier:Lio/reactivex/rxjava3/functions/Supplier;
      17: aload_0
      18: lload_3
      19: putfield      #6                  // Field timespan:J
      22: aload_0
      23: lload         5
      25: putfield      #7                  // Field timeskip:J
      28: aload_0
      29: aload         7
      31: putfield      #8                  // Field unit:Ljava/util/concurrent/TimeUnit;
      34: aload_0
      35: aload         8
      37: putfield      #9                  // Field w:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      40: aload_0
      41: new           #10                 // class java/util/LinkedList
      44: dup
      45: invokespecial #11                 // Method java/util/LinkedList."<init>":()V
      48: putfield      #12                 // Field buffers:Ljava/util/List;
      51: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #14                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          131
      11: aload_0
      12: aload_1
      13: putfield      #13                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_0
      17: getfield      #5                  // Field bufferSupplier:Lio/reactivex/rxjava3/functions/Supplier;
      20: invokeinterface #15,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
      25: ldc           #16                 // String The buffer supplied is null
      27: invokestatic  #17                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      30: checkcast     #18                 // class java/util/Collection
      33: astore_2
      34: goto          64
      37: astore_3
      38: aload_3
      39: invokestatic  #20                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      42: aload_1
      43: invokeinterface #21,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      48: aload_3
      49: aload_0
      50: getfield      #22                 // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      53: invokestatic  #23                 // Method io/reactivex/rxjava3/internal/disposables/EmptyDisposable.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V
      56: aload_0
      57: getfield      #9                  // Field w:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      60: invokevirtual #24                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      63: return
      64: aload_0
      65: getfield      #12                 // Field buffers:Ljava/util/List;
      68: aload_2
      69: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      74: pop
      75: aload_0
      76: getfield      #22                 // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      79: aload_0
      80: invokeinterface #26,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      85: aload_0
      86: getfield      #9                  // Field w:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      89: aload_0
      90: aload_0
      91: getfield      #7                  // Field timeskip:J
      94: aload_0
      95: getfield      #7                  // Field timeskip:J
      98: aload_0
      99: getfield      #8                  // Field unit:Ljava/util/concurrent/TimeUnit;
     102: invokevirtual #27                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedulePeriodically:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
     105: pop
     106: aload_0
     107: getfield      #9                  // Field w:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     110: new           #28                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBufferEmit
     113: dup
     114: aload_0
     115: aload_2
     116: invokespecial #29                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBufferEmit."<init>":(Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$BufferSkipBoundedObserver;Ljava/util/Collection;)V
     119: aload_0
     120: getfield      #6                  // Field timespan:J
     123: aload_0
     124: getfield      #8                  // Field unit:Ljava/util/concurrent/TimeUnit;
     127: invokevirtual #30                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
     130: pop
     131: return
    Exception table:
       from    to  target type
          16    34    37   Class java/lang/Throwable

  public void onNext(T);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #12                 // Field buffers:Ljava/util/List;
       8: invokeinterface #31,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          46
      23: aload_3
      24: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #18                 // class java/util/Collection
      32: astore        4
      34: aload         4
      36: aload_1
      37: invokeinterface #34,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      42: pop
      43: goto          14
      46: aload_2
      47: monitorexit
      48: goto          58
      51: astore        5
      53: aload_2
      54: monitorexit
      55: aload         5
      57: athrow
      58: return
    Exception table:
       from    to  target type
           4    48    51   any
          51    55    51   any

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #35                 // Field done:Z
       5: aload_0
       6: invokevirtual #36                 // Method clear:()V
       9: aload_0
      10: getfield      #22                 // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      13: aload_1
      14: invokeinterface #37,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
      19: aload_0
      20: getfield      #9                  // Field w:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      23: invokevirtual #24                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      26: return

  public void onComplete();
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: new           #38                 // class java/util/ArrayList
       7: dup
       8: aload_0
       9: getfield      #12                 // Field buffers:Ljava/util/List;
      12: invokespecial #39                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      15: astore_1
      16: aload_0
      17: getfield      #12                 // Field buffers:Ljava/util/List;
      20: invokeinterface #40,  1           // InterfaceMethod java/util/List.clear:()V
      25: aload_2
      26: monitorexit
      27: goto          35
      30: astore_3
      31: aload_2
      32: monitorexit
      33: aload_3
      34: athrow
      35: aload_1
      36: invokeinterface #31,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      41: astore_2
      42: aload_2
      43: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          75
      51: aload_2
      52: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #18                 // class java/util/Collection
      60: astore_3
      61: aload_0
      62: getfield      #41                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      65: aload_3
      66: invokeinterface #42,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      71: pop
      72: goto          42
      75: aload_0
      76: iconst_1
      77: putfield      #35                 // Field done:Z
      80: aload_0
      81: invokevirtual #43                 // Method enter:()Z
      84: ifeq          104
      87: aload_0
      88: getfield      #41                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      91: aload_0
      92: getfield      #22                 // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      95: iconst_0
      96: aload_0
      97: getfield      #9                  // Field w:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     100: aload_0
     101: invokestatic  #44                 // Method io/reactivex/rxjava3/internal/util/QueueDrainHelper.drainLoop:(Lio/reactivex/rxjava3/operators/SimplePlainQueue;Lio/reactivex/rxjava3/core/Observer;ZLio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;)V
     104: return
    Exception table:
       from    to  target type
           4    27    30   any
          30    33    30   any

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #45                 // Field cancelled:Z
       4: ifne          32
       7: aload_0
       8: iconst_1
       9: putfield      #45                 // Field cancelled:Z
      12: aload_0
      13: invokevirtual #36                 // Method clear:()V
      16: aload_0
      17: getfield      #13                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      20: invokeinterface #21,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      25: aload_0
      26: getfield      #9                  // Field w:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      29: invokevirtual #24                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      32: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #45                 // Field cancelled:Z
       4: ireturn

  void clear();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #12                 // Field buffers:Ljava/util/List;
       8: invokeinterface #40,  1           // InterfaceMethod java/util/List.clear:()V
      13: aload_1
      14: monitorexit
      15: goto          23
      18: astore_2
      19: aload_1
      20: monitorexit
      21: aload_2
      22: athrow
      23: return
    Exception table:
       from    to  target type
           4    15    18   any
          18    21    18   any

  public void run();
    Code:
       0: aload_0
       1: getfield      #45                 // Field cancelled:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #5                  // Field bufferSupplier:Lio/reactivex/rxjava3/functions/Supplier;
      12: invokeinterface #15,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
      17: ldc           #46                 // String The bufferSupplier returned a null buffer
      19: invokestatic  #17                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      22: checkcast     #18                 // class java/util/Collection
      25: astore_1
      26: goto          49
      29: astore_2
      30: aload_2
      31: invokestatic  #20                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      34: aload_0
      35: getfield      #22                 // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      38: aload_2
      39: invokeinterface #37,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
      44: aload_0
      45: invokevirtual #47                 // Method dispose:()V
      48: return
      49: aload_0
      50: dup
      51: astore_2
      52: monitorenter
      53: aload_0
      54: getfield      #45                 // Field cancelled:Z
      57: ifeq          63
      60: aload_2
      61: monitorexit
      62: return
      63: aload_0
      64: getfield      #12                 // Field buffers:Ljava/util/List;
      67: aload_1
      68: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      73: pop
      74: aload_2
      75: monitorexit
      76: goto          84
      79: astore_3
      80: aload_2
      81: monitorexit
      82: aload_3
      83: athrow
      84: aload_0
      85: getfield      #9                  // Field w:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      88: new           #48                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer
      91: dup
      92: aload_0
      93: aload_1
      94: invokespecial #49                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer."<init>":(Lio/reactivex/rxjava3/internal/operators/observable/ObservableBufferTimed$BufferSkipBoundedObserver;Ljava/util/Collection;)V
      97: aload_0
      98: getfield      #6                  // Field timespan:J
     101: aload_0
     102: getfield      #8                  // Field unit:Ljava/util/concurrent/TimeUnit;
     105: invokevirtual #30                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
     108: pop
     109: return
    Exception table:
       from    to  target type
           8    26    29   Class java/lang/Throwable
          53    62    79   any
          63    76    79   any
          79    82    79   any

  public void accept(io.reactivex.rxjava3.core.Observer<? super U>, U);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #50,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
       7: return

  public void accept(io.reactivex.rxjava3.core.Observer, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #18                 // class java/util/Collection
       6: invokevirtual #51                 // Method accept:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/Collection;)V
       9: return

  static void access$000(io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver, java.lang.Object, boolean, io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokevirtual #1                  // Method fastPathOrderedEmit:(Ljava/lang/Object;ZLio/reactivex/rxjava3/disposables/Disposable;)V
       7: return

  static void access$100(io.reactivex.rxjava3.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver, java.lang.Object, boolean, io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokevirtual #1                  // Method fastPathOrderedEmit:(Ljava/lang/Object;ZLio/reactivex/rxjava3/disposables/Disposable;)V
       7: return
}
