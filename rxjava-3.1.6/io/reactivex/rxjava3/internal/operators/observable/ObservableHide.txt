Compiled from "ObservableHide.java"
public final class io.reactivex.rxjava3.internal.operators.observable.ObservableHide<T> extends io.reactivex.rxjava3.internal.operators.observable.AbstractObservableWithUpstream<T, T> {
  public io.reactivex.rxjava3.internal.operators.observable.ObservableHide(io.reactivex.rxjava3.core.ObservableSource<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/observable/AbstractObservableWithUpstream."<init>":(Lio/reactivex/rxjava3/core/ObservableSource;)V
       5: return

  protected void subscribeActual(io.reactivex.rxjava3.core.Observer<? super T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lio/reactivex/rxjava3/core/ObservableSource;
       4: new           #3                  // class io/reactivex/rxjava3/internal/operators/observable/ObservableHide$HideDisposable
       7: dup
       8: aload_1
       9: invokespecial #4                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservableHide$HideDisposable."<init>":(Lio/reactivex/rxjava3/core/Observer;)V
      12: invokeinterface #5,  2            // InterfaceMethod io/reactivex/rxjava3/core/ObservableSource.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
      17: return
}
