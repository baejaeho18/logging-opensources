Compiled from "ObservableSwitchMap.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver<T, R> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.Observer<T>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super R> downstream;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.ObservableSource<? extends R>> mapper;

  final int bufferSize;

  final boolean delayErrors;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable errors;

  volatile boolean done;

  volatile boolean cancelled;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver<T, R>> active;

  static final io.reactivex.rxjava3.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver<java.lang.Object, java.lang.Object> CANCELLED;

  volatile long unique;

  io.reactivex.rxjava3.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver(io.reactivex.rxjava3.core.Observer<? super R>, io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.ObservableSource<? extends R>>, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      25: aload_0
      26: iload_3
      27: putfield      #7                  // Field bufferSize:I
      30: aload_0
      31: iload         4
      33: putfield      #8                  // Field delayErrors:Z
      36: aload_0
      37: new           #9                  // class io/reactivex/rxjava3/internal/util/AtomicThrowable
      40: dup
      41: invokespecial #10                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      44: putfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      47: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #12                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #13                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #12                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_0
      17: getfield      #5                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      20: aload_0
      21: invokeinterface #14,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #15                 // Field unique:J
       4: lconst_1
       5: ladd
       6: lstore_2
       7: aload_0
       8: lload_2
       9: putfield      #15                 // Field unique:J
      12: aload_0
      13: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
      16: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      19: checkcast     #17                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver
      22: astore        4
      24: aload         4
      26: ifnull        34
      29: aload         4
      31: invokevirtual #18                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver.cancel:()V
      34: aload_0
      35: getfield      #6                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      38: aload_1
      39: invokeinterface #19,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      44: ldc           #20                 // String The ObservableSource returned is null
      46: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      49: checkcast     #22                 // class io/reactivex/rxjava3/core/ObservableSource
      52: astore        5
      54: goto          80
      57: astore        6
      59: aload         6
      61: invokestatic  #24                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      64: aload_0
      65: getfield      #12                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      68: invokeinterface #25,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      73: aload_0
      74: aload         6
      76: invokevirtual #26                 // Method onError:(Ljava/lang/Throwable;)V
      79: return
      80: new           #17                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver
      83: dup
      84: aload_0
      85: lload_2
      86: aload_0
      87: getfield      #7                  // Field bufferSize:I
      90: invokespecial #27                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapObserver;JI)V
      93: astore        6
      95: aload_0
      96: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
      99: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     102: checkcast     #17                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver
     105: astore        4
     107: aload         4
     109: getstatic     #28                 // Field CANCELLED:Lio/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver;
     112: if_acmpne     118
     115: goto          144
     118: aload_0
     119: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
     122: aload         4
     124: aload         6
     126: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     129: ifeq          95
     132: aload         5
     134: aload         6
     136: invokeinterface #30,  2           // InterfaceMethod io/reactivex/rxjava3/core/ObservableSource.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
     141: goto          144
     144: return
    Exception table:
       from    to  target type
          34    54    57   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #31                 // Field done:Z
       4: ifne          41
       7: aload_0
       8: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      11: aload_1
      12: invokevirtual #32                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowable:(Ljava/lang/Throwable;)Z
      15: ifeq          41
      18: aload_0
      19: getfield      #8                  // Field delayErrors:Z
      22: ifne          29
      25: aload_0
      26: invokevirtual #33                 // Method disposeInner:()V
      29: aload_0
      30: iconst_1
      31: putfield      #31                 // Field done:Z
      34: aload_0
      35: invokevirtual #34                 // Method drain:()V
      38: goto          45
      41: aload_1
      42: invokestatic  #35                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      45: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #31                 // Field done:Z
       4: ifne          16
       7: aload_0
       8: iconst_1
       9: putfield      #31                 // Field done:Z
      12: aload_0
      13: invokevirtual #34                 // Method drain:()V
      16: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #36                 // Field cancelled:Z
       4: ifne          32
       7: aload_0
       8: iconst_1
       9: putfield      #36                 // Field cancelled:Z
      12: aload_0
      13: getfield      #12                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: invokeinterface #25,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      21: aload_0
      22: invokevirtual #33                 // Method disposeInner:()V
      25: aload_0
      26: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      29: invokevirtual #37                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      32: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #36                 // Field cancelled:Z
       4: ireturn

  void disposeInner();
    Code:
       0: aload_0
       1: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
       4: getstatic     #28                 // Field CANCELLED:Lio/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver;
       7: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver
      13: astore_1
      14: aload_1
      15: ifnull        22
      18: aload_1
      19: invokevirtual #18                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver.cancel:()V
      22: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #5                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      12: astore_1
      13: aload_0
      14: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
      17: astore_2
      18: aload_0
      19: getfield      #8                  // Field delayErrors:Z
      22: istore_3
      23: iconst_1
      24: istore        4
      26: aload_0
      27: getfield      #36                 // Field cancelled:Z
      30: ifeq          34
      33: return
      34: aload_0
      35: getfield      #31                 // Field done:Z
      38: ifeq          137
      41: aload_2
      42: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      45: ifnonnull     52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: istore        5
      55: iload_3
      56: ifeq          99
      59: iload         5
      61: ifeq          137
      64: aload_0
      65: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      68: invokevirtual #40                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
      71: checkcast     #23                 // class java/lang/Throwable
      74: astore        6
      76: aload         6
      78: ifnull        92
      81: aload_1
      82: aload         6
      84: invokeinterface #41,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
      89: goto          98
      92: aload_1
      93: invokeinterface #42,  1           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
      98: return
      99: aload_0
     100: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     103: invokevirtual #40                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
     106: checkcast     #23                 // class java/lang/Throwable
     109: astore        6
     111: aload         6
     113: ifnull        125
     116: aload_0
     117: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     120: aload_1
     121: invokevirtual #43                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V
     124: return
     125: iload         5
     127: ifeq          137
     130: aload_1
     131: invokeinterface #42,  1           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
     136: return
     137: aload_2
     138: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     141: checkcast     #17                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver
     144: astore        5
     146: aload         5
     148: ifnull        362
     151: aload         5
     153: getfield      #44                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver.queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
     156: astore        6
     158: aload         6
     160: ifnull        362
     163: iconst_0
     164: istore        7
     166: aload_0
     167: getfield      #36                 // Field cancelled:Z
     170: ifeq          174
     173: return
     174: aload         5
     176: aload_2
     177: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     180: if_acmpeq     189
     183: iconst_1
     184: istore        7
     186: goto          354
     189: iload_3
     190: ifne          219
     193: aload_0
     194: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     197: invokevirtual #40                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
     200: checkcast     #23                 // class java/lang/Throwable
     203: astore        8
     205: aload         8
     207: ifnull        219
     210: aload_0
     211: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     214: aload_1
     215: invokevirtual #43                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V
     218: return
     219: aload         5
     221: getfield      #45                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver.done:Z
     224: istore        8
     226: aload         6
     228: invokeinterface #46,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.poll:()Ljava/lang/Object;
     233: astore        9
     235: goto          299
     238: astore        10
     240: aload         10
     242: invokestatic  #24                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     245: aload_0
     246: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     249: aload         10
     251: invokevirtual #47                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     254: pop
     255: aload_2
     256: aload         5
     258: aconst_null
     259: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     262: pop
     263: iload_3
     264: ifne          288
     267: aload_0
     268: invokevirtual #33                 // Method disposeInner:()V
     271: aload_0
     272: getfield      #12                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
     275: invokeinterface #25,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
     280: aload_0
     281: iconst_1
     282: putfield      #31                 // Field done:Z
     285: goto          293
     288: aload         5
     290: invokevirtual #18                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver.cancel:()V
     293: aconst_null
     294: astore        9
     296: iconst_1
     297: istore        7
     299: aload         9
     301: ifnonnull     308
     304: iconst_1
     305: goto          309
     308: iconst_0
     309: istore        10
     311: iload         8
     313: ifeq          335
     316: iload         10
     318: ifeq          335
     321: aload_2
     322: aload         5
     324: aconst_null
     325: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     328: pop
     329: iconst_1
     330: istore        7
     332: goto          354
     335: iload         10
     337: ifeq          343
     340: goto          354
     343: aload_1
     344: aload         9
     346: invokeinterface #48,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
     351: goto          166
     354: iload         7
     356: ifeq          362
     359: goto          26
     362: aload_0
     363: iload         4
     365: ineg
     366: invokevirtual #49                 // Method addAndGet:(I)I
     369: istore        4
     371: iload         4
     373: ifne          379
     376: goto          382
     379: goto          26
     382: return
    Exception table:
       from    to  target type
         226   235   238   Class java/lang/Throwable

  void innerError(io.reactivex.rxjava3.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver<T, R>, java.lang.Throwable);
    Code:
       0: aload_1
       1: getfield      #50                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver.index:J
       4: aload_0
       5: getfield      #15                 // Field unique:J
       8: lcmp
       9: ifne          56
      12: aload_0
      13: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      16: aload_2
      17: invokevirtual #32                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowable:(Ljava/lang/Throwable;)Z
      20: ifeq          56
      23: aload_0
      24: getfield      #8                  // Field delayErrors:Z
      27: ifne          44
      30: aload_0
      31: getfield      #12                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      34: invokeinterface #25,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      39: aload_0
      40: iconst_1
      41: putfield      #31                 // Field done:Z
      44: aload_1
      45: iconst_1
      46: putfield      #45                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver.done:Z
      49: aload_0
      50: invokevirtual #34                 // Method drain:()V
      53: goto          60
      56: aload_2
      57: invokestatic  #35                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      60: return

  static {};
    Code:
       0: new           #17                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver
       3: dup
       4: aconst_null
       5: ldc2_w        #51                 // long -1l
       8: iconst_1
       9: invokespecial #27                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapObserver;JI)V
      12: putstatic     #28                 // Field CANCELLED:Lio/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver;
      15: getstatic     #28                 // Field CANCELLED:Lio/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver;
      18: invokevirtual #18                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableSwitchMap$SwitchMapInnerObserver.cancel:()V
      21: return
}
