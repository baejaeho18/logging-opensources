Compiled from "ObservableFlatMap.java"
public final class io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap<T, U> extends io.reactivex.rxjava3.internal.operators.observable.AbstractObservableWithUpstream<T, U> {
  final io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.ObservableSource<? extends U>> mapper;

  final boolean delayErrors;

  final int maxConcurrency;

  final int bufferSize;

  public io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMap(io.reactivex.rxjava3.core.ObservableSource<T>, io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.ObservableSource<? extends U>>, boolean, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/observable/AbstractObservableWithUpstream."<init>":(Lio/reactivex/rxjava3/core/ObservableSource;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field delayErrors:Z
      15: aload_0
      16: iload         4
      18: putfield      #4                  // Field maxConcurrency:I
      21: aload_0
      22: iload         5
      24: putfield      #5                  // Field bufferSize:I
      27: return

  public void subscribeActual(io.reactivex.rxjava3.core.Observer<? super U>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field source:Lio/reactivex/rxjava3/core/ObservableSource;
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
       9: invokestatic  #7                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservableScalarXMap.tryScalarXMapSubscribe:(Lio/reactivex/rxjava3/core/ObservableSource;Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;)Z
      12: ifeq          16
      15: return
      16: aload_0
      17: getfield      #6                  // Field source:Lio/reactivex/rxjava3/core/ObservableSource;
      20: new           #8                  // class io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver
      23: dup
      24: aload_1
      25: aload_0
      26: getfield      #2                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      29: aload_0
      30: getfield      #3                  // Field delayErrors:Z
      33: aload_0
      34: getfield      #4                  // Field maxConcurrency:I
      37: aload_0
      38: getfield      #5                  // Field bufferSize:I
      41: invokespecial #9                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMap$MergeObserver."<init>":(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/functions/Function;ZII)V
      44: invokeinterface #10,  2           // InterfaceMethod io/reactivex/rxjava3/core/ObservableSource.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
      49: return
}
