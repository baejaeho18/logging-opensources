Compiled from "ObservableIntervalRange.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange$IntervalRangeObserver extends java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> implements io.reactivex.rxjava3.disposables.Disposable, java.lang.Runnable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super java.lang.Long> downstream;

  final long end;

  long count;

  io.reactivex.rxjava3.internal.operators.observable.ObservableIntervalRange$IntervalRangeObserver(io.reactivex.rxjava3.core.Observer<? super java.lang.Long>, long, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field count:J
      14: aload_0
      15: lload         4
      17: putfield      #4                  // Field end:J
      20: return

  public void dispose();
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method get:()Ljava/lang/Object;
       4: getstatic     #7                  // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void run();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method isDisposed:()Z
       4: ifne          63
       7: aload_0
       8: getfield      #3                  // Field count:J
      11: lstore_1
      12: aload_0
      13: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      16: lload_1
      17: invokestatic  #9                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      20: invokeinterface #10,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      25: lload_1
      26: aload_0
      27: getfield      #4                  // Field end:J
      30: lcmp
      31: ifne          56
      34: aload_0
      35: invokevirtual #8                  // Method isDisposed:()Z
      38: ifne          50
      41: aload_0
      42: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      45: invokeinterface #11,  1           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
      50: aload_0
      51: invokestatic  #5                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      54: pop
      55: return
      56: aload_0
      57: lload_1
      58: lconst_1
      59: ladd
      60: putfield      #3                  // Field count:J
      63: return

  public void setResource(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       5: pop
       6: return
}
