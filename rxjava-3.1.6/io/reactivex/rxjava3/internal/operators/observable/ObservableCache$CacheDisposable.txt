Compiled from "ObservableCache.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableCache$CacheDisposable<T> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super T> downstream;

  final io.reactivex.rxjava3.internal.operators.observable.ObservableCache<T> parent;

  io.reactivex.rxjava3.internal.operators.observable.ObservableCache$Node<T> node;

  int offset;

  long index;

  volatile boolean disposed;

  io.reactivex.rxjava3.internal.operators.observable.ObservableCache$CacheDisposable(io.reactivex.rxjava3.core.Observer<? super T>, io.reactivex.rxjava3.internal.operators.observable.ObservableCache<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableCache;
      14: aload_0
      15: aload_2
      16: getfield      #4                  // Field io/reactivex/rxjava3/internal/operators/observable/ObservableCache.head:Lio/reactivex/rxjava3/internal/operators/observable/ObservableCache$Node;
      19: putfield      #5                  // Field node:Lio/reactivex/rxjava3/internal/operators/observable/ObservableCache$Node;
      22: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #6                  // Field disposed:Z
       4: ifne          20
       7: aload_0
       8: iconst_1
       9: putfield      #6                  // Field disposed:Z
      12: aload_0
      13: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableCache;
      16: aload_0
      17: invokevirtual #7                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservableCache.remove:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableCache$CacheDisposable;)V
      20: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field disposed:Z
       4: ireturn
}
