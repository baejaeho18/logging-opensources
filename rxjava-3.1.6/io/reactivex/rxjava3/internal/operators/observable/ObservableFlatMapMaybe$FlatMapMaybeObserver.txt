Compiled from "ObservableFlatMapMaybe.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver<T, R> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.Observer<T>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super R> downstream;

  final boolean delayErrors;

  final io.reactivex.rxjava3.disposables.CompositeDisposable set;

  final java.util.concurrent.atomic.AtomicInteger active;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable errors;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.MaybeSource<? extends R>> mapper;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.operators.SpscLinkedArrayQueue<R>> queue;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  volatile boolean cancelled;

  io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver(io.reactivex.rxjava3.core.Observer<? super R>, io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.MaybeSource<? extends R>>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field delayErrors:Z
      19: aload_0
      20: new           #5                  // class io/reactivex/rxjava3/disposables/CompositeDisposable
      23: dup
      24: invokespecial #6                  // Method io/reactivex/rxjava3/disposables/CompositeDisposable."<init>":()V
      27: putfield      #7                  // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      30: aload_0
      31: new           #8                  // class io/reactivex/rxjava3/internal/util/AtomicThrowable
      34: dup
      35: invokespecial #9                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      38: putfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      41: aload_0
      42: new           #11                 // class java/util/concurrent/atomic/AtomicInteger
      45: dup
      46: iconst_1
      47: invokespecial #12                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      50: putfield      #13                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      53: aload_0
      54: new           #14                 // class java/util/concurrent/atomic/AtomicReference
      57: dup
      58: invokespecial #15                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      61: putfield      #16                 // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
      64: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #17                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #18                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #17                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      20: aload_0
      21: invokeinterface #19,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ldc           #21                 // String The mapper returned a null MaybeSource
      12: invokestatic  #22                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: checkcast     #23                 // class io/reactivex/rxjava3/core/MaybeSource
      18: astore_2
      19: goto          42
      22: astore_3
      23: aload_3
      24: invokestatic  #25                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      27: aload_0
      28: getfield      #17                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      31: invokeinterface #26,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      36: aload_0
      37: aload_3
      38: invokevirtual #27                 // Method onError:(Ljava/lang/Throwable;)V
      41: return
      42: aload_0
      43: getfield      #13                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      46: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      49: pop
      50: new           #29                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver
      53: dup
      54: aload_0
      55: invokespecial #30                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/observable/ObservableFlatMapMaybe$FlatMapMaybeObserver;)V
      58: astore_3
      59: aload_0
      60: getfield      #31                 // Field cancelled:Z
      63: ifne          84
      66: aload_0
      67: getfield      #7                  // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      70: aload_3
      71: invokevirtual #32                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      74: ifeq          84
      77: aload_2
      78: aload_3
      79: invokeinterface #33,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeSource.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V
      84: return
    Exception table:
       from    to  target type
           0    19    22   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: pop
       8: aload_0
       9: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      12: aload_1
      13: invokevirtual #35                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      16: ifeq          37
      19: aload_0
      20: getfield      #4                  // Field delayErrors:Z
      23: ifne          33
      26: aload_0
      27: getfield      #7                  // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      30: invokevirtual #36                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      33: aload_0
      34: invokevirtual #37                 // Method drain:()V
      37: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #13                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: pop
       8: aload_0
       9: invokevirtual #37                 // Method drain:()V
      12: return

  public void dispose();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #31                 // Field cancelled:Z
       5: aload_0
       6: getfield      #17                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       9: invokeinterface #26,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      14: aload_0
      15: getfield      #7                  // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      18: invokevirtual #36                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      21: aload_0
      22: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      25: invokevirtual #38                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      28: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #31                 // Field cancelled:Z
       4: ireturn

  void innerSuccess(io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver<T, R>.InnerObserver, R);
    Code:
       0: aload_0
       1: getfield      #7                  // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
       4: aload_1
       5: invokevirtual #39                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: pop
       9: aload_0
      10: invokevirtual #40                 // Method get:()I
      13: ifne          103
      16: aload_0
      17: iconst_0
      18: iconst_1
      19: invokevirtual #41                 // Method compareAndSet:(II)Z
      22: ifeq          103
      25: aload_0
      26: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      29: aload_2
      30: invokeinterface #42,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #13                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      39: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      42: ifne          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: istore_3
      51: aload_0
      52: getfield      #16                 // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
      55: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      58: checkcast     #44                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      61: astore        4
      63: iload_3
      64: ifeq          92
      67: aload         4
      69: ifnull        80
      72: aload         4
      74: invokevirtual #45                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.isEmpty:()Z
      77: ifeq          92
      80: aload_0
      81: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      84: aload_0
      85: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      88: invokevirtual #46                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V
      91: return
      92: aload_0
      93: invokevirtual #47                 // Method decrementAndGet:()I
      96: ifne          100
      99: return
     100: goto          149
     103: aload_0
     104: invokevirtual #48                 // Method getOrCreateQueue:()Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
     107: astore_3
     108: aload_3
     109: dup
     110: astore        4
     112: monitorenter
     113: aload_3
     114: aload_2
     115: invokevirtual #49                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.offer:(Ljava/lang/Object;)Z
     118: pop
     119: aload         4
     121: monitorexit
     122: goto          133
     125: astore        5
     127: aload         4
     129: monitorexit
     130: aload         5
     132: athrow
     133: aload_0
     134: getfield      #13                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
     137: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     140: pop
     141: aload_0
     142: invokevirtual #50                 // Method getAndIncrement:()I
     145: ifeq          149
     148: return
     149: aload_0
     150: invokevirtual #51                 // Method drainLoop:()V
     153: return
    Exception table:
       from    to  target type
         113   122   125   any
         125   130   125   any

  io.reactivex.rxjava3.operators.SpscLinkedArrayQueue<R> getOrCreateQueue();
    Code:
       0: aload_0
       1: getfield      #16                 // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #44                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      10: astore_1
      11: aload_1
      12: ifnull        17
      15: aload_1
      16: areturn
      17: new           #44                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      20: dup
      21: invokestatic  #52                 // Method io/reactivex/rxjava3/core/Observable.bufferSize:()I
      24: invokespecial #53                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue."<init>":(I)V
      27: astore_1
      28: aload_0
      29: getfield      #16                 // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
      32: aconst_null
      33: aload_1
      34: invokevirtual #54                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      37: ifeq          42
      40: aload_1
      41: areturn
      42: aload_0
      43: getfield      #16                 // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
      46: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      49: checkcast     #44                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      52: areturn

  void innerError(io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver<T, R>.InnerObserver, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
       4: aload_1
       5: invokevirtual #39                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: pop
       9: aload_0
      10: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      13: aload_2
      14: invokevirtual #35                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      17: ifeq          55
      20: aload_0
      21: getfield      #4                  // Field delayErrors:Z
      24: ifne          43
      27: aload_0
      28: getfield      #17                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      31: invokeinterface #26,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      36: aload_0
      37: getfield      #7                  // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      40: invokevirtual #36                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      43: aload_0
      44: getfield      #13                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      47: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      50: pop
      51: aload_0
      52: invokevirtual #37                 // Method drain:()V
      55: return

  void innerComplete(io.reactivex.rxjava3.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver<T, R>.InnerObserver);
    Code:
       0: aload_0
       1: getfield      #7                  // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
       4: aload_1
       5: invokevirtual #39                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: pop
       9: aload_0
      10: invokevirtual #40                 // Method get:()I
      13: ifne          94
      16: aload_0
      17: iconst_0
      18: iconst_1
      19: invokevirtual #41                 // Method compareAndSet:(II)Z
      22: ifeq          94
      25: aload_0
      26: getfield      #13                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      29: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      32: ifne          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: istore_2
      41: aload_0
      42: getfield      #16                 // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
      45: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      48: checkcast     #44                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      51: astore_3
      52: iload_2
      53: ifeq          79
      56: aload_3
      57: ifnull        67
      60: aload_3
      61: invokevirtual #45                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.isEmpty:()Z
      64: ifeq          79
      67: aload_0
      68: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      71: aload_0
      72: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      75: invokevirtual #46                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V
      78: return
      79: aload_0
      80: invokevirtual #47                 // Method decrementAndGet:()I
      83: ifne          87
      86: return
      87: aload_0
      88: invokevirtual #51                 // Method drainLoop:()V
      91: goto          106
      94: aload_0
      95: getfield      #13                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      98: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     101: pop
     102: aload_0
     103: invokevirtual #37                 // Method drain:()V
     106: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getAndIncrement:()I
       4: ifne          11
       7: aload_0
       8: invokevirtual #51                 // Method drainLoop:()V
      11: return

  void clear();
    Code:
       0: aload_0
       1: getfield      #16                 // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #44                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      10: astore_1
      11: aload_1
      12: ifnull        19
      15: aload_1
      16: invokevirtual #55                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.clear:()V
      19: return

  void drainLoop();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       6: astore_2
       7: aload_0
       8: getfield      #13                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      11: astore_3
      12: aload_0
      13: getfield      #16                 // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
      16: astore        4
      18: aload_0
      19: getfield      #31                 // Field cancelled:Z
      22: ifeq          30
      25: aload_0
      26: invokevirtual #56                 // Method clear:()V
      29: return
      30: aload_0
      31: getfield      #4                  // Field delayErrors:Z
      34: ifne          67
      37: aload_0
      38: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      41: invokevirtual #57                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
      44: checkcast     #24                 // class java/lang/Throwable
      47: astore        5
      49: aload         5
      51: ifnull        67
      54: aload_0
      55: invokevirtual #56                 // Method clear:()V
      58: aload_0
      59: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      62: aload_2
      63: invokevirtual #46                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V
      66: return
      67: aload_3
      68: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      71: ifne          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: istore        5
      81: aload         4
      83: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      86: checkcast     #44                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      89: astore        6
      91: aload         6
      93: ifnull        104
      96: aload         6
      98: invokevirtual #59                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.poll:()Ljava/lang/Object;
     101: goto          105
     104: aconst_null
     105: astore        7
     107: aload         7
     109: ifnonnull     116
     112: iconst_1
     113: goto          117
     116: iconst_0
     117: istore        8
     119: iload         5
     121: ifeq          138
     124: iload         8
     126: ifeq          138
     129: aload_0
     130: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     133: aload_2
     134: invokevirtual #46                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V
     137: return
     138: iload         8
     140: ifeq          146
     143: goto          157
     146: aload_2
     147: aload         7
     149: invokeinterface #42,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
     154: goto          18
     157: aload_0
     158: iload_1
     159: ineg
     160: invokevirtual #60                 // Method addAndGet:(I)I
     163: istore_1
     164: iload_1
     165: ifne          18
     168: goto          171
     171: return
}
