Compiled from "ObservableRefCount.java"
public final class io.reactivex.rxjava3.internal.operators.observable.ObservableRefCount<T> extends io.reactivex.rxjava3.core.Observable<T> {
  final io.reactivex.rxjava3.observables.ConnectableObservable<T> source;

  final int n;

  final long timeout;

  final java.util.concurrent.TimeUnit unit;

  final io.reactivex.rxjava3.core.Scheduler scheduler;

  io.reactivex.rxjava3.internal.operators.observable.ObservableRefCount$RefConnection connection;

  public io.reactivex.rxjava3.internal.operators.observable.ObservableRefCount(io.reactivex.rxjava3.observables.ConnectableObservable<T>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: lconst_0
       4: getstatic     #1                  // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       7: aconst_null
       8: invokespecial #2                  // Method "<init>":(Lio/reactivex/rxjava3/observables/ConnectableObservable;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;)V
      11: return

  public io.reactivex.rxjava3.internal.operators.observable.ObservableRefCount(io.reactivex.rxjava3.observables.ConnectableObservable<T>, int, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method io/reactivex/rxjava3/core/Observable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field source:Lio/reactivex/rxjava3/observables/ConnectableObservable;
       9: aload_0
      10: iload_2
      11: putfield      #5                  // Field n:I
      14: aload_0
      15: lload_3
      16: putfield      #6                  // Field timeout:J
      19: aload_0
      20: aload         5
      22: putfield      #7                  // Field unit:Ljava/util/concurrent/TimeUnit;
      25: aload_0
      26: aload         6
      28: putfield      #8                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      31: return

  protected void subscribeActual(io.reactivex.rxjava3.core.Observer<? super T>);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: dup
       4: astore        4
       6: monitorenter
       7: aload_0
       8: getfield      #9                  // Field connection:Lio/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection;
      11: astore_2
      12: aload_2
      13: ifnonnull     30
      16: new           #10                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection
      19: dup
      20: aload_0
      21: invokespecial #11                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection."<init>":(Lio/reactivex/rxjava3/internal/operators/observable/ObservableRefCount;)V
      24: astore_2
      25: aload_0
      26: aload_2
      27: putfield      #9                  // Field connection:Lio/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection;
      30: aload_2
      31: getfield      #12                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.subscriberCount:J
      34: lstore        5
      36: lload         5
      38: lconst_0
      39: lcmp
      40: ifne          59
      43: aload_2
      44: getfield      #13                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.timer:Lio/reactivex/rxjava3/disposables/Disposable;
      47: ifnull        59
      50: aload_2
      51: getfield      #13                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.timer:Lio/reactivex/rxjava3/disposables/Disposable;
      54: invokeinterface #14,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      59: aload_2
      60: lload         5
      62: lconst_1
      63: ladd
      64: putfield      #12                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.subscriberCount:J
      67: aload_2
      68: getfield      #15                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.connected:Z
      71: ifne          94
      74: lload         5
      76: lconst_1
      77: ladd
      78: aload_0
      79: getfield      #5                  // Field n:I
      82: i2l
      83: lcmp
      84: ifne          94
      87: iconst_1
      88: istore_3
      89: aload_2
      90: iconst_1
      91: putfield      #15                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.connected:Z
      94: aload         4
      96: monitorexit
      97: goto          108
     100: astore        7
     102: aload         4
     104: monitorexit
     105: aload         7
     107: athrow
     108: aload_0
     109: getfield      #4                  // Field source:Lio/reactivex/rxjava3/observables/ConnectableObservable;
     112: new           #16                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefCountObserver
     115: dup
     116: aload_1
     117: aload_0
     118: aload_2
     119: invokespecial #17                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefCountObserver."<init>":(Lio/reactivex/rxjava3/core/Observer;Lio/reactivex/rxjava3/internal/operators/observable/ObservableRefCount;Lio/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection;)V
     122: invokevirtual #18                 // Method io/reactivex/rxjava3/observables/ConnectableObservable.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
     125: iload_3
     126: ifeq          137
     129: aload_0
     130: getfield      #4                  // Field source:Lio/reactivex/rxjava3/observables/ConnectableObservable;
     133: aload_2
     134: invokevirtual #19                 // Method io/reactivex/rxjava3/observables/ConnectableObservable.connect:(Lio/reactivex/rxjava3/functions/Consumer;)V
     137: return
    Exception table:
       from    to  target type
           7    97   100   any
         100   105   100   any

  void cancel(io.reactivex.rxjava3.internal.operators.observable.ObservableRefCount$RefConnection);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #9                  // Field connection:Lio/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection;
       8: ifnull        19
      11: aload_0
      12: getfield      #9                  // Field connection:Lio/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection;
      15: aload_1
      16: if_acmpeq     22
      19: aload_3
      20: monitorexit
      21: return
      22: aload_1
      23: getfield      #12                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.subscriberCount:J
      26: lconst_1
      27: lsub
      28: lstore        4
      30: aload_1
      31: lload         4
      33: putfield      #12                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.subscriberCount:J
      36: lload         4
      38: lconst_0
      39: lcmp
      40: ifne          50
      43: aload_1
      44: getfield      #15                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.connected:Z
      47: ifne          53
      50: aload_3
      51: monitorexit
      52: return
      53: aload_0
      54: getfield      #6                  // Field timeout:J
      57: lconst_0
      58: lcmp
      59: ifne          70
      62: aload_0
      63: aload_1
      64: invokevirtual #20                 // Method timeout:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection;)V
      67: aload_3
      68: monitorexit
      69: return
      70: new           #21                 // class io/reactivex/rxjava3/internal/disposables/SequentialDisposable
      73: dup
      74: invokespecial #22                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable."<init>":()V
      77: astore_2
      78: aload_1
      79: aload_2
      80: putfield      #13                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.timer:Lio/reactivex/rxjava3/disposables/Disposable;
      83: aload_3
      84: monitorexit
      85: goto          95
      88: astore        6
      90: aload_3
      91: monitorexit
      92: aload         6
      94: athrow
      95: aload_2
      96: aload_0
      97: getfield      #8                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
     100: aload_1
     101: aload_0
     102: getfield      #6                  // Field timeout:J
     105: aload_0
     106: getfield      #7                  // Field unit:Ljava/util/concurrent/TimeUnit;
     109: invokevirtual #23                 // Method io/reactivex/rxjava3/core/Scheduler.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
     112: invokevirtual #24                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
     115: pop
     116: return
    Exception table:
       from    to  target type
           4    21    88   any
          22    52    88   any
          53    69    88   any
          70    85    88   any
          88    92    88   any

  void terminated(io.reactivex.rxjava3.internal.operators.observable.ObservableRefCount$RefConnection);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #9                  // Field connection:Lio/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection;
       8: aload_1
       9: if_acmpne     61
      12: aload_1
      13: getfield      #13                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.timer:Lio/reactivex/rxjava3/disposables/Disposable;
      16: ifnull        33
      19: aload_1
      20: getfield      #13                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.timer:Lio/reactivex/rxjava3/disposables/Disposable;
      23: invokeinterface #14,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      28: aload_1
      29: aconst_null
      30: putfield      #13                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.timer:Lio/reactivex/rxjava3/disposables/Disposable;
      33: aload_1
      34: dup
      35: getfield      #12                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.subscriberCount:J
      38: lconst_1
      39: lsub
      40: dup2_x1
      41: putfield      #12                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.subscriberCount:J
      44: lconst_0
      45: lcmp
      46: ifne          61
      49: aload_0
      50: aconst_null
      51: putfield      #9                  // Field connection:Lio/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection;
      54: aload_0
      55: getfield      #4                  // Field source:Lio/reactivex/rxjava3/observables/ConnectableObservable;
      58: invokevirtual #25                 // Method io/reactivex/rxjava3/observables/ConnectableObservable.reset:()V
      61: aload_2
      62: monitorexit
      63: goto          71
      66: astore_3
      67: aload_2
      68: monitorexit
      69: aload_3
      70: athrow
      71: return
    Exception table:
       from    to  target type
           4    63    66   any
          66    69    66   any

  void timeout(io.reactivex.rxjava3.internal.operators.observable.ObservableRefCount$RefConnection);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_1
       5: getfield      #12                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.subscriberCount:J
       8: lconst_0
       9: lcmp
      10: ifne          58
      13: aload_1
      14: aload_0
      15: getfield      #9                  // Field connection:Lio/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection;
      18: if_acmpne     58
      21: aload_0
      22: aconst_null
      23: putfield      #9                  // Field connection:Lio/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection;
      26: aload_1
      27: invokevirtual #26                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.get:()Ljava/lang/Object;
      30: checkcast     #27                 // class io/reactivex/rxjava3/disposables/Disposable
      33: astore_3
      34: aload_1
      35: invokestatic  #28                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      38: pop
      39: aload_3
      40: ifnonnull     51
      43: aload_1
      44: iconst_1
      45: putfield      #29                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableRefCount$RefConnection.disconnectedEarly:Z
      48: goto          58
      51: aload_0
      52: getfield      #4                  // Field source:Lio/reactivex/rxjava3/observables/ConnectableObservable;
      55: invokevirtual #25                 // Method io/reactivex/rxjava3/observables/ConnectableObservable.reset:()V
      58: aload_2
      59: monitorexit
      60: goto          70
      63: astore        4
      65: aload_2
      66: monitorexit
      67: aload         4
      69: athrow
      70: return
    Exception table:
       from    to  target type
           4    60    63   any
          63    67    63   any
}
