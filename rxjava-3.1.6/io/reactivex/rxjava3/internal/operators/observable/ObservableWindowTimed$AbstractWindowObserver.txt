Compiled from "ObservableWindowTimed.java"
abstract class io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$AbstractWindowObserver<T> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.Observer<T>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super io.reactivex.rxjava3.core.Observable<T>> downstream;

  final io.reactivex.rxjava3.operators.SimplePlainQueue<java.lang.Object> queue;

  final long timespan;

  final java.util.concurrent.TimeUnit unit;

  final int bufferSize;

  long emitted;

  volatile boolean done;

  java.lang.Throwable error;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  final java.util.concurrent.atomic.AtomicBoolean downstreamCancelled;

  volatile boolean upstreamCancelled;

  final java.util.concurrent.atomic.AtomicInteger windowCount;

  io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$AbstractWindowObserver(io.reactivex.rxjava3.core.Observer<? super io.reactivex.rxjava3.core.Observable<T>>, long, java.util.concurrent.TimeUnit, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: new           #3                  // class io/reactivex/rxjava3/internal/queue/MpscLinkedQueue
      13: dup
      14: invokespecial #4                  // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue."<init>":()V
      17: putfield      #5                  // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      20: aload_0
      21: lload_2
      22: putfield      #6                  // Field timespan:J
      25: aload_0
      26: aload         4
      28: putfield      #7                  // Field unit:Ljava/util/concurrent/TimeUnit;
      31: aload_0
      32: iload         5
      34: putfield      #8                  // Field bufferSize:I
      37: aload_0
      38: new           #9                  // class java/util/concurrent/atomic/AtomicBoolean
      41: dup
      42: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      45: putfield      #11                 // Field downstreamCancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
      48: aload_0
      49: new           #12                 // class java/util/concurrent/atomic/AtomicInteger
      52: dup
      53: iconst_1
      54: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      57: putfield      #14                 // Field windowCount:Ljava/util/concurrent/atomic/AtomicInteger;
      60: return

  public final void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #15                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #16                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          30
      11: aload_0
      12: aload_1
      13: putfield      #15                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      20: aload_0
      21: invokeinterface #17,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      26: aload_0
      27: invokevirtual #18                 // Method createFirstWindow:()V
      30: return

  abstract void createFirstWindow();

  public final void onNext(T);
    Code:
       0: aload_0
       1: getfield      #5                  // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokevirtual #20                 // Method drain:()V
      15: return

  public final void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field error:Ljava/lang/Throwable;
       5: aload_0
       6: iconst_1
       7: putfield      #22                 // Field done:Z
      10: aload_0
      11: invokevirtual #20                 // Method drain:()V
      14: return

  public final void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #22                 // Field done:Z
       5: aload_0
       6: invokevirtual #20                 // Method drain:()V
       9: return

  public final void dispose();
    Code:
       0: aload_0
       1: getfield      #11                 // Field downstreamCancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          16
      12: aload_0
      13: invokevirtual #24                 // Method windowDone:()V
      16: return

  public final boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #11                 // Field downstreamCancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  final void windowDone();
    Code:
       0: aload_0
       1: getfield      #14                 // Field windowCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: ifne          32
      10: aload_0
      11: invokevirtual #27                 // Method cleanupResources:()V
      14: aload_0
      15: getfield      #15                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      18: invokeinterface #28,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      23: aload_0
      24: iconst_1
      25: putfield      #29                 // Field upstreamCancelled:Z
      28: aload_0
      29: invokevirtual #20                 // Method drain:()V
      32: return

  abstract void cleanupResources();

  abstract void drain();
}
