Compiled from "ObservableConcatMapScheduler.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler$ConcatMapDelayErrorObserver$DelayErrorInnerObserver<R> extends java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> implements io.reactivex.rxjava3.core.Observer<R> {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super R> downstream;

  final io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler$ConcatMapDelayErrorObserver<?, R> parent;

  io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler$ConcatMapDelayErrorObserver$DelayErrorInnerObserver(io.reactivex.rxjava3.core.Observer<? super R>, io.reactivex.rxjava3.internal.operators.observable.ObservableConcatMapScheduler$ConcatMapDelayErrorObserver<?, R>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver;
      14: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       5: pop
       6: return

  public void onNext(R);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver;
       4: astore_2
       5: aload_2
       6: getfield      #6                  // Field io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver.errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       9: aload_1
      10: invokevirtual #7                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      13: ifeq          41
      16: aload_2
      17: getfield      #8                  // Field io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver.tillTheEnd:Z
      20: ifne          32
      23: aload_2
      24: getfield      #9                  // Field io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver.upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      27: invokeinterface #10,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      32: aload_2
      33: iconst_0
      34: putfield      #11                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver.active:Z
      37: aload_2
      38: invokevirtual #12                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver.drain:()V
      41: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver;
       4: astore_1
       5: aload_1
       6: iconst_0
       7: putfield      #11                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver.active:Z
      10: aload_1
      11: invokevirtual #12                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapScheduler$ConcatMapDelayErrorObserver.drain:()V
      14: return

  void dispose();
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: return
}
