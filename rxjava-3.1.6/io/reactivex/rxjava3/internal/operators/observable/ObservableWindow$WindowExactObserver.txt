Compiled from "ObservableWindow.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableWindow$WindowExactObserver<T> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.Observer<T>, io.reactivex.rxjava3.disposables.Disposable, java.lang.Runnable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super io.reactivex.rxjava3.core.Observable<T>> downstream;

  final long count;

  final int capacityHint;

  final java.util.concurrent.atomic.AtomicBoolean cancelled;

  long size;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  io.reactivex.rxjava3.subjects.UnicastSubject<T> window;

  io.reactivex.rxjava3.internal.operators.observable.ObservableWindow$WindowExactObserver(io.reactivex.rxjava3.core.Observer<? super io.reactivex.rxjava3.core.Observable<T>>, long, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field count:J
      14: aload_0
      15: iload         4
      17: putfield      #4                  // Field capacityHint:I
      20: aload_0
      21: new           #5                  // class java/util/concurrent/atomic/AtomicBoolean
      24: dup
      25: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      28: putfield      #7                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
      31: aload_0
      32: iconst_1
      33: invokevirtual #8                  // Method lazySet:(I)V
      36: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #9                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #10                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #9                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      20: aload_0
      21: invokeinterface #11,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #12                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
       4: astore_2
       5: aconst_null
       6: astore_3
       7: aload_2
       8: ifnonnull     59
      11: aload_0
      12: getfield      #7                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      18: ifne          59
      21: aload_0
      22: invokevirtual #14                 // Method getAndIncrement:()I
      25: pop
      26: aload_0
      27: getfield      #4                  // Field capacityHint:I
      30: aload_0
      31: invokestatic  #15                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/subjects/UnicastSubject;
      34: astore_2
      35: aload_0
      36: aload_2
      37: putfield      #12                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
      40: new           #16                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept
      43: dup
      44: aload_2
      45: invokespecial #17                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept."<init>":(Lio/reactivex/rxjava3/subjects/Subject;)V
      48: astore_3
      49: aload_0
      50: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      53: aload_3
      54: invokeinterface #18,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      59: aload_2
      60: ifnull        123
      63: aload_2
      64: aload_1
      65: invokevirtual #19                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onNext:(Ljava/lang/Object;)V
      68: aload_0
      69: dup
      70: getfield      #20                 // Field size:J
      73: lconst_1
      74: ladd
      75: dup2_x1
      76: putfield      #20                 // Field size:J
      79: aload_0
      80: getfield      #3                  // Field count:J
      83: lcmp
      84: iflt          101
      87: aload_0
      88: lconst_0
      89: putfield      #20                 // Field size:J
      92: aload_0
      93: aconst_null
      94: putfield      #12                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
      97: aload_2
      98: invokevirtual #21                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
     101: aload_3
     102: ifnull        123
     105: aload_3
     106: invokevirtual #22                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept.tryAbandon:()Z
     109: ifeq          123
     112: aload_0
     113: aconst_null
     114: putfield      #12                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
     117: aload_2
     118: invokevirtual #21                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
     121: aconst_null
     122: astore_2
     123: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #12                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
       4: astore_2
       5: aload_2
       6: ifnull        19
       9: aload_0
      10: aconst_null
      11: putfield      #12                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
      14: aload_2
      15: aload_1
      16: invokevirtual #23                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onError:(Ljava/lang/Throwable;)V
      19: aload_0
      20: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      23: aload_1
      24: invokeinterface #24,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
      29: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #12                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
       4: astore_1
       5: aload_1
       6: ifnull        18
       9: aload_0
      10: aconst_null
      11: putfield      #12                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
      14: aload_1
      15: invokevirtual #21                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
      18: aload_0
      19: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      22: invokeinterface #25,  1           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
      27: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          16
      12: aload_0
      13: invokevirtual #27                 // Method run:()V
      16: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void run();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method decrementAndGet:()I
       4: ifne          16
       7: aload_0
       8: getfield      #9                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      11: invokeinterface #29,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      16: return
}
