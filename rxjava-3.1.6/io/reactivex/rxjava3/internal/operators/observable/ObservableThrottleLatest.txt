Compiled from "ObservableThrottleLatest.java"
public final class io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleLatest<T> extends io.reactivex.rxjava3.internal.operators.observable.AbstractObservableWithUpstream<T, T> {
  final long timeout;

  final java.util.concurrent.TimeUnit unit;

  final io.reactivex.rxjava3.core.Scheduler scheduler;

  final boolean emitLast;

  final io.reactivex.rxjava3.functions.Consumer<? super T> onDropped;

  public io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleLatest(io.reactivex.rxjava3.core.Observable<T>, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler, boolean, io.reactivex.rxjava3.functions.Consumer<? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/observable/AbstractObservableWithUpstream."<init>":(Lio/reactivex/rxjava3/core/ObservableSource;)V
       5: aload_0
       6: lload_2
       7: putfield      #2                  // Field timeout:J
      10: aload_0
      11: aload         4
      13: putfield      #3                  // Field unit:Ljava/util/concurrent/TimeUnit;
      16: aload_0
      17: aload         5
      19: putfield      #4                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      22: aload_0
      23: iload         6
      25: putfield      #5                  // Field emitLast:Z
      28: aload_0
      29: aload         7
      31: putfield      #6                  // Field onDropped:Lio/reactivex/rxjava3/functions/Consumer;
      34: return

  protected void subscribeActual(io.reactivex.rxjava3.core.Observer<? super T>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field source:Lio/reactivex/rxjava3/core/ObservableSource;
       4: new           #8                  // class io/reactivex/rxjava3/internal/operators/observable/ObservableThrottleLatest$ThrottleLatestObserver
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field timeout:J
      13: aload_0
      14: getfield      #3                  // Field unit:Ljava/util/concurrent/TimeUnit;
      17: aload_0
      18: getfield      #4                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      21: invokevirtual #9                  // Method io/reactivex/rxjava3/core/Scheduler.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;
      24: aload_0
      25: getfield      #5                  // Field emitLast:Z
      28: aload_0
      29: getfield      #6                  // Field onDropped:Lio/reactivex/rxjava3/functions/Consumer;
      32: invokespecial #10                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableThrottleLatest$ThrottleLatestObserver."<init>":(Lio/reactivex/rxjava3/core/Observer;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler$Worker;ZLio/reactivex/rxjava3/functions/Consumer;)V
      35: invokeinterface #11,  2           // InterfaceMethod io/reactivex/rxjava3/core/ObservableSource.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
      40: return
}
