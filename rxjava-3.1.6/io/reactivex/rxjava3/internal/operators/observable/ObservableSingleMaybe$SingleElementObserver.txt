Compiled from "ObservableSingleMaybe.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableSingleMaybe$SingleElementObserver<T> implements io.reactivex.rxjava3.core.Observer<T>, io.reactivex.rxjava3.disposables.Disposable {
  final io.reactivex.rxjava3.core.MaybeObserver<? super T> downstream;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  T value;

  boolean done;

  io.reactivex.rxjava3.internal.operators.observable.ObservableSingleMaybe$SingleElementObserver(io.reactivex.rxjava3.core.MaybeObserver<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
       9: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #4                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #3                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      20: aload_0
      21: invokeinterface #5,  2            // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      26: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #3                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: invokeinterface #6,  1            // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
       9: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #3                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: invokeinterface #7,  1            // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.isDisposed:()Z
       9: ireturn

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #8                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #9                  // Field value:Ljava/lang/Object;
      12: ifnull        48
      15: aload_0
      16: iconst_1
      17: putfield      #8                  // Field done:Z
      20: aload_0
      21: getfield      #3                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      24: invokeinterface #6,  1            // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      29: aload_0
      30: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      33: new           #10                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #11                 // String Sequence contains more than one element!
      39: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: invokeinterface #13,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      47: return
      48: aload_0
      49: aload_1
      50: putfield      #9                  // Field value:Ljava/lang/Object;
      53: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field done:Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #14                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      11: return
      12: aload_0
      13: iconst_1
      14: putfield      #8                  // Field done:Z
      17: aload_0
      18: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      21: aload_1
      22: invokeinterface #13,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      27: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #8                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #8                  // Field done:Z
      13: aload_0
      14: getfield      #9                  // Field value:Ljava/lang/Object;
      17: astore_1
      18: aload_0
      19: aconst_null
      20: putfield      #9                  // Field value:Ljava/lang/Object;
      23: aload_1
      24: ifnonnull     39
      27: aload_0
      28: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      31: invokeinterface #15,  1           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onComplete:()V
      36: goto          49
      39: aload_0
      40: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      43: aload_1
      44: invokeinterface #16,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSuccess:(Ljava/lang/Object;)V
      49: return
}
