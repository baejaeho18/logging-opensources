Compiled from "ObservableWindowTimed.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver<T> extends io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$AbstractWindowObserver<T> implements java.lang.Runnable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Scheduler scheduler;

  io.reactivex.rxjava3.subjects.UnicastSubject<T> window;

  final io.reactivex.rxjava3.internal.disposables.SequentialDisposable timer;

  static final java.lang.Object NEXT_WINDOW;

  final java.lang.Runnable windowRunnable;

  io.reactivex.rxjava3.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver(io.reactivex.rxjava3.core.Observer<? super io.reactivex.rxjava3.core.Observable<T>>, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler, int);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: iload         6
       7: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$AbstractWindowObserver."<init>":(Lio/reactivex/rxjava3/core/Observer;JLjava/util/concurrent/TimeUnit;I)V
      10: aload_0
      11: aload         5
      13: putfield      #2                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      16: aload_0
      17: new           #3                  // class io/reactivex/rxjava3/internal/disposables/SequentialDisposable
      20: dup
      21: invokespecial #4                  // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable."<init>":()V
      24: putfield      #5                  // Field timer:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
      27: aload_0
      28: new           #6                  // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowExactUnboundedObserver$WindowRunnable
      31: dup
      32: aload_0
      33: invokespecial #7                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowExactUnboundedObserver$WindowRunnable."<init>":(Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed$WindowExactUnboundedObserver;)V
      36: putfield      #8                  // Field windowRunnable:Ljava/lang/Runnable;
      39: return

  void createFirstWindow();
    Code:
       0: aload_0
       1: getfield      #9                  // Field downstreamCancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          102
      10: aload_0
      11: getfield      #11                 // Field windowCount:Ljava/util/concurrent/atomic/AtomicInteger;
      14: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      17: pop
      18: aload_0
      19: aload_0
      20: getfield      #13                 // Field bufferSize:I
      23: aload_0
      24: getfield      #8                  // Field windowRunnable:Ljava/lang/Runnable;
      27: invokestatic  #14                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/subjects/UnicastSubject;
      30: putfield      #15                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
      33: aload_0
      34: lconst_1
      35: putfield      #16                 // Field emitted:J
      38: new           #17                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept
      41: dup
      42: aload_0
      43: getfield      #15                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
      46: invokespecial #18                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept."<init>":(Lio/reactivex/rxjava3/subjects/Subject;)V
      49: astore_1
      50: aload_0
      51: getfield      #19                 // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      54: aload_1
      55: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      60: aload_0
      61: getfield      #5                  // Field timer:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
      64: aload_0
      65: getfield      #2                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      68: aload_0
      69: aload_0
      70: getfield      #21                 // Field timespan:J
      73: aload_0
      74: getfield      #21                 // Field timespan:J
      77: aload_0
      78: getfield      #22                 // Field unit:Ljava/util/concurrent/TimeUnit;
      81: invokevirtual #23                 // Method io/reactivex/rxjava3/core/Scheduler.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
      84: invokevirtual #24                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      87: pop
      88: aload_1
      89: invokevirtual #25                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept.tryAbandon:()Z
      92: ifeq          102
      95: aload_0
      96: getfield      #15                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
      99: invokevirtual #26                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
     102: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #27                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
       4: getstatic     #28                 // Field NEXT_WINDOW:Ljava/lang/Object;
       7: invokeinterface #29,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      12: pop
      13: aload_0
      14: invokevirtual #30                 // Method drain:()V
      17: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #27                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      12: astore_1
      13: aload_0
      14: getfield      #19                 // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      17: astore_2
      18: aload_0
      19: getfield      #15                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
      22: astore_3
      23: iconst_1
      24: istore        4
      26: aload_0
      27: getfield      #32                 // Field upstreamCancelled:Z
      30: ifeq          49
      33: aload_1
      34: invokeinterface #33,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.clear:()V
      39: aconst_null
      40: astore_3
      41: aload_0
      42: aconst_null
      43: putfield      #15                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
      46: goto          276
      49: aload_0
      50: getfield      #34                 // Field done:Z
      53: istore        5
      55: aload_1
      56: invokeinterface #35,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.poll:()Ljava/lang/Object;
      61: astore        6
      63: aload         6
      65: ifnonnull     72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: istore        7
      75: iload         5
      77: ifeq          143
      80: iload         7
      82: ifeq          143
      85: aload_0
      86: getfield      #36                 // Field error:Ljava/lang/Throwable;
      89: astore        8
      91: aload         8
      93: ifnull        117
      96: aload_3
      97: ifnull        106
     100: aload_3
     101: aload         8
     103: invokevirtual #37                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onError:(Ljava/lang/Throwable;)V
     106: aload_2
     107: aload         8
     109: invokeinterface #38,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
     114: goto          131
     117: aload_3
     118: ifnull        125
     121: aload_3
     122: invokevirtual #26                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
     125: aload_2
     126: invokeinterface #39,  1           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
     131: aload_0
     132: invokevirtual #40                 // Method cleanupResources:()V
     135: aload_0
     136: iconst_1
     137: putfield      #32                 // Field upstreamCancelled:Z
     140: goto          26
     143: iload         7
     145: ifne          276
     148: aload         6
     150: getstatic     #28                 // Field NEXT_WINDOW:Ljava/lang/Object;
     153: if_acmpne     259
     156: aload_3
     157: ifnull        171
     160: aload_3
     161: invokevirtual #26                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
     164: aconst_null
     165: astore_3
     166: aload_0
     167: aconst_null
     168: putfield      #15                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
     171: aload_0
     172: getfield      #9                  // Field downstreamCancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
     175: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     178: ifeq          191
     181: aload_0
     182: getfield      #5                  // Field timer:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
     185: invokevirtual #41                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.dispose:()V
     188: goto          26
     191: aload_0
     192: dup
     193: getfield      #16                 // Field emitted:J
     196: lconst_1
     197: ladd
     198: putfield      #16                 // Field emitted:J
     201: aload_0
     202: getfield      #11                 // Field windowCount:Ljava/util/concurrent/atomic/AtomicInteger;
     205: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
     208: pop
     209: aload_0
     210: getfield      #13                 // Field bufferSize:I
     213: aload_0
     214: getfield      #8                  // Field windowRunnable:Ljava/lang/Runnable;
     217: invokestatic  #42                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/subjects/UnicastSubject;
     220: astore_3
     221: aload_0
     222: aload_3
     223: putfield      #15                 // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
     226: new           #17                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept
     229: dup
     230: aload_3
     231: invokespecial #18                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept."<init>":(Lio/reactivex/rxjava3/subjects/Subject;)V
     234: astore        8
     236: aload_2
     237: aload         8
     239: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
     244: aload         8
     246: invokevirtual #25                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept.tryAbandon:()Z
     249: ifeq          256
     252: aload_3
     253: invokevirtual #26                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
     256: goto          26
     259: aload_3
     260: ifnull        26
     263: aload         6
     265: astore        8
     267: aload_3
     268: aload         8
     270: invokevirtual #43                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onNext:(Ljava/lang/Object;)V
     273: goto          26
     276: aload_0
     277: iload         4
     279: ineg
     280: invokevirtual #44                 // Method addAndGet:(I)I
     283: istore        4
     285: iload         4
     287: ifne          26
     290: goto          293
     293: return

  void cleanupResources();
    Code:
       0: aload_0
       1: getfield      #5                  // Field timer:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
       4: invokevirtual #41                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.dispose:()V
       7: return

  static {};
    Code:
       0: new           #45                 // class java/lang/Object
       3: dup
       4: invokespecial #46                 // Method java/lang/Object."<init>":()V
       7: putstatic     #28                 // Field NEXT_WINDOW:Ljava/lang/Object;
      10: return
}
