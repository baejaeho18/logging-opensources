Compiled from "ObservableWindow.java"
public final class io.reactivex.rxjava3.internal.operators.observable.ObservableWindow<T> extends io.reactivex.rxjava3.internal.operators.observable.AbstractObservableWithUpstream<T, io.reactivex.rxjava3.core.Observable<T>> {
  final long count;

  final long skip;

  final int capacityHint;

  public io.reactivex.rxjava3.internal.operators.observable.ObservableWindow(io.reactivex.rxjava3.core.ObservableSource<T>, long, long, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/observable/AbstractObservableWithUpstream."<init>":(Lio/reactivex/rxjava3/core/ObservableSource;)V
       5: aload_0
       6: lload_2
       7: putfield      #2                  // Field count:J
      10: aload_0
      11: lload         4
      13: putfield      #3                  // Field skip:J
      16: aload_0
      17: iload         6
      19: putfield      #4                  // Field capacityHint:I
      22: return

  public void subscribeActual(io.reactivex.rxjava3.core.Observer<? super io.reactivex.rxjava3.core.Observable<T>>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field count:J
       4: aload_0
       5: getfield      #3                  // Field skip:J
       8: lcmp
       9: ifne          40
      12: aload_0
      13: getfield      #5                  // Field source:Lio/reactivex/rxjava3/core/ObservableSource;
      16: new           #6                  // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindow$WindowExactObserver
      19: dup
      20: aload_1
      21: aload_0
      22: getfield      #2                  // Field count:J
      25: aload_0
      26: getfield      #4                  // Field capacityHint:I
      29: invokespecial #7                  // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindow$WindowExactObserver."<init>":(Lio/reactivex/rxjava3/core/Observer;JI)V
      32: invokeinterface #8,  2            // InterfaceMethod io/reactivex/rxjava3/core/ObservableSource.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
      37: goto          69
      40: aload_0
      41: getfield      #5                  // Field source:Lio/reactivex/rxjava3/core/ObservableSource;
      44: new           #9                  // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindow$WindowSkipObserver
      47: dup
      48: aload_1
      49: aload_0
      50: getfield      #2                  // Field count:J
      53: aload_0
      54: getfield      #3                  // Field skip:J
      57: aload_0
      58: getfield      #4                  // Field capacityHint:I
      61: invokespecial #10                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindow$WindowSkipObserver."<init>":(Lio/reactivex/rxjava3/core/Observer;JJI)V
      64: invokeinterface #8,  2            // InterfaceMethod io/reactivex/rxjava3/core/ObservableSource.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
      69: return
}
