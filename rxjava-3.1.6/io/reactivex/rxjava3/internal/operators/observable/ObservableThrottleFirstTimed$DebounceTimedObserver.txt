Compiled from "ObservableThrottleFirstTimed.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver<T> extends java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> implements io.reactivex.rxjava3.core.Observer<T>, io.reactivex.rxjava3.disposables.Disposable, java.lang.Runnable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super T> downstream;

  final long timeout;

  final java.util.concurrent.TimeUnit unit;

  final io.reactivex.rxjava3.core.Scheduler$Worker worker;

  final io.reactivex.rxjava3.functions.Consumer<? super T> onDropped;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  volatile boolean gate;

  io.reactivex.rxjava3.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver(io.reactivex.rxjava3.core.Observer<? super T>, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler$Worker, io.reactivex.rxjava3.functions.Consumer<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field timeout:J
      14: aload_0
      15: aload         4
      17: putfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      20: aload_0
      21: aload         5
      23: putfield      #5                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      26: aload_0
      27: aload         6
      29: putfield      #6                  // Field onDropped:Lio/reactivex/rxjava3/functions/Consumer;
      32: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #8                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #7                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      20: aload_0
      21: invokeinterface #9,  2            // InterfaceMethod io/reactivex/rxjava3/core/Observer.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #10                 // Field gate:Z
       4: ifne          64
       7: aload_0
       8: iconst_1
       9: putfield      #10                 // Field gate:Z
      12: aload_0
      13: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      16: aload_1
      17: invokeinterface #11,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      22: aload_0
      23: invokevirtual #12                 // Method get:()Ljava/lang/Object;
      26: checkcast     #13                 // class io/reactivex/rxjava3/disposables/Disposable
      29: astore_2
      30: aload_2
      31: ifnull        40
      34: aload_2
      35: invokeinterface #14,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      40: aload_0
      41: aload_0
      42: getfield      #5                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      45: aload_0
      46: aload_0
      47: getfield      #3                  // Field timeout:J
      50: aload_0
      51: getfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      54: invokevirtual #15                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
      57: invokestatic  #16                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
      60: pop
      61: goto          115
      64: aload_0
      65: getfield      #6                  // Field onDropped:Lio/reactivex/rxjava3/functions/Consumer;
      68: ifnull        115
      71: aload_0
      72: getfield      #6                  // Field onDropped:Lio/reactivex/rxjava3/functions/Consumer;
      75: aload_1
      76: invokeinterface #17,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Consumer.accept:(Ljava/lang/Object;)V
      81: goto          115
      84: astore_2
      85: aload_2
      86: invokestatic  #19                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      89: aload_0
      90: getfield      #7                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      93: invokeinterface #14,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      98: aload_0
      99: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
     102: aload_2
     103: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
     108: aload_0
     109: getfield      #5                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     112: invokevirtual #21                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
     115: return
    Exception table:
       from    to  target type
          71    81    84   Class java/lang/Throwable

  public void run();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #10                 // Field gate:Z
       5: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
      10: aload_0
      11: getfield      #5                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      14: invokevirtual #21                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      17: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: invokeinterface #22,  1           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
       9: aload_0
      10: getfield      #5                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      13: invokevirtual #21                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      16: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #7                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: invokeinterface #14,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
       9: aload_0
      10: getfield      #5                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      13: invokevirtual #21                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      16: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
       4: invokevirtual #23                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.isDisposed:()Z
       7: ireturn
}
