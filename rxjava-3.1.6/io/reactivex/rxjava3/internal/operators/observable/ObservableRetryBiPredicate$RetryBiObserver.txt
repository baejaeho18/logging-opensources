Compiled from "ObservableRetryBiPredicate.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver<T> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.Observer<T> {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super T> downstream;

  final io.reactivex.rxjava3.internal.disposables.SequentialDisposable upstream;

  final io.reactivex.rxjava3.core.ObservableSource<? extends T> source;

  final io.reactivex.rxjava3.functions.BiPredicate<? super java.lang.Integer, ? super java.lang.Throwable> predicate;

  int retries;

  io.reactivex.rxjava3.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver(io.reactivex.rxjava3.core.Observer<? super T>, io.reactivex.rxjava3.functions.BiPredicate<? super java.lang.Integer, ? super java.lang.Throwable>, io.reactivex.rxjava3.internal.disposables.SequentialDisposable, io.reactivex.rxjava3.core.ObservableSource<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field upstream:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
      14: aload_0
      15: aload         4
      17: putfield      #4                  // Field source:Lio/reactivex/rxjava3/core/ObservableSource;
      20: aload_0
      21: aload_2
      22: putfield      #5                  // Field predicate:Lio/reactivex/rxjava3/functions/BiPredicate;
      25: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field upstream:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
       4: aload_1
       5: invokevirtual #6                  // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: pop
       9: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field predicate:Lio/reactivex/rxjava3/functions/BiPredicate;
       4: aload_0
       5: dup
       6: getfield      #8                  // Field retries:I
       9: iconst_1
      10: iadd
      11: dup_x1
      12: putfield      #8                  // Field retries:I
      15: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: aload_1
      19: invokeinterface #10,  3           // InterfaceMethod io/reactivex/rxjava3/functions/BiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
      24: istore_2
      25: goto          62
      28: astore_3
      29: aload_3
      30: invokestatic  #12                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      33: aload_0
      34: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      37: new           #13                 // class io/reactivex/rxjava3/exceptions/CompositeException
      40: dup
      41: iconst_2
      42: anewarray     #14                 // class java/lang/Throwable
      45: dup
      46: iconst_0
      47: aload_1
      48: aastore
      49: dup
      50: iconst_1
      51: aload_3
      52: aastore
      53: invokespecial #15                 // Method io/reactivex/rxjava3/exceptions/CompositeException."<init>":([Ljava/lang/Throwable;)V
      56: invokeinterface #16,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
      61: return
      62: iload_2
      63: ifne          77
      66: aload_0
      67: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      70: aload_1
      71: invokeinterface #16,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
      76: return
      77: aload_0
      78: invokevirtual #17                 // Method subscribeNext:()V
      81: return
    Exception table:
       from    to  target type
           0    25    28   Class java/lang/Throwable

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: invokeinterface #18,  1           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
       9: return

  void subscribeNext();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getAndIncrement:()I
       4: ifne          44
       7: iconst_1
       8: istore_1
       9: aload_0
      10: getfield      #3                  // Field upstream:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
      13: invokevirtual #20                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.isDisposed:()Z
      16: ifeq          20
      19: return
      20: aload_0
      21: getfield      #4                  // Field source:Lio/reactivex/rxjava3/core/ObservableSource;
      24: aload_0
      25: invokeinterface #21,  2           // InterfaceMethod io/reactivex/rxjava3/core/ObservableSource.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
      30: aload_0
      31: iload_1
      32: ineg
      33: invokevirtual #22                 // Method addAndGet:(I)I
      36: istore_1
      37: iload_1
      38: ifne          9
      41: goto          44
      44: return
}
