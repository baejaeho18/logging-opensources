Compiled from "ObservableWindow.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableWindow$WindowSkipObserver<T> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.Observer<T>, io.reactivex.rxjava3.disposables.Disposable, java.lang.Runnable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super io.reactivex.rxjava3.core.Observable<T>> downstream;

  final long count;

  final long skip;

  final int capacityHint;

  final java.util.ArrayDeque<io.reactivex.rxjava3.subjects.UnicastSubject<T>> windows;

  final java.util.concurrent.atomic.AtomicBoolean cancelled;

  long index;

  long firstEmission;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  io.reactivex.rxjava3.internal.operators.observable.ObservableWindow$WindowSkipObserver(io.reactivex.rxjava3.core.Observer<? super io.reactivex.rxjava3.core.Observable<T>>, long, long, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field count:J
      14: aload_0
      15: lload         4
      17: putfield      #4                  // Field skip:J
      20: aload_0
      21: iload         6
      23: putfield      #5                  // Field capacityHint:I
      26: aload_0
      27: new           #6                  // class java/util/ArrayDeque
      30: dup
      31: invokespecial #7                  // Method java/util/ArrayDeque."<init>":()V
      34: putfield      #8                  // Field windows:Ljava/util/ArrayDeque;
      37: aload_0
      38: new           #9                  // class java/util/concurrent/atomic/AtomicBoolean
      41: dup
      42: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      45: putfield      #11                 // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
      48: aload_0
      49: iconst_1
      50: invokevirtual #12                 // Method lazySet:(I)V
      53: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #14                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #13                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      20: aload_0
      21: invokeinterface #15,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #8                  // Field windows:Ljava/util/ArrayDeque;
       4: astore_2
       5: aload_0
       6: getfield      #16                 // Field index:J
       9: lstore_3
      10: aload_0
      11: getfield      #4                  // Field skip:J
      14: lstore        5
      16: aconst_null
      17: astore        7
      19: lload_3
      20: lload         5
      22: lrem
      23: lconst_0
      24: lcmp
      25: ifne          82
      28: aload_0
      29: getfield      #11                 // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
      32: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      35: ifne          82
      38: aload_0
      39: invokevirtual #18                 // Method getAndIncrement:()I
      42: pop
      43: aload_0
      44: getfield      #5                  // Field capacityHint:I
      47: aload_0
      48: invokestatic  #19                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/subjects/UnicastSubject;
      51: astore        8
      53: new           #20                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept
      56: dup
      57: aload         8
      59: invokespecial #21                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept."<init>":(Lio/reactivex/rxjava3/subjects/Subject;)V
      62: astore        7
      64: aload_2
      65: aload         8
      67: invokevirtual #22                 // Method java/util/ArrayDeque.offer:(Ljava/lang/Object;)Z
      70: pop
      71: aload_0
      72: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      75: aload         7
      77: invokeinterface #23,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      82: aload_0
      83: getfield      #24                 // Field firstEmission:J
      86: lconst_1
      87: ladd
      88: lstore        8
      90: aload_2
      91: invokevirtual #25                 // Method java/util/ArrayDeque.iterator:()Ljava/util/Iterator;
      94: astore        10
      96: aload         10
      98: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     103: ifeq          127
     106: aload         10
     108: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     113: checkcast     #28                 // class io/reactivex/rxjava3/subjects/UnicastSubject
     116: astore        11
     118: aload         11
     120: aload_1
     121: invokevirtual #29                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onNext:(Ljava/lang/Object;)V
     124: goto          96
     127: lload         8
     129: aload_0
     130: getfield      #3                  // Field count:J
     133: lcmp
     134: iflt          177
     137: aload_2
     138: invokevirtual #30                 // Method java/util/ArrayDeque.poll:()Ljava/lang/Object;
     141: checkcast     #28                 // class io/reactivex/rxjava3/subjects/UnicastSubject
     144: invokevirtual #31                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
     147: aload_2
     148: invokevirtual #32                 // Method java/util/ArrayDeque.isEmpty:()Z
     151: ifeq          165
     154: aload_0
     155: getfield      #11                 // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
     158: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     161: ifeq          165
     164: return
     165: aload_0
     166: lload         8
     168: lload         5
     170: lsub
     171: putfield      #24                 // Field firstEmission:J
     174: goto          183
     177: aload_0
     178: lload         8
     180: putfield      #24                 // Field firstEmission:J
     183: aload_0
     184: lload_3
     185: lconst_1
     186: ladd
     187: putfield      #16                 // Field index:J
     190: aload         7
     192: ifnull        211
     195: aload         7
     197: invokevirtual #33                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept.tryAbandon:()Z
     200: ifeq          211
     203: aload         7
     205: getfield      #34                 // Field io/reactivex/rxjava3/internal/operators/observable/ObservableWindowSubscribeIntercept.window:Lio/reactivex/rxjava3/subjects/Subject;
     208: invokevirtual #35                 // Method io/reactivex/rxjava3/subjects/Subject.onComplete:()V
     211: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field windows:Ljava/util/ArrayDeque;
       4: astore_2
       5: aload_2
       6: invokevirtual #32                 // Method java/util/ArrayDeque.isEmpty:()Z
       9: ifne          26
      12: aload_2
      13: invokevirtual #30                 // Method java/util/ArrayDeque.poll:()Ljava/lang/Object;
      16: checkcast     #28                 // class io/reactivex/rxjava3/subjects/UnicastSubject
      19: aload_1
      20: invokevirtual #36                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onError:(Ljava/lang/Throwable;)V
      23: goto          5
      26: aload_0
      27: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      30: aload_1
      31: invokeinterface #37,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #8                  // Field windows:Ljava/util/ArrayDeque;
       4: astore_1
       5: aload_1
       6: invokevirtual #32                 // Method java/util/ArrayDeque.isEmpty:()Z
       9: ifne          25
      12: aload_1
      13: invokevirtual #30                 // Method java/util/ArrayDeque.poll:()Ljava/lang/Object;
      16: checkcast     #28                 // class io/reactivex/rxjava3/subjects/UnicastSubject
      19: invokevirtual #31                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.onComplete:()V
      22: goto          5
      25: aload_0
      26: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      29: invokeinterface #38,  1           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
      34: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #11                 // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          16
      12: aload_0
      13: invokevirtual #40                 // Method run:()V
      16: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #11                 // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void run();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method decrementAndGet:()I
       4: ifne          16
       7: aload_0
       8: getfield      #13                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      11: invokeinterface #42,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      16: return
}
