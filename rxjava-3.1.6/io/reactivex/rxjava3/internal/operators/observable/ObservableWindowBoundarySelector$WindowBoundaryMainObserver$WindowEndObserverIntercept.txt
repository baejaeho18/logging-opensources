Compiled from "ObservableWindowBoundarySelector.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver$WindowEndObserverIntercept<T, V> extends io.reactivex.rxjava3.core.Observable<T> implements io.reactivex.rxjava3.core.Observer<V>, io.reactivex.rxjava3.disposables.Disposable {
  final io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver<T, ?, V> parent;

  final io.reactivex.rxjava3.subjects.UnicastSubject<T> window;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> upstream;

  final java.util.concurrent.atomic.AtomicBoolean once;

  io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver$WindowEndObserverIntercept(io.reactivex.rxjava3.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver<T, ?, V>, io.reactivex.rxjava3.subjects.UnicastSubject<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/core/Observable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$WindowBoundaryMainObserver;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
      14: aload_0
      15: new           #4                  // class java/util/concurrent/atomic/AtomicReference
      18: dup
      19: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      22: putfield      #6                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      25: aload_0
      26: new           #7                  // class java/util/concurrent/atomic/AtomicBoolean
      29: dup
      30: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      33: putfield      #9                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
      36: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokestatic  #10                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: pop
       9: return

  public void onNext(V);
    Code:
       0: aload_0
       1: getfield      #6                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #11                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: ifeq          18
      10: aload_0
      11: getfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$WindowBoundaryMainObserver;
      14: aload_0
      15: invokevirtual #12                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$WindowBoundaryMainObserver.close:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$WindowBoundaryMainObserver$WindowEndObserverIntercept;)V
      18: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method isDisposed:()Z
       4: ifeq          14
       7: aload_1
       8: invokestatic  #14                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      11: goto          22
      14: aload_0
      15: getfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$WindowBoundaryMainObserver;
      18: aload_1
      19: invokevirtual #15                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$WindowBoundaryMainObserver.closeError:(Ljava/lang/Throwable;)V
      22: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$WindowBoundaryMainObserver;
       4: aload_0
       5: invokevirtual #12                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$WindowBoundaryMainObserver.close:(Lio/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector$WindowBoundaryMainObserver$WindowEndObserverIntercept;)V
       8: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #6                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #11                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #17                 // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
      10: if_acmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  protected void subscribeActual(io.reactivex.rxjava3.core.Observer<? super T>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field window:Lio/reactivex/rxjava3/subjects/UnicastSubject;
       4: aload_1
       5: invokevirtual #18                 // Method io/reactivex/rxjava3/subjects/UnicastSubject.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
       8: aload_0
       9: getfield      #9                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
      12: iconst_1
      13: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      16: return

  boolean tryAbandon();
    Code:
       0: aload_0
       1: getfield      #9                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          26
      10: aload_0
      11: getfield      #9                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
      14: iconst_0
      15: iconst_1
      16: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn
}
