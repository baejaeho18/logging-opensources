Compiled from "ObservablePublishSelector.java"
public final class io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector<T, R> extends io.reactivex.rxjava3.internal.operators.observable.AbstractObservableWithUpstream<T, R> {
  final io.reactivex.rxjava3.functions.Function<? super io.reactivex.rxjava3.core.Observable<T>, ? extends io.reactivex.rxjava3.core.ObservableSource<R>> selector;

  public io.reactivex.rxjava3.internal.operators.observable.ObservablePublishSelector(io.reactivex.rxjava3.core.ObservableSource<T>, io.reactivex.rxjava3.functions.Function<? super io.reactivex.rxjava3.core.Observable<T>, ? extends io.reactivex.rxjava3.core.ObservableSource<R>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/observable/AbstractObservableWithUpstream."<init>":(Lio/reactivex/rxjava3/core/ObservableSource;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field selector:Lio/reactivex/rxjava3/functions/Function;
      10: return

  protected void subscribeActual(io.reactivex.rxjava3.core.Observer<? super R>);
    Code:
       0: invokestatic  #3                  // Method io/reactivex/rxjava3/subjects/PublishSubject.create:()Lio/reactivex/rxjava3/subjects/PublishSubject;
       3: astore_2
       4: aload_0
       5: getfield      #2                  // Field selector:Lio/reactivex/rxjava3/functions/Function;
       8: aload_2
       9: invokeinterface #4,  2            // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: ldc           #5                  // String The selector returned a null ObservableSource
      16: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      19: checkcast     #7                  // class io/reactivex/rxjava3/core/ObservableSource
      22: astore_3
      23: goto          40
      26: astore        4
      28: aload         4
      30: invokestatic  #9                  // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      33: aload         4
      35: aload_1
      36: invokestatic  #10                 // Method io/reactivex/rxjava3/internal/disposables/EmptyDisposable.error:(Ljava/lang/Throwable;Lio/reactivex/rxjava3/core/Observer;)V
      39: return
      40: new           #11                 // class io/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$TargetObserver
      43: dup
      44: aload_1
      45: invokespecial #12                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$TargetObserver."<init>":(Lio/reactivex/rxjava3/core/Observer;)V
      48: astore        4
      50: aload_3
      51: aload         4
      53: invokeinterface #13,  2           // InterfaceMethod io/reactivex/rxjava3/core/ObservableSource.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
      58: aload_0
      59: getfield      #14                 // Field source:Lio/reactivex/rxjava3/core/ObservableSource;
      62: new           #15                 // class io/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$SourceObserver
      65: dup
      66: aload_2
      67: aload         4
      69: invokespecial #16                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservablePublishSelector$SourceObserver."<init>":(Lio/reactivex/rxjava3/subjects/PublishSubject;Ljava/util/concurrent/atomic/AtomicReference;)V
      72: invokeinterface #13,  2           // InterfaceMethod io/reactivex/rxjava3/core/ObservableSource.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
      77: return
    Exception table:
       from    to  target type
           4    23    26   Class java/lang/Throwable
}
