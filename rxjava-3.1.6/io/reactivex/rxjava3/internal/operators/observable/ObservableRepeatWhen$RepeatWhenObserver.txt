Compiled from "ObservableRepeatWhen.java"
final class io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver<T> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.Observer<T>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super T> downstream;

  final java.util.concurrent.atomic.AtomicInteger wip;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable error;

  final io.reactivex.rxjava3.subjects.Subject<java.lang.Object> signaller;

  final io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver<T>.InnerRepeatObserver inner;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> upstream;

  final io.reactivex.rxjava3.core.ObservableSource<T> source;

  volatile boolean active;

  io.reactivex.rxjava3.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver(io.reactivex.rxjava3.core.Observer<? super T>, io.reactivex.rxjava3.subjects.Subject<java.lang.Object>, io.reactivex.rxjava3.core.ObservableSource<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field signaller:Lio/reactivex/rxjava3/subjects/Subject;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field source:Lio/reactivex/rxjava3/core/ObservableSource;
      19: aload_0
      20: new           #5                  // class java/util/concurrent/atomic/AtomicInteger
      23: dup
      24: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      27: putfield      #6                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
      30: aload_0
      31: new           #7                  // class io/reactivex/rxjava3/internal/util/AtomicThrowable
      34: dup
      35: invokespecial #8                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      38: putfield      #9                  // Field error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      41: aload_0
      42: new           #10                 // class io/reactivex/rxjava3/internal/operators/observable/ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver
      45: dup
      46: aload_0
      47: invokespecial #11                 // Method io/reactivex/rxjava3/internal/operators/observable/ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeatWhen$RepeatWhenObserver;)V
      50: putfield      #12                 // Field inner:Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver;
      53: aload_0
      54: new           #13                 // class java/util/concurrent/atomic/AtomicReference
      57: dup
      58: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      61: putfield      #15                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      64: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #15                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokestatic  #16                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: pop
       9: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: aload_1
       5: aload_0
       6: aload_0
       7: getfield      #9                  // Field error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      10: invokestatic  #17                 // Method io/reactivex/rxjava3/internal/util/HalfSerializer.onNext:(Lio/reactivex/rxjava3/core/Observer;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/rxjava3/internal/util/AtomicThrowable;)V
      13: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #12                 // Field inner:Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver;
       4: invokestatic  #18                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      12: aload_1
      13: aload_0
      14: aload_0
      15: getfield      #9                  // Field error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      18: invokestatic  #19                 // Method io/reactivex/rxjava3/internal/util/HalfSerializer.onError:(Lio/reactivex/rxjava3/core/Observer;Ljava/lang/Throwable;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/rxjava3/internal/util/AtomicThrowable;)V
      21: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #15                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokestatic  #20                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: pop
       9: aload_0
      10: iconst_0
      11: putfield      #21                 // Field active:Z
      14: aload_0
      15: getfield      #3                  // Field signaller:Lio/reactivex/rxjava3/subjects/Subject;
      18: iconst_0
      19: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: invokevirtual #23                 // Method io/reactivex/rxjava3/subjects/Subject.onNext:(Ljava/lang/Object;)V
      25: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #15                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #25                 // class io/reactivex/rxjava3/disposables/Disposable
      10: invokestatic  #26                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      13: ireturn

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #15                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #18                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: getfield      #12                 // Field inner:Lio/reactivex/rxjava3/internal/operators/observable/ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver;
      12: invokestatic  #18                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      15: pop
      16: return

  void innerNext();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method subscribeNext:()V
       4: return

  void innerError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #15                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #18                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      12: aload_1
      13: aload_0
      14: aload_0
      15: getfield      #9                  // Field error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      18: invokestatic  #19                 // Method io/reactivex/rxjava3/internal/util/HalfSerializer.onError:(Lio/reactivex/rxjava3/core/Observer;Ljava/lang/Throwable;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/rxjava3/internal/util/AtomicThrowable;)V
      21: return

  void innerComplete();
    Code:
       0: aload_0
       1: getfield      #15                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #18                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      12: aload_0
      13: aload_0
      14: getfield      #9                  // Field error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      17: invokestatic  #28                 // Method io/reactivex/rxjava3/internal/util/HalfSerializer.onComplete:(Lio/reactivex/rxjava3/core/Observer;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/rxjava3/internal/util/AtomicThrowable;)V
      20: return

  void subscribeNext();
    Code:
       0: aload_0
       1: getfield      #6                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: ifne          50
      10: aload_0
      11: invokevirtual #30                 // Method isDisposed:()Z
      14: ifeq          18
      17: return
      18: aload_0
      19: getfield      #21                 // Field active:Z
      22: ifne          40
      25: aload_0
      26: iconst_1
      27: putfield      #21                 // Field active:Z
      30: aload_0
      31: getfield      #4                  // Field source:Lio/reactivex/rxjava3/core/ObservableSource;
      34: aload_0
      35: invokeinterface #31,  2           // InterfaceMethod io/reactivex/rxjava3/core/ObservableSource.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
      40: aload_0
      41: getfield      #6                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
      44: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      47: ifne          10
      50: return
}
