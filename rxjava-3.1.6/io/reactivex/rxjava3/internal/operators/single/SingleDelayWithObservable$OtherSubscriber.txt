Compiled from "SingleDelayWithObservable.java"
final class io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$OtherSubscriber<T, U> extends java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> implements io.reactivex.rxjava3.core.Observer<U>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.SingleObserver<? super T> downstream;

  final io.reactivex.rxjava3.core.SingleSource<T> source;

  boolean done;

  io.reactivex.rxjava3.internal.operators.single.SingleDelayWithObservable$OtherSubscriber(io.reactivex.rxjava3.core.SingleObserver<? super T>, io.reactivex.rxjava3.core.SingleSource<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/SingleObserver;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field source:Lio/reactivex/rxjava3/core/SingleSource;
      14: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       5: ifeq          18
       8: aload_0
       9: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/SingleObserver;
      12: aload_0
      13: invokeinterface #5,  2            // InterfaceMethod io/reactivex/rxjava3/core/SingleObserver.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      18: return

  public void onNext(U);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method get:()Ljava/lang/Object;
       4: checkcast     #7                  // class io/reactivex/rxjava3/disposables/Disposable
       7: invokeinterface #8,  1            // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      12: aload_0
      13: invokevirtual #9                  // Method onComplete:()V
      16: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field done:Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #11                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      11: return
      12: aload_0
      13: iconst_1
      14: putfield      #10                 // Field done:Z
      17: aload_0
      18: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/SingleObserver;
      21: aload_1
      22: invokeinterface #12,  2           // InterfaceMethod io/reactivex/rxjava3/core/SingleObserver.onError:(Ljava/lang/Throwable;)V
      27: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #10                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #10                 // Field done:Z
      13: aload_0
      14: getfield      #3                  // Field source:Lio/reactivex/rxjava3/core/SingleSource;
      17: new           #13                 // class io/reactivex/rxjava3/internal/observers/ResumeSingleObserver
      20: dup
      21: aload_0
      22: aload_0
      23: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/SingleObserver;
      26: invokespecial #14                 // Method io/reactivex/rxjava3/internal/observers/ResumeSingleObserver."<init>":(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/core/SingleObserver;)V
      29: invokeinterface #15,  2           // InterfaceMethod io/reactivex/rxjava3/core/SingleSource.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V
      34: return

  public void dispose();
    Code:
       0: aload_0
       1: invokestatic  #16                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method get:()Ljava/lang/Object;
       4: checkcast     #7                  // class io/reactivex/rxjava3/disposables/Disposable
       7: invokestatic  #17                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      10: ireturn
}
