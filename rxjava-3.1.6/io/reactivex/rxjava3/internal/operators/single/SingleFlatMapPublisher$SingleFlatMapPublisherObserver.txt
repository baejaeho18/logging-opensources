Compiled from "SingleFlatMapPublisher.java"
final class io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver<S, T> extends java.util.concurrent.atomic.AtomicLong implements io.reactivex.rxjava3.core.SingleObserver<S>, io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super T> downstream;

  final io.reactivex.rxjava3.functions.Function<? super S, ? extends org.reactivestreams.Publisher<? extends T>> mapper;

  final java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> parent;

  io.reactivex.rxjava3.disposables.Disposable disposable;

  io.reactivex.rxjava3.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver(org.reactivestreams.Subscriber<? super T>, io.reactivex.rxjava3.functions.Function<? super S, ? extends org.reactivestreams.Publisher<? extends T>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      14: aload_0
      15: new           #4                  // class java/util/concurrent/atomic/AtomicReference
      18: dup
      19: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      22: putfield      #6                  // Field parent:Ljava/util/concurrent/atomic/AtomicReference;
      25: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field disposable:Lio/reactivex/rxjava3/disposables/Disposable;
       5: aload_0
       6: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: invokeinterface #8,  2            // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      15: return

  public void onSuccess(S);
    Code:
       0: aload_0
       1: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ldc           #10                 // String the mapper returned a null Publisher
      12: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: checkcast     #12                 // class org/reactivestreams/Publisher
      18: astore_2
      19: goto          38
      22: astore_3
      23: aload_3
      24: invokestatic  #14                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      27: aload_0
      28: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      31: aload_3
      32: invokeinterface #15,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      37: return
      38: aload_0
      39: getfield      #6                  // Field parent:Ljava/util/concurrent/atomic/AtomicReference;
      42: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      45: getstatic     #17                 // Field io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.CANCELLED:Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;
      48: if_acmpeq     58
      51: aload_2
      52: aload_0
      53: invokeinterface #18,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      58: return
    Exception table:
       from    to  target type
           0    19    22   Class java/lang/Throwable

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #6                  // Field parent:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_0
       5: aload_1
       6: invokestatic  #19                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.deferredSetOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;Lorg/reactivestreams/Subscription;)Z
       9: pop
      10: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      10: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: invokeinterface #21,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
       9: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      10: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field parent:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_0
       5: lload_1
       6: invokestatic  #22                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V
       9: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #7                  // Field disposable:Lio/reactivex/rxjava3/disposables/Disposable;
       4: invokeinterface #23,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
       9: aload_0
      10: getfield      #6                  // Field parent:Ljava/util/concurrent/atomic/AtomicReference;
      13: invokestatic  #24                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      16: pop
      17: return
}
