Compiled from "SingleDematerialize.java"
public final class io.reactivex.rxjava3.internal.operators.single.SingleDematerialize<T, R> extends io.reactivex.rxjava3.core.Maybe<R> {
  final io.reactivex.rxjava3.core.Single<T> source;

  final io.reactivex.rxjava3.functions.Function<? super T, io.reactivex.rxjava3.core.Notification<R>> selector;

  public io.reactivex.rxjava3.internal.operators.single.SingleDematerialize(io.reactivex.rxjava3.core.Single<T>, io.reactivex.rxjava3.functions.Function<? super T, io.reactivex.rxjava3.core.Notification<R>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/core/Maybe."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lio/reactivex/rxjava3/core/Single;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field selector:Lio/reactivex/rxjava3/functions/Function;
      14: return

  protected void subscribeActual(io.reactivex.rxjava3.core.MaybeObserver<? super R>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lio/reactivex/rxjava3/core/Single;
       4: new           #4                  // class io/reactivex/rxjava3/internal/operators/single/SingleDematerialize$DematerializeObserver
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field selector:Lio/reactivex/rxjava3/functions/Function;
      13: invokespecial #5                  // Method io/reactivex/rxjava3/internal/operators/single/SingleDematerialize$DematerializeObserver."<init>":(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/Function;)V
      16: invokevirtual #6                  // Method io/reactivex/rxjava3/core/Single.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V
      19: return
}
