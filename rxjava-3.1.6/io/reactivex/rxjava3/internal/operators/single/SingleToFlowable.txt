Compiled from "SingleToFlowable.java"
public final class io.reactivex.rxjava3.internal.operators.single.SingleToFlowable<T> extends io.reactivex.rxjava3.core.Flowable<T> {
  final io.reactivex.rxjava3.core.SingleSource<? extends T> source;

  public io.reactivex.rxjava3.internal.operators.single.SingleToFlowable(io.reactivex.rxjava3.core.SingleSource<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/core/Flowable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lio/reactivex/rxjava3/core/SingleSource;
       9: return

  public void subscribeActual(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lio/reactivex/rxjava3/core/SingleSource;
       4: new           #3                  // class io/reactivex/rxjava3/internal/operators/single/SingleToFlowable$SingleToFlowableObserver
       7: dup
       8: aload_1
       9: invokespecial #4                  // Method io/reactivex/rxjava3/internal/operators/single/SingleToFlowable$SingleToFlowableObserver."<init>":(Lorg/reactivestreams/Subscriber;)V
      12: invokeinterface #5,  2            // InterfaceMethod io/reactivex/rxjava3/core/SingleSource.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V
      17: return
}
