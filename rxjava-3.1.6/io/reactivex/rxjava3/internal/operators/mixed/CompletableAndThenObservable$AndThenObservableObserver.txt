Compiled from "CompletableAndThenObservable.java"
final class io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver<R> extends java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> implements io.reactivex.rxjava3.core.Observer<R>, io.reactivex.rxjava3.core.CompletableObserver, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super R> downstream;

  io.reactivex.rxjava3.core.ObservableSource<? extends R> other;

  io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver(io.reactivex.rxjava3.core.Observer<? super R>, io.reactivex.rxjava3.core.ObservableSource<? extends R>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field other:Lio/reactivex/rxjava3/core/ObservableSource;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      14: return

  public void onNext(R);
    Code:
       0: aload_0
       1: getfield      #3                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field other:Lio/reactivex/rxjava3/core/ObservableSource;
       4: astore_1
       5: aload_1
       6: ifnonnull     21
       9: aload_0
      10: getfield      #3                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      13: invokeinterface #6,  1            // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
      18: goto          33
      21: aload_0
      22: aconst_null
      23: putfield      #2                  // Field other:Lio/reactivex/rxjava3/core/ObservableSource;
      26: aload_1
      27: aload_0
      28: invokeinterface #7,  2            // InterfaceMethod io/reactivex/rxjava3/core/ObservableSource.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
      33: return

  public void dispose();
    Code:
       0: aload_0
       1: invokestatic  #8                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method get:()Ljava/lang/Object;
       4: checkcast     #10                 // class io/reactivex/rxjava3/disposables/Disposable
       7: invokestatic  #11                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      10: ireturn

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       5: pop
       6: return
}
