Compiled from "ConcatMapXMainObserver.java"
public abstract class io.reactivex.rxjava3.internal.operators.mixed.ConcatMapXMainObserver<T> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.Observer<T>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable errors;

  final int prefetch;

  final io.reactivex.rxjava3.internal.util.ErrorMode errorMode;

  io.reactivex.rxjava3.operators.SimpleQueue<T> queue;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  volatile boolean done;

  volatile boolean disposed;

  public io.reactivex.rxjava3.internal.operators.mixed.ConcatMapXMainObserver(int, io.reactivex.rxjava3.internal.util.ErrorMode);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field errorMode:Lio/reactivex/rxjava3/internal/util/ErrorMode;
       9: aload_0
      10: new           #3                  // class io/reactivex/rxjava3/internal/util/AtomicThrowable
      13: dup
      14: invokespecial #4                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      17: putfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      20: aload_0
      21: iload_1
      22: putfield      #6                  // Field prefetch:I
      25: return

  public final void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #8                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          95
      11: aload_0
      12: aload_1
      13: putfield      #7                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_1
      17: instanceof    #9                  // class io/reactivex/rxjava3/operators/QueueDisposable
      20: ifeq          76
      23: aload_1
      24: checkcast     #9                  // class io/reactivex/rxjava3/operators/QueueDisposable
      27: astore_2
      28: aload_2
      29: bipush        7
      31: invokeinterface #11,  2           // InterfaceMethod io/reactivex/rxjava3/operators/QueueDisposable.requestFusion:(I)I
      36: istore_3
      37: iload_3
      38: iconst_1
      39: if_icmpne     61
      42: aload_0
      43: aload_2
      44: putfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      47: aload_0
      48: iconst_1
      49: putfield      #13                 // Field done:Z
      52: aload_0
      53: invokevirtual #14                 // Method onSubscribeDownstream:()V
      56: aload_0
      57: invokevirtual #15                 // Method drain:()V
      60: return
      61: iload_3
      62: iconst_2
      63: if_icmpne     76
      66: aload_0
      67: aload_2
      68: putfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      71: aload_0
      72: invokevirtual #14                 // Method onSubscribeDownstream:()V
      75: return
      76: aload_0
      77: new           #16                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      80: dup
      81: aload_0
      82: getfield      #6                  // Field prefetch:I
      85: invokespecial #17                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue."<init>":(I)V
      88: putfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      91: aload_0
      92: invokevirtual #14                 // Method onSubscribeDownstream:()V
      95: return

  public final void onNext(T);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: getfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
       8: aload_1
       9: invokeinterface #18,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.offer:(Ljava/lang/Object;)Z
      14: pop
      15: aload_0
      16: invokevirtual #15                 // Method drain:()V
      19: return

  public final void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       4: aload_1
       5: invokevirtual #19                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
       8: ifeq          34
      11: aload_0
      12: getfield      #2                  // Field errorMode:Lio/reactivex/rxjava3/internal/util/ErrorMode;
      15: getstatic     #20                 // Field io/reactivex/rxjava3/internal/util/ErrorMode.IMMEDIATE:Lio/reactivex/rxjava3/internal/util/ErrorMode;
      18: if_acmpne     25
      21: aload_0
      22: invokevirtual #21                 // Method disposeInner:()V
      25: aload_0
      26: iconst_1
      27: putfield      #13                 // Field done:Z
      30: aload_0
      31: invokevirtual #15                 // Method drain:()V
      34: return

  public final void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #13                 // Field done:Z
       5: aload_0
       6: invokevirtual #15                 // Method drain:()V
       9: return

  public final void dispose();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #22                 // Field disposed:Z
       5: aload_0
       6: getfield      #7                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       9: invokeinterface #23,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      14: aload_0
      15: invokevirtual #21                 // Method disposeInner:()V
      18: aload_0
      19: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      22: invokevirtual #24                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      25: aload_0
      26: invokevirtual #25                 // Method getAndIncrement:()I
      29: ifne          45
      32: aload_0
      33: getfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      36: invokeinterface #26,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.clear:()V
      41: aload_0
      42: invokevirtual #27                 // Method clearValue:()V
      45: return

  public final boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #22                 // Field disposed:Z
       4: ireturn

  void clearValue();
    Code:
       0: return

  abstract void onSubscribeDownstream();

  abstract void disposeInner();

  abstract void drain();
}
