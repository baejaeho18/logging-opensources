Compiled from "CompletableAndThenPublisher.java"
final class io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber<R> extends java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> implements io.reactivex.rxjava3.core.FlowableSubscriber<R>, io.reactivex.rxjava3.core.CompletableObserver, org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super R> downstream;

  org.reactivestreams.Publisher<? extends R> other;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  final java.util.concurrent.atomic.AtomicLong requested;

  io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber(org.reactivestreams.Subscriber<? super R>, org.reactivestreams.Publisher<? extends R>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field other:Lorg/reactivestreams/Publisher;
      14: aload_0
      15: new           #4                  // class java/util/concurrent/atomic/AtomicLong
      18: dup
      19: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      22: putfield      #6                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      25: return

  public void onNext(R);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #3                  // Field other:Lorg/reactivestreams/Publisher;
       4: astore_1
       5: aload_1
       6: ifnonnull     21
       9: aload_0
      10: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      13: invokeinterface #9,  1            // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      18: goto          33
      21: aload_0
      22: aconst_null
      23: putfield      #3                  // Field other:Lorg/reactivestreams/Publisher;
      26: aload_1
      27: aload_0
      28: invokeinterface #10,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      33: return

  public void request(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
       5: lload_1
       6: invokestatic  #11                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V
       9: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #12                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: invokeinterface #13,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
       9: aload_0
      10: invokestatic  #14                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      13: pop
      14: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #12                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #15                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #12                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #16,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
       5: aload_1
       6: invokestatic  #17                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.deferredSetOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;Lorg/reactivestreams/Subscription;)Z
       9: pop
      10: return
}
