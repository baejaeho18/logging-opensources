Compiled from "CompletableAndThenPublisher.java"
public final class io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenPublisher<R> extends io.reactivex.rxjava3.core.Flowable<R> {
  final io.reactivex.rxjava3.core.CompletableSource source;

  final org.reactivestreams.Publisher<? extends R> other;

  public io.reactivex.rxjava3.internal.operators.mixed.CompletableAndThenPublisher(io.reactivex.rxjava3.core.CompletableSource, org.reactivestreams.Publisher<? extends R>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/core/Flowable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lio/reactivex/rxjava3/core/CompletableSource;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field other:Lorg/reactivestreams/Publisher;
      14: return

  protected void subscribeActual(org.reactivestreams.Subscriber<? super R>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lio/reactivex/rxjava3/core/CompletableSource;
       4: new           #4                  // class io/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenPublisher$AndThenPublisherSubscriber
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field other:Lorg/reactivestreams/Publisher;
      13: invokespecial #5                  // Method io/reactivex/rxjava3/internal/operators/mixed/CompletableAndThenPublisher$AndThenPublisherSubscriber."<init>":(Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Publisher;)V
      16: invokeinterface #6,  2            // InterfaceMethod io/reactivex/rxjava3/core/CompletableSource.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V
      21: return
}
