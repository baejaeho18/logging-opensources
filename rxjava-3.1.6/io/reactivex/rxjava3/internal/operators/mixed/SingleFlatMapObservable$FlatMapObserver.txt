Compiled from "SingleFlatMapObservable.java"
final class io.reactivex.rxjava3.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver<T, R> extends java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> implements io.reactivex.rxjava3.core.Observer<R>, io.reactivex.rxjava3.core.SingleObserver<T>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super R> downstream;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.ObservableSource<? extends R>> mapper;

  io.reactivex.rxjava3.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver(io.reactivex.rxjava3.core.Observer<? super R>, io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.ObservableSource<? extends R>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      14: return

  public void onNext(R);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: invokeinterface #6,  1            // InterfaceMethod io/reactivex/rxjava3/core/Observer.onComplete:()V
       9: return

  public void dispose();
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method get:()Ljava/lang/Object;
       4: checkcast     #9                  // class io/reactivex/rxjava3/disposables/Disposable
       7: invokestatic  #10                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      10: ireturn

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #11                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       5: pop
       6: return

  public void onSuccess(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ldc           #13                 // String The mapper returned a null Publisher
      12: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: checkcast     #15                 // class io/reactivex/rxjava3/core/ObservableSource
      18: astore_2
      19: goto          38
      22: astore_3
      23: aload_3
      24: invokestatic  #17                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      27: aload_0
      28: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      31: aload_3
      32: invokeinterface #5,  2            // InterfaceMethod io/reactivex/rxjava3/core/Observer.onError:(Ljava/lang/Throwable;)V
      37: return
      38: aload_0
      39: invokevirtual #18                 // Method isDisposed:()Z
      42: ifne          52
      45: aload_2
      46: aload_0
      47: invokeinterface #19,  2           // InterfaceMethod io/reactivex/rxjava3/core/ObservableSource.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V
      52: return
    Exception table:
       from    to  target type
           0    19    22   Class java/lang/Throwable
}
