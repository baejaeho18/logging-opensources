Compiled from "FlowableSwitchMapCompletable.java"
final class io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver<T> implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, io.reactivex.rxjava3.disposables.Disposable {
  final io.reactivex.rxjava3.core.CompletableObserver downstream;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.CompletableSource> mapper;

  final boolean delayErrors;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable errors;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver> inner;

  static final io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver INNER_DISPOSED;

  volatile boolean done;

  org.reactivestreams.Subscription upstream;

  io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver(io.reactivex.rxjava3.core.CompletableObserver, io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.CompletableSource>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field delayErrors:Z
      19: aload_0
      20: new           #5                  // class io/reactivex/rxjava3/internal/util/AtomicThrowable
      23: dup
      24: invokespecial #6                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      27: putfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      30: aload_0
      31: new           #8                  // class java/util/concurrent/atomic/AtomicReference
      34: dup
      35: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      38: putfield      #10                 // Field inner:Ljava/util/concurrent/atomic/AtomicReference;
      41: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #11                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #12                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          35
      11: aload_0
      12: aload_1
      13: putfield      #11                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      20: aload_0
      21: invokeinterface #13,  2           // InterfaceMethod io/reactivex/rxjava3/core/CompletableObserver.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      26: aload_1
      27: ldc2_w        #15                 // long 9223372036854775807l
      30: invokeinterface #17,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      35: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ldc           #19                 // String The mapper returned a null CompletableSource
      12: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: checkcast     #21                 // class io/reactivex/rxjava3/core/CompletableSource
      18: astore_2
      19: goto          42
      22: astore_3
      23: aload_3
      24: invokestatic  #23                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      27: aload_0
      28: getfield      #11                 // Field upstream:Lorg/reactivestreams/Subscription;
      31: invokeinterface #24,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      36: aload_0
      37: aload_3
      38: invokevirtual #25                 // Method onError:(Ljava/lang/Throwable;)V
      41: return
      42: new           #26                 // class io/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver
      45: dup
      46: aload_0
      47: invokespecial #27                 // Method io/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable$SwitchMapCompletableObserver;)V
      50: astore_3
      51: aload_0
      52: getfield      #10                 // Field inner:Ljava/util/concurrent/atomic/AtomicReference;
      55: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      58: checkcast     #26                 // class io/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver
      61: astore        4
      63: aload         4
      65: getstatic     #29                 // Field INNER_DISPOSED:Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver;
      68: if_acmpne     74
      71: goto          110
      74: aload_0
      75: getfield      #10                 // Field inner:Ljava/util/concurrent/atomic/AtomicReference;
      78: aload         4
      80: aload_3
      81: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      84: ifeq          107
      87: aload         4
      89: ifnull        97
      92: aload         4
      94: invokevirtual #31                 // Method io/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver.dispose:()V
      97: aload_2
      98: aload_3
      99: invokeinterface #32,  2           // InterfaceMethod io/reactivex/rxjava3/core/CompletableSource.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V
     104: goto          110
     107: goto          51
     110: return
    Exception table:
       from    to  target type
           0    19    22   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       4: aload_1
       5: invokevirtual #33                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
       8: ifeq          40
      11: aload_0
      12: getfield      #4                  // Field delayErrors:Z
      15: ifeq          25
      18: aload_0
      19: invokevirtual #34                 // Method onComplete:()V
      22: goto          40
      25: aload_0
      26: invokevirtual #35                 // Method disposeInner:()V
      29: aload_0
      30: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      33: aload_0
      34: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      37: invokevirtual #36                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V
      40: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #37                 // Field done:Z
       5: aload_0
       6: getfield      #10                 // Field inner:Ljava/util/concurrent/atomic/AtomicReference;
       9: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      12: ifnonnull     26
      15: aload_0
      16: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      19: aload_0
      20: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      23: invokevirtual #36                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V
      26: return

  void disposeInner();
    Code:
       0: aload_0
       1: getfield      #10                 // Field inner:Ljava/util/concurrent/atomic/AtomicReference;
       4: getstatic     #29                 // Field INNER_DISPOSED:Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver;
       7: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #26                 // class io/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver
      13: astore_1
      14: aload_1
      15: ifnull        29
      18: aload_1
      19: getstatic     #29                 // Field INNER_DISPOSED:Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver;
      22: if_acmpeq     29
      25: aload_1
      26: invokevirtual #31                 // Method io/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver.dispose:()V
      29: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #11                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: invokeinterface #24,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: aload_0
      10: invokevirtual #35                 // Method disposeInner:()V
      13: aload_0
      14: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      17: invokevirtual #39                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      20: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #10                 // Field inner:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #29                 // Field INNER_DISPOSED:Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver;
      10: if_acmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  void innerError(io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field inner:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: aconst_null
       6: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ifeq          78
      12: aload_0
      13: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      16: aload_2
      17: invokevirtual #33                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      20: ifeq          82
      23: aload_0
      24: getfield      #4                  // Field delayErrors:Z
      27: ifeq          51
      30: aload_0
      31: getfield      #37                 // Field done:Z
      34: ifeq          82
      37: aload_0
      38: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      41: aload_0
      42: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      45: invokevirtual #36                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V
      48: goto          82
      51: aload_0
      52: getfield      #11                 // Field upstream:Lorg/reactivestreams/Subscription;
      55: invokeinterface #24,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      60: aload_0
      61: invokevirtual #35                 // Method disposeInner:()V
      64: aload_0
      65: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      68: aload_0
      69: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      72: invokevirtual #36                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V
      75: goto          82
      78: aload_2
      79: invokestatic  #40                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      82: return

  void innerComplete(io.reactivex.rxjava3.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver);
    Code:
       0: aload_0
       1: getfield      #10                 // Field inner:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: aconst_null
       6: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ifeq          30
      12: aload_0
      13: getfield      #37                 // Field done:Z
      16: ifeq          30
      19: aload_0
      20: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      23: aload_0
      24: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      27: invokevirtual #36                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V
      30: return

  static {};
    Code:
       0: new           #26                 // class io/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver
       3: dup
       4: aconst_null
       5: invokespecial #27                 // Method io/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable$SwitchMapCompletableObserver;)V
       8: putstatic     #29                 // Field INNER_DISPOSED:Lio/reactivex/rxjava3/internal/operators/mixed/FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver;
      11: return
}
