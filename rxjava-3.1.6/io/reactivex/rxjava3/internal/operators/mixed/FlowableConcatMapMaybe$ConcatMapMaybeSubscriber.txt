Compiled from "FlowableConcatMapMaybe.java"
final class io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber<T, R> extends io.reactivex.rxjava3.internal.operators.mixed.ConcatMapXMainSubscriber<T> implements org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super R> downstream;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.MaybeSource<? extends R>> mapper;

  final java.util.concurrent.atomic.AtomicLong requested;

  final io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver<R> inner;

  long emitted;

  int consumed;

  R item;

  volatile int state;

  static final int STATE_INACTIVE;

  static final int STATE_ACTIVE;

  static final int STATE_RESULT_VALUE;

  io.reactivex.rxjava3.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber(org.reactivestreams.Subscriber<? super R>, io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.MaybeSource<? extends R>>, int, io.reactivex.rxjava3.internal.util.ErrorMode);
    Code:
       0: aload_0
       1: iload_3
       2: aload         4
       4: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/mixed/ConcatMapXMainSubscriber."<init>":(ILio/reactivex/rxjava3/internal/util/ErrorMode;)V
       7: aload_0
       8: aload_1
       9: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      12: aload_0
      13: aload_2
      14: putfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      17: aload_0
      18: new           #4                  // class java/util/concurrent/atomic/AtomicLong
      21: dup
      22: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      25: putfield      #6                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      28: aload_0
      29: new           #7                  // class io/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver
      32: dup
      33: aload_0
      34: invokespecial #8                  // Method io/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapMaybe$ConcatMapMaybeSubscriber;)V
      37: putfield      #9                  // Field inner:Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver;
      40: return

  void onSubscribeDownstream();
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: aload_0
       5: invokeinterface #10,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      10: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
       4: lload_1
       5: invokestatic  #11                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
       8: pop2
       9: aload_0
      10: invokevirtual #12                 // Method drain:()V
      13: return

  public void cancel();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method stop:()V
       4: return

  void innerSuccess(R);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field item:Ljava/lang/Object;
       5: aload_0
       6: iconst_2
       7: putfield      #16                 // Field state:I
      10: aload_0
      11: invokevirtual #12                 // Method drain:()V
      14: return

  void innerComplete();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #16                 // Field state:I
       5: aload_0
       6: invokevirtual #12                 // Method drain:()V
       9: return

  void innerError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #17                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       4: aload_1
       5: invokevirtual #18                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
       8: ifeq          39
      11: aload_0
      12: getfield      #19                 // Field errorMode:Lio/reactivex/rxjava3/internal/util/ErrorMode;
      15: getstatic     #20                 // Field io/reactivex/rxjava3/internal/util/ErrorMode.END:Lio/reactivex/rxjava3/internal/util/ErrorMode;
      18: if_acmpeq     30
      21: aload_0
      22: getfield      #21                 // Field upstream:Lorg/reactivestreams/Subscription;
      25: invokeinterface #22,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      30: aload_0
      31: iconst_0
      32: putfield      #16                 // Field state:I
      35: aload_0
      36: invokevirtual #12                 // Method drain:()V
      39: return

  void clearValue();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #14                 // Field item:Ljava/lang/Object;
       5: return

  void disposeInner();
    Code:
       0: aload_0
       1: getfield      #9                  // Field inner:Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver;
       4: invokevirtual #23                 // Method io/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver.dispose:()V
       7: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: iconst_1
       9: istore_1
      10: aload_0
      11: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      14: astore_2
      15: aload_0
      16: getfield      #19                 // Field errorMode:Lio/reactivex/rxjava3/internal/util/ErrorMode;
      19: astore_3
      20: aload_0
      21: getfield      #25                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      24: astore        4
      26: aload_0
      27: getfield      #17                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      30: astore        5
      32: aload_0
      33: getfield      #6                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      36: astore        6
      38: aload_0
      39: getfield      #26                 // Field prefetch:I
      42: aload_0
      43: getfield      #26                 // Field prefetch:I
      46: iconst_1
      47: ishr
      48: isub
      49: istore        7
      51: aload_0
      52: getfield      #27                 // Field syncFused:Z
      55: istore        8
      57: aload_0
      58: getfield      #28                 // Field cancelled:Z
      61: ifeq          79
      64: aload         4
      66: invokeinterface #29,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.clear:()V
      71: aload_0
      72: aconst_null
      73: putfield      #14                 // Field item:Ljava/lang/Object;
      76: goto          407
      79: aload_0
      80: getfield      #16                 // Field state:I
      83: istore        9
      85: aload         5
      87: invokevirtual #30                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
      90: ifnull        131
      93: aload_3
      94: getstatic     #31                 // Field io/reactivex/rxjava3/internal/util/ErrorMode.IMMEDIATE:Lio/reactivex/rxjava3/internal/util/ErrorMode;
      97: if_acmpeq     112
     100: aload_3
     101: getstatic     #32                 // Field io/reactivex/rxjava3/internal/util/ErrorMode.BOUNDARY:Lio/reactivex/rxjava3/internal/util/ErrorMode;
     104: if_acmpne     131
     107: iload         9
     109: ifne          131
     112: aload         4
     114: invokeinterface #29,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.clear:()V
     119: aload_0
     120: aconst_null
     121: putfield      #14                 // Field item:Ljava/lang/Object;
     124: aload         5
     126: aload_2
     127: invokevirtual #33                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     130: return
     131: iload         9
     133: ifne          349
     136: aload_0
     137: getfield      #34                 // Field done:Z
     140: istore        10
     142: aload         4
     144: invokeinterface #35,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.poll:()Ljava/lang/Object;
     149: astore        11
     151: goto          185
     154: astore        12
     156: aload         12
     158: invokestatic  #37                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     161: aload_0
     162: getfield      #21                 // Field upstream:Lorg/reactivestreams/Subscription;
     165: invokeinterface #22,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     170: aload         5
     172: aload         12
     174: invokevirtual #18                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     177: pop
     178: aload         5
     180: aload_2
     181: invokevirtual #33                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     184: return
     185: aload         11
     187: ifnonnull     194
     190: iconst_1
     191: goto          195
     194: iconst_0
     195: istore        12
     197: iload         10
     199: ifeq          214
     202: iload         12
     204: ifeq          214
     207: aload         5
     209: aload_2
     210: invokevirtual #33                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     213: return
     214: iload         12
     216: ifeq          222
     219: goto          407
     222: iload         8
     224: ifne          268
     227: aload_0
     228: getfield      #38                 // Field consumed:I
     231: iconst_1
     232: iadd
     233: istore        13
     235: iload         13
     237: iload         7
     239: if_icmpne     262
     242: aload_0
     243: iconst_0
     244: putfield      #38                 // Field consumed:I
     247: aload_0
     248: getfield      #21                 // Field upstream:Lorg/reactivestreams/Subscription;
     251: iload         7
     253: i2l
     254: invokeinterface #39,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     259: goto          268
     262: aload_0
     263: iload         13
     265: putfield      #38                 // Field consumed:I
     268: aload_0
     269: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
     272: aload         11
     274: invokeinterface #40,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     279: ldc           #41                 // String The mapper returned a null MaybeSource
     281: invokestatic  #42                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     284: checkcast     #43                 // class io/reactivex/rxjava3/core/MaybeSource
     287: astore        13
     289: goto          330
     292: astore        14
     294: aload         14
     296: invokestatic  #37                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     299: aload_0
     300: getfield      #21                 // Field upstream:Lorg/reactivestreams/Subscription;
     303: invokeinterface #22,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     308: aload         4
     310: invokeinterface #29,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.clear:()V
     315: aload         5
     317: aload         14
     319: invokevirtual #18                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     322: pop
     323: aload         5
     325: aload_2
     326: invokevirtual #33                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     329: return
     330: aload_0
     331: iconst_1
     332: putfield      #16                 // Field state:I
     335: aload         13
     337: aload_0
     338: getfield      #9                  // Field inner:Lio/reactivex/rxjava3/internal/operators/mixed/FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver;
     341: invokeinterface #44,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeSource.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V
     346: goto          407
     349: iload         9
     351: iconst_2
     352: if_icmpne     407
     355: aload_0
     356: getfield      #45                 // Field emitted:J
     359: lstore        10
     361: lload         10
     363: aload         6
     365: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     368: lcmp
     369: ifeq          407
     372: aload_0
     373: getfield      #14                 // Field item:Ljava/lang/Object;
     376: astore        12
     378: aload_0
     379: aconst_null
     380: putfield      #14                 // Field item:Ljava/lang/Object;
     383: aload_2
     384: aload         12
     386: invokeinterface #47,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     391: aload_0
     392: lload         10
     394: lconst_1
     395: ladd
     396: putfield      #45                 // Field emitted:J
     399: aload_0
     400: iconst_0
     401: putfield      #16                 // Field state:I
     404: goto          57
     407: aload_0
     408: iload_1
     409: ineg
     410: invokevirtual #48                 // Method addAndGet:(I)I
     413: istore_1
     414: iload_1
     415: ifne          57
     418: goto          421
     421: return
    Exception table:
       from    to  target type
         142   151   154   Class java/lang/Throwable
         268   289   292   Class java/lang/Throwable
}
