Compiled from "ObservableSwitchMapSingle.java"
final class io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver<T, R> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.Observer<T>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Observer<? super R> downstream;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.SingleSource<? extends R>> mapper;

  final boolean delayErrors;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable errors;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver<R>> inner;

  static final io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver<java.lang.Object> INNER_DISPOSED;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  volatile boolean done;

  volatile boolean cancelled;

  io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver(io.reactivex.rxjava3.core.Observer<? super R>, io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.SingleSource<? extends R>>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field delayErrors:Z
      19: aload_0
      20: new           #5                  // class io/reactivex/rxjava3/internal/util/AtomicThrowable
      23: dup
      24: invokespecial #6                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      27: putfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      30: aload_0
      31: new           #8                  // class java/util/concurrent/atomic/AtomicReference
      34: dup
      35: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      38: putfield      #10                 // Field inner:Ljava/util/concurrent/atomic/AtomicReference;
      41: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #11                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #12                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #11                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      20: aload_0
      21: invokeinterface #13,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #10                 // Field inner:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #15                 // class io/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver
      10: astore_2
      11: aload_2
      12: ifnull        19
      15: aload_2
      16: invokevirtual #16                 // Method io/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver.dispose:()V
      19: aload_0
      20: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      23: aload_1
      24: invokeinterface #17,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      29: ldc           #18                 // String The mapper returned a null SingleSource
      31: invokestatic  #19                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      34: checkcast     #20                 // class io/reactivex/rxjava3/core/SingleSource
      37: astore_3
      38: goto          75
      41: astore        4
      43: aload         4
      45: invokestatic  #22                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      48: aload_0
      49: getfield      #11                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      52: invokeinterface #23,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      57: aload_0
      58: getfield      #10                 // Field inner:Ljava/util/concurrent/atomic/AtomicReference;
      61: getstatic     #24                 // Field INNER_DISPOSED:Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver;
      64: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: aload_0
      69: aload         4
      71: invokevirtual #26                 // Method onError:(Ljava/lang/Throwable;)V
      74: return
      75: new           #15                 // class io/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver
      78: dup
      79: aload_0
      80: invokespecial #27                 // Method io/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver;)V
      83: astore        4
      85: aload_0
      86: getfield      #10                 // Field inner:Ljava/util/concurrent/atomic/AtomicReference;
      89: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      92: checkcast     #15                 // class io/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver
      95: astore_2
      96: aload_2
      97: getstatic     #24                 // Field INNER_DISPOSED:Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver;
     100: if_acmpne     106
     103: goto          130
     106: aload_0
     107: getfield      #10                 // Field inner:Ljava/util/concurrent/atomic/AtomicReference;
     110: aload_2
     111: aload         4
     113: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     116: ifeq          85
     119: aload_3
     120: aload         4
     122: invokeinterface #29,  2           // InterfaceMethod io/reactivex/rxjava3/core/SingleSource.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V
     127: goto          130
     130: return
    Exception table:
       from    to  target type
          19    38    41   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       4: aload_1
       5: invokevirtual #30                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
       8: ifeq          31
      11: aload_0
      12: getfield      #4                  // Field delayErrors:Z
      15: ifne          22
      18: aload_0
      19: invokevirtual #31                 // Method disposeInner:()V
      22: aload_0
      23: iconst_1
      24: putfield      #32                 // Field done:Z
      27: aload_0
      28: invokevirtual #33                 // Method drain:()V
      31: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #32                 // Field done:Z
       5: aload_0
       6: invokevirtual #33                 // Method drain:()V
       9: return

  void disposeInner();
    Code:
       0: aload_0
       1: getfield      #10                 // Field inner:Ljava/util/concurrent/atomic/AtomicReference;
       4: getstatic     #24                 // Field INNER_DISPOSED:Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver;
       7: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #15                 // class io/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver
      13: astore_1
      14: aload_1
      15: ifnull        29
      18: aload_1
      19: getstatic     #24                 // Field INNER_DISPOSED:Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver;
      22: if_acmpeq     29
      25: aload_1
      26: invokevirtual #16                 // Method io/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver.dispose:()V
      29: return

  public void dispose();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #34                 // Field cancelled:Z
       5: aload_0
       6: getfield      #11                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       9: invokeinterface #23,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      14: aload_0
      15: invokevirtual #31                 // Method disposeInner:()V
      18: aload_0
      19: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      22: invokevirtual #35                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      25: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #34                 // Field cancelled:Z
       4: ireturn

  void innerError(io.reactivex.rxjava3.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver<R>, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field inner:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: aconst_null
       6: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ifeq          50
      12: aload_0
      13: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      16: aload_2
      17: invokevirtual #30                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      20: ifeq          54
      23: aload_0
      24: getfield      #4                  // Field delayErrors:Z
      27: ifne          43
      30: aload_0
      31: getfield      #11                 // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      34: invokeinterface #23,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      39: aload_0
      40: invokevirtual #31                 // Method disposeInner:()V
      43: aload_0
      44: invokevirtual #33                 // Method drain:()V
      47: goto          54
      50: aload_2
      51: invokestatic  #36                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      54: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: iconst_1
       9: istore_1
      10: aload_0
      11: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
      14: astore_2
      15: aload_0
      16: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      19: astore_3
      20: aload_0
      21: getfield      #10                 // Field inner:Ljava/util/concurrent/atomic/AtomicReference;
      24: astore        4
      26: aload_0
      27: getfield      #34                 // Field cancelled:Z
      30: ifeq          34
      33: return
      34: aload_3
      35: invokevirtual #38                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
      38: ifnull        54
      41: aload_0
      42: getfield      #4                  // Field delayErrors:Z
      45: ifne          54
      48: aload_3
      49: aload_2
      50: invokevirtual #39                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V
      53: return
      54: aload_0
      55: getfield      #32                 // Field done:Z
      58: istore        5
      60: aload         4
      62: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      65: checkcast     #15                 // class io/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver
      68: astore        6
      70: aload         6
      72: ifnonnull     79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: istore        7
      82: iload         5
      84: ifeq          98
      87: iload         7
      89: ifeq          98
      92: aload_3
      93: aload_2
      94: invokevirtual #39                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/Observer;)V
      97: return
      98: iload         7
     100: ifne          137
     103: aload         6
     105: getfield      #40                 // Field io/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver.item:Ljava/lang/Object;
     108: ifnonnull     114
     111: goto          137
     114: aload         4
     116: aload         6
     118: aconst_null
     119: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     122: pop
     123: aload_2
     124: aload         6
     126: getfield      #40                 // Field io/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver.item:Ljava/lang/Object;
     129: invokeinterface #41,  2           // InterfaceMethod io/reactivex/rxjava3/core/Observer.onNext:(Ljava/lang/Object;)V
     134: goto          26
     137: aload_0
     138: iload_1
     139: ineg
     140: invokevirtual #42                 // Method addAndGet:(I)I
     143: istore_1
     144: iload_1
     145: ifne          26
     148: goto          151
     151: return

  static {};
    Code:
       0: new           #15                 // class io/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver
       3: dup
       4: aconst_null
       5: invokespecial #27                 // Method io/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver;)V
       8: putstatic     #24                 // Field INNER_DISPOSED:Lio/reactivex/rxjava3/internal/operators/mixed/ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver;
      11: return
}
