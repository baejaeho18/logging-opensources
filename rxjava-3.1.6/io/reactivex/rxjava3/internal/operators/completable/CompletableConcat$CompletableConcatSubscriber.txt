Compiled from "CompletableConcat.java"
final class io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.FlowableSubscriber<io.reactivex.rxjava3.core.CompletableSource>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.CompletableObserver downstream;

  final int prefetch;

  final int limit;

  final io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver inner;

  final java.util.concurrent.atomic.AtomicBoolean once;

  int sourceFused;

  int consumed;

  io.reactivex.rxjava3.operators.SimpleQueue<io.reactivex.rxjava3.core.CompletableSource> queue;

  org.reactivestreams.Subscription upstream;

  volatile boolean done;

  volatile boolean active;

  io.reactivex.rxjava3.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber(io.reactivex.rxjava3.core.CompletableObserver, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field prefetch:I
      14: aload_0
      15: new           #4                  // class io/reactivex/rxjava3/internal/operators/completable/CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver
      18: dup
      19: aload_0
      20: invokespecial #5                  // Method io/reactivex/rxjava3/internal/operators/completable/CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$CompletableConcatSubscriber;)V
      23: putfield      #6                  // Field inner:Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver;
      26: aload_0
      27: new           #7                  // class java/util/concurrent/atomic/AtomicBoolean
      30: dup
      31: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      34: putfield      #9                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
      37: aload_0
      38: iload_2
      39: iload_2
      40: iconst_2
      41: ishr
      42: isub
      43: putfield      #10                 // Field limit:I
      46: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #11                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #12                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          192
      11: aload_0
      12: aload_1
      13: putfield      #11                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #3                  // Field prefetch:I
      20: ldc           #14                 // int 2147483647
      22: if_icmpne     31
      25: ldc2_w        #16                 // long 9223372036854775807l
      28: goto          36
      31: aload_0
      32: getfield      #3                  // Field prefetch:I
      35: i2l
      36: lstore_2
      37: aload_1
      38: instanceof    #18                 // class io/reactivex/rxjava3/operators/QueueSubscription
      41: ifeq          134
      44: aload_1
      45: checkcast     #18                 // class io/reactivex/rxjava3/operators/QueueSubscription
      48: astore        4
      50: aload         4
      52: iconst_3
      53: invokeinterface #19,  2           // InterfaceMethod io/reactivex/rxjava3/operators/QueueSubscription.requestFusion:(I)I
      58: istore        5
      60: iload         5
      62: iconst_1
      63: if_icmpne     98
      66: aload_0
      67: iload         5
      69: putfield      #20                 // Field sourceFused:I
      72: aload_0
      73: aload         4
      75: putfield      #21                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      78: aload_0
      79: iconst_1
      80: putfield      #22                 // Field done:Z
      83: aload_0
      84: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      87: aload_0
      88: invokeinterface #23,  2           // InterfaceMethod io/reactivex/rxjava3/core/CompletableObserver.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      93: aload_0
      94: invokevirtual #24                 // Method drain:()V
      97: return
      98: iload         5
     100: iconst_2
     101: if_icmpne     134
     104: aload_0
     105: iload         5
     107: putfield      #20                 // Field sourceFused:I
     110: aload_0
     111: aload         4
     113: putfield      #21                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
     116: aload_0
     117: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
     120: aload_0
     121: invokeinterface #23,  2           // InterfaceMethod io/reactivex/rxjava3/core/CompletableObserver.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
     126: aload_1
     127: lload_2
     128: invokeinterface #25,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     133: return
     134: aload_0
     135: getfield      #3                  // Field prefetch:I
     138: ldc           #14                 // int 2147483647
     140: if_icmpne     160
     143: aload_0
     144: new           #26                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
     147: dup
     148: invokestatic  #27                 // Method io/reactivex/rxjava3/core/Flowable.bufferSize:()I
     151: invokespecial #28                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue."<init>":(I)V
     154: putfield      #21                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
     157: goto          175
     160: aload_0
     161: new           #29                 // class io/reactivex/rxjava3/operators/SpscArrayQueue
     164: dup
     165: aload_0
     166: getfield      #3                  // Field prefetch:I
     169: invokespecial #30                 // Method io/reactivex/rxjava3/operators/SpscArrayQueue."<init>":(I)V
     172: putfield      #21                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
     175: aload_0
     176: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
     179: aload_0
     180: invokeinterface #23,  2           // InterfaceMethod io/reactivex/rxjava3/core/CompletableObserver.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
     185: aload_1
     186: lload_2
     187: invokeinterface #25,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     192: return

  public void onNext(io.reactivex.rxjava3.core.CompletableSource);
    Code:
       0: aload_0
       1: getfield      #20                 // Field sourceFused:I
       4: ifne          32
       7: aload_0
       8: getfield      #21                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      11: aload_1
      12: invokeinterface #31,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.offer:(Ljava/lang/Object;)Z
      17: ifne          32
      20: aload_0
      21: new           #32                 // class io/reactivex/rxjava3/exceptions/QueueOverflowException
      24: dup
      25: invokespecial #33                 // Method io/reactivex/rxjava3/exceptions/QueueOverflowException."<init>":()V
      28: invokevirtual #34                 // Method onError:(Ljava/lang/Throwable;)V
      31: return
      32: aload_0
      33: invokevirtual #24                 // Method drain:()V
      36: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #9                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          33
      12: aload_0
      13: getfield      #6                  // Field inner:Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver;
      16: invokestatic  #36                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      19: pop
      20: aload_0
      21: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      24: aload_1
      25: invokeinterface #37,  2           // InterfaceMethod io/reactivex/rxjava3/core/CompletableObserver.onError:(Ljava/lang/Throwable;)V
      30: goto          37
      33: aload_1
      34: invokestatic  #38                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      37: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #22                 // Field done:Z
       5: aload_0
       6: invokevirtual #24                 // Method drain:()V
       9: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #11                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: invokeinterface #39,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: aload_0
      10: getfield      #6                  // Field inner:Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver;
      13: invokestatic  #36                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      16: pop
      17: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field inner:Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver;
       4: invokevirtual #40                 // Method io/reactivex/rxjava3/internal/operators/completable/CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver.get:()Ljava/lang/Object;
       7: checkcast     #41                 // class io/reactivex/rxjava3/disposables/Disposable
      10: invokestatic  #42                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      13: ireturn

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #44                 // Method isDisposed:()Z
      12: ifeq          16
      15: return
      16: aload_0
      17: getfield      #45                 // Field active:Z
      20: ifne          106
      23: aload_0
      24: getfield      #22                 // Field done:Z
      27: istore_1
      28: aload_0
      29: getfield      #21                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      32: invokeinterface #46,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.poll:()Ljava/lang/Object;
      37: checkcast     #47                 // class io/reactivex/rxjava3/core/CompletableSource
      40: astore_2
      41: goto          55
      44: astore_3
      45: aload_3
      46: invokestatic  #49                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      49: aload_0
      50: aload_3
      51: invokevirtual #50                 // Method innerError:(Ljava/lang/Throwable;)V
      54: return
      55: aload_2
      56: ifnonnull     63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: istore_3
      65: iload_1
      66: ifeq          83
      69: iload_3
      70: ifeq          83
      73: aload_0
      74: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      77: invokeinterface #51,  1           // InterfaceMethod io/reactivex/rxjava3/core/CompletableObserver.onComplete:()V
      82: return
      83: iload_3
      84: ifne          106
      87: aload_0
      88: iconst_1
      89: putfield      #45                 // Field active:Z
      92: aload_2
      93: aload_0
      94: getfield      #6                  // Field inner:Lio/reactivex/rxjava3/internal/operators/completable/CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver;
      97: invokeinterface #52,  2           // InterfaceMethod io/reactivex/rxjava3/core/CompletableSource.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V
     102: aload_0
     103: invokevirtual #53                 // Method request:()V
     106: aload_0
     107: invokevirtual #54                 // Method decrementAndGet:()I
     110: ifne          8
     113: goto          116
     116: return
    Exception table:
       from    to  target type
          28    41    44   Class java/lang/Throwable

  void request();
    Code:
       0: aload_0
       1: getfield      #20                 // Field sourceFused:I
       4: iconst_1
       5: if_icmpeq     47
       8: aload_0
       9: getfield      #55                 // Field consumed:I
      12: iconst_1
      13: iadd
      14: istore_1
      15: iload_1
      16: aload_0
      17: getfield      #10                 // Field limit:I
      20: if_icmpne     42
      23: aload_0
      24: iconst_0
      25: putfield      #55                 // Field consumed:I
      28: aload_0
      29: getfield      #11                 // Field upstream:Lorg/reactivestreams/Subscription;
      32: iload_1
      33: i2l
      34: invokeinterface #25,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      39: goto          47
      42: aload_0
      43: iload_1
      44: putfield      #55                 // Field consumed:I
      47: return

  void innerError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #9                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          34
      12: aload_0
      13: getfield      #11                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: invokeinterface #39,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      21: aload_0
      22: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      25: aload_1
      26: invokeinterface #37,  2           // InterfaceMethod io/reactivex/rxjava3/core/CompletableObserver.onError:(Ljava/lang/Throwable;)V
      31: goto          38
      34: aload_1
      35: invokestatic  #38                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      38: return

  void innerComplete();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #45                 // Field active:Z
       5: aload_0
       6: invokevirtual #24                 // Method drain:()V
       9: return

  public void onNext(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #47                 // class io/reactivex/rxjava3/core/CompletableSource
       5: invokevirtual #56                 // Method onNext:(Lio/reactivex/rxjava3/core/CompletableSource;)V
       8: return
}
