Compiled from "CompletableMerge.java"
final class io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.FlowableSubscriber<io.reactivex.rxjava3.core.CompletableSource>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.CompletableObserver downstream;

  final int maxConcurrency;

  final boolean delayErrors;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable errors;

  final io.reactivex.rxjava3.disposables.CompositeDisposable set;

  org.reactivestreams.Subscription upstream;

  io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber(io.reactivex.rxjava3.core.CompletableObserver, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field maxConcurrency:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field delayErrors:Z
      19: aload_0
      20: new           #5                  // class io/reactivex/rxjava3/disposables/CompositeDisposable
      23: dup
      24: invokespecial #6                  // Method io/reactivex/rxjava3/disposables/CompositeDisposable."<init>":()V
      27: putfield      #7                  // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      30: aload_0
      31: new           #8                  // class io/reactivex/rxjava3/internal/util/AtomicThrowable
      34: dup
      35: invokespecial #9                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      38: putfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      41: aload_0
      42: iconst_1
      43: invokevirtual #11                 // Method lazySet:(I)V
      46: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #12                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: invokeinterface #13,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: aload_0
      10: getfield      #7                  // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      13: invokevirtual #14                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      16: aload_0
      17: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      20: invokevirtual #15                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      23: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #7                  // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
       4: invokevirtual #16                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.isDisposed:()Z
       7: ireturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #12                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #17                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          58
      11: aload_0
      12: aload_1
      13: putfield      #12                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      20: aload_0
      21: invokeinterface #18,  2           // InterfaceMethod io/reactivex/rxjava3/core/CompletableObserver.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      26: aload_0
      27: getfield      #3                  // Field maxConcurrency:I
      30: ldc           #20                 // int 2147483647
      32: if_icmpne     47
      35: aload_1
      36: ldc2_w        #22                 // long 9223372036854775807l
      39: invokeinterface #24,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      44: goto          58
      47: aload_1
      48: aload_0
      49: getfield      #3                  // Field maxConcurrency:I
      52: i2l
      53: invokeinterface #24,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      58: return

  public void onNext(io.reactivex.rxjava3.core.CompletableSource);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getAndIncrement:()I
       4: pop
       5: new           #26                 // class io/reactivex/rxjava3/internal/operators/completable/CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver
       8: dup
       9: aload_0
      10: invokespecial #27                 // Method io/reactivex/rxjava3/internal/operators/completable/CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/completable/CompletableMerge$CompletableMergeSubscriber;)V
      13: astore_2
      14: aload_0
      15: getfield      #7                  // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      18: aload_2
      19: invokevirtual #28                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      22: pop
      23: aload_1
      24: aload_2
      25: invokeinterface #29,  2           // InterfaceMethod io/reactivex/rxjava3/core/CompletableSource.subscribe:(Lio/reactivex/rxjava3/core/CompletableObserver;)V
      30: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field delayErrors:Z
       4: ifne          47
       7: aload_0
       8: getfield      #7                  // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      11: invokevirtual #14                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      14: aload_0
      15: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      18: aload_1
      19: invokevirtual #30                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      22: ifeq          76
      25: aload_0
      26: iconst_0
      27: invokevirtual #31                 // Method getAndSet:(I)I
      30: ifle          76
      33: aload_0
      34: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      37: aload_0
      38: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      41: invokevirtual #32                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V
      44: goto          76
      47: aload_0
      48: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      51: aload_1
      52: invokevirtual #30                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      55: ifeq          76
      58: aload_0
      59: invokevirtual #33                 // Method decrementAndGet:()I
      62: ifne          76
      65: aload_0
      66: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      69: aload_0
      70: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      73: invokevirtual #32                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V
      76: return

  public void onComplete();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method decrementAndGet:()I
       4: ifne          18
       7: aload_0
       8: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      11: aload_0
      12: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      15: invokevirtual #32                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V
      18: return

  void innerError(io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
       4: aload_1
       5: invokevirtual #34                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: pop
       9: aload_0
      10: getfield      #4                  // Field delayErrors:Z
      13: ifne          65
      16: aload_0
      17: getfield      #12                 // Field upstream:Lorg/reactivestreams/Subscription;
      20: invokeinterface #13,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      25: aload_0
      26: getfield      #7                  // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      29: invokevirtual #14                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      32: aload_0
      33: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      36: aload_2
      37: invokevirtual #30                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      40: ifeq          116
      43: aload_0
      44: iconst_0
      45: invokevirtual #31                 // Method getAndSet:(I)I
      48: ifle          116
      51: aload_0
      52: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      55: aload_0
      56: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      59: invokevirtual #32                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V
      62: goto          116
      65: aload_0
      66: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      69: aload_2
      70: invokevirtual #30                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      73: ifeq          116
      76: aload_0
      77: invokevirtual #33                 // Method decrementAndGet:()I
      80: ifne          97
      83: aload_0
      84: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      87: aload_0
      88: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      91: invokevirtual #32                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V
      94: goto          116
      97: aload_0
      98: getfield      #3                  // Field maxConcurrency:I
     101: ldc           #20                 // int 2147483647
     103: if_icmpeq     116
     106: aload_0
     107: getfield      #12                 // Field upstream:Lorg/reactivestreams/Subscription;
     110: lconst_1
     111: invokeinterface #24,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     116: return

  void innerComplete(io.reactivex.rxjava3.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver);
    Code:
       0: aload_0
       1: getfield      #7                  // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
       4: aload_1
       5: invokevirtual #34                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: pop
       9: aload_0
      10: invokevirtual #33                 // Method decrementAndGet:()I
      13: ifne          30
      16: aload_0
      17: getfield      #10                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      20: aload_0
      21: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/CompletableObserver;
      24: invokevirtual #32                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lio/reactivex/rxjava3/core/CompletableObserver;)V
      27: goto          49
      30: aload_0
      31: getfield      #3                  // Field maxConcurrency:I
      34: ldc           #20                 // int 2147483647
      36: if_icmpeq     49
      39: aload_0
      40: getfield      #12                 // Field upstream:Lorg/reactivestreams/Subscription;
      43: lconst_1
      44: invokeinterface #24,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      49: return

  public void onNext(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class io/reactivex/rxjava3/core/CompletableSource
       5: invokevirtual #36                 // Method onNext:(Lio/reactivex/rxjava3/core/CompletableSource;)V
       8: return
}
