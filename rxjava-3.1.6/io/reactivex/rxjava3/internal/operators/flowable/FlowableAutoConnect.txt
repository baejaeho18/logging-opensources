Compiled from "FlowableAutoConnect.java"
public final class io.reactivex.rxjava3.internal.operators.flowable.FlowableAutoConnect<T> extends io.reactivex.rxjava3.core.Flowable<T> {
  final io.reactivex.rxjava3.flowables.ConnectableFlowable<? extends T> source;

  final int numberOfSubscribers;

  final io.reactivex.rxjava3.functions.Consumer<? super io.reactivex.rxjava3.disposables.Disposable> connection;

  final java.util.concurrent.atomic.AtomicInteger clients;

  public io.reactivex.rxjava3.internal.operators.flowable.FlowableAutoConnect(io.reactivex.rxjava3.flowables.ConnectableFlowable<? extends T>, int, io.reactivex.rxjava3.functions.Consumer<? super io.reactivex.rxjava3.disposables.Disposable>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/core/Flowable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lio/reactivex/rxjava3/flowables/ConnectableFlowable;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field numberOfSubscribers:I
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field connection:Lio/reactivex/rxjava3/functions/Consumer;
      19: aload_0
      20: new           #5                  // class java/util/concurrent/atomic/AtomicInteger
      23: dup
      24: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      27: putfield      #7                  // Field clients:Ljava/util/concurrent/atomic/AtomicInteger;
      30: return

  public void subscribeActual(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lio/reactivex/rxjava3/flowables/ConnectableFlowable;
       4: aload_1
       5: invokevirtual #8                  // Method io/reactivex/rxjava3/flowables/ConnectableFlowable.subscribe:(Lorg/reactivestreams/Subscriber;)V
       8: aload_0
       9: getfield      #7                  // Field clients:Ljava/util/concurrent/atomic/AtomicInteger;
      12: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      15: aload_0
      16: getfield      #3                  // Field numberOfSubscribers:I
      19: if_icmpne     33
      22: aload_0
      23: getfield      #2                  // Field source:Lio/reactivex/rxjava3/flowables/ConnectableFlowable;
      26: aload_0
      27: getfield      #4                  // Field connection:Lio/reactivex/rxjava3/functions/Consumer;
      30: invokevirtual #10                 // Method io/reactivex/rxjava3/flowables/ConnectableFlowable.connect:(Lio/reactivex/rxjava3/functions/Consumer;)V
      33: return
}
