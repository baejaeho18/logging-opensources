Compiled from "FlowableTimeoutTimed.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber<T> extends io.reactivex.rxjava3.internal.subscriptions.SubscriptionArbiter implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSupport {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super T> downstream;

  final long timeout;

  final java.util.concurrent.TimeUnit unit;

  final io.reactivex.rxjava3.core.Scheduler$Worker worker;

  final io.reactivex.rxjava3.internal.disposables.SequentialDisposable task;

  final java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> upstream;

  final java.util.concurrent.atomic.AtomicLong index;

  long consumed;

  org.reactivestreams.Publisher<? extends T> fallback;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber(org.reactivestreams.Subscriber<? super T>, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler$Worker, org.reactivestreams.Publisher<? extends T>);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter."<init>":(Z)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      10: aload_0
      11: lload_2
      12: putfield      #3                  // Field timeout:J
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field fallback:Lorg/reactivestreams/Publisher;
      33: aload_0
      34: new           #7                  // class io/reactivex/rxjava3/internal/disposables/SequentialDisposable
      37: dup
      38: invokespecial #8                  // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable."<init>":()V
      41: putfield      #9                  // Field task:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
      44: aload_0
      45: new           #10                 // class java/util/concurrent/atomic/AtomicReference
      48: dup
      49: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      52: putfield      #12                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      55: aload_0
      56: new           #13                 // class java/util/concurrent/atomic/AtomicLong
      59: dup
      60: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      63: putfield      #15                 // Field index:Ljava/util/concurrent/atomic/AtomicLong;
      66: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #12                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokestatic  #16                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          16
      11: aload_0
      12: aload_1
      13: invokevirtual #17                 // Method setSubscription:(Lorg/reactivestreams/Subscription;)V
      16: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #15                 // Field index:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lstore_2
       8: lload_2
       9: ldc2_w        #20                 // long 9223372036854775807l
      12: lcmp
      13: ifeq          30
      16: aload_0
      17: getfield      #15                 // Field index:Ljava/util/concurrent/atomic/AtomicLong;
      20: lload_2
      21: lload_2
      22: lconst_1
      23: ladd
      24: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      27: ifne          31
      30: return
      31: aload_0
      32: getfield      #9                  // Field task:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
      35: invokevirtual #23                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.get:()Ljava/lang/Object;
      38: checkcast     #24                 // class io/reactivex/rxjava3/disposables/Disposable
      41: invokeinterface #25,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      46: aload_0
      47: dup
      48: getfield      #26                 // Field consumed:J
      51: lconst_1
      52: ladd
      53: putfield      #26                 // Field consumed:J
      56: aload_0
      57: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      60: aload_1
      61: invokeinterface #27,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      66: aload_0
      67: lload_2
      68: lconst_1
      69: ladd
      70: invokevirtual #28                 // Method startTimeout:(J)V
      73: return

  void startTimeout(long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field task:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
       4: aload_0
       5: getfield      #5                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
       8: new           #29                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableTimeoutTimed$TimeoutTask
      11: dup
      12: lload_1
      13: aload_0
      14: invokespecial #30                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableTimeoutTimed$TimeoutTask."<init>":(JLio/reactivex/rxjava3/internal/operators/flowable/FlowableTimeoutTimed$TimeoutSupport;)V
      17: aload_0
      18: getfield      #3                  // Field timeout:J
      21: aload_0
      22: getfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      25: invokevirtual #31                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
      28: invokevirtual #32                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      31: pop
      32: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #15                 // Field index:Ljava/util/concurrent/atomic/AtomicLong;
       4: ldc2_w        #20                 // long 9223372036854775807l
       7: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicLong.getAndSet:(J)J
      10: ldc2_w        #20                 // long 9223372036854775807l
      13: lcmp
      14: ifeq          44
      17: aload_0
      18: getfield      #9                  // Field task:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
      21: invokevirtual #34                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.dispose:()V
      24: aload_0
      25: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      28: aload_1
      29: invokeinterface #35,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      34: aload_0
      35: getfield      #5                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      38: invokevirtual #36                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      41: goto          48
      44: aload_1
      45: invokestatic  #37                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      48: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #15                 // Field index:Ljava/util/concurrent/atomic/AtomicLong;
       4: ldc2_w        #20                 // long 9223372036854775807l
       7: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicLong.getAndSet:(J)J
      10: ldc2_w        #20                 // long 9223372036854775807l
      13: lcmp
      14: ifeq          40
      17: aload_0
      18: getfield      #9                  // Field task:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
      21: invokevirtual #34                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.dispose:()V
      24: aload_0
      25: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      28: invokeinterface #38,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      33: aload_0
      34: getfield      #5                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      37: invokevirtual #36                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      40: return

  public void onTimeout(long);
    Code:
       0: aload_0
       1: getfield      #15                 // Field index:Ljava/util/concurrent/atomic/AtomicLong;
       4: lload_1
       5: ldc2_w        #20                 // long 9223372036854775807l
       8: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
      11: ifeq          75
      14: aload_0
      15: getfield      #12                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      18: invokestatic  #39                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      21: pop
      22: aload_0
      23: getfield      #26                 // Field consumed:J
      26: lstore_3
      27: lload_3
      28: lconst_0
      29: lcmp
      30: ifeq          38
      33: aload_0
      34: lload_3
      35: invokevirtual #40                 // Method produced:(J)V
      38: aload_0
      39: getfield      #6                  // Field fallback:Lorg/reactivestreams/Publisher;
      42: astore        5
      44: aload_0
      45: aconst_null
      46: putfield      #6                  // Field fallback:Lorg/reactivestreams/Publisher;
      49: aload         5
      51: new           #41                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableTimeoutTimed$FallbackSubscriber
      54: dup
      55: aload_0
      56: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      59: aload_0
      60: invokespecial #42                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableTimeoutTimed$FallbackSubscriber."<init>":(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter;)V
      63: invokeinterface #43,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      68: aload_0
      69: getfield      #5                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      72: invokevirtual #36                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      75: return

  public void cancel();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter.cancel:()V
       4: aload_0
       5: getfield      #5                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
       8: invokevirtual #36                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      11: return
}
