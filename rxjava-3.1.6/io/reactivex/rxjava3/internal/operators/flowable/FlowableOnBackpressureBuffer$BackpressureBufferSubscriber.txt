Compiled from "FlowableOnBackpressureBuffer.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber<T> extends io.reactivex.rxjava3.internal.subscriptions.BasicIntQueueSubscription<T> implements io.reactivex.rxjava3.core.FlowableSubscriber<T> {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super T> downstream;

  final io.reactivex.rxjava3.operators.SimplePlainQueue<T> queue;

  final boolean delayError;

  final io.reactivex.rxjava3.functions.Action onOverflow;

  org.reactivestreams.Subscription upstream;

  volatile boolean cancelled;

  volatile boolean done;

  java.lang.Throwable error;

  final java.util.concurrent.atomic.AtomicLong requested;

  boolean outputFused;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber(org.reactivestreams.Subscriber<? super T>, int, boolean, boolean, io.reactivex.rxjava3.functions.Action);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/internal/subscriptions/BasicIntQueueSubscription."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #4                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: aload         5
      23: putfield      #6                  // Field onOverflow:Lio/reactivex/rxjava3/functions/Action;
      26: aload_0
      27: iload         4
      29: putfield      #7                  // Field delayError:Z
      32: iload_3
      33: ifeq          49
      36: new           #8                  // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      39: dup
      40: iload_2
      41: invokespecial #9                  // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue."<init>":(I)V
      44: astore        6
      46: goto          59
      49: new           #10                 // class io/reactivex/rxjava3/operators/SpscArrayQueue
      52: dup
      53: iload_2
      54: invokespecial #11                 // Method io/reactivex/rxjava3/operators/SpscArrayQueue."<init>":(I)V
      57: astore        6
      59: aload_0
      60: aload         6
      62: putfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      65: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #13                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #14                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          35
      11: aload_0
      12: aload_1
      13: putfield      #13                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #5                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #15,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_1
      27: ldc2_w        #17                 // long 9223372036854775807l
      30: invokeinterface #19,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      35: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      10: ifne          61
      13: aload_0
      14: getfield      #13                 // Field upstream:Lorg/reactivestreams/Subscription;
      17: invokeinterface #21,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      22: new           #22                 // class io/reactivex/rxjava3/exceptions/MissingBackpressureException
      25: dup
      26: ldc           #23                 // String Buffer is full
      28: invokespecial #24                 // Method io/reactivex/rxjava3/exceptions/MissingBackpressureException."<init>":(Ljava/lang/String;)V
      31: astore_2
      32: aload_0
      33: getfield      #6                  // Field onOverflow:Lio/reactivex/rxjava3/functions/Action;
      36: invokeinterface #25,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Action.run:()V
      41: goto          55
      44: astore_3
      45: aload_3
      46: invokestatic  #27                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      49: aload_2
      50: aload_3
      51: invokevirtual #28                 // Method io/reactivex/rxjava3/exceptions/MissingBackpressureException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      54: pop
      55: aload_0
      56: aload_2
      57: invokevirtual #29                 // Method onError:(Ljava/lang/Throwable;)V
      60: return
      61: aload_0
      62: getfield      #30                 // Field outputFused:Z
      65: ifeq          81
      68: aload_0
      69: getfield      #5                  // Field downstream:Lorg/reactivestreams/Subscriber;
      72: aconst_null
      73: invokeinterface #31,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      78: goto          85
      81: aload_0
      82: invokevirtual #32                 // Method drain:()V
      85: return
    Exception table:
       from    to  target type
          32    41    44   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field error:Ljava/lang/Throwable;
       5: aload_0
       6: iconst_1
       7: putfield      #34                 // Field done:Z
      10: aload_0
      11: getfield      #30                 // Field outputFused:Z
      14: ifeq          30
      17: aload_0
      18: getfield      #5                  // Field downstream:Lorg/reactivestreams/Subscriber;
      21: aload_1
      22: invokeinterface #35,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      27: goto          34
      30: aload_0
      31: invokevirtual #32                 // Method drain:()V
      34: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #34                 // Field done:Z
       5: aload_0
       6: getfield      #30                 // Field outputFused:Z
       9: ifeq          24
      12: aload_0
      13: getfield      #5                  // Field downstream:Lorg/reactivestreams/Subscriber;
      16: invokeinterface #36,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      21: goto          28
      24: aload_0
      25: invokevirtual #32                 // Method drain:()V
      28: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #30                 // Field outputFused:Z
       4: ifne          27
       7: lload_1
       8: invokestatic  #37                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
      11: ifeq          27
      14: aload_0
      15: getfield      #4                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      18: lload_1
      19: invokestatic  #38                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      22: pop2
      23: aload_0
      24: invokevirtual #32                 // Method drain:()V
      27: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #39                 // Field cancelled:Z
       4: ifne          44
       7: aload_0
       8: iconst_1
       9: putfield      #39                 // Field cancelled:Z
      12: aload_0
      13: getfield      #13                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: invokeinterface #21,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      21: aload_0
      22: getfield      #30                 // Field outputFused:Z
      25: ifne          44
      28: aload_0
      29: invokevirtual #40                 // Method getAndIncrement:()I
      32: ifne          44
      35: aload_0
      36: getfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      39: invokeinterface #41,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.clear:()V
      44: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getAndIncrement:()I
       4: ifne          201
       7: iconst_1
       8: istore_1
       9: aload_0
      10: getfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      13: astore_2
      14: aload_0
      15: getfield      #5                  // Field downstream:Lorg/reactivestreams/Subscriber;
      18: astore_3
      19: aload_0
      20: aload_0
      21: getfield      #34                 // Field done:Z
      24: aload_2
      25: invokeinterface #42,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.isEmpty:()Z
      30: aload_3
      31: invokevirtual #43                 // Method checkTerminated:(ZZLorg/reactivestreams/Subscriber;)Z
      34: ifeq          38
      37: return
      38: aload_0
      39: getfield      #4                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      42: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      45: lstore        4
      47: lconst_0
      48: lstore        6
      50: lload         6
      52: lload         4
      54: lcmp
      55: ifeq          122
      58: aload_0
      59: getfield      #34                 // Field done:Z
      62: istore        8
      64: aload_2
      65: invokeinterface #45,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.poll:()Ljava/lang/Object;
      70: astore        9
      72: aload         9
      74: ifnonnull     81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: istore        10
      84: aload_0
      85: iload         8
      87: iload         10
      89: aload_3
      90: invokevirtual #43                 // Method checkTerminated:(ZZLorg/reactivestreams/Subscriber;)Z
      93: ifeq          97
      96: return
      97: iload         10
      99: ifeq          105
     102: goto          122
     105: aload_3
     106: aload         9
     108: invokeinterface #31,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     113: lload         6
     115: lconst_1
     116: ladd
     117: lstore        6
     119: goto          50
     122: lload         6
     124: lload         4
     126: lcmp
     127: ifne          157
     130: aload_0
     131: getfield      #34                 // Field done:Z
     134: istore        8
     136: aload_2
     137: invokeinterface #42,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.isEmpty:()Z
     142: istore        9
     144: aload_0
     145: iload         8
     147: iload         9
     149: aload_3
     150: invokevirtual #43                 // Method checkTerminated:(ZZLorg/reactivestreams/Subscriber;)Z
     153: ifeq          157
     156: return
     157: lload         6
     159: lconst_0
     160: lcmp
     161: ifeq          184
     164: lload         4
     166: ldc2_w        #17                 // long 9223372036854775807l
     169: lcmp
     170: ifeq          184
     173: aload_0
     174: getfield      #4                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     177: lload         6
     179: lneg
     180: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
     183: pop2
     184: aload_0
     185: iload_1
     186: ineg
     187: invokevirtual #47                 // Method addAndGet:(I)I
     190: istore_1
     191: iload_1
     192: ifne          198
     195: goto          201
     198: goto          19
     201: return

  boolean checkTerminated(boolean, boolean, org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #39                 // Field cancelled:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      11: invokeinterface #41,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.clear:()V
      16: iconst_1
      17: ireturn
      18: iload_1
      19: ifeq          105
      22: aload_0
      23: getfield      #7                  // Field delayError:Z
      26: ifeq          63
      29: iload_2
      30: ifeq          105
      33: aload_0
      34: getfield      #33                 // Field error:Ljava/lang/Throwable;
      37: astore        4
      39: aload         4
      41: ifnull        55
      44: aload_3
      45: aload         4
      47: invokeinterface #35,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      52: goto          61
      55: aload_3
      56: invokeinterface #36,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      61: iconst_1
      62: ireturn
      63: aload_0
      64: getfield      #33                 // Field error:Ljava/lang/Throwable;
      67: astore        4
      69: aload         4
      71: ifnull        93
      74: aload_0
      75: getfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      78: invokeinterface #41,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.clear:()V
      83: aload_3
      84: aload         4
      86: invokeinterface #35,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      91: iconst_1
      92: ireturn
      93: iload_2
      94: ifeq          105
      97: aload_3
      98: invokeinterface #36,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     103: iconst_1
     104: ireturn
     105: iconst_0
     106: ireturn

  public int requestFusion(int);
    Code:
       0: iload_1
       1: iconst_2
       2: iand
       3: ifeq          13
       6: aload_0
       7: iconst_1
       8: putfield      #30                 // Field outputFused:Z
      11: iconst_2
      12: ireturn
      13: iconst_0
      14: ireturn

  public T poll();
    Code:
       0: aload_0
       1: getfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
       4: invokeinterface #45,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.poll:()Ljava/lang/Object;
       9: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
       4: invokeinterface #41,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.clear:()V
       9: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #12                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
       4: invokeinterface #42,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.isEmpty:()Z
       9: ireturn
}
