Compiled from "FlowableSingle.java"
public final class io.reactivex.rxjava3.internal.operators.flowable.FlowableSingle<T> extends io.reactivex.rxjava3.internal.operators.flowable.AbstractFlowableWithUpstream<T, T> {
  final T defaultValue;

  final boolean failOnEmpty;

  public io.reactivex.rxjava3.internal.operators.flowable.FlowableSingle(io.reactivex.rxjava3.core.Flowable<T>, T, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/AbstractFlowableWithUpstream."<init>":(Lio/reactivex/rxjava3/core/Flowable;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field defaultValue:Ljava/lang/Object;
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field failOnEmpty:Z
      15: return

  protected void subscribeActual(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field source:Lio/reactivex/rxjava3/core/Flowable;
       4: new           #5                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableSingle$SingleElementSubscriber
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field defaultValue:Ljava/lang/Object;
      13: aload_0
      14: getfield      #3                  // Field failOnEmpty:Z
      17: invokespecial #6                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableSingle$SingleElementSubscriber."<init>":(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Z)V
      20: invokevirtual #7                  // Method io/reactivex/rxjava3/core/Flowable.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V
      23: return
}
