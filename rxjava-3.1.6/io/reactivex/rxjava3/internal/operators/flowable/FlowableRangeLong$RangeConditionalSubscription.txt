Compiled from "FlowableRangeLong.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong$RangeConditionalSubscription extends io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.operators.ConditionalSubscriber<? super java.lang.Long> downstream;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableRangeLong$RangeConditionalSubscription(io.reactivex.rxjava3.operators.ConditionalSubscriber<? super java.lang.Long>, long, long);
    Code:
       0: aload_0
       1: lload_2
       2: lload         4
       4: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableRangeLong$BaseRangeSubscription."<init>":(JJ)V
       7: aload_0
       8: aload_1
       9: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
      12: return

  void fastPath();
    Code:
       0: aload_0
       1: getfield      #3                  // Field end:J
       4: lstore_1
       5: aload_0
       6: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
       9: astore_3
      10: aload_0
      11: getfield      #4                  // Field index:J
      14: lstore        4
      16: lload         4
      18: lload_1
      19: lcmp
      20: ifeq          52
      23: aload_0
      24: getfield      #5                  // Field cancelled:Z
      27: ifeq          31
      30: return
      31: aload_3
      32: lload         4
      34: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      37: invokeinterface #7,  2            // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.tryOnNext:(Ljava/lang/Object;)Z
      42: pop
      43: lload         4
      45: lconst_1
      46: ladd
      47: lstore        4
      49: goto          16
      52: aload_0
      53: getfield      #5                  // Field cancelled:Z
      56: ifeq          60
      59: return
      60: aload_3
      61: invokeinterface #8,  1            // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.onComplete:()V
      66: return

  void slowPath(long);
    Code:
       0: lconst_0
       1: lstore_3
       2: aload_0
       3: getfield      #3                  // Field end:J
       6: lstore        5
       8: aload_0
       9: getfield      #4                  // Field index:J
      12: lstore        7
      14: aload_0
      15: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
      18: astore        9
      20: lload_3
      21: lload_1
      22: lcmp
      23: ifeq          70
      26: lload         7
      28: lload         5
      30: lcmp
      31: ifeq          70
      34: aload_0
      35: getfield      #5                  // Field cancelled:Z
      38: ifeq          42
      41: return
      42: aload         9
      44: lload         7
      46: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      49: invokeinterface #7,  2            // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.tryOnNext:(Ljava/lang/Object;)Z
      54: ifeq          61
      57: lload_3
      58: lconst_1
      59: ladd
      60: lstore_3
      61: lload         7
      63: lconst_1
      64: ladd
      65: lstore        7
      67: goto          20
      70: lload         7
      72: lload         5
      74: lcmp
      75: ifne          93
      78: aload_0
      79: getfield      #5                  // Field cancelled:Z
      82: ifne          92
      85: aload         9
      87: invokeinterface #8,  1            // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.onComplete:()V
      92: return
      93: aload_0
      94: invokevirtual #9                  // Method get:()J
      97: lstore_1
      98: lload_3
      99: lload_1
     100: lcmp
     101: ifne          20
     104: aload_0
     105: lload         7
     107: putfield      #4                  // Field index:J
     110: aload_0
     111: lload_3
     112: lneg
     113: invokevirtual #10                 // Method addAndGet:(J)J
     116: lstore_1
     117: lload_1
     118: lconst_0
     119: lcmp
     120: ifne          124
     123: return
     124: lconst_0
     125: lstore_3
     126: goto          20
}
