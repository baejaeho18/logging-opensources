Compiled from "FlowableSwitchIfEmpty.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchIfEmpty$SwitchIfEmptySubscriber<T> implements io.reactivex.rxjava3.core.FlowableSubscriber<T> {
  final org.reactivestreams.Subscriber<? super T> downstream;

  final org.reactivestreams.Publisher<? extends T> other;

  final io.reactivex.rxjava3.internal.subscriptions.SubscriptionArbiter arbiter;

  boolean empty;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchIfEmpty$SwitchIfEmptySubscriber(org.reactivestreams.Subscriber<? super T>, org.reactivestreams.Publisher<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field other:Lorg/reactivestreams/Publisher;
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field empty:Z
      19: aload_0
      20: new           #5                  // class io/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter
      23: dup
      24: iconst_0
      25: invokespecial #6                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter."<init>":(Z)V
      28: putfield      #7                  // Field arbiter:Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter;
      31: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #7                  // Field arbiter:Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter;
       4: aload_1
       5: invokevirtual #8                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter.setSubscription:(Lorg/reactivestreams/Subscription;)V
       8: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #4                  // Field empty:Z
       4: ifeq          12
       7: aload_0
       8: iconst_0
       9: putfield      #4                  // Field empty:Z
      12: aload_0
      13: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      16: aload_1
      17: invokeinterface #9,  2            // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      22: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #4                  // Field empty:Z
       4: ifeq          25
       7: aload_0
       8: iconst_0
       9: putfield      #4                  // Field empty:Z
      12: aload_0
      13: getfield      #3                  // Field other:Lorg/reactivestreams/Publisher;
      16: aload_0
      17: invokeinterface #11,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      22: goto          34
      25: aload_0
      26: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      29: invokeinterface #12,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      34: return
}
