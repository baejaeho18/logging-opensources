Compiled from "FlowableWindowBoundary.java"
public final class io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary<T, B> extends io.reactivex.rxjava3.internal.operators.flowable.AbstractFlowableWithUpstream<T, io.reactivex.rxjava3.core.Flowable<T>> {
  final org.reactivestreams.Publisher<B> other;

  final int capacityHint;

  public io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary(io.reactivex.rxjava3.core.Flowable<T>, org.reactivestreams.Publisher<B>, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/AbstractFlowableWithUpstream."<init>":(Lio/reactivex/rxjava3/core/Flowable;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field other:Lorg/reactivestreams/Publisher;
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field capacityHint:I
      15: return

  protected void subscribeActual(org.reactivestreams.Subscriber<? super io.reactivex.rxjava3.core.Flowable<T>>);
    Code:
       0: new           #4                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryMainSubscriber
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #3                  // Field capacityHint:I
       9: invokespecial #5                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryMainSubscriber."<init>":(Lorg/reactivestreams/Subscriber;I)V
      12: astore_2
      13: aload_1
      14: aload_2
      15: invokeinterface #6,  2            // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      20: aload_2
      21: invokevirtual #7                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryMainSubscriber.innerNext:()V
      24: aload_0
      25: getfield      #2                  // Field other:Lorg/reactivestreams/Publisher;
      28: aload_2
      29: getfield      #8                  // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryMainSubscriber.boundarySubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryInnerSubscriber;
      32: invokeinterface #9,  2            // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      37: aload_0
      38: getfield      #10                 // Field source:Lio/reactivex/rxjava3/core/Flowable;
      41: aload_2
      42: invokevirtual #11                 // Method io/reactivex/rxjava3/core/Flowable.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V
      45: return
}
