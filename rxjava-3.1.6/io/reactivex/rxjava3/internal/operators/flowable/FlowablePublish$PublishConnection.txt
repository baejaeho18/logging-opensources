Compiled from "FlowablePublish.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowablePublish$PublishConnection<T> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.flowable.FlowablePublish$PublishConnection<T>> current;

  final java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> upstream;

  final java.util.concurrent.atomic.AtomicBoolean connect;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.flowable.FlowablePublish$InnerSubscription<T>[]> subscribers;

  final int bufferSize;

  volatile io.reactivex.rxjava3.operators.SimpleQueue<T> queue;

  int sourceMode;

  volatile boolean done;

  java.lang.Throwable error;

  int consumed;

  static final io.reactivex.rxjava3.internal.operators.flowable.FlowablePublish$InnerSubscription[] EMPTY;

  static final io.reactivex.rxjava3.internal.operators.flowable.FlowablePublish$InnerSubscription[] TERMINATED;

  io.reactivex.rxjava3.internal.operators.flowable.FlowablePublish$PublishConnection(java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.flowable.FlowablePublish$PublishConnection<T>>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicReference
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      17: putfield      #5                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      20: aload_0
      21: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
      24: dup
      25: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      28: putfield      #8                  // Field connect:Ljava/util/concurrent/atomic/AtomicBoolean;
      31: aload_0
      32: iload_2
      33: putfield      #9                  // Field bufferSize:I
      36: aload_0
      37: new           #3                  // class java/util/concurrent/atomic/AtomicReference
      40: dup
      41: getstatic     #10                 // Field EMPTY:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription;
      44: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      47: putfield      #12                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      50: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #12                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: getstatic     #13                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription;
       7: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: getfield      #2                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: aconst_null
      17: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      20: pop
      21: aload_0
      22: getfield      #5                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      25: invokestatic  #16                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      28: pop
      29: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #12                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #13                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription;
      10: if_acmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #5                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokestatic  #18                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          110
      11: aload_1
      12: instanceof    #19                 // class io/reactivex/rxjava3/operators/QueueSubscription
      15: ifeq          84
      18: aload_1
      19: checkcast     #19                 // class io/reactivex/rxjava3/operators/QueueSubscription
      22: astore_2
      23: aload_2
      24: bipush        7
      26: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/operators/QueueSubscription.requestFusion:(I)I
      31: istore_3
      32: iload_3
      33: iconst_1
      34: if_icmpne     57
      37: aload_0
      38: iload_3
      39: putfield      #21                 // Field sourceMode:I
      42: aload_0
      43: aload_2
      44: putfield      #22                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      47: aload_0
      48: iconst_1
      49: putfield      #23                 // Field done:Z
      52: aload_0
      53: invokevirtual #24                 // Method drain:()V
      56: return
      57: iload_3
      58: iconst_2
      59: if_icmpne     84
      62: aload_0
      63: iload_3
      64: putfield      #21                 // Field sourceMode:I
      67: aload_0
      68: aload_2
      69: putfield      #22                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      72: aload_1
      73: aload_0
      74: getfield      #9                  // Field bufferSize:I
      77: i2l
      78: invokeinterface #25,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      83: return
      84: aload_0
      85: new           #26                 // class io/reactivex/rxjava3/operators/SpscArrayQueue
      88: dup
      89: aload_0
      90: getfield      #9                  // Field bufferSize:I
      93: invokespecial #27                 // Method io/reactivex/rxjava3/operators/SpscArrayQueue."<init>":(I)V
      96: putfield      #22                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      99: aload_1
     100: aload_0
     101: getfield      #9                  // Field bufferSize:I
     104: i2l
     105: invokeinterface #25,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     110: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sourceMode:I
       4: ifne          32
       7: aload_0
       8: getfield      #22                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      11: aload_1
      12: invokeinterface #28,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.offer:(Ljava/lang/Object;)Z
      17: ifne          32
      20: aload_0
      21: new           #29                 // class io/reactivex/rxjava3/exceptions/QueueOverflowException
      24: dup
      25: invokespecial #30                 // Method io/reactivex/rxjava3/exceptions/QueueOverflowException."<init>":()V
      28: invokevirtual #31                 // Method onError:(Ljava/lang/Throwable;)V
      31: return
      32: aload_0
      33: invokevirtual #24                 // Method drain:()V
      36: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #23                 // Field done:Z
       4: ifeq          14
       7: aload_1
       8: invokestatic  #32                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      11: goto          28
      14: aload_0
      15: aload_1
      16: putfield      #33                 // Field error:Ljava/lang/Throwable;
      19: aload_0
      20: iconst_1
      21: putfield      #23                 // Field done:Z
      24: aload_0
      25: invokevirtual #24                 // Method drain:()V
      28: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #23                 // Field done:Z
       5: aload_0
       6: invokevirtual #24                 // Method drain:()V
       9: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: iconst_1
       9: istore_1
      10: aload_0
      11: getfield      #22                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      14: astore_2
      15: aload_0
      16: getfield      #35                 // Field consumed:I
      19: istore_3
      20: aload_0
      21: getfield      #9                  // Field bufferSize:I
      24: aload_0
      25: getfield      #9                  // Field bufferSize:I
      28: iconst_2
      29: ishr
      30: isub
      31: istore        4
      33: aload_0
      34: getfield      #21                 // Field sourceMode:I
      37: iconst_1
      38: if_icmpeq     45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: istore        5
      48: aload_2
      49: ifnull        381
      52: ldc2_w        #37                 // long 9223372036854775807l
      55: lstore        6
      57: iconst_0
      58: istore        8
      60: aload_0
      61: getfield      #12                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      64: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      67: checkcast     #39                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription;"
      70: astore        9
      72: aload         9
      74: astore        10
      76: aload         10
      78: arraylength
      79: istore        11
      81: iconst_0
      82: istore        12
      84: iload         12
      86: iload         11
      88: if_icmpge     138
      91: aload         10
      93: iload         12
      95: aaload
      96: astore        13
      98: aload         13
     100: invokevirtual #40                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription.get:()J
     103: lstore        14
     105: lload         14
     107: ldc2_w        #41                 // long -9223372036854775808l
     110: lcmp
     111: ifeq          132
     114: iconst_1
     115: istore        8
     117: lload         14
     119: aload         13
     121: getfield      #43                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription.emitted:J
     124: lsub
     125: lload         6
     127: invokestatic  #44                 // Method java/lang/Math.min:(JJ)J
     130: lstore        6
     132: iinc          12, 1
     135: goto          84
     138: iload         8
     140: ifne          146
     143: lconst_0
     144: lstore        6
     146: lload         6
     148: lconst_0
     149: lcmp
     150: ifeq          363
     153: aload_0
     154: getfield      #23                 // Field done:Z
     157: istore        10
     159: aload_2
     160: invokeinterface #45,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.poll:()Ljava/lang/Object;
     165: astore        11
     167: goto          210
     170: astore        12
     172: aload         12
     174: invokestatic  #47                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     177: aload_0
     178: getfield      #5                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
     181: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     184: checkcast     #48                 // class org/reactivestreams/Subscription
     187: invokeinterface #49,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     192: aload_2
     193: invokeinterface #50,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.clear:()V
     198: aload_0
     199: iconst_1
     200: putfield      #23                 // Field done:Z
     203: aload_0
     204: aload         12
     206: invokevirtual #51                 // Method signalError:(Ljava/lang/Throwable;)V
     209: return
     210: aload         11
     212: ifnonnull     219
     215: iconst_1
     216: goto          220
     219: iconst_0
     220: istore        12
     222: aload_0
     223: iload         10
     225: iload         12
     227: invokevirtual #52                 // Method checkTerminated:(ZZ)Z
     230: ifeq          234
     233: return
     234: iload         12
     236: ifeq          242
     239: goto          363
     242: aload         9
     244: astore        13
     246: aload         13
     248: arraylength
     249: istore        14
     251: iconst_0
     252: istore        15
     254: iload         15
     256: iload         14
     258: if_icmpge     305
     261: aload         13
     263: iload         15
     265: aaload
     266: astore        16
     268: aload         16
     270: invokevirtual #53                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription.isCancelled:()Z
     273: ifne          299
     276: aload         16
     278: getfield      #54                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription.downstream:Lorg/reactivestreams/Subscriber;
     281: aload         11
     283: invokeinterface #55,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     288: aload         16
     290: dup
     291: getfield      #43                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription.emitted:J
     294: lconst_1
     295: ladd
     296: putfield      #43                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription.emitted:J
     299: iinc          15, 1
     302: goto          254
     305: iload         5
     307: ifeq          339
     310: iinc          3, 1
     313: iload_3
     314: iload         4
     316: if_icmpne     339
     319: iconst_0
     320: istore_3
     321: aload_0
     322: getfield      #5                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
     325: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     328: checkcast     #48                 // class org/reactivestreams/Subscription
     331: iload         4
     333: i2l
     334: invokeinterface #25,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     339: lload         6
     341: lconst_1
     342: lsub
     343: lstore        6
     345: aload         9
     347: aload_0
     348: getfield      #12                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
     351: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     354: if_acmpeq     360
     357: goto          48
     360: goto          146
     363: aload_0
     364: aload_0
     365: getfield      #23                 // Field done:Z
     368: aload_2
     369: invokeinterface #56,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.isEmpty:()Z
     374: invokevirtual #52                 // Method checkTerminated:(ZZ)Z
     377: ifeq          381
     380: return
     381: aload_0
     382: iload_3
     383: putfield      #35                 // Field consumed:I
     386: aload_0
     387: iload_1
     388: ineg
     389: invokevirtual #57                 // Method addAndGet:(I)I
     392: istore_1
     393: iload_1
     394: ifne          400
     397: goto          412
     400: aload_2
     401: ifnonnull     48
     404: aload_0
     405: getfield      #22                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
     408: astore_2
     409: goto          48
     412: return
    Exception table:
       from    to  target type
         159   167   170   Class java/lang/Throwable

  boolean checkTerminated(boolean, boolean);
    Code:
       0: iload_1
       1: ifeq          88
       4: iload_2
       5: ifeq          88
       8: aload_0
       9: getfield      #33                 // Field error:Ljava/lang/Throwable;
      12: astore_3
      13: aload_3
      14: ifnull        25
      17: aload_0
      18: aload_3
      19: invokevirtual #51                 // Method signalError:(Ljava/lang/Throwable;)V
      22: goto          86
      25: aload_0
      26: getfield      #12                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      29: getstatic     #13                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription;
      32: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #39                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription;"
      38: astore        4
      40: aload         4
      42: arraylength
      43: istore        5
      45: iconst_0
      46: istore        6
      48: iload         6
      50: iload         5
      52: if_icmpge     86
      55: aload         4
      57: iload         6
      59: aaload
      60: astore        7
      62: aload         7
      64: invokevirtual #53                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription.isCancelled:()Z
      67: ifne          80
      70: aload         7
      72: getfield      #54                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription.downstream:Lorg/reactivestreams/Subscriber;
      75: invokeinterface #58,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      80: iinc          6, 1
      83: goto          48
      86: iconst_1
      87: ireturn
      88: iconst_0
      89: ireturn

  void signalError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #12                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: getstatic     #13                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription;
       7: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #39                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription;"
      13: astore_2
      14: aload_2
      15: arraylength
      16: istore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_3
      23: if_icmpge     57
      26: aload_2
      27: iload         4
      29: aaload
      30: astore        5
      32: aload         5
      34: invokevirtual #53                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription.isCancelled:()Z
      37: ifne          51
      40: aload         5
      42: getfield      #54                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription.downstream:Lorg/reactivestreams/Subscriber;
      45: aload_1
      46: invokeinterface #59,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      51: iinc          4, 1
      54: goto          20
      57: return

  boolean add(io.reactivex.rxjava3.internal.operators.flowable.FlowablePublish$InnerSubscription<T>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #39                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription;"
      10: astore_2
      11: aload_2
      12: getstatic     #13                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription;
      15: if_acmpne     20
      18: iconst_0
      19: ireturn
      20: aload_2
      21: arraylength
      22: istore_3
      23: iload_3
      24: iconst_1
      25: iadd
      26: anewarray     #60                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription
      29: astore        4
      31: aload_2
      32: iconst_0
      33: aload         4
      35: iconst_0
      36: iload_3
      37: invokestatic  #61                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      40: aload         4
      42: iload_3
      43: aload_1
      44: aastore
      45: aload_0
      46: getfield      #12                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      49: aload_2
      50: aload         4
      52: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      55: ifeq          60
      58: iconst_1
      59: ireturn
      60: goto          0

  void remove(io.reactivex.rxjava3.internal.operators.flowable.FlowablePublish$InnerSubscription<T>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #39                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription;"
      10: astore_2
      11: aload_2
      12: arraylength
      13: istore_3
      14: iload_3
      15: ifne          21
      18: goto          128
      21: iconst_m1
      22: istore        4
      24: iconst_0
      25: istore        5
      27: iload         5
      29: iload_3
      30: if_icmpge     54
      33: aload_2
      34: iload         5
      36: aaload
      37: aload_1
      38: if_acmpne     48
      41: iload         5
      43: istore        4
      45: goto          54
      48: iinc          5, 1
      51: goto          27
      54: iload         4
      56: ifge          60
      59: return
      60: iload_3
      61: iconst_1
      62: if_icmpne     73
      65: getstatic     #10                 // Field EMPTY:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription;
      68: astore        5
      70: goto          109
      73: iload_3
      74: iconst_1
      75: isub
      76: anewarray     #60                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription
      79: astore        5
      81: aload_2
      82: iconst_0
      83: aload         5
      85: iconst_0
      86: iload         4
      88: invokestatic  #61                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      91: aload_2
      92: iload         4
      94: iconst_1
      95: iadd
      96: aload         5
      98: iload         4
     100: iload_3
     101: iload         4
     103: isub
     104: iconst_1
     105: isub
     106: invokestatic  #61                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     109: aload_0
     110: getfield      #12                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
     113: aload_2
     114: aload         5
     116: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     119: ifeq          125
     122: goto          128
     125: goto          0
     128: return

  static {};
    Code:
       0: iconst_0
       1: anewarray     #60                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription
       4: putstatic     #10                 // Field EMPTY:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription;
       7: iconst_0
       8: anewarray     #60                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription
      11: putstatic     #13                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription;
      14: return
}
