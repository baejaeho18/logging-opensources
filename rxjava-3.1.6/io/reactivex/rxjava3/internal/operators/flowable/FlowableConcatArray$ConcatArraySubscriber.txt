Compiled from "FlowableConcatArray.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber<T> extends io.reactivex.rxjava3.internal.subscriptions.SubscriptionArbiter implements io.reactivex.rxjava3.core.FlowableSubscriber<T> {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super T> downstream;

  final org.reactivestreams.Publisher<? extends T>[] sources;

  final boolean delayError;

  final java.util.concurrent.atomic.AtomicInteger wip;

  int index;

  java.util.List<java.lang.Throwable> errors;

  long produced;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber(org.reactivestreams.Publisher<? extends T>[], boolean, org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter."<init>":(Z)V
       5: aload_0
       6: aload_3
       7: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      10: aload_0
      11: aload_1
      12: putfield      #3                  // Field sources:[Lorg/reactivestreams/Publisher;
      15: aload_0
      16: iload_2
      17: putfield      #4                  // Field delayError:Z
      20: aload_0
      21: new           #5                  // class java/util/concurrent/atomic/AtomicInteger
      24: dup
      25: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      28: putfield      #7                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
      31: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method setSubscription:(Lorg/reactivestreams/Subscription;)V
       5: return

  public void onNext(T);
    Code:
       0: aload_0
       1: dup
       2: getfield      #9                  // Field produced:J
       5: lconst_1
       6: ladd
       7: putfield      #9                  // Field produced:J
      10: aload_0
      11: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      14: aload_1
      15: invokeinterface #10,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      20: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field delayError:Z
       4: ifeq          56
       7: aload_0
       8: getfield      #11                 // Field errors:Ljava/util/List;
      11: astore_2
      12: aload_2
      13: ifnonnull     41
      16: new           #12                 // class java/util/ArrayList
      19: dup
      20: aload_0
      21: getfield      #3                  // Field sources:[Lorg/reactivestreams/Publisher;
      24: arraylength
      25: aload_0
      26: getfield      #13                 // Field index:I
      29: isub
      30: iconst_1
      31: iadd
      32: invokespecial #14                 // Method java/util/ArrayList."<init>":(I)V
      35: astore_2
      36: aload_0
      37: aload_2
      38: putfield      #11                 // Field errors:Ljava/util/List;
      41: aload_2
      42: aload_1
      43: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: invokevirtual #16                 // Method onComplete:()V
      53: goto          66
      56: aload_0
      57: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      60: aload_1
      61: invokeinterface #17,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      66: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #7                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: ifne          247
      10: aload_0
      11: getfield      #3                  // Field sources:[Lorg/reactivestreams/Publisher;
      14: astore_1
      15: aload_1
      16: arraylength
      17: istore_2
      18: aload_0
      19: getfield      #13                 // Field index:I
      22: istore_3
      23: iload_3
      24: iload_2
      25: if_icmpne     104
      28: aload_0
      29: getfield      #11                 // Field errors:Ljava/util/List;
      32: astore        4
      34: aload         4
      36: ifnull        94
      39: aload         4
      41: invokeinterface #19,  1           // InterfaceMethod java/util/List.size:()I
      46: iconst_1
      47: if_icmpne     73
      50: aload_0
      51: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      54: aload         4
      56: iconst_0
      57: invokeinterface #20,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      62: checkcast     #21                 // class java/lang/Throwable
      65: invokeinterface #17,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      70: goto          103
      73: aload_0
      74: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      77: new           #22                 // class io/reactivex/rxjava3/exceptions/CompositeException
      80: dup
      81: aload         4
      83: invokespecial #23                 // Method io/reactivex/rxjava3/exceptions/CompositeException."<init>":(Ljava/lang/Iterable;)V
      86: invokeinterface #17,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      91: goto          103
      94: aload_0
      95: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      98: invokeinterface #24,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     103: return
     104: aload_1
     105: iload_3
     106: aaload
     107: astore        4
     109: aload         4
     111: ifnonnull     191
     114: new           #25                 // class java/lang/NullPointerException
     117: dup
     118: ldc           #26                 // String A Publisher entry is null
     120: invokespecial #27                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     123: astore        5
     125: aload_0
     126: getfield      #4                  // Field delayError:Z
     129: ifeq          179
     132: aload_0
     133: getfield      #11                 // Field errors:Ljava/util/List;
     136: astore        6
     138: aload         6
     140: ifnonnull     163
     143: new           #12                 // class java/util/ArrayList
     146: dup
     147: iload_2
     148: iload_3
     149: isub
     150: iconst_1
     151: iadd
     152: invokespecial #14                 // Method java/util/ArrayList."<init>":(I)V
     155: astore        6
     157: aload_0
     158: aload         6
     160: putfield      #11                 // Field errors:Ljava/util/List;
     163: aload         6
     165: aload         5
     167: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     172: pop
     173: iinc          3, 1
     176: goto          23
     179: aload_0
     180: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     183: aload         5
     185: invokeinterface #17,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     190: return
     191: aload_0
     192: getfield      #9                  // Field produced:J
     195: lstore        5
     197: lload         5
     199: lconst_0
     200: lcmp
     201: ifeq          215
     204: aload_0
     205: lconst_0
     206: putfield      #9                  // Field produced:J
     209: aload_0
     210: lload         5
     212: invokevirtual #28                 // Method produced:(J)V
     215: aload         4
     217: aload_0
     218: invokeinterface #29,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     223: aload_0
     224: iinc          3, 1
     227: iload_3
     228: putfield      #13                 // Field index:I
     231: aload_0
     232: getfield      #7                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
     235: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     238: ifne          244
     241: goto          247
     244: goto          23
     247: return
}
