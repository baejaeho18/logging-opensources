Compiled from "FlowableConcatMap.java"
public final class io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap<T, R> extends io.reactivex.rxjava3.internal.operators.flowable.AbstractFlowableWithUpstream<T, R> {
  final io.reactivex.rxjava3.functions.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>> mapper;

  final int prefetch;

  final io.reactivex.rxjava3.internal.util.ErrorMode errorMode;

  public io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap(io.reactivex.rxjava3.core.Flowable<T>, io.reactivex.rxjava3.functions.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>>, int, io.reactivex.rxjava3.internal.util.ErrorMode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/AbstractFlowableWithUpstream."<init>":(Lio/reactivex/rxjava3/core/Flowable;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field prefetch:I
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field errorMode:Lio/reactivex/rxjava3/internal/util/ErrorMode;
      21: return

  public static <T, R> org.reactivestreams.Subscriber<T> subscribe(org.reactivestreams.Subscriber<? super R>, io.reactivex.rxjava3.functions.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>>, int, io.reactivex.rxjava3.internal.util.ErrorMode);
    Code:
       0: getstatic     #5                  // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$1.$SwitchMap$io$reactivex$rxjava3$internal$util$ErrorMode:[I
       3: aload_3
       4: invokevirtual #6                  // Method io/reactivex/rxjava3/internal/util/ErrorMode.ordinal:()I
       7: iaload
       8: lookupswitch  { // 2
                     1: 36
                     2: 48
               default: 60
          }
      36: new           #7                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapDelayed
      39: dup
      40: aload_0
      41: aload_1
      42: iload_2
      43: iconst_0
      44: invokespecial #8                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapDelayed."<init>":(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;IZ)V
      47: areturn
      48: new           #7                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapDelayed
      51: dup
      52: aload_0
      53: aload_1
      54: iload_2
      55: iconst_1
      56: invokespecial #8                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapDelayed."<init>":(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;IZ)V
      59: areturn
      60: new           #9                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapImmediate
      63: dup
      64: aload_0
      65: aload_1
      66: iload_2
      67: invokespecial #10                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapImmediate."<init>":(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;I)V
      70: areturn

  protected void subscribeActual(org.reactivestreams.Subscriber<? super R>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field source:Lio/reactivex/rxjava3/core/Flowable;
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
       9: invokestatic  #12                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableScalarXMap.tryScalarXMapSubscribe:(Lorg/reactivestreams/Publisher;Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;)Z
      12: ifeq          16
      15: return
      16: aload_0
      17: getfield      #11                 // Field source:Lio/reactivex/rxjava3/core/Flowable;
      20: aload_1
      21: aload_0
      22: getfield      #2                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      25: aload_0
      26: getfield      #3                  // Field prefetch:I
      29: aload_0
      30: getfield      #4                  // Field errorMode:Lio/reactivex/rxjava3/internal/util/ErrorMode;
      33: invokestatic  #13                 // Method subscribe:(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/internal/util/ErrorMode;)Lorg/reactivestreams/Subscriber;
      36: invokevirtual #14                 // Method io/reactivex/rxjava3/core/Flowable.subscribe:(Lorg/reactivestreams/Subscriber;)V
      39: return
}
