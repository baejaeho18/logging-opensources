Compiled from "FlowableFromIterable.java"
abstract class io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription<T> extends io.reactivex.rxjava3.internal.subscriptions.BasicQueueSubscription<T> {
  private static final long serialVersionUID;

  java.util.Iterator<? extends T> iterator;

  volatile boolean cancelled;

  boolean once;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription(java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/internal/subscriptions/BasicQueueSubscription."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field iterator:Ljava/util/Iterator;
       9: return

  public final int requestFusion(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iand
       3: ireturn

  public final T poll();
    Code:
       0: aload_0
       1: getfield      #2                  // Field iterator:Ljava/util/Iterator;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #4                  // Field once:Z
      13: ifne          24
      16: aload_0
      17: iconst_1
      18: putfield      #4                  // Field once:Z
      21: goto          38
      24: aload_0
      25: getfield      #2                  // Field iterator:Ljava/util/Iterator;
      28: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifne          38
      36: aconst_null
      37: areturn
      38: aload_0
      39: getfield      #2                  // Field iterator:Ljava/util/Iterator;
      42: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: ldc           #7                  // String Iterator.next() returned a null value
      49: invokestatic  #8                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      52: areturn

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field iterator:Ljava/util/Iterator;
       4: astore_1
       5: aload_1
       6: ifnull        31
       9: aload_0
      10: getfield      #4                  // Field once:Z
      13: ifeq          25
      16: aload_1
      17: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          27
      25: iconst_0
      26: ireturn
      27: aload_0
      28: invokevirtual #9                  // Method clear:()V
      31: iconst_1
      32: ireturn

  public final void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #2                  // Field iterator:Ljava/util/Iterator;
       5: return

  public final void request(long);
    Code:
       0: lload_1
       1: invokestatic  #10                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          37
       7: aload_0
       8: lload_1
       9: invokestatic  #11                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      12: lconst_0
      13: lcmp
      14: ifne          37
      17: lload_1
      18: ldc2_w        #13                 // long 9223372036854775807l
      21: lcmp
      22: ifne          32
      25: aload_0
      26: invokevirtual #15                 // Method fastPath:()V
      29: goto          37
      32: aload_0
      33: lload_1
      34: invokevirtual #16                 // Method slowPath:(J)V
      37: return

  public final void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #17                 // Field cancelled:Z
       5: return

  abstract void fastPath();

  abstract void slowPath(long);
}
