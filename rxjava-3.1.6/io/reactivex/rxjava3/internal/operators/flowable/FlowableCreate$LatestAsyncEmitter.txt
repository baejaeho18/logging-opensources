Compiled from "FlowableCreate.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter<T> extends io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$BaseEmitter<T> {
  private static final long serialVersionUID;

  final java.util.concurrent.atomic.AtomicReference<T> queue;

  java.lang.Throwable error;

  volatile boolean done;

  final java.util.concurrent.atomic.AtomicInteger wip;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableCreate$BaseEmitter."<init>":(Lorg/reactivestreams/Subscriber;)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       9: dup
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      13: putfield      #4                  // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
      16: aload_0
      17: new           #5                  // class java/util/concurrent/atomic/AtomicInteger
      20: dup
      21: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      24: putfield      #7                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
      27: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #8                  // Field done:Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #9                  // Method isCancelled:()Z
      11: ifeq          15
      14: return
      15: aload_1
      16: ifnonnull     29
      19: aload_0
      20: ldc           #10                 // String onNext called with a null value.
      22: invokestatic  #11                 // Method io/reactivex/rxjava3/internal/util/ExceptionHelper.createNullPointerException:(Ljava/lang/String;)Ljava/lang/NullPointerException;
      25: invokevirtual #12                 // Method onError:(Ljava/lang/Throwable;)V
      28: return
      29: aload_0
      30: getfield      #4                  // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
      33: aload_1
      34: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      37: aload_0
      38: invokevirtual #14                 // Method drain:()V
      41: return

  public boolean signalError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field done:Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #9                  // Method isCancelled:()Z
      11: ifeq          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: aload_1
      18: putfield      #15                 // Field error:Ljava/lang/Throwable;
      21: aload_0
      22: iconst_1
      23: putfield      #8                  // Field done:Z
      26: aload_0
      27: invokevirtual #14                 // Method drain:()V
      30: iconst_1
      31: ireturn

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #8                  // Field done:Z
       5: aload_0
       6: invokevirtual #14                 // Method drain:()V
       9: return

  void onRequested();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method drain:()V
       4: return

  void onUnsubscribed();
    Code:
       0: aload_0
       1: getfield      #7                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: ifne          18
      10: aload_0
      11: getfield      #4                  // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
      14: aconst_null
      15: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
      18: return

  void drain();
    Code:
       0: aload_0
       1: getfield      #7                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: ifeq          11
      10: return
      11: iconst_1
      12: istore_1
      13: aload_0
      14: getfield      #18                 // Field downstream:Lorg/reactivestreams/Subscriber;
      17: astore_2
      18: aload_0
      19: getfield      #4                  // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
      22: astore_3
      23: aload_0
      24: invokevirtual #19                 // Method get:()J
      27: lstore        4
      29: lconst_0
      30: lstore        6
      32: lload         6
      34: lload         4
      36: lcmp
      37: ifeq          139
      40: aload_0
      41: invokevirtual #9                  // Method isCancelled:()Z
      44: ifeq          53
      47: aload_3
      48: aconst_null
      49: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
      52: return
      53: aload_0
      54: getfield      #8                  // Field done:Z
      57: istore        8
      59: aload_3
      60: aconst_null
      61: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      64: astore        9
      66: aload         9
      68: ifnonnull     75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: istore        10
      78: iload         8
      80: ifeq          114
      83: iload         10
      85: ifeq          114
      88: aload_0
      89: getfield      #15                 // Field error:Ljava/lang/Throwable;
      92: astore        11
      94: aload         11
      96: ifnull        109
      99: aload_0
     100: aload         11
     102: invokevirtual #21                 // Method errorDownstream:(Ljava/lang/Throwable;)Z
     105: pop
     106: goto          113
     109: aload_0
     110: invokevirtual #22                 // Method completeDownstream:()V
     113: return
     114: iload         10
     116: ifeq          122
     119: goto          139
     122: aload_2
     123: aload         9
     125: invokeinterface #23,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     130: lload         6
     132: lconst_1
     133: ladd
     134: lstore        6
     136: goto          32
     139: lload         6
     141: lload         4
     143: lcmp
     144: ifne          216
     147: aload_0
     148: invokevirtual #9                  // Method isCancelled:()Z
     151: ifeq          160
     154: aload_3
     155: aconst_null
     156: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
     159: return
     160: aload_0
     161: getfield      #8                  // Field done:Z
     164: istore        8
     166: aload_3
     167: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     170: ifnonnull     177
     173: iconst_1
     174: goto          178
     177: iconst_0
     178: istore        9
     180: iload         8
     182: ifeq          216
     185: iload         9
     187: ifeq          216
     190: aload_0
     191: getfield      #15                 // Field error:Ljava/lang/Throwable;
     194: astore        10
     196: aload         10
     198: ifnull        211
     201: aload_0
     202: aload         10
     204: invokevirtual #21                 // Method errorDownstream:(Ljava/lang/Throwable;)Z
     207: pop
     208: goto          215
     211: aload_0
     212: invokevirtual #22                 // Method completeDownstream:()V
     215: return
     216: lload         6
     218: lconst_0
     219: lcmp
     220: ifeq          230
     223: aload_0
     224: lload         6
     226: invokestatic  #25                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.produced:(Ljava/util/concurrent/atomic/AtomicLong;J)J
     229: pop2
     230: aload_0
     231: getfield      #7                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
     234: iload_1
     235: ineg
     236: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.addAndGet:(I)I
     239: istore_1
     240: iload_1
     241: ifne          247
     244: goto          250
     247: goto          23
     250: return
}
