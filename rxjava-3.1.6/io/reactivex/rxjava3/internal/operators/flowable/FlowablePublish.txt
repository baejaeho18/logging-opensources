Compiled from "FlowablePublish.java"
public final class io.reactivex.rxjava3.internal.operators.flowable.FlowablePublish<T> extends io.reactivex.rxjava3.flowables.ConnectableFlowable<T> implements io.reactivex.rxjava3.internal.fuseable.HasUpstreamPublisher<T> {
  final org.reactivestreams.Publisher<T> source;

  final int bufferSize;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.flowable.FlowablePublish$PublishConnection<T>> current;

  public io.reactivex.rxjava3.internal.operators.flowable.FlowablePublish(org.reactivestreams.Publisher<T>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/flowables/ConnectableFlowable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lorg/reactivestreams/Publisher;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field bufferSize:I
      14: aload_0
      15: new           #4                  // class java/util/concurrent/atomic/AtomicReference
      18: dup
      19: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      22: putfield      #6                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      25: return

  public org.reactivestreams.Publisher<T> source();
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lorg/reactivestreams/Publisher;
       4: areturn

  public void connect(io.reactivex.rxjava3.functions.Consumer<? super io.reactivex.rxjava3.disposables.Disposable>);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: getfield      #6                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
       6: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       9: checkcast     #8                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$PublishConnection
      12: astore_2
      13: aload_2
      14: ifnull        24
      17: aload_2
      18: invokevirtual #9                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$PublishConnection.isDisposed:()Z
      21: ifeq          60
      24: new           #8                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$PublishConnection
      27: dup
      28: aload_0
      29: getfield      #6                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      32: aload_0
      33: getfield      #3                  // Field bufferSize:I
      36: invokespecial #10                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$PublishConnection."<init>":(Ljava/util/concurrent/atomic/AtomicReference;I)V
      39: astore        4
      41: aload_0
      42: getfield      #6                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      45: aload_2
      46: aload         4
      48: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      51: ifne          57
      54: goto          2
      57: aload         4
      59: astore_2
      60: aload_2
      61: getfield      #12                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$PublishConnection.connect:Ljava/util/concurrent/atomic/AtomicBoolean;
      64: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      67: ifne          86
      70: aload_2
      71: getfield      #12                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$PublishConnection.connect:Ljava/util/concurrent/atomic/AtomicBoolean;
      74: iconst_0
      75: iconst_1
      76: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      79: ifeq          86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: istore_3
      88: goto          91
      91: aload_1
      92: aload_2
      93: invokeinterface #15,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Consumer.accept:(Ljava/lang/Object;)V
      98: goto          114
     101: astore        4
     103: aload         4
     105: invokestatic  #17                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     108: aload         4
     110: invokestatic  #18                 // Method io/reactivex/rxjava3/internal/util/ExceptionHelper.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     113: athrow
     114: iload_3
     115: ifeq          128
     118: aload_0
     119: getfield      #2                  // Field source:Lorg/reactivestreams/Publisher;
     122: aload_2
     123: invokeinterface #19,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     128: return
    Exception table:
       from    to  target type
          91    98   101   Class java/lang/Throwable

  protected void subscribeActual(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #8                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$PublishConnection
      10: astore_2
      11: aload_2
      12: ifnonnull     51
      15: new           #8                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$PublishConnection
      18: dup
      19: aload_0
      20: getfield      #6                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      23: aload_0
      24: getfield      #3                  // Field bufferSize:I
      27: invokespecial #10                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$PublishConnection."<init>":(Ljava/util/concurrent/atomic/AtomicReference;I)V
      30: astore_3
      31: aload_0
      32: getfield      #6                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      35: aload_2
      36: aload_3
      37: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      40: ifne          46
      43: goto          0
      46: aload_3
      47: astore_2
      48: goto          51
      51: new           #20                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription
      54: dup
      55: aload_1
      56: aload_2
      57: invokespecial #21                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription."<init>":(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$PublishConnection;)V
      60: astore_3
      61: aload_1
      62: aload_3
      63: invokeinterface #22,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      68: aload_2
      69: aload_3
      70: invokevirtual #23                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$PublishConnection.add:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription;)Z
      73: ifeq          96
      76: aload_3
      77: invokevirtual #24                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription.isCancelled:()Z
      80: ifeq          91
      83: aload_2
      84: aload_3
      85: invokevirtual #25                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$PublishConnection.remove:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription;)V
      88: goto          95
      91: aload_2
      92: invokevirtual #26                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$PublishConnection.drain:()V
      95: return
      96: aload_2
      97: getfield      #27                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$PublishConnection.error:Ljava/lang/Throwable;
     100: astore        4
     102: aload         4
     104: ifnull        121
     107: aload_3
     108: getfield      #28                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription.downstream:Lorg/reactivestreams/Subscriber;
     111: aload         4
     113: invokeinterface #29,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     118: goto          130
     121: aload_3
     122: getfield      #28                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$InnerSubscription.downstream:Lorg/reactivestreams/Subscriber;
     125: invokeinterface #30,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     130: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #8                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$PublishConnection
      10: astore_1
      11: aload_1
      12: ifnull        32
      15: aload_1
      16: invokevirtual #9                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowablePublish$PublishConnection.isDisposed:()Z
      19: ifeq          32
      22: aload_0
      23: getfield      #6                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      26: aload_1
      27: aconst_null
      28: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      31: pop
      32: return
}
