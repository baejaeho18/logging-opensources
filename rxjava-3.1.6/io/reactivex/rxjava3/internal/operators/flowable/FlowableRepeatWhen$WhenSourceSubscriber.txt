Compiled from "FlowableRepeatWhen.java"
abstract class io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber<T, U> extends io.reactivex.rxjava3.internal.subscriptions.SubscriptionArbiter implements io.reactivex.rxjava3.core.FlowableSubscriber<T> {
  private static final long serialVersionUID;

  protected final org.reactivestreams.Subscriber<? super T> downstream;

  protected final io.reactivex.rxjava3.processors.FlowableProcessor<U> processor;

  protected final org.reactivestreams.Subscription receiver;

  private long produced;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber(org.reactivestreams.Subscriber<? super T>, io.reactivex.rxjava3.processors.FlowableProcessor<U>, org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter."<init>":(Z)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      10: aload_0
      11: aload_2
      12: putfield      #3                  // Field processor:Lio/reactivex/rxjava3/processors/FlowableProcessor;
      15: aload_0
      16: aload_3
      17: putfield      #4                  // Field receiver:Lorg/reactivestreams/Subscription;
      20: return

  public final void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method setSubscription:(Lorg/reactivestreams/Subscription;)V
       5: return

  public final void onNext(T);
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field produced:J
       5: lconst_1
       6: ladd
       7: putfield      #6                  // Field produced:J
      10: aload_0
      11: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      14: aload_1
      15: invokeinterface #7,  2            // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      20: return

  protected final void again(U);
    Code:
       0: aload_0
       1: getstatic     #8                  // Field io/reactivex/rxjava3/internal/subscriptions/EmptySubscription.INSTANCE:Lio/reactivex/rxjava3/internal/subscriptions/EmptySubscription;
       4: invokevirtual #5                  // Method setSubscription:(Lorg/reactivestreams/Subscription;)V
       7: aload_0
       8: getfield      #6                  // Field produced:J
      11: lstore_2
      12: lload_2
      13: lconst_0
      14: lcmp
      15: ifeq          28
      18: aload_0
      19: lconst_0
      20: putfield      #6                  // Field produced:J
      23: aload_0
      24: lload_2
      25: invokevirtual #9                  // Method produced:(J)V
      28: aload_0
      29: getfield      #4                  // Field receiver:Lorg/reactivestreams/Subscription;
      32: lconst_1
      33: invokeinterface #10,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      38: aload_0
      39: getfield      #3                  // Field processor:Lio/reactivex/rxjava3/processors/FlowableProcessor;
      42: aload_1
      43: invokevirtual #11                 // Method io/reactivex/rxjava3/processors/FlowableProcessor.onNext:(Ljava/lang/Object;)V
      46: return

  public final void cancel();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiter.cancel:()V
       4: aload_0
       5: getfield      #4                  // Field receiver:Lorg/reactivestreams/Subscription;
       8: invokeinterface #13,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      13: return
}
