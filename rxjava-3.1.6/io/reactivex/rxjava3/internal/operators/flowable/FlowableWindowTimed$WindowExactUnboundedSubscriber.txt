Compiled from "FlowableWindowTimed.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber<T> extends io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowTimed$AbstractWindowSubscriber<T> implements java.lang.Runnable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Scheduler scheduler;

  io.reactivex.rxjava3.processors.UnicastProcessor<T> window;

  final io.reactivex.rxjava3.internal.disposables.SequentialDisposable timer;

  static final java.lang.Object NEXT_WINDOW;

  final java.lang.Runnable windowRunnable;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber(org.reactivestreams.Subscriber<? super io.reactivex.rxjava3.core.Flowable<T>>, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler, int);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: iload         6
       7: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$AbstractWindowSubscriber."<init>":(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;I)V
      10: aload_0
      11: aload         5
      13: putfield      #2                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      16: aload_0
      17: new           #3                  // class io/reactivex/rxjava3/internal/disposables/SequentialDisposable
      20: dup
      21: invokespecial #4                  // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable."<init>":()V
      24: putfield      #5                  // Field timer:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
      27: aload_0
      28: new           #6                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber$WindowRunnable
      31: dup
      32: aload_0
      33: invokespecial #7                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber$WindowRunnable."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber;)V
      36: putfield      #8                  // Field windowRunnable:Ljava/lang/Runnable;
      39: return

  void createFirstWindow();
    Code:
       0: aload_0
       1: getfield      #9                  // Field downstreamCancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          163
      10: aload_0
      11: getfield      #11                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      14: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      17: lconst_0
      18: lcmp
      19: ifeq          129
      22: aload_0
      23: getfield      #13                 // Field windowCount:Ljava/util/concurrent/atomic/AtomicInteger;
      26: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      29: pop
      30: aload_0
      31: aload_0
      32: getfield      #15                 // Field bufferSize:I
      35: aload_0
      36: getfield      #8                  // Field windowRunnable:Ljava/lang/Runnable;
      39: invokestatic  #16                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/processors/UnicastProcessor;
      42: putfield      #17                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
      45: aload_0
      46: lconst_1
      47: putfield      #18                 // Field emitted:J
      50: new           #19                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept
      53: dup
      54: aload_0
      55: getfield      #17                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
      58: invokespecial #20                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept."<init>":(Lio/reactivex/rxjava3/processors/FlowableProcessor;)V
      61: astore_1
      62: aload_0
      63: getfield      #21                 // Field downstream:Lorg/reactivestreams/Subscriber;
      66: aload_1
      67: invokeinterface #22,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      72: aload_0
      73: getfield      #5                  // Field timer:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
      76: aload_0
      77: getfield      #2                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      80: aload_0
      81: aload_0
      82: getfield      #23                 // Field timespan:J
      85: aload_0
      86: getfield      #23                 // Field timespan:J
      89: aload_0
      90: getfield      #24                 // Field unit:Ljava/util/concurrent/TimeUnit;
      93: invokevirtual #25                 // Method io/reactivex/rxjava3/core/Scheduler.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
      96: invokevirtual #26                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      99: pop
     100: aload_1
     101: invokevirtual #27                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept.tryAbandon:()Z
     104: ifeq          114
     107: aload_0
     108: getfield      #17                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
     111: invokevirtual #28                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onComplete:()V
     114: aload_0
     115: getfield      #29                 // Field upstream:Lorg/reactivestreams/Subscription;
     118: ldc2_w        #31                 // long 9223372036854775807l
     121: invokeinterface #33,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     126: goto          163
     129: aload_0
     130: getfield      #29                 // Field upstream:Lorg/reactivestreams/Subscription;
     133: invokeinterface #34,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     138: aload_0
     139: getfield      #21                 // Field downstream:Lorg/reactivestreams/Subscriber;
     142: aload_0
     143: getfield      #18                 // Field emitted:J
     146: invokestatic  #35                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed.missingBackpressureMessage:(J)Lio/reactivex/rxjava3/exceptions/MissingBackpressureException;
     149: invokeinterface #36,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     154: aload_0
     155: invokevirtual #37                 // Method cleanupResources:()V
     158: aload_0
     159: iconst_1
     160: putfield      #38                 // Field upstreamCancelled:Z
     163: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #39                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
       4: getstatic     #40                 // Field NEXT_WINDOW:Ljava/lang/Object;
       7: invokeinterface #41,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      12: pop
      13: aload_0
      14: invokevirtual #42                 // Method drain:()V
      17: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #39                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      12: astore_1
      13: aload_0
      14: getfield      #21                 // Field downstream:Lorg/reactivestreams/Subscriber;
      17: astore_2
      18: aload_0
      19: getfield      #17                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
      22: astore_3
      23: iconst_1
      24: istore        4
      26: aload_0
      27: getfield      #38                 // Field upstreamCancelled:Z
      30: ifeq          49
      33: aload_1
      34: invokeinterface #44,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.clear:()V
      39: aconst_null
      40: astore_3
      41: aload_0
      42: aconst_null
      43: putfield      #17                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
      46: goto          325
      49: aload_0
      50: getfield      #45                 // Field done:Z
      53: istore        5
      55: aload_1
      56: invokeinterface #46,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.poll:()Ljava/lang/Object;
      61: astore        6
      63: aload         6
      65: ifnonnull     72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: istore        7
      75: iload         5
      77: ifeq          143
      80: iload         7
      82: ifeq          143
      85: aload_0
      86: getfield      #47                 // Field error:Ljava/lang/Throwable;
      89: astore        8
      91: aload         8
      93: ifnull        117
      96: aload_3
      97: ifnull        106
     100: aload_3
     101: aload         8
     103: invokevirtual #48                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onError:(Ljava/lang/Throwable;)V
     106: aload_2
     107: aload         8
     109: invokeinterface #36,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     114: goto          131
     117: aload_3
     118: ifnull        125
     121: aload_3
     122: invokevirtual #28                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onComplete:()V
     125: aload_2
     126: invokeinterface #49,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     131: aload_0
     132: invokevirtual #37                 // Method cleanupResources:()V
     135: aload_0
     136: iconst_1
     137: putfield      #38                 // Field upstreamCancelled:Z
     140: goto          26
     143: iload         7
     145: ifne          325
     148: aload         6
     150: getstatic     #40                 // Field NEXT_WINDOW:Ljava/lang/Object;
     153: if_acmpne     308
     156: aload_3
     157: ifnull        171
     160: aload_3
     161: invokevirtual #28                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onComplete:()V
     164: aconst_null
     165: astore_3
     166: aload_0
     167: aconst_null
     168: putfield      #17                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
     171: aload_0
     172: getfield      #9                  // Field downstreamCancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
     175: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     178: ifeq          191
     181: aload_0
     182: getfield      #5                  // Field timer:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
     185: invokevirtual #50                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.dispose:()V
     188: goto          26
     191: aload_0
     192: getfield      #11                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     195: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     198: aload_0
     199: getfield      #18                 // Field emitted:J
     202: lcmp
     203: ifne          240
     206: aload_0
     207: getfield      #29                 // Field upstream:Lorg/reactivestreams/Subscription;
     210: invokeinterface #34,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     215: aload_0
     216: invokevirtual #37                 // Method cleanupResources:()V
     219: aload_0
     220: iconst_1
     221: putfield      #38                 // Field upstreamCancelled:Z
     224: aload_2
     225: aload_0
     226: getfield      #18                 // Field emitted:J
     229: invokestatic  #35                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed.missingBackpressureMessage:(J)Lio/reactivex/rxjava3/exceptions/MissingBackpressureException;
     232: invokeinterface #36,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     237: goto          26
     240: aload_0
     241: dup
     242: getfield      #18                 // Field emitted:J
     245: lconst_1
     246: ladd
     247: putfield      #18                 // Field emitted:J
     250: aload_0
     251: getfield      #13                 // Field windowCount:Ljava/util/concurrent/atomic/AtomicInteger;
     254: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
     257: pop
     258: aload_0
     259: getfield      #15                 // Field bufferSize:I
     262: aload_0
     263: getfield      #8                  // Field windowRunnable:Ljava/lang/Runnable;
     266: invokestatic  #51                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/processors/UnicastProcessor;
     269: astore_3
     270: aload_0
     271: aload_3
     272: putfield      #17                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
     275: new           #19                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept
     278: dup
     279: aload_3
     280: invokespecial #20                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept."<init>":(Lio/reactivex/rxjava3/processors/FlowableProcessor;)V
     283: astore        8
     285: aload_2
     286: aload         8
     288: invokeinterface #22,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     293: aload         8
     295: invokevirtual #27                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept.tryAbandon:()Z
     298: ifeq          305
     301: aload_3
     302: invokevirtual #28                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onComplete:()V
     305: goto          26
     308: aload_3
     309: ifnull        26
     312: aload         6
     314: astore        8
     316: aload_3
     317: aload         8
     319: invokevirtual #52                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onNext:(Ljava/lang/Object;)V
     322: goto          26
     325: aload_0
     326: iload         4
     328: ineg
     329: invokevirtual #53                 // Method addAndGet:(I)I
     332: istore        4
     334: iload         4
     336: ifne          26
     339: goto          342
     342: return

  void cleanupResources();
    Code:
       0: aload_0
       1: getfield      #5                  // Field timer:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
       4: invokevirtual #50                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.dispose:()V
       7: return

  static {};
    Code:
       0: new           #54                 // class java/lang/Object
       3: dup
       4: invokespecial #55                 // Method java/lang/Object."<init>":()V
       7: putstatic     #40                 // Field NEXT_WINDOW:Ljava/lang/Object;
      10: return
}
