Compiled from "FlowableWindow.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber<T> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription, java.lang.Runnable {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super io.reactivex.rxjava3.core.Flowable<T>> downstream;

  final long size;

  final long skip;

  final java.util.concurrent.atomic.AtomicBoolean once;

  final java.util.concurrent.atomic.AtomicBoolean firstRequest;

  final int bufferSize;

  long index;

  org.reactivestreams.Subscription upstream;

  io.reactivex.rxjava3.processors.UnicastProcessor<T> window;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber(org.reactivestreams.Subscriber<? super io.reactivex.rxjava3.core.Flowable<T>>, long, long, int);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      10: aload_0
      11: lload_2
      12: putfield      #3                  // Field size:J
      15: aload_0
      16: lload         4
      18: putfield      #4                  // Field skip:J
      21: aload_0
      22: new           #5                  // class java/util/concurrent/atomic/AtomicBoolean
      25: dup
      26: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      29: putfield      #7                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
      32: aload_0
      33: new           #5                  // class java/util/concurrent/atomic/AtomicBoolean
      36: dup
      37: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      40: putfield      #8                  // Field firstRequest:Ljava/util/concurrent/atomic/AtomicBoolean;
      43: aload_0
      44: iload         6
      46: putfield      #9                  // Field bufferSize:I
      49: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #11                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #12,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #13                 // Field index:J
       4: lstore_2
       5: aconst_null
       6: astore        4
       8: aload_0
       9: getfield      #14                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
      12: astore        5
      14: lload_2
      15: lconst_0
      16: lcmp
      17: ifne          63
      20: aload_0
      21: invokevirtual #15                 // Method getAndIncrement:()I
      24: pop
      25: aload_0
      26: getfield      #9                  // Field bufferSize:I
      29: aload_0
      30: invokestatic  #16                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/processors/UnicastProcessor;
      33: astore        5
      35: aload_0
      36: aload         5
      38: putfield      #14                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
      41: new           #17                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept
      44: dup
      45: aload         5
      47: invokespecial #18                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept."<init>":(Lio/reactivex/rxjava3/processors/FlowableProcessor;)V
      50: astore        4
      52: aload_0
      53: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      56: aload         4
      58: invokeinterface #19,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      63: lload_2
      64: lconst_1
      65: ladd
      66: lstore_2
      67: aload         5
      69: ifnull        78
      72: aload         5
      74: aload_1
      75: invokevirtual #20                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onNext:(Ljava/lang/Object;)V
      78: lload_2
      79: aload_0
      80: getfield      #3                  // Field size:J
      83: lcmp
      84: ifne          97
      87: aload_0
      88: aconst_null
      89: putfield      #14                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
      92: aload         5
      94: invokevirtual #21                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onComplete:()V
      97: lload_2
      98: aload_0
      99: getfield      #4                  // Field skip:J
     102: lcmp
     103: ifne          114
     106: aload_0
     107: lconst_0
     108: putfield      #13                 // Field index:J
     111: goto          119
     114: aload_0
     115: lload_2
     116: putfield      #13                 // Field index:J
     119: aload         4
     121: ifnull        140
     124: aload         4
     126: invokevirtual #22                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept.tryAbandon:()Z
     129: ifeq          140
     132: aload         4
     134: getfield      #23                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept.window:Lio/reactivex/rxjava3/processors/FlowableProcessor;
     137: invokevirtual #24                 // Method io/reactivex/rxjava3/processors/FlowableProcessor.onComplete:()V
     140: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #14                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
       4: astore_2
       5: aload_2
       6: ifnull        21
       9: aload_0
      10: aconst_null
      11: putfield      #14                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
      14: aload_2
      15: aload_1
      16: invokeinterface #25,  2           // InterfaceMethod org/reactivestreams/Processor.onError:(Ljava/lang/Throwable;)V
      21: aload_0
      22: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      25: aload_1
      26: invokeinterface #26,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      31: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #14                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
       4: astore_1
       5: aload_1
       6: ifnull        20
       9: aload_0
      10: aconst_null
      11: putfield      #14                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
      14: aload_1
      15: invokeinterface #27,  1           // InterfaceMethod org/reactivestreams/Processor.onComplete:()V
      20: aload_0
      21: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      24: invokeinterface #28,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      29: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #29                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          96
       7: aload_0
       8: getfield      #8                  // Field firstRequest:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      14: ifne          77
      17: aload_0
      18: getfield      #8                  // Field firstRequest:Ljava/util/concurrent/atomic/AtomicBoolean;
      21: iconst_0
      22: iconst_1
      23: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      26: ifeq          77
      29: aload_0
      30: getfield      #3                  // Field size:J
      33: lload_1
      34: invokestatic  #32                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.multiplyCap:(JJ)J
      37: lstore_3
      38: aload_0
      39: getfield      #4                  // Field skip:J
      42: aload_0
      43: getfield      #3                  // Field size:J
      46: lsub
      47: lload_1
      48: lconst_1
      49: lsub
      50: invokestatic  #32                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.multiplyCap:(JJ)J
      53: lstore        5
      55: lload_3
      56: lload         5
      58: invokestatic  #33                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.addCap:(JJ)J
      61: lstore        7
      63: aload_0
      64: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
      67: lload         7
      69: invokeinterface #34,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      74: goto          96
      77: aload_0
      78: getfield      #4                  // Field skip:J
      81: lload_1
      82: invokestatic  #32                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.multiplyCap:(JJ)J
      85: lstore_3
      86: aload_0
      87: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
      90: lload_3
      91: invokeinterface #34,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      96: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #7                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          16
      12: aload_0
      13: invokevirtual #35                 // Method run:()V
      16: return

  public void run();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method decrementAndGet:()I
       4: ifne          16
       7: aload_0
       8: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
      11: invokeinterface #37,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      16: return
}
