Compiled from "FlowableConcatMapScheduler.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler$ConcatMapDelayed<T, R> extends io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler$BaseConcatMapSubscriber<T, R> {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super R> downstream;

  final boolean veryEnd;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler$ConcatMapDelayed(org.reactivestreams.Subscriber<? super R>, io.reactivex.rxjava3.functions.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>>, int, boolean, io.reactivex.rxjava3.core.Scheduler$Worker);
    Code:
       0: aload_0
       1: aload_2
       2: iload_3
       3: aload         5
       5: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapScheduler$BaseConcatMapSubscriber."<init>":(Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/core/Scheduler$Worker;)V
       8: aload_0
       9: aload_1
      10: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      13: aload_0
      14: iload         4
      16: putfield      #3                  // Field veryEnd:Z
      19: return

  void subscribeActual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: aload_0
       5: invokeinterface #4,  2            // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       4: aload_1
       5: invokevirtual #6                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
       8: ifeq          20
      11: aload_0
      12: iconst_1
      13: putfield      #7                  // Field done:Z
      16: aload_0
      17: invokevirtual #8                  // Method schedule:()V
      20: return

  public void innerNext(R);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      10: return

  public void innerError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       4: aload_1
       5: invokevirtual #6                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
       8: ifeq          41
      11: aload_0
      12: getfield      #3                  // Field veryEnd:Z
      15: ifne          32
      18: aload_0
      19: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
      22: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      27: aload_0
      28: iconst_1
      29: putfield      #7                  // Field done:Z
      32: aload_0
      33: iconst_0
      34: putfield      #12                 // Field active:Z
      37: aload_0
      38: invokevirtual #8                  // Method schedule:()V
      41: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #13                 // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
       4: lload_1
       5: invokevirtual #14                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner.request:(J)V
       8: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #15                 // Field cancelled:Z
       4: ifne          42
       7: aload_0
       8: iconst_1
       9: putfield      #15                 // Field cancelled:Z
      12: aload_0
      13: getfield      #13                 // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
      16: invokevirtual #16                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner.cancel:()V
      19: aload_0
      20: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
      23: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      28: aload_0
      29: getfield      #17                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      32: invokevirtual #18                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      35: aload_0
      36: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      39: invokevirtual #19                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      42: return

  void schedule();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getAndIncrement:()I
       4: ifne          16
       7: aload_0
       8: getfield      #17                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      11: aload_0
      12: invokevirtual #21                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedule:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/disposables/Disposable;
      15: pop
      16: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #15                 // Field cancelled:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #12                 // Field active:Z
      12: ifne          445
      15: aload_0
      16: getfield      #7                  // Field done:Z
      19: istore_1
      20: iload_1
      21: ifeq          65
      24: aload_0
      25: getfield      #3                  // Field veryEnd:Z
      28: ifne          65
      31: aload_0
      32: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      35: invokevirtual #22                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
      38: checkcast     #23                 // class java/lang/Throwable
      41: astore_2
      42: aload_2
      43: ifnull        65
      46: aload_0
      47: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      50: aload_0
      51: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      54: invokevirtual #24                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
      57: aload_0
      58: getfield      #17                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      61: invokevirtual #18                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      64: return
      65: aload_0
      66: getfield      #25                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      69: invokeinterface #26,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.poll:()Ljava/lang/Object;
      74: astore_2
      75: goto          120
      78: astore_3
      79: aload_3
      80: invokestatic  #27                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      83: aload_0
      84: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
      87: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      92: aload_0
      93: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      96: aload_3
      97: invokevirtual #6                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     100: pop
     101: aload_0
     102: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     105: aload_0
     106: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     109: invokevirtual #24                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     112: aload_0
     113: getfield      #17                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     116: invokevirtual #18                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
     119: return
     120: aload_2
     121: ifnonnull     128
     124: iconst_1
     125: goto          129
     128: iconst_0
     129: istore_3
     130: iload_1
     131: ifeq          157
     134: iload_3
     135: ifeq          157
     138: aload_0
     139: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     142: aload_0
     143: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     146: invokevirtual #24                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     149: aload_0
     150: getfield      #17                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     153: invokevirtual #18                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
     156: return
     157: iload_3
     158: ifne          445
     161: aload_0
     162: getfield      #28                 // Field mapper:Lio/reactivex/rxjava3/functions/Function;
     165: aload_2
     166: invokeinterface #29,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     171: ldc           #30                 // String The mapper returned a null Publisher
     173: invokestatic  #31                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     176: checkcast     #32                 // class org/reactivestreams/Publisher
     179: astore        4
     181: goto          229
     184: astore        5
     186: aload         5
     188: invokestatic  #27                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     191: aload_0
     192: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
     195: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     200: aload_0
     201: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     204: aload         5
     206: invokevirtual #6                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     209: pop
     210: aload_0
     211: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     214: aload_0
     215: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     218: invokevirtual #24                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     221: aload_0
     222: getfield      #17                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     225: invokevirtual #18                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
     228: return
     229: aload_0
     230: getfield      #33                 // Field sourceMode:I
     233: iconst_1
     234: if_icmpeq     280
     237: aload_0
     238: getfield      #35                 // Field consumed:I
     241: iconst_1
     242: iadd
     243: istore        5
     245: iload         5
     247: aload_0
     248: getfield      #36                 // Field limit:I
     251: if_icmpne     274
     254: aload_0
     255: iconst_0
     256: putfield      #35                 // Field consumed:I
     259: aload_0
     260: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
     263: iload         5
     265: i2l
     266: invokeinterface #37,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     271: goto          280
     274: aload_0
     275: iload         5
     277: putfield      #35                 // Field consumed:I
     280: aload         4
     282: instanceof    #38                 // class io/reactivex/rxjava3/functions/Supplier
     285: ifeq          429
     288: aload         4
     290: checkcast     #38                 // class io/reactivex/rxjava3/functions/Supplier
     293: astore        5
     295: aload         5
     297: invokeinterface #39,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
     302: astore        6
     304: goto          362
     307: astore        7
     309: aload         7
     311: invokestatic  #27                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     314: aload_0
     315: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     318: aload         7
     320: invokevirtual #6                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     323: pop
     324: aload_0
     325: getfield      #3                  // Field veryEnd:Z
     328: ifne          359
     331: aload_0
     332: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
     335: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     340: aload_0
     341: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     344: aload_0
     345: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     348: invokevirtual #24                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     351: aload_0
     352: getfield      #17                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     355: invokevirtual #18                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
     358: return
     359: aconst_null
     360: astore        6
     362: aload         6
     364: ifnull        0
     367: aload_0
     368: getfield      #15                 // Field cancelled:Z
     371: ifeq          377
     374: goto          0
     377: aload_0
     378: getfield      #13                 // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
     381: invokevirtual #40                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner.isUnbounded:()Z
     384: ifeq          401
     387: aload_0
     388: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     391: aload         6
     393: invokeinterface #9,  2            // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     398: goto          0
     401: aload_0
     402: iconst_1
     403: putfield      #12                 // Field active:Z
     406: aload_0
     407: getfield      #13                 // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
     410: new           #41                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$SimpleScalarSubscription
     413: dup
     414: aload         6
     416: aload_0
     417: getfield      #13                 // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
     420: invokespecial #42                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$SimpleScalarSubscription."<init>":(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)V
     423: invokevirtual #43                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner.setSubscription:(Lorg/reactivestreams/Subscription;)V
     426: goto          445
     429: aload_0
     430: iconst_1
     431: putfield      #12                 // Field active:Z
     434: aload         4
     436: aload_0
     437: getfield      #13                 // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
     440: invokeinterface #44,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     445: aload_0
     446: invokevirtual #45                 // Method decrementAndGet:()I
     449: ifne          0
     452: goto          455
     455: return
    Exception table:
       from    to  target type
          65    75    78   Class java/lang/Throwable
         161   181   184   Class java/lang/Throwable
         295   304   307   Class java/lang/Throwable
}
