Compiled from "FlowableWithLatestFromMany.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber extends java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> implements io.reactivex.rxjava3.core.FlowableSubscriber<java.lang.Object> {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber<?, ?> parent;

  final int index;

  boolean hasValue;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber(io.reactivex.rxjava3.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber<?, ?>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$WithLatestFromSubscriber;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field index:I
      14: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #5                  // long 9223372036854775807l
       5: invokestatic  #7                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;J)Z
       8: pop
       9: return

  public void onNext(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field hasValue:Z
       4: ifne          12
       7: aload_0
       8: iconst_1
       9: putfield      #8                  // Field hasValue:Z
      12: aload_0
      13: getfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$WithLatestFromSubscriber;
      16: aload_0
      17: getfield      #3                  // Field index:I
      20: aload_1
      21: invokevirtual #9                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$WithLatestFromSubscriber.innerNext:(ILjava/lang/Object;)V
      24: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$WithLatestFromSubscriber;
       4: aload_0
       5: getfield      #3                  // Field index:I
       8: aload_1
       9: invokevirtual #10                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$WithLatestFromSubscriber.innerError:(ILjava/lang/Throwable;)V
      12: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$WithLatestFromSubscriber;
       4: aload_0
       5: getfield      #3                  // Field index:I
       8: aload_0
       9: getfield      #8                  // Field hasValue:Z
      12: invokevirtual #11                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWithLatestFromMany$WithLatestFromSubscriber.innerComplete:(IZ)V
      15: return

  void dispose();
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: return
}
