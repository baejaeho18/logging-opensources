Compiled from "FlowableConcatMapScheduler.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler$ConcatMapImmediate<T, R> extends io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler$BaseConcatMapSubscriber<T, R> {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super R> downstream;

  final java.util.concurrent.atomic.AtomicInteger wip;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapScheduler$ConcatMapImmediate(org.reactivestreams.Subscriber<? super R>, io.reactivex.rxjava3.functions.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>>, int, io.reactivex.rxjava3.core.Scheduler$Worker);
    Code:
       0: aload_0
       1: aload_2
       2: iload_3
       3: aload         4
       5: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapScheduler$BaseConcatMapSubscriber."<init>":(Lio/reactivex/rxjava3/functions/Function;ILio/reactivex/rxjava3/core/Scheduler$Worker;)V
       8: aload_0
       9: aload_1
      10: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      13: aload_0
      14: new           #3                  // class java/util/concurrent/atomic/AtomicInteger
      17: dup
      18: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      21: putfield      #5                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
      24: return

  void subscribeActual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: aload_0
       5: invokeinterface #6,  2            // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       4: aload_1
       5: invokevirtual #8                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
       8: ifeq          43
      11: aload_0
      12: getfield      #9                  // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
      15: invokevirtual #10                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner.cancel:()V
      18: aload_0
      19: invokevirtual #11                 // Method getAndIncrement:()I
      22: ifne          43
      25: aload_0
      26: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      29: aload_0
      30: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      33: invokevirtual #12                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
      36: aload_0
      37: getfield      #13                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      40: invokevirtual #14                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      43: return

  boolean tryEnter();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method get:()I
       4: ifne          20
       7: aload_0
       8: iconst_0
       9: iconst_1
      10: invokevirtual #16                 // Method compareAndSet:(II)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public void innerNext(R);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method tryEnter:()Z
       4: ifeq          45
       7: aload_0
       8: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      11: aload_1
      12: invokeinterface #18,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      17: aload_0
      18: iconst_1
      19: iconst_0
      20: invokevirtual #16                 // Method compareAndSet:(II)Z
      23: ifeq          27
      26: return
      27: aload_0
      28: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      31: aload_0
      32: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      35: invokevirtual #12                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
      38: aload_0
      39: getfield      #13                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      42: invokevirtual #14                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      45: return

  public void innerError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       4: aload_1
       5: invokevirtual #8                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
       8: ifeq          45
      11: aload_0
      12: getfield      #19                 // Field upstream:Lorg/reactivestreams/Subscription;
      15: invokeinterface #20,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      20: aload_0
      21: invokevirtual #11                 // Method getAndIncrement:()I
      24: ifne          45
      27: aload_0
      28: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      31: aload_0
      32: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      35: invokevirtual #12                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
      38: aload_0
      39: getfield      #13                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      42: invokevirtual #14                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      45: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
       4: lload_1
       5: invokevirtual #21                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner.request:(J)V
       8: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #22                 // Field cancelled:Z
       4: ifne          42
       7: aload_0
       8: iconst_1
       9: putfield      #22                 // Field cancelled:Z
      12: aload_0
      13: getfield      #9                  // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
      16: invokevirtual #10                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner.cancel:()V
      19: aload_0
      20: getfield      #19                 // Field upstream:Lorg/reactivestreams/Subscription;
      23: invokeinterface #20,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      28: aload_0
      29: getfield      #13                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      32: invokevirtual #14                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      35: aload_0
      36: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      39: invokevirtual #23                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      42: return

  void schedule();
    Code:
       0: aload_0
       1: getfield      #5                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: ifne          19
      10: aload_0
      11: getfield      #13                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      14: aload_0
      15: invokevirtual #25                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedule:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/disposables/Disposable;
      18: pop
      19: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #22                 // Field cancelled:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #26                 // Field active:Z
      12: ifne          420
      15: aload_0
      16: getfield      #27                 // Field done:Z
      19: istore_1
      20: aload_0
      21: getfield      #28                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      24: invokeinterface #29,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.poll:()Ljava/lang/Object;
      29: astore_2
      30: goto          75
      33: astore_3
      34: aload_3
      35: invokestatic  #31                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      38: aload_0
      39: getfield      #19                 // Field upstream:Lorg/reactivestreams/Subscription;
      42: invokeinterface #20,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      47: aload_0
      48: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      51: aload_3
      52: invokevirtual #8                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      55: pop
      56: aload_0
      57: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      60: aload_0
      61: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      64: invokevirtual #12                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
      67: aload_0
      68: getfield      #13                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      71: invokevirtual #14                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      74: return
      75: aload_2
      76: ifnonnull     83
      79: iconst_1
      80: goto          84
      83: iconst_0
      84: istore_3
      85: iload_1
      86: ifeq          110
      89: iload_3
      90: ifeq          110
      93: aload_0
      94: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      97: invokeinterface #32,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     102: aload_0
     103: getfield      #13                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     106: invokevirtual #14                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
     109: return
     110: iload_3
     111: ifne          420
     114: aload_0
     115: getfield      #33                 // Field mapper:Lio/reactivex/rxjava3/functions/Function;
     118: aload_2
     119: invokeinterface #34,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     124: ldc           #35                 // String The mapper returned a null Publisher
     126: invokestatic  #36                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     129: checkcast     #37                 // class org/reactivestreams/Publisher
     132: astore        4
     134: goto          182
     137: astore        5
     139: aload         5
     141: invokestatic  #31                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     144: aload_0
     145: getfield      #19                 // Field upstream:Lorg/reactivestreams/Subscription;
     148: invokeinterface #20,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     153: aload_0
     154: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     157: aload         5
     159: invokevirtual #8                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     162: pop
     163: aload_0
     164: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     167: aload_0
     168: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     171: invokevirtual #12                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     174: aload_0
     175: getfield      #13                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     178: invokevirtual #14                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
     181: return
     182: aload_0
     183: getfield      #38                 // Field sourceMode:I
     186: iconst_1
     187: if_icmpeq     233
     190: aload_0
     191: getfield      #40                 // Field consumed:I
     194: iconst_1
     195: iadd
     196: istore        5
     198: iload         5
     200: aload_0
     201: getfield      #41                 // Field limit:I
     204: if_icmpne     227
     207: aload_0
     208: iconst_0
     209: putfield      #40                 // Field consumed:I
     212: aload_0
     213: getfield      #19                 // Field upstream:Lorg/reactivestreams/Subscription;
     216: iload         5
     218: i2l
     219: invokeinterface #42,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     224: goto          233
     227: aload_0
     228: iload         5
     230: putfield      #40                 // Field consumed:I
     233: aload         4
     235: instanceof    #43                 // class io/reactivex/rxjava3/functions/Supplier
     238: ifeq          404
     241: aload         4
     243: checkcast     #43                 // class io/reactivex/rxjava3/functions/Supplier
     246: astore        5
     248: aload         5
     250: invokeinterface #44,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
     255: astore        6
     257: goto          305
     260: astore        7
     262: aload         7
     264: invokestatic  #31                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     267: aload_0
     268: getfield      #19                 // Field upstream:Lorg/reactivestreams/Subscription;
     271: invokeinterface #20,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     276: aload_0
     277: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     280: aload         7
     282: invokevirtual #8                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     285: pop
     286: aload_0
     287: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     290: aload_0
     291: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     294: invokevirtual #12                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     297: aload_0
     298: getfield      #13                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     301: invokevirtual #14                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
     304: return
     305: aload         6
     307: ifnull        0
     310: aload_0
     311: getfield      #22                 // Field cancelled:Z
     314: ifeq          320
     317: goto          0
     320: aload_0
     321: getfield      #9                  // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
     324: invokevirtual #45                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner.isUnbounded:()Z
     327: ifeq          376
     330: aload_0
     331: invokevirtual #17                 // Method tryEnter:()Z
     334: ifeq          0
     337: aload_0
     338: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     341: aload         6
     343: invokeinterface #18,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     348: aload_0
     349: iconst_1
     350: iconst_0
     351: invokevirtual #16                 // Method compareAndSet:(II)Z
     354: ifne          0
     357: aload_0
     358: getfield      #7                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     361: aload_0
     362: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     365: invokevirtual #12                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     368: aload_0
     369: getfield      #13                 // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     372: invokevirtual #14                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
     375: return
     376: aload_0
     377: iconst_1
     378: putfield      #26                 // Field active:Z
     381: aload_0
     382: getfield      #9                  // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
     385: new           #46                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$SimpleScalarSubscription
     388: dup
     389: aload         6
     391: aload_0
     392: getfield      #9                  // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
     395: invokespecial #47                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$SimpleScalarSubscription."<init>":(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)V
     398: invokevirtual #48                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner.setSubscription:(Lorg/reactivestreams/Subscription;)V
     401: goto          420
     404: aload_0
     405: iconst_1
     406: putfield      #26                 // Field active:Z
     409: aload         4
     411: aload_0
     412: getfield      #9                  // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
     415: invokeinterface #49,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     420: aload_0
     421: getfield      #5                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
     424: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     427: ifne          0
     430: goto          433
     433: return
    Exception table:
       from    to  target type
          20    30    33   Class java/lang/Throwable
         114   134   137   Class java/lang/Throwable
         248   257   260   Class java/lang/Throwable
}
