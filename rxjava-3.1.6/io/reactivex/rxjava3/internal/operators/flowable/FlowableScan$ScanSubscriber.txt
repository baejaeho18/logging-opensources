Compiled from "FlowableScan.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableScan$ScanSubscriber<T> implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription {
  final org.reactivestreams.Subscriber<? super T> downstream;

  final io.reactivex.rxjava3.functions.BiFunction<T, T, T> accumulator;

  org.reactivestreams.Subscription upstream;

  T value;

  boolean done;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableScan$ScanSubscriber(org.reactivestreams.Subscriber<? super T>, io.reactivex.rxjava3.functions.BiFunction<T, T, T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field accumulator:Lio/reactivex/rxjava3/functions/BiFunction;
      14: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #5                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #6,  2            // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #7                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      12: astore_2
      13: aload_0
      14: getfield      #8                  // Field value:Ljava/lang/Object;
      17: astore_3
      18: aload_3
      19: ifnonnull     37
      22: aload_0
      23: aload_1
      24: putfield      #8                  // Field value:Ljava/lang/Object;
      27: aload_2
      28: aload_1
      29: invokeinterface #9,  2            // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      34: goto          95
      37: aload_0
      38: getfield      #3                  // Field accumulator:Lio/reactivex/rxjava3/functions/BiFunction;
      41: aload_3
      42: aload_1
      43: invokeinterface #10,  3           // InterfaceMethod io/reactivex/rxjava3/functions/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: ldc           #11                 // String The value returned by the accumulator is null
      50: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      53: astore        4
      55: goto          81
      58: astore        5
      60: aload         5
      62: invokestatic  #14                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      65: aload_0
      66: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
      69: invokeinterface #15,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      74: aload_0
      75: aload         5
      77: invokevirtual #16                 // Method onError:(Ljava/lang/Throwable;)V
      80: return
      81: aload_0
      82: aload         4
      84: putfield      #8                  // Field value:Ljava/lang/Object;
      87: aload_2
      88: aload         4
      90: invokeinterface #9,  2            // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      95: return
    Exception table:
       from    to  target type
          37    55    58   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field done:Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #17                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      11: return
      12: aload_0
      13: iconst_1
      14: putfield      #7                  // Field done:Z
      17: aload_0
      18: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      21: aload_1
      22: invokeinterface #18,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      27: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #7                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #7                  // Field done:Z
      13: aload_0
      14: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      17: invokeinterface #19,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      22: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #20,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: invokeinterface #15,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return
}
