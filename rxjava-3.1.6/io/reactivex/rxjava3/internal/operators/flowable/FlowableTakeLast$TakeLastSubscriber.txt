Compiled from "FlowableTakeLast.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber<T> extends java.util.ArrayDeque<T> implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super T> downstream;

  final int count;

  org.reactivestreams.Subscription upstream;

  volatile boolean done;

  volatile boolean cancelled;

  final java.util.concurrent.atomic.AtomicLong requested;

  final java.util.concurrent.atomic.AtomicInteger wip;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber(org.reactivestreams.Subscriber<? super T>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/ArrayDeque."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #4                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicInteger
      19: dup
      20: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      23: putfield      #7                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
      26: aload_0
      27: aload_1
      28: putfield      #8                  // Field downstream:Lorg/reactivestreams/Subscriber;
      31: aload_0
      32: iload_2
      33: putfield      #9                  // Field count:I
      36: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #11                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          35
      11: aload_0
      12: aload_1
      13: putfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #8                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #12,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_1
      27: ldc2_w        #14                 // long 9223372036854775807l
      30: invokeinterface #16,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      35: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #9                  // Field count:I
       4: aload_0
       5: invokevirtual #17                 // Method size:()I
       8: if_icmpne     16
      11: aload_0
      12: invokevirtual #18                 // Method poll:()Ljava/lang/Object;
      15: pop
      16: aload_0
      17: aload_1
      18: invokevirtual #19                 // Method offer:(Ljava/lang/Object;)Z
      21: pop
      22: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #21                 // Field done:Z
       5: aload_0
       6: invokevirtual #22                 // Method drain:()V
       9: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #23                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          20
       7: aload_0
       8: getfield      #4                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      11: lload_1
      12: invokestatic  #24                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      15: pop2
      16: aload_0
      17: invokevirtual #22                 // Method drain:()V
      20: return

  public void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #25                 // Field cancelled:Z
       5: aload_0
       6: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
       9: invokeinterface #26,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      14: return

  void drain();
    Code:
       0: aload_0
       1: getfield      #7                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: ifne          132
      10: aload_0
      11: getfield      #8                  // Field downstream:Lorg/reactivestreams/Subscriber;
      14: astore_1
      15: aload_0
      16: getfield      #4                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      19: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      22: lstore_2
      23: aload_0
      24: getfield      #25                 // Field cancelled:Z
      27: ifeq          31
      30: return
      31: aload_0
      32: getfield      #21                 // Field done:Z
      35: ifeq          122
      38: lconst_0
      39: lstore        4
      41: lload         4
      43: lload_2
      44: lcmp
      45: ifeq          91
      48: aload_0
      49: getfield      #25                 // Field cancelled:Z
      52: ifeq          56
      55: return
      56: aload_0
      57: invokevirtual #18                 // Method poll:()Ljava/lang/Object;
      60: astore        6
      62: aload         6
      64: ifnonnull     74
      67: aload_1
      68: invokeinterface #29,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      73: return
      74: aload_1
      75: aload         6
      77: invokeinterface #30,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      82: lload         4
      84: lconst_1
      85: ladd
      86: lstore        4
      88: goto          41
      91: aload_0
      92: invokevirtual #31                 // Method isEmpty:()Z
      95: ifeq          105
      98: aload_1
      99: invokeinterface #29,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     104: return
     105: lload         4
     107: lconst_0
     108: lcmp
     109: ifeq          122
     112: aload_0
     113: getfield      #4                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     116: lload         4
     118: invokestatic  #32                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.produced:(Ljava/util/concurrent/atomic/AtomicLong;J)J
     121: lstore_2
     122: aload_0
     123: getfield      #7                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
     126: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     129: ifne          23
     132: return
}
