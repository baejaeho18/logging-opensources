Compiled from "FlowableReduceMaybe.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber<T> implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, io.reactivex.rxjava3.disposables.Disposable {
  final io.reactivex.rxjava3.core.MaybeObserver<? super T> downstream;

  final io.reactivex.rxjava3.functions.BiFunction<T, T, T> reducer;

  T value;

  org.reactivestreams.Subscription upstream;

  boolean done;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber(io.reactivex.rxjava3.core.MaybeObserver<? super T>, io.reactivex.rxjava3.functions.BiFunction<T, T, T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field reducer:Lio/reactivex/rxjava3/functions/BiFunction;
      14: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: invokeinterface #5,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: aload_0
      10: iconst_1
      11: putfield      #6                  // Field done:Z
      14: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Z
       4: ireturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #7                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          35
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      20: aload_0
      21: invokeinterface #8,  2            // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      26: aload_1
      27: ldc2_w        #10                 // long 9223372036854775807l
      30: invokeinterface #12,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      35: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #13                 // Field value:Ljava/lang/Object;
      12: astore_2
      13: aload_2
      14: ifnonnull     25
      17: aload_0
      18: aload_1
      19: putfield      #13                 // Field value:Ljava/lang/Object;
      22: goto          67
      25: aload_0
      26: aload_0
      27: getfield      #3                  // Field reducer:Lio/reactivex/rxjava3/functions/BiFunction;
      30: aload_2
      31: aload_1
      32: invokeinterface #14,  3           // InterfaceMethod io/reactivex/rxjava3/functions/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: ldc           #15                 // String The reducer returned a null value
      39: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      42: putfield      #13                 // Field value:Ljava/lang/Object;
      45: goto          67
      48: astore_3
      49: aload_3
      50: invokestatic  #18                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      53: aload_0
      54: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
      57: invokeinterface #5,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      62: aload_0
      63: aload_3
      64: invokevirtual #19                 // Method onError:(Ljava/lang/Throwable;)V
      67: return
    Exception table:
       from    to  target type
          25    45    48   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #20                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      11: return
      12: aload_0
      13: iconst_1
      14: putfield      #6                  // Field done:Z
      17: aload_0
      18: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      21: aload_1
      22: invokeinterface #21,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      27: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #6                  // Field done:Z
      13: aload_0
      14: getfield      #13                 // Field value:Ljava/lang/Object;
      17: astore_1
      18: aload_1
      19: ifnull        35
      22: aload_0
      23: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      26: aload_1
      27: invokeinterface #22,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSuccess:(Ljava/lang/Object;)V
      32: goto          44
      35: aload_0
      36: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      39: invokeinterface #23,  1           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onComplete:()V
      44: return
}
