Compiled from "FlowableConcatMap.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed<T, R> extends io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber<T, R> {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super R> downstream;

  final boolean veryEnd;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed(org.reactivestreams.Subscriber<? super R>, io.reactivex.rxjava3.functions.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>>, int, boolean);
    Code:
       0: aload_0
       1: aload_2
       2: iload_3
       3: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$BaseConcatMapSubscriber."<init>":(Lio/reactivex/rxjava3/functions/Function;I)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      11: aload_0
      12: iload         4
      14: putfield      #3                  // Field veryEnd:Z
      17: return

  void subscribeActual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: aload_0
       5: invokeinterface #4,  2            // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       4: aload_1
       5: invokevirtual #6                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
       8: ifeq          20
      11: aload_0
      12: iconst_1
      13: putfield      #7                  // Field done:Z
      16: aload_0
      17: invokevirtual #8                  // Method drain:()V
      20: return

  public void innerNext(R);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      10: return

  public void innerError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       4: aload_1
       5: invokevirtual #6                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
       8: ifeq          41
      11: aload_0
      12: getfield      #3                  // Field veryEnd:Z
      15: ifne          32
      18: aload_0
      19: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
      22: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      27: aload_0
      28: iconst_1
      29: putfield      #7                  // Field done:Z
      32: aload_0
      33: iconst_0
      34: putfield      #12                 // Field active:Z
      37: aload_0
      38: invokevirtual #8                  // Method drain:()V
      41: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #13                 // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
       4: lload_1
       5: invokevirtual #14                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner.request:(J)V
       8: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #15                 // Field cancelled:Z
       4: ifne          35
       7: aload_0
       8: iconst_1
       9: putfield      #15                 // Field cancelled:Z
      12: aload_0
      13: getfield      #13                 // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
      16: invokevirtual #16                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner.cancel:()V
      19: aload_0
      20: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
      23: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      28: aload_0
      29: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      32: invokevirtual #17                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      35: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getAndIncrement:()I
       4: ifne          420
       7: aload_0
       8: getfield      #15                 // Field cancelled:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: getfield      #12                 // Field active:Z
      19: ifne          410
      22: aload_0
      23: getfield      #7                  // Field done:Z
      26: istore_1
      27: iload_1
      28: ifeq          65
      31: aload_0
      32: getfield      #3                  // Field veryEnd:Z
      35: ifne          65
      38: aload_0
      39: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      42: invokevirtual #19                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
      45: checkcast     #20                 // class java/lang/Throwable
      48: astore_2
      49: aload_2
      50: ifnull        65
      53: aload_0
      54: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      57: aload_0
      58: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      61: invokevirtual #21                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
      64: return
      65: aload_0
      66: getfield      #22                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      69: invokeinterface #23,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.poll:()Ljava/lang/Object;
      74: astore_2
      75: goto          113
      78: astore_3
      79: aload_3
      80: invokestatic  #24                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      83: aload_0
      84: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
      87: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      92: aload_0
      93: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      96: aload_3
      97: invokevirtual #6                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     100: pop
     101: aload_0
     102: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     105: aload_0
     106: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     109: invokevirtual #21                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     112: return
     113: aload_2
     114: ifnonnull     121
     117: iconst_1
     118: goto          122
     121: iconst_0
     122: istore_3
     123: iload_1
     124: ifeq          143
     127: iload_3
     128: ifeq          143
     131: aload_0
     132: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     135: aload_0
     136: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     139: invokevirtual #21                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     142: return
     143: iload_3
     144: ifne          410
     147: aload_0
     148: getfield      #25                 // Field mapper:Lio/reactivex/rxjava3/functions/Function;
     151: aload_2
     152: invokeinterface #26,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     157: ldc           #27                 // String The mapper returned a null Publisher
     159: invokestatic  #28                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     162: checkcast     #29                 // class org/reactivestreams/Publisher
     165: astore        4
     167: goto          208
     170: astore        5
     172: aload         5
     174: invokestatic  #24                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     177: aload_0
     178: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
     181: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     186: aload_0
     187: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     190: aload         5
     192: invokevirtual #6                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     195: pop
     196: aload_0
     197: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     200: aload_0
     201: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     204: invokevirtual #21                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     207: return
     208: aload_0
     209: getfield      #30                 // Field sourceMode:I
     212: iconst_1
     213: if_icmpeq     259
     216: aload_0
     217: getfield      #32                 // Field consumed:I
     220: iconst_1
     221: iadd
     222: istore        5
     224: iload         5
     226: aload_0
     227: getfield      #33                 // Field limit:I
     230: if_icmpne     253
     233: aload_0
     234: iconst_0
     235: putfield      #32                 // Field consumed:I
     238: aload_0
     239: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
     242: iload         5
     244: i2l
     245: invokeinterface #34,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     250: goto          259
     253: aload_0
     254: iload         5
     256: putfield      #32                 // Field consumed:I
     259: aload         4
     261: instanceof    #35                 // class io/reactivex/rxjava3/functions/Supplier
     264: ifeq          394
     267: aload         4
     269: checkcast     #35                 // class io/reactivex/rxjava3/functions/Supplier
     272: astore        5
     274: aload         5
     276: invokeinterface #36,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
     281: astore        6
     283: goto          334
     286: astore        7
     288: aload         7
     290: invokestatic  #24                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     293: aload_0
     294: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     297: aload         7
     299: invokevirtual #6                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     302: pop
     303: aload_0
     304: getfield      #3                  // Field veryEnd:Z
     307: ifne          331
     310: aload_0
     311: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
     314: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     319: aload_0
     320: getfield      #5                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     323: aload_0
     324: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     327: invokevirtual #21                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     330: return
     331: aconst_null
     332: astore        6
     334: aload         6
     336: ifnonnull     342
     339: goto          7
     342: aload_0
     343: getfield      #13                 // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
     346: invokevirtual #37                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner.isUnbounded:()Z
     349: ifeq          366
     352: aload_0
     353: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     356: aload         6
     358: invokeinterface #9,  2            // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     363: goto          7
     366: aload_0
     367: iconst_1
     368: putfield      #12                 // Field active:Z
     371: aload_0
     372: getfield      #13                 // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
     375: new           #38                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$SimpleScalarSubscription
     378: dup
     379: aload         6
     381: aload_0
     382: getfield      #13                 // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
     385: invokespecial #39                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$SimpleScalarSubscription."<init>":(Ljava/lang/Object;Lorg/reactivestreams/Subscriber;)V
     388: invokevirtual #40                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner.setSubscription:(Lorg/reactivestreams/Subscription;)V
     391: goto          410
     394: aload_0
     395: iconst_1
     396: putfield      #12                 // Field active:Z
     399: aload         4
     401: aload_0
     402: getfield      #13                 // Field inner:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMap$ConcatMapInner;
     405: invokeinterface #41,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     410: aload_0
     411: invokevirtual #42                 // Method decrementAndGet:()I
     414: ifne          7
     417: goto          420
     420: return
    Exception table:
       from    to  target type
          65    75    78   Class java/lang/Throwable
         147   167   170   Class java/lang/Throwable
         274   283   286   Class java/lang/Throwable
}
