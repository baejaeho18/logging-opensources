Compiled from "FlowableFlatMapCompletableCompletable.java"
public final class io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable<T> extends io.reactivex.rxjava3.core.Completable implements io.reactivex.rxjava3.internal.fuseable.FuseToFlowable<T> {
  final io.reactivex.rxjava3.core.Flowable<T> source;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.CompletableSource> mapper;

  final int maxConcurrency;

  final boolean delayErrors;

  public io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapCompletableCompletable(io.reactivex.rxjava3.core.Flowable<T>, io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.CompletableSource>, boolean, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/core/Completable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lio/reactivex/rxjava3/core/Flowable;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field delayErrors:Z
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field maxConcurrency:I
      25: return

  protected void subscribeActual(io.reactivex.rxjava3.core.CompletableObserver);
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lio/reactivex/rxjava3/core/Flowable;
       4: new           #6                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      13: aload_0
      14: getfield      #4                  // Field delayErrors:Z
      17: aload_0
      18: getfield      #5                  // Field maxConcurrency:I
      21: invokespecial #7                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber."<init>":(Lio/reactivex/rxjava3/core/CompletableObserver;Lio/reactivex/rxjava3/functions/Function;ZI)V
      24: invokevirtual #8                  // Method io/reactivex/rxjava3/core/Flowable.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V
      27: return

  public io.reactivex.rxjava3.core.Flowable<T> fuseToFlowable();
    Code:
       0: new           #9                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletable
       3: dup
       4: aload_0
       5: getfield      #2                  // Field source:Lio/reactivex/rxjava3/core/Flowable;
       8: aload_0
       9: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      12: aload_0
      13: getfield      #4                  // Field delayErrors:Z
      16: aload_0
      17: getfield      #5                  // Field maxConcurrency:I
      20: invokespecial #10                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapCompletable."<init>":(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Function;ZI)V
      23: invokestatic  #11                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;
      26: areturn
}
