Compiled from "FlowableBuffer.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber<T, C extends java.util.Collection<? super T>> implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription {
  final org.reactivestreams.Subscriber<? super C> downstream;

  final io.reactivex.rxjava3.functions.Supplier<C> bufferSupplier;

  final int size;

  C buffer;

  org.reactivestreams.Subscription upstream;

  boolean done;

  int index;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber(org.reactivestreams.Subscriber<? super C>, int, io.reactivex.rxjava3.functions.Supplier<C>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field size:I
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field bufferSupplier:Lio/reactivex/rxjava3/functions/Supplier;
      19: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #5                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          25
       7: aload_0
       8: getfield      #6                  // Field upstream:Lorg/reactivestreams/Subscription;
      11: lload_1
      12: aload_0
      13: getfield      #3                  // Field size:I
      16: i2l
      17: invokestatic  #7                  // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.multiplyCap:(JJ)J
      20: invokeinterface #8,  3            // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      25: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: invokeinterface #9,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #6                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #10                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #11,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #12                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #13                 // Field buffer:Ljava/util/Collection;
      12: astore_2
      13: aload_2
      14: ifnonnull     58
      17: aload_0
      18: getfield      #4                  // Field bufferSupplier:Lio/reactivex/rxjava3/functions/Supplier;
      21: invokeinterface #14,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
      26: ldc           #15                 // String The bufferSupplier returned a null buffer
      28: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      31: checkcast     #17                 // class java/util/Collection
      34: astore_2
      35: goto          53
      38: astore_3
      39: aload_3
      40: invokestatic  #19                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      43: aload_0
      44: invokevirtual #20                 // Method cancel:()V
      47: aload_0
      48: aload_3
      49: invokevirtual #21                 // Method onError:(Ljava/lang/Throwable;)V
      52: return
      53: aload_0
      54: aload_2
      55: putfield      #13                 // Field buffer:Ljava/util/Collection;
      58: aload_2
      59: aload_1
      60: invokeinterface #22,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      65: pop
      66: aload_0
      67: getfield      #23                 // Field index:I
      70: iconst_1
      71: iadd
      72: istore_3
      73: iload_3
      74: aload_0
      75: getfield      #3                  // Field size:I
      78: if_icmpne     104
      81: aload_0
      82: iconst_0
      83: putfield      #23                 // Field index:I
      86: aload_0
      87: aconst_null
      88: putfield      #13                 // Field buffer:Ljava/util/Collection;
      91: aload_0
      92: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      95: aload_2
      96: invokeinterface #24,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     101: goto          109
     104: aload_0
     105: iload_3
     106: putfield      #23                 // Field index:I
     109: return
    Exception table:
       from    to  target type
          17    35    38   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #12                 // Field done:Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #25                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      11: return
      12: aload_0
      13: aconst_null
      14: putfield      #13                 // Field buffer:Ljava/util/Collection;
      17: aload_0
      18: iconst_1
      19: putfield      #12                 // Field done:Z
      22: aload_0
      23: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      26: aload_1
      27: invokeinterface #26,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      32: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #12                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #12                 // Field done:Z
      13: aload_0
      14: getfield      #13                 // Field buffer:Ljava/util/Collection;
      17: astore_1
      18: aload_0
      19: aconst_null
      20: putfield      #13                 // Field buffer:Ljava/util/Collection;
      23: aload_1
      24: ifnull        37
      27: aload_0
      28: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      31: aload_1
      32: invokeinterface #24,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      37: aload_0
      38: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      41: invokeinterface #27,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      46: return
}
