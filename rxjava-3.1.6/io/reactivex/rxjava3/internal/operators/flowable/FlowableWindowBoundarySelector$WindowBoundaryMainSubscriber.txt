Compiled from "FlowableWindowBoundarySelector.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber<T, B, V> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription, java.lang.Runnable {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super io.reactivex.rxjava3.core.Flowable<T>> downstream;

  final org.reactivestreams.Publisher<B> open;

  final io.reactivex.rxjava3.functions.Function<? super B, ? extends org.reactivestreams.Publisher<V>> closingIndicator;

  final int bufferSize;

  final io.reactivex.rxjava3.disposables.CompositeDisposable resources;

  final io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber<B> startSubscriber;

  final java.util.List<io.reactivex.rxjava3.processors.UnicastProcessor<T>> windows;

  final io.reactivex.rxjava3.operators.SimplePlainQueue<java.lang.Object> queue;

  final java.util.concurrent.atomic.AtomicLong windowCount;

  final java.util.concurrent.atomic.AtomicBoolean downstreamCancelled;

  final java.util.concurrent.atomic.AtomicLong requested;

  long emitted;

  volatile boolean upstreamCanceled;

  volatile boolean upstreamDone;

  volatile boolean openDone;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable error;

  org.reactivestreams.Subscription upstream;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber(org.reactivestreams.Subscriber<? super io.reactivex.rxjava3.core.Flowable<T>>, org.reactivestreams.Publisher<B>, io.reactivex.rxjava3.functions.Function<? super B, ? extends org.reactivestreams.Publisher<V>>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: new           #3                  // class io/reactivex/rxjava3/internal/queue/MpscLinkedQueue
      13: dup
      14: invokespecial #4                  // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue."<init>":()V
      17: putfield      #5                  // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field open:Lorg/reactivestreams/Publisher;
      25: aload_0
      26: aload_3
      27: putfield      #7                  // Field closingIndicator:Lio/reactivex/rxjava3/functions/Function;
      30: aload_0
      31: iload         4
      33: putfield      #8                  // Field bufferSize:I
      36: aload_0
      37: new           #9                  // class io/reactivex/rxjava3/disposables/CompositeDisposable
      40: dup
      41: invokespecial #10                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable."<init>":()V
      44: putfield      #11                 // Field resources:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      47: aload_0
      48: new           #12                 // class java/util/ArrayList
      51: dup
      52: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      55: putfield      #14                 // Field windows:Ljava/util/List;
      58: aload_0
      59: new           #15                 // class java/util/concurrent/atomic/AtomicLong
      62: dup
      63: lconst_1
      64: invokespecial #16                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      67: putfield      #17                 // Field windowCount:Ljava/util/concurrent/atomic/AtomicLong;
      70: aload_0
      71: new           #18                 // class java/util/concurrent/atomic/AtomicBoolean
      74: dup
      75: invokespecial #19                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      78: putfield      #20                 // Field downstreamCancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
      81: aload_0
      82: new           #21                 // class io/reactivex/rxjava3/internal/util/AtomicThrowable
      85: dup
      86: invokespecial #22                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      89: putfield      #23                 // Field error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      92: aload_0
      93: new           #24                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber
      96: dup
      97: aload_0
      98: invokespecial #25                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber;)V
     101: putfield      #26                 // Field startSubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber;
     104: aload_0
     105: new           #15                 // class java/util/concurrent/atomic/AtomicLong
     108: dup
     109: invokespecial #27                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
     112: putfield      #28                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     115: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #29                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #30                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          48
      11: aload_0
      12: aload_1
      13: putfield      #29                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #31,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_0
      27: getfield      #6                  // Field open:Lorg/reactivestreams/Publisher;
      30: aload_0
      31: getfield      #26                 // Field startSubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber;
      34: invokeinterface #32,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      39: aload_1
      40: ldc2_w        #34                 // long 9223372036854775807l
      43: invokeinterface #36,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      48: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #5                  // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
       4: aload_1
       5: invokeinterface #37,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokevirtual #38                 // Method drain:()V
      15: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #26                 // Field startSubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber;
       4: invokevirtual #39                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber.cancel:()V
       7: aload_0
       8: getfield      #11                 // Field resources:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      11: invokevirtual #40                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      14: aload_0
      15: getfield      #23                 // Field error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      18: aload_1
      19: invokevirtual #41                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      22: ifeq          34
      25: aload_0
      26: iconst_1
      27: putfield      #42                 // Field upstreamDone:Z
      30: aload_0
      31: invokevirtual #38                 // Method drain:()V
      34: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #26                 // Field startSubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber;
       4: invokevirtual #39                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber.cancel:()V
       7: aload_0
       8: getfield      #11                 // Field resources:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      11: invokevirtual #40                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      14: aload_0
      15: iconst_1
      16: putfield      #42                 // Field upstreamDone:Z
      19: aload_0
      20: invokevirtual #38                 // Method drain:()V
      23: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #43                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          16
       7: aload_0
       8: getfield      #28                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      11: lload_1
      12: invokestatic  #44                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      15: pop2
      16: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #20                 // Field downstreamCancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          73
      12: aload_0
      13: getfield      #17                 // Field windowCount:Ljava/util/concurrent/atomic/AtomicLong;
      16: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
      19: lconst_0
      20: lcmp
      21: ifne          66
      24: aload_0
      25: getfield      #29                 // Field upstream:Lorg/reactivestreams/Subscription;
      28: invokeinterface #47,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      33: aload_0
      34: getfield      #26                 // Field startSubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber;
      37: invokevirtual #39                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber.cancel:()V
      40: aload_0
      41: getfield      #11                 // Field resources:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      44: invokevirtual #40                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      47: aload_0
      48: getfield      #23                 // Field error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      51: invokevirtual #48                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      54: aload_0
      55: iconst_1
      56: putfield      #49                 // Field upstreamCanceled:Z
      59: aload_0
      60: invokevirtual #38                 // Method drain:()V
      63: goto          73
      66: aload_0
      67: getfield      #26                 // Field startSubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber;
      70: invokevirtual #39                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber.cancel:()V
      73: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #17                 // Field windowCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
       7: lconst_0
       8: lcmp
       9: ifne          51
      12: aload_0
      13: getfield      #29                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: invokeinterface #47,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      21: aload_0
      22: getfield      #26                 // Field startSubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber;
      25: invokevirtual #39                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber.cancel:()V
      28: aload_0
      29: getfield      #11                 // Field resources:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      32: invokevirtual #40                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      35: aload_0
      36: getfield      #23                 // Field error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      39: invokevirtual #48                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      42: aload_0
      43: iconst_1
      44: putfield      #49                 // Field upstreamCanceled:Z
      47: aload_0
      48: invokevirtual #38                 // Method drain:()V
      51: return

  void open(B);
    Code:
       0: aload_0
       1: getfield      #5                  // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
       4: new           #50                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartItem
       7: dup
       8: aload_1
       9: invokespecial #51                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartItem."<init>":(Ljava/lang/Object;)V
      12: invokeinterface #37,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      17: pop
      18: aload_0
      19: invokevirtual #38                 // Method drain:()V
      22: return

  void openError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #29                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: invokeinterface #47,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: aload_0
      10: getfield      #11                 // Field resources:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      13: invokevirtual #40                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      16: aload_0
      17: getfield      #23                 // Field error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      20: aload_1
      21: invokevirtual #41                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      24: ifeq          36
      27: aload_0
      28: iconst_1
      29: putfield      #42                 // Field upstreamDone:Z
      32: aload_0
      33: invokevirtual #38                 // Method drain:()V
      36: return

  void openComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #52                 // Field openDone:Z
       5: aload_0
       6: invokevirtual #38                 // Method drain:()V
       9: return

  void close(io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowEndSubscriberIntercept<T, V>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
       4: aload_1
       5: invokeinterface #37,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokevirtual #38                 // Method drain:()V
      15: return

  void closeError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #29                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: invokeinterface #47,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: aload_0
      10: getfield      #26                 // Field startSubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber;
      13: invokevirtual #39                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber.cancel:()V
      16: aload_0
      17: getfield      #11                 // Field resources:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      20: invokevirtual #40                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      23: aload_0
      24: getfield      #23                 // Field error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      27: aload_1
      28: invokevirtual #41                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      31: ifeq          43
      34: aload_0
      35: iconst_1
      36: putfield      #42                 // Field upstreamDone:Z
      39: aload_0
      40: invokevirtual #38                 // Method drain:()V
      43: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: iconst_1
       9: istore_1
      10: aload_0
      11: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      14: astore_2
      15: aload_0
      16: getfield      #5                  // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      19: astore_3
      20: aload_0
      21: getfield      #14                 // Field windows:Ljava/util/List;
      24: astore        4
      26: aload_0
      27: getfield      #49                 // Field upstreamCanceled:Z
      30: ifeq          49
      33: aload_3
      34: invokeinterface #54,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.clear:()V
      39: aload         4
      41: invokeinterface #55,  1           // InterfaceMethod java/util/List.clear:()V
      46: goto          528
      49: aload_0
      50: getfield      #42                 // Field upstreamDone:Z
      53: istore        5
      55: aload_3
      56: invokeinterface #56,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.poll:()Ljava/lang/Object;
      61: astore        6
      63: aload         6
      65: ifnonnull     72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: istore        7
      75: iload         5
      77: ifeq          108
      80: iload         7
      82: ifne          95
      85: aload_0
      86: getfield      #23                 // Field error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      89: invokevirtual #57                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
      92: ifnull        108
      95: aload_0
      96: aload_2
      97: invokevirtual #58                 // Method terminateDownstream:(Lorg/reactivestreams/Subscriber;)V
     100: aload_0
     101: iconst_1
     102: putfield      #49                 // Field upstreamCanceled:Z
     105: goto          26
     108: iload         7
     110: ifne          475
     113: aload         6
     115: instanceof    #50                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartItem
     118: ifeq          378
     121: aload_0
     122: getfield      #20                 // Field downstreamCancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
     125: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     128: ifne          26
     131: aload_0
     132: getfield      #60                 // Field emitted:J
     135: lstore        8
     137: aload_0
     138: getfield      #28                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     141: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     144: lload         8
     146: lcmp
     147: ifeq          334
     150: aload_0
     151: lload         8
     153: lconst_1
     154: ladd
     155: dup2
     156: lstore        8
     158: putfield      #60                 // Field emitted:J
     161: aload         6
     163: checkcast     #50                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartItem
     166: getfield      #62                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartItem.item:Ljava/lang/Object;
     169: astore        10
     171: aload_0
     172: getfield      #7                  // Field closingIndicator:Lio/reactivex/rxjava3/functions/Function;
     175: aload         10
     177: invokeinterface #63,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     182: ldc           #64                 // String The closingIndicator returned a null Publisher
     184: invokestatic  #65                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     187: checkcast     #66                 // class org/reactivestreams/Publisher
     190: astore        11
     192: goto          248
     195: astore        12
     197: aload         12
     199: invokestatic  #68                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     202: aload_0
     203: getfield      #29                 // Field upstream:Lorg/reactivestreams/Subscription;
     206: invokeinterface #47,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     211: aload_0
     212: getfield      #26                 // Field startSubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber;
     215: invokevirtual #39                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber.cancel:()V
     218: aload_0
     219: getfield      #11                 // Field resources:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
     222: invokevirtual #40                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
     225: aload         12
     227: invokestatic  #68                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     230: aload_0
     231: getfield      #23                 // Field error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     234: aload         12
     236: invokevirtual #41                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     239: pop
     240: aload_0
     241: iconst_1
     242: putfield      #42                 // Field upstreamDone:Z
     245: goto          26
     248: aload_0
     249: getfield      #17                 // Field windowCount:Ljava/util/concurrent/atomic/AtomicLong;
     252: invokevirtual #69                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
     255: pop2
     256: aload_0
     257: getfield      #8                  // Field bufferSize:I
     260: aload_0
     261: invokestatic  #70                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/processors/UnicastProcessor;
     264: astore        12
     266: new           #71                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowEndSubscriberIntercept
     269: dup
     270: aload_0
     271: aload         12
     273: invokespecial #72                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowEndSubscriberIntercept."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber;Lio/reactivex/rxjava3/processors/UnicastProcessor;)V
     276: astore        13
     278: aload_2
     279: aload         13
     281: invokeinterface #73,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     286: aload         13
     288: invokevirtual #74                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowEndSubscriberIntercept.tryAbandon:()Z
     291: ifeq          302
     294: aload         12
     296: invokevirtual #75                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onComplete:()V
     299: goto          331
     302: aload         4
     304: aload         12
     306: invokeinterface #76,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     311: pop
     312: aload_0
     313: getfield      #11                 // Field resources:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
     316: aload         13
     318: invokevirtual #77                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
     321: pop
     322: aload         11
     324: aload         13
     326: invokeinterface #32,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     331: goto          375
     334: aload_0
     335: getfield      #29                 // Field upstream:Lorg/reactivestreams/Subscription;
     338: invokeinterface #47,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     343: aload_0
     344: getfield      #26                 // Field startSubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber;
     347: invokevirtual #39                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber.cancel:()V
     350: aload_0
     351: getfield      #11                 // Field resources:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
     354: invokevirtual #40                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
     357: aload_0
     358: getfield      #23                 // Field error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     361: lload         8
     363: invokestatic  #78                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed.missingBackpressureMessage:(J)Lio/reactivex/rxjava3/exceptions/MissingBackpressureException;
     366: invokevirtual #41                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     369: pop
     370: aload_0
     371: iconst_1
     372: putfield      #42                 // Field upstreamDone:Z
     375: goto          26
     378: aload         6
     380: instanceof    #71                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowEndSubscriberIntercept
     383: ifeq          427
     386: aload         6
     388: checkcast     #71                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowEndSubscriberIntercept
     391: getfield      #79                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowEndSubscriberIntercept.window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
     394: astore        8
     396: aload         4
     398: aload         8
     400: invokeinterface #80,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     405: pop
     406: aload_0
     407: getfield      #11                 // Field resources:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
     410: aload         6
     412: checkcast     #81                 // class io/reactivex/rxjava3/disposables/Disposable
     415: invokevirtual #82                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
     418: pop
     419: aload         8
     421: invokevirtual #75                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onComplete:()V
     424: goto          26
     427: aload         6
     429: astore        8
     431: aload         4
     433: invokeinterface #83,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     438: astore        9
     440: aload         9
     442: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     447: ifeq          472
     450: aload         9
     452: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     457: checkcast     #86                 // class io/reactivex/rxjava3/processors/UnicastProcessor
     460: astore        10
     462: aload         10
     464: aload         8
     466: invokevirtual #87                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onNext:(Ljava/lang/Object;)V
     469: goto          440
     472: goto          26
     475: aload_0
     476: getfield      #52                 // Field openDone:Z
     479: ifeq          528
     482: aload         4
     484: invokeinterface #88,  1           // InterfaceMethod java/util/List.size:()I
     489: ifne          528
     492: aload_0
     493: getfield      #29                 // Field upstream:Lorg/reactivestreams/Subscription;
     496: invokeinterface #47,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     501: aload_0
     502: getfield      #26                 // Field startSubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber;
     505: invokevirtual #39                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber$WindowStartSubscriber.cancel:()V
     508: aload_0
     509: getfield      #11                 // Field resources:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
     512: invokevirtual #40                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
     515: aload_0
     516: aload_2
     517: invokevirtual #58                 // Method terminateDownstream:(Lorg/reactivestreams/Subscriber;)V
     520: aload_0
     521: iconst_1
     522: putfield      #49                 // Field upstreamCanceled:Z
     525: goto          26
     528: aload_0
     529: iload_1
     530: ineg
     531: invokevirtual #89                 // Method addAndGet:(I)I
     534: istore_1
     535: iload_1
     536: ifne          26
     539: goto          542
     542: return
    Exception table:
       from    to  target type
         171   192   195   Class java/lang/Throwable

  void terminateDownstream(org.reactivestreams.Subscriber<?>);
    Code:
       0: aload_0
       1: getfield      #23                 // Field error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       4: invokevirtual #90                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.terminate:()Ljava/lang/Throwable;
       7: astore_2
       8: aload_2
       9: ifnonnull     59
      12: aload_0
      13: getfield      #14                 // Field windows:Ljava/util/List;
      16: invokeinterface #83,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      21: astore_3
      22: aload_3
      23: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          50
      31: aload_3
      32: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #86                 // class io/reactivex/rxjava3/processors/UnicastProcessor
      40: astore        4
      42: aload         4
      44: invokevirtual #75                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onComplete:()V
      47: goto          22
      50: aload_1
      51: invokeinterface #91,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      56: goto          112
      59: aload_2
      60: getstatic     #92                 // Field io/reactivex/rxjava3/internal/util/ExceptionHelper.TERMINATED:Ljava/lang/Throwable;
      63: if_acmpeq     112
      66: aload_0
      67: getfield      #14                 // Field windows:Ljava/util/List;
      70: invokeinterface #83,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      75: astore_3
      76: aload_3
      77: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      82: ifeq          105
      85: aload_3
      86: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #86                 // class io/reactivex/rxjava3/processors/UnicastProcessor
      94: astore        4
      96: aload         4
      98: aload_2
      99: invokevirtual #93                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onError:(Ljava/lang/Throwable;)V
     102: goto          76
     105: aload_1
     106: aload_2
     107: invokeinterface #94,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     112: return
}
