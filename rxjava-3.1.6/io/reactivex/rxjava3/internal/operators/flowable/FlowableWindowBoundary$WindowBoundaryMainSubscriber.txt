Compiled from "FlowableWindowBoundary.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber<T, B> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription, java.lang.Runnable {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super io.reactivex.rxjava3.core.Flowable<T>> downstream;

  final int capacityHint;

  final io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryInnerSubscriber<T, B> boundarySubscriber;

  final java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> upstream;

  final java.util.concurrent.atomic.AtomicInteger windows;

  final io.reactivex.rxjava3.internal.queue.MpscLinkedQueue<java.lang.Object> queue;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable errors;

  final java.util.concurrent.atomic.AtomicBoolean stopWindows;

  final java.util.concurrent.atomic.AtomicLong requested;

  static final java.lang.Object NEXT_WINDOW;

  volatile boolean done;

  io.reactivex.rxjava3.processors.UnicastProcessor<T> window;

  long emitted;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber(org.reactivestreams.Subscriber<? super io.reactivex.rxjava3.core.Flowable<T>>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field capacityHint:I
      14: aload_0
      15: new           #4                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryInnerSubscriber
      18: dup
      19: aload_0
      20: invokespecial #5                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryInnerSubscriber."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryMainSubscriber;)V
      23: putfield      #6                  // Field boundarySubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryInnerSubscriber;
      26: aload_0
      27: new           #7                  // class java/util/concurrent/atomic/AtomicReference
      30: dup
      31: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      34: putfield      #9                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      37: aload_0
      38: new           #10                 // class java/util/concurrent/atomic/AtomicInteger
      41: dup
      42: iconst_1
      43: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      46: putfield      #12                 // Field windows:Ljava/util/concurrent/atomic/AtomicInteger;
      49: aload_0
      50: new           #13                 // class io/reactivex/rxjava3/internal/queue/MpscLinkedQueue
      53: dup
      54: invokespecial #14                 // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue."<init>":()V
      57: putfield      #15                 // Field queue:Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;
      60: aload_0
      61: new           #16                 // class io/reactivex/rxjava3/internal/util/AtomicThrowable
      64: dup
      65: invokespecial #17                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      68: putfield      #18                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      71: aload_0
      72: new           #19                 // class java/util/concurrent/atomic/AtomicBoolean
      75: dup
      76: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      79: putfield      #21                 // Field stopWindows:Ljava/util/concurrent/atomic/AtomicBoolean;
      82: aload_0
      83: new           #22                 // class java/util/concurrent/atomic/AtomicLong
      86: dup
      87: invokespecial #23                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      90: putfield      #24                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      93: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #9                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: ldc2_w        #26                 // long 9223372036854775807l
       8: invokestatic  #28                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;J)Z
      11: pop
      12: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #15                 // Field queue:Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;
       4: aload_1
       5: invokevirtual #29                 // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue.offer:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: invokevirtual #30                 // Method drain:()V
      13: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field boundarySubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryInnerSubscriber;
       4: invokevirtual #31                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryInnerSubscriber.dispose:()V
       7: aload_0
       8: getfield      #18                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      11: aload_1
      12: invokevirtual #32                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      15: ifeq          27
      18: aload_0
      19: iconst_1
      20: putfield      #33                 // Field done:Z
      23: aload_0
      24: invokevirtual #30                 // Method drain:()V
      27: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field boundarySubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryInnerSubscriber;
       4: invokevirtual #31                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryInnerSubscriber.dispose:()V
       7: aload_0
       8: iconst_1
       9: putfield      #33                 // Field done:Z
      12: aload_0
      13: invokevirtual #30                 // Method drain:()V
      16: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #21                 // Field stopWindows:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          37
      12: aload_0
      13: getfield      #6                  // Field boundarySubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryInnerSubscriber;
      16: invokevirtual #31                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryInnerSubscriber.dispose:()V
      19: aload_0
      20: getfield      #12                 // Field windows:Ljava/util/concurrent/atomic/AtomicInteger;
      23: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      26: ifne          37
      29: aload_0
      30: getfield      #9                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      33: invokestatic  #36                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      36: pop
      37: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #24                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
       4: lload_1
       5: invokestatic  #37                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
       8: pop2
       9: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #12                 // Field windows:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: ifne          18
      10: aload_0
      11: getfield      #9                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      14: invokestatic  #36                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      17: pop
      18: return

  void innerNext();
    Code:
       0: aload_0
       1: getfield      #15                 // Field queue:Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;
       4: getstatic     #38                 // Field NEXT_WINDOW:Ljava/lang/Object;
       7: invokevirtual #29                 // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue.offer:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokevirtual #30                 // Method drain:()V
      15: return

  void innerError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #9                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #36                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: getfield      #18                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      12: aload_1
      13: invokevirtual #32                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      16: ifeq          28
      19: aload_0
      20: iconst_1
      21: putfield      #33                 // Field done:Z
      24: aload_0
      25: invokevirtual #30                 // Method drain:()V
      28: return

  void innerComplete();
    Code:
       0: aload_0
       1: getfield      #9                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #36                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: iconst_1
      10: putfield      #33                 // Field done:Z
      13: aload_0
      14: invokevirtual #30                 // Method drain:()V
      17: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: iconst_1
       9: istore_1
      10: aload_0
      11: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      14: astore_2
      15: aload_0
      16: getfield      #15                 // Field queue:Lio/reactivex/rxjava3/internal/queue/MpscLinkedQueue;
      19: astore_3
      20: aload_0
      21: getfield      #18                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      24: astore        4
      26: aload_0
      27: getfield      #40                 // Field emitted:J
      30: lstore        5
      32: aload_0
      33: getfield      #12                 // Field windows:Ljava/util/concurrent/atomic/AtomicInteger;
      36: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      39: ifne          52
      42: aload_3
      43: invokevirtual #42                 // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue.clear:()V
      46: aload_0
      47: aconst_null
      48: putfield      #43                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
      51: return
      52: aload_0
      53: getfield      #43                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
      56: astore        7
      58: aload_0
      59: getfield      #33                 // Field done:Z
      62: istore        8
      64: iload         8
      66: ifeq          114
      69: aload         4
      71: invokevirtual #44                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
      74: ifnull        114
      77: aload_3
      78: invokevirtual #42                 // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue.clear:()V
      81: aload         4
      83: invokevirtual #45                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.terminate:()Ljava/lang/Throwable;
      86: astore        9
      88: aload         7
      90: ifnull        105
      93: aload_0
      94: aconst_null
      95: putfield      #43                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
      98: aload         7
     100: aload         9
     102: invokevirtual #46                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onError:(Ljava/lang/Throwable;)V
     105: aload_2
     106: aload         9
     108: invokeinterface #47,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     113: return
     114: aload_3
     115: invokevirtual #48                 // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue.poll:()Ljava/lang/Object;
     118: astore        9
     120: aload         9
     122: ifnonnull     129
     125: iconst_1
     126: goto          130
     129: iconst_0
     130: istore        10
     132: iload         8
     134: ifeq          204
     137: iload         10
     139: ifeq          204
     142: aload         4
     144: invokevirtual #45                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.terminate:()Ljava/lang/Throwable;
     147: astore        11
     149: aload         11
     151: ifnonnull     178
     154: aload         7
     156: ifnull        169
     159: aload_0
     160: aconst_null
     161: putfield      #43                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
     164: aload         7
     166: invokevirtual #49                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onComplete:()V
     169: aload_2
     170: invokeinterface #50,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     175: goto          203
     178: aload         7
     180: ifnull        195
     183: aload_0
     184: aconst_null
     185: putfield      #43                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
     188: aload         7
     190: aload         11
     192: invokevirtual #46                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onError:(Ljava/lang/Throwable;)V
     195: aload_2
     196: aload         11
     198: invokeinterface #47,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     203: return
     204: iload         10
     206: ifeq          212
     209: goto          365
     212: aload         9
     214: getstatic     #38                 // Field NEXT_WINDOW:Ljava/lang/Object;
     217: if_acmpeq     230
     220: aload         7
     222: aload         9
     224: invokevirtual #51                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onNext:(Ljava/lang/Object;)V
     227: goto          32
     230: aload         7
     232: ifnull        245
     235: aload_0
     236: aconst_null
     237: putfield      #43                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
     240: aload         7
     242: invokevirtual #49                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onComplete:()V
     245: aload_0
     246: getfield      #21                 // Field stopWindows:Ljava/util/concurrent/atomic/AtomicBoolean;
     249: invokevirtual #52                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     252: ifne          362
     255: aload_0
     256: getfield      #3                  // Field capacityHint:I
     259: aload_0
     260: invokestatic  #53                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/processors/UnicastProcessor;
     263: astore        7
     265: aload_0
     266: aload         7
     268: putfield      #43                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
     271: aload_0
     272: getfield      #12                 // Field windows:Ljava/util/concurrent/atomic/AtomicInteger;
     275: invokevirtual #54                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
     278: pop
     279: lload         5
     281: aload_0
     282: getfield      #24                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     285: invokevirtual #55                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     288: lcmp
     289: ifeq          333
     292: lload         5
     294: lconst_1
     295: ladd
     296: lstore        5
     298: new           #56                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept
     301: dup
     302: aload         7
     304: invokespecial #57                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept."<init>":(Lio/reactivex/rxjava3/processors/FlowableProcessor;)V
     307: astore        11
     309: aload_2
     310: aload         11
     312: invokeinterface #58,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     317: aload         11
     319: invokevirtual #59                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept.tryAbandon:()Z
     322: ifeq          330
     325: aload         7
     327: invokevirtual #49                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onComplete:()V
     330: goto          362
     333: aload_0
     334: getfield      #9                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
     337: invokestatic  #36                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
     340: pop
     341: aload_0
     342: getfield      #6                  // Field boundarySubscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryInnerSubscriber;
     345: invokevirtual #31                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundary$WindowBoundaryInnerSubscriber.dispose:()V
     348: aload         4
     350: invokestatic  #60                 // Method io/reactivex/rxjava3/exceptions/MissingBackpressureException.createDefault:()Lio/reactivex/rxjava3/exceptions/MissingBackpressureException;
     353: invokevirtual #32                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     356: pop
     357: aload_0
     358: iconst_1
     359: putfield      #33                 // Field done:Z
     362: goto          32
     365: aload_0
     366: lload         5
     368: putfield      #40                 // Field emitted:J
     371: aload_0
     372: iload_1
     373: ineg
     374: invokevirtual #61                 // Method addAndGet:(I)I
     377: istore_1
     378: iload_1
     379: ifne          32
     382: goto          385
     385: return

  static {};
    Code:
       0: new           #62                 // class java/lang/Object
       3: dup
       4: invokespecial #63                 // Method java/lang/Object."<init>":()V
       7: putstatic     #38                 // Field NEXT_WINDOW:Ljava/lang/Object;
      10: return
}
