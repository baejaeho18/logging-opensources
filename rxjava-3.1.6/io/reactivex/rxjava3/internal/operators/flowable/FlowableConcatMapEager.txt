Compiled from "FlowableConcatMapEager.java"
public final class io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEager<T, R> extends io.reactivex.rxjava3.internal.operators.flowable.AbstractFlowableWithUpstream<T, R> {
  final io.reactivex.rxjava3.functions.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>> mapper;

  final int maxConcurrency;

  final int prefetch;

  final io.reactivex.rxjava3.internal.util.ErrorMode errorMode;

  public io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEager(io.reactivex.rxjava3.core.Flowable<T>, io.reactivex.rxjava3.functions.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>>, int, int, io.reactivex.rxjava3.internal.util.ErrorMode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/AbstractFlowableWithUpstream."<init>":(Lio/reactivex/rxjava3/core/Flowable;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field maxConcurrency:I
      15: aload_0
      16: iload         4
      18: putfield      #4                  // Field prefetch:I
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field errorMode:Lio/reactivex/rxjava3/internal/util/ErrorMode;
      27: return

  protected void subscribeActual(org.reactivestreams.Subscriber<? super R>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field source:Lio/reactivex/rxjava3/core/Flowable;
       4: new           #7                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      13: aload_0
      14: getfield      #3                  // Field maxConcurrency:I
      17: aload_0
      18: getfield      #4                  // Field prefetch:I
      21: aload_0
      22: getfield      #5                  // Field errorMode:Lio/reactivex/rxjava3/internal/util/ErrorMode;
      25: invokespecial #8                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber."<init>":(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V
      28: invokevirtual #9                  // Method io/reactivex/rxjava3/core/Flowable.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V
      31: return
}
