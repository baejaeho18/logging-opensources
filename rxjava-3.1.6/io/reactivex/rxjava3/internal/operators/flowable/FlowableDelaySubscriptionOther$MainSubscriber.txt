Compiled from "FlowableDelaySubscriptionOther.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber<T> extends java.util.concurrent.atomic.AtomicLong implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super T> downstream;

  final org.reactivestreams.Publisher<? extends T> main;

  final io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber<T>.OtherSubscriber other;

  final java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> upstream;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber(org.reactivestreams.Subscriber<? super T>, org.reactivestreams.Publisher<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field main:Lorg/reactivestreams/Publisher;
      14: aload_0
      15: new           #4                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber
      18: dup
      19: aload_0
      20: invokespecial #5                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$MainSubscriber;)V
      23: putfield      #6                  // Field other:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber;
      26: aload_0
      27: new           #7                  // class java/util/concurrent/atomic/AtomicReference
      30: dup
      31: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      34: putfield      #9                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      37: return

  void next();
    Code:
       0: aload_0
       1: getfield      #3                  // Field main:Lorg/reactivestreams/Publisher;
       4: aload_0
       5: invokeinterface #10,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      10: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: invokeinterface #13,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
       9: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #14                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          16
       7: aload_0
       8: getfield      #9                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      11: aload_0
      12: lload_1
      13: invokestatic  #15                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V
      16: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field other:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber;
       4: invokestatic  #16                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: getfield      #9                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      12: invokestatic  #16                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      15: pop
      16: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #9                  // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_0
       5: aload_1
       6: invokestatic  #17                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.deferredSetOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;Lorg/reactivestreams/Subscription;)Z
       9: pop
      10: return
}
