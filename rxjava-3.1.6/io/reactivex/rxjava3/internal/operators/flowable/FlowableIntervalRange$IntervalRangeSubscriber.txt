Compiled from "FlowableIntervalRange.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableIntervalRange$IntervalRangeSubscriber extends java.util.concurrent.atomic.AtomicLong implements org.reactivestreams.Subscription,java.lang.Runnable {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super java.lang.Long> downstream;

  final long end;

  long count;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> resource;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableIntervalRange$IntervalRangeSubscriber(org.reactivestreams.Subscriber<? super java.lang.Long>, long, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field resource:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: lload_2
      22: putfield      #6                  // Field count:J
      25: aload_0
      26: lload         4
      28: putfield      #7                  // Field end:J
      31: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #8                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          13
       7: aload_0
       8: lload_1
       9: invokestatic  #9                  // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      12: pop2
      13: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field resource:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #10                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #4                  // Field resource:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #12                 // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
      10: if_acmpeq     156
      13: aload_0
      14: invokevirtual #13                 // Method get:()J
      17: lstore_1
      18: lload_1
      19: lconst_0
      20: lcmp
      21: ifeq          105
      24: aload_0
      25: getfield      #6                  // Field count:J
      28: lstore_3
      29: aload_0
      30: getfield      #5                  // Field downstream:Lorg/reactivestreams/Subscriber;
      33: lload_3
      34: invokestatic  #14                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      37: invokeinterface #15,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      42: lload_3
      43: aload_0
      44: getfield      #7                  // Field end:J
      47: lcmp
      48: ifne          82
      51: aload_0
      52: getfield      #4                  // Field resource:Ljava/util/concurrent/atomic/AtomicReference;
      55: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      58: getstatic     #12                 // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
      61: if_acmpeq     73
      64: aload_0
      65: getfield      #5                  // Field downstream:Lorg/reactivestreams/Subscriber;
      68: invokeinterface #16,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      73: aload_0
      74: getfield      #4                  // Field resource:Ljava/util/concurrent/atomic/AtomicReference;
      77: invokestatic  #10                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      80: pop
      81: return
      82: aload_0
      83: lload_3
      84: lconst_1
      85: ladd
      86: putfield      #6                  // Field count:J
      89: lload_1
      90: ldc2_w        #18                 // long 9223372036854775807l
      93: lcmp
      94: ifeq          102
      97: aload_0
      98: invokevirtual #20                 // Method decrementAndGet:()J
     101: pop2
     102: goto          156
     105: aload_0
     106: getfield      #5                  // Field downstream:Lorg/reactivestreams/Subscriber;
     109: new           #21                 // class io/reactivex/rxjava3/exceptions/MissingBackpressureException
     112: dup
     113: new           #22                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #24                 // String Could not emit value
     122: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_0
     126: getfield      #6                  // Field count:J
     129: invokevirtual #26                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     132: ldc           #27                 // String  due to lack of requests
     134: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: invokespecial #29                 // Method io/reactivex/rxjava3/exceptions/MissingBackpressureException."<init>":(Ljava/lang/String;)V
     143: invokeinterface #30,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     148: aload_0
     149: getfield      #4                  // Field resource:Ljava/util/concurrent/atomic/AtomicReference;
     152: invokestatic  #10                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
     155: pop
     156: return

  public void setResource(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field resource:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokestatic  #31                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: pop
       9: return
}
