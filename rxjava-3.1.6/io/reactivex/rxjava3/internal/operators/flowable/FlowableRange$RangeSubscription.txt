Compiled from "FlowableRange.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableRange$RangeSubscription extends io.reactivex.rxjava3.internal.operators.flowable.FlowableRange$BaseRangeSubscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super java.lang.Integer> downstream;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableRange$RangeSubscription(org.reactivestreams.Subscriber<? super java.lang.Integer>, int, int);
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableRange$BaseRangeSubscription."<init>":(II)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      11: return

  void fastPath();
    Code:
       0: aload_0
       1: getfield      #3                  // Field end:I
       4: istore_1
       5: aload_0
       6: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: astore_2
      10: aload_0
      11: getfield      #4                  // Field index:I
      14: istore_3
      15: iload_3
      16: iload_1
      17: if_icmpeq     44
      20: aload_0
      21: getfield      #5                  // Field cancelled:Z
      24: ifeq          28
      27: return
      28: aload_2
      29: iload_3
      30: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: invokeinterface #7,  2            // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      38: iinc          3, 1
      41: goto          15
      44: aload_0
      45: getfield      #5                  // Field cancelled:Z
      48: ifeq          52
      51: return
      52: aload_2
      53: invokeinterface #8,  1            // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      58: return

  void slowPath(long);
    Code:
       0: lconst_0
       1: lstore_3
       2: aload_0
       3: getfield      #3                  // Field end:I
       6: istore        5
       8: aload_0
       9: getfield      #4                  // Field index:I
      12: istore        6
      14: aload_0
      15: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      18: astore        7
      20: lload_3
      21: lload_1
      22: lcmp
      23: ifeq          63
      26: iload         6
      28: iload         5
      30: if_icmpeq     63
      33: aload_0
      34: getfield      #5                  // Field cancelled:Z
      37: ifeq          41
      40: return
      41: aload         7
      43: iload         6
      45: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: invokeinterface #7,  2            // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      53: lload_3
      54: lconst_1
      55: ladd
      56: lstore_3
      57: iinc          6, 1
      60: goto          20
      63: iload         6
      65: iload         5
      67: if_icmpne     85
      70: aload_0
      71: getfield      #5                  // Field cancelled:Z
      74: ifne          84
      77: aload         7
      79: invokeinterface #8,  1            // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      84: return
      85: aload_0
      86: invokevirtual #9                  // Method get:()J
      89: lstore_1
      90: lload_3
      91: lload_1
      92: lcmp
      93: ifne          20
      96: aload_0
      97: iload         6
      99: putfield      #4                  // Field index:I
     102: aload_0
     103: lload_3
     104: lneg
     105: invokevirtual #10                 // Method addAndGet:(J)J
     108: lstore_1
     109: lload_1
     110: lconst_0
     111: lcmp
     112: ifne          116
     115: return
     116: lconst_0
     117: lstore_3
     118: goto          20
}
