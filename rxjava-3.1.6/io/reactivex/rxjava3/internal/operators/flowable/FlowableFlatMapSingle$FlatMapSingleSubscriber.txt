Compiled from "FlowableFlatMapSingle.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber<T, R> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super R> downstream;

  final boolean delayErrors;

  final int maxConcurrency;

  final java.util.concurrent.atomic.AtomicLong requested;

  final io.reactivex.rxjava3.disposables.CompositeDisposable set;

  final java.util.concurrent.atomic.AtomicInteger active;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable errors;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.SingleSource<? extends R>> mapper;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.operators.SpscLinkedArrayQueue<R>> queue;

  org.reactivestreams.Subscription upstream;

  volatile boolean cancelled;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber(org.reactivestreams.Subscriber<? super R>, io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.SingleSource<? extends R>>, boolean, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field delayErrors:Z
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field maxConcurrency:I
      25: aload_0
      26: new           #6                  // class java/util/concurrent/atomic/AtomicLong
      29: dup
      30: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      33: putfield      #8                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      36: aload_0
      37: new           #9                  // class io/reactivex/rxjava3/disposables/CompositeDisposable
      40: dup
      41: invokespecial #10                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable."<init>":()V
      44: putfield      #11                 // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      47: aload_0
      48: new           #12                 // class io/reactivex/rxjava3/internal/util/AtomicThrowable
      51: dup
      52: invokespecial #13                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      55: putfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      58: aload_0
      59: new           #15                 // class java/util/concurrent/atomic/AtomicInteger
      62: dup
      63: iconst_1
      64: invokespecial #16                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      67: putfield      #17                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      70: aload_0
      71: new           #18                 // class java/util/concurrent/atomic/AtomicReference
      74: dup
      75: invokespecial #19                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      78: putfield      #20                 // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
      81: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #21                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #22                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          60
      11: aload_0
      12: aload_1
      13: putfield      #21                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #23,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_0
      27: getfield      #5                  // Field maxConcurrency:I
      30: istore_2
      31: iload_2
      32: ldc           #25                 // int 2147483647
      34: if_icmpne     49
      37: aload_1
      38: ldc2_w        #27                 // long 9223372036854775807l
      41: invokeinterface #29,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      46: goto          60
      49: aload_1
      50: aload_0
      51: getfield      #5                  // Field maxConcurrency:I
      54: i2l
      55: invokeinterface #29,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      60: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ldc           #31                 // String The mapper returned a null SingleSource
      12: invokestatic  #32                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: checkcast     #33                 // class io/reactivex/rxjava3/core/SingleSource
      18: astore_2
      19: goto          42
      22: astore_3
      23: aload_3
      24: invokestatic  #35                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      27: aload_0
      28: getfield      #21                 // Field upstream:Lorg/reactivestreams/Subscription;
      31: invokeinterface #36,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      36: aload_0
      37: aload_3
      38: invokevirtual #37                 // Method onError:(Ljava/lang/Throwable;)V
      41: return
      42: aload_0
      43: getfield      #17                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      46: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      49: pop
      50: new           #39                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver
      53: dup
      54: aload_0
      55: invokespecial #40                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMapSingle$FlatMapSingleSubscriber;)V
      58: astore_3
      59: aload_0
      60: getfield      #41                 // Field cancelled:Z
      63: ifne          84
      66: aload_0
      67: getfield      #11                 // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      70: aload_3
      71: invokevirtual #42                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      74: ifeq          84
      77: aload_2
      78: aload_3
      79: invokeinterface #43,  2           // InterfaceMethod io/reactivex/rxjava3/core/SingleSource.subscribe:(Lio/reactivex/rxjava3/core/SingleObserver;)V
      84: return
    Exception table:
       from    to  target type
           0    19    22   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #17                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: pop
       8: aload_0
       9: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      12: aload_1
      13: invokevirtual #45                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      16: ifeq          37
      19: aload_0
      20: getfield      #4                  // Field delayErrors:Z
      23: ifne          33
      26: aload_0
      27: getfield      #11                 // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      30: invokevirtual #46                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      33: aload_0
      34: invokevirtual #47                 // Method drain:()V
      37: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #17                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: pop
       8: aload_0
       9: invokevirtual #47                 // Method drain:()V
      12: return

  public void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #41                 // Field cancelled:Z
       5: aload_0
       6: getfield      #21                 // Field upstream:Lorg/reactivestreams/Subscription;
       9: invokeinterface #36,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      14: aload_0
      15: getfield      #11                 // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      18: invokevirtual #46                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      21: aload_0
      22: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      25: invokevirtual #48                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      28: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #49                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          20
       7: aload_0
       8: getfield      #8                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      11: lload_1
      12: invokestatic  #50                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      15: pop2
      16: aload_0
      17: invokevirtual #47                 // Method drain:()V
      20: return

  void innerSuccess(io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber<T, R>.InnerObserver, R);
    Code:
       0: aload_0
       1: getfield      #11                 // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
       4: aload_1
       5: invokevirtual #51                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: pop
       9: aload_0
      10: invokevirtual #52                 // Method get:()I
      13: ifne          179
      16: aload_0
      17: iconst_0
      18: iconst_1
      19: invokevirtual #53                 // Method compareAndSet:(II)Z
      22: ifeq          179
      25: aload_0
      26: getfield      #17                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      29: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      32: ifne          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: istore_3
      41: aload_0
      42: getfield      #8                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      45: invokevirtual #54                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      48: lconst_0
      49: lcmp
      50: ifeq          135
      53: aload_0
      54: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      57: aload_2
      58: invokeinterface #55,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      63: aload_0
      64: getfield      #20                 // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
      67: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      70: checkcast     #57                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      73: astore        4
      75: iload_3
      76: ifeq          104
      79: aload         4
      81: ifnull        92
      84: aload         4
      86: invokevirtual #58                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.isEmpty:()Z
      89: ifeq          104
      92: aload_0
      93: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      96: aload_0
      97: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     100: invokevirtual #59                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     103: return
     104: aload_0
     105: getfield      #8                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     108: lconst_1
     109: invokestatic  #60                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.produced:(Ljava/util/concurrent/atomic/AtomicLong;J)J
     112: pop2
     113: aload_0
     114: getfield      #5                  // Field maxConcurrency:I
     117: ldc           #25                 // int 2147483647
     119: if_icmpeq     132
     122: aload_0
     123: getfield      #21                 // Field upstream:Lorg/reactivestreams/Subscription;
     126: lconst_1
     127: invokeinterface #29,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     132: goto          168
     135: aload_0
     136: invokevirtual #61                 // Method getOrCreateQueue:()Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
     139: astore        4
     141: aload         4
     143: dup
     144: astore        5
     146: monitorenter
     147: aload         4
     149: aload_2
     150: invokevirtual #62                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.offer:(Ljava/lang/Object;)Z
     153: pop
     154: aload         5
     156: monitorexit
     157: goto          168
     160: astore        6
     162: aload         5
     164: monitorexit
     165: aload         6
     167: athrow
     168: aload_0
     169: invokevirtual #63                 // Method decrementAndGet:()I
     172: ifne          176
     175: return
     176: goto          225
     179: aload_0
     180: invokevirtual #61                 // Method getOrCreateQueue:()Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
     183: astore_3
     184: aload_3
     185: dup
     186: astore        4
     188: monitorenter
     189: aload_3
     190: aload_2
     191: invokevirtual #62                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.offer:(Ljava/lang/Object;)Z
     194: pop
     195: aload         4
     197: monitorexit
     198: goto          209
     201: astore        7
     203: aload         4
     205: monitorexit
     206: aload         7
     208: athrow
     209: aload_0
     210: getfield      #17                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
     213: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     216: pop
     217: aload_0
     218: invokevirtual #64                 // Method getAndIncrement:()I
     221: ifeq          225
     224: return
     225: aload_0
     226: invokevirtual #65                 // Method drainLoop:()V
     229: return
    Exception table:
       from    to  target type
         147   157   160   any
         160   165   160   any
         189   198   201   any
         201   206   201   any

  io.reactivex.rxjava3.operators.SpscLinkedArrayQueue<R> getOrCreateQueue();
    Code:
       0: aload_0
       1: getfield      #20                 // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #57                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      10: astore_1
      11: aload_1
      12: ifnull        17
      15: aload_1
      16: areturn
      17: new           #57                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      20: dup
      21: invokestatic  #66                 // Method io/reactivex/rxjava3/core/Flowable.bufferSize:()I
      24: invokespecial #67                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue."<init>":(I)V
      27: astore_1
      28: aload_0
      29: getfield      #20                 // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
      32: aconst_null
      33: aload_1
      34: invokevirtual #68                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      37: ifeq          42
      40: aload_1
      41: areturn
      42: aload_0
      43: getfield      #20                 // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
      46: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      49: checkcast     #57                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      52: areturn

  void innerError(io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber<T, R>.InnerObserver, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #11                 // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
       4: aload_1
       5: invokevirtual #51                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: pop
       9: aload_0
      10: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      13: aload_2
      14: invokevirtual #45                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      17: ifeq          77
      20: aload_0
      21: getfield      #4                  // Field delayErrors:Z
      24: ifne          46
      27: aload_0
      28: getfield      #21                 // Field upstream:Lorg/reactivestreams/Subscription;
      31: invokeinterface #36,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      36: aload_0
      37: getfield      #11                 // Field set:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      40: invokevirtual #46                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      43: goto          65
      46: aload_0
      47: getfield      #5                  // Field maxConcurrency:I
      50: ldc           #25                 // int 2147483647
      52: if_icmpeq     65
      55: aload_0
      56: getfield      #21                 // Field upstream:Lorg/reactivestreams/Subscription;
      59: lconst_1
      60: invokeinterface #29,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      65: aload_0
      66: getfield      #17                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      69: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      72: pop
      73: aload_0
      74: invokevirtual #47                 // Method drain:()V
      77: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getAndIncrement:()I
       4: ifne          11
       7: aload_0
       8: invokevirtual #65                 // Method drainLoop:()V
      11: return

  void clear();
    Code:
       0: aload_0
       1: getfield      #20                 // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #57                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      10: astore_1
      11: aload_1
      12: ifnull        19
      15: aload_1
      16: invokevirtual #69                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.clear:()V
      19: return

  void drainLoop();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       6: astore_2
       7: aload_0
       8: getfield      #17                 // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      11: astore_3
      12: aload_0
      13: getfield      #20                 // Field queue:Ljava/util/concurrent/atomic/AtomicReference;
      16: astore        4
      18: aload_0
      19: getfield      #8                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      22: invokevirtual #54                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      25: lstore        5
      27: lconst_0
      28: lstore        7
      30: lload         7
      32: lload         5
      34: lcmp
      35: ifeq          186
      38: aload_0
      39: getfield      #41                 // Field cancelled:Z
      42: ifeq          50
      45: aload_0
      46: invokevirtual #70                 // Method clear:()V
      49: return
      50: aload_0
      51: getfield      #4                  // Field delayErrors:Z
      54: ifne          90
      57: aload_0
      58: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      61: invokevirtual #71                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
      64: checkcast     #34                 // class java/lang/Throwable
      67: astore        9
      69: aload         9
      71: ifnull        90
      74: aload_0
      75: invokevirtual #70                 // Method clear:()V
      78: aload_0
      79: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      82: aload_0
      83: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      86: invokevirtual #59                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
      89: return
      90: aload_3
      91: invokevirtual #72                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      94: ifne          101
      97: iconst_1
      98: goto          102
     101: iconst_0
     102: istore        9
     104: aload         4
     106: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     109: checkcast     #57                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
     112: astore        10
     114: aload         10
     116: ifnull        127
     119: aload         10
     121: invokevirtual #73                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.poll:()Ljava/lang/Object;
     124: goto          128
     127: aconst_null
     128: astore        11
     130: aload         11
     132: ifnonnull     139
     135: iconst_1
     136: goto          140
     139: iconst_0
     140: istore        12
     142: iload         9
     144: ifeq          161
     147: iload         12
     149: ifeq          161
     152: aload_0
     153: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     156: aload_2
     157: invokevirtual #59                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     160: return
     161: iload         12
     163: ifeq          169
     166: goto          186
     169: aload_2
     170: aload         11
     172: invokeinterface #55,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     177: lload         7
     179: lconst_1
     180: ladd
     181: lstore        7
     183: goto          30
     186: lload         7
     188: lload         5
     190: lcmp
     191: ifne          306
     194: aload_0
     195: getfield      #41                 // Field cancelled:Z
     198: ifeq          206
     201: aload_0
     202: invokevirtual #70                 // Method clear:()V
     205: return
     206: aload_0
     207: getfield      #4                  // Field delayErrors:Z
     210: ifne          243
     213: aload_0
     214: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     217: invokevirtual #71                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
     220: checkcast     #34                 // class java/lang/Throwable
     223: astore        9
     225: aload         9
     227: ifnull        243
     230: aload_0
     231: invokevirtual #70                 // Method clear:()V
     234: aload_0
     235: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     238: aload_2
     239: invokevirtual #59                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     242: return
     243: aload_3
     244: invokevirtual #72                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     247: ifne          254
     250: iconst_1
     251: goto          255
     254: iconst_0
     255: istore        9
     257: aload         4
     259: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     262: checkcast     #57                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
     265: astore        10
     267: aload         10
     269: ifnull        280
     272: aload         10
     274: invokevirtual #58                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.isEmpty:()Z
     277: ifeq          284
     280: iconst_1
     281: goto          285
     284: iconst_0
     285: istore        11
     287: iload         9
     289: ifeq          306
     292: iload         11
     294: ifeq          306
     297: aload_0
     298: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     301: aload_2
     302: invokevirtual #59                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     305: return
     306: lload         7
     308: lconst_0
     309: lcmp
     310: ifeq          343
     313: aload_0
     314: getfield      #8                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     317: lload         7
     319: invokestatic  #60                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.produced:(Ljava/util/concurrent/atomic/AtomicLong;J)J
     322: pop2
     323: aload_0
     324: getfield      #5                  // Field maxConcurrency:I
     327: ldc           #25                 // int 2147483647
     329: if_icmpeq     343
     332: aload_0
     333: getfield      #21                 // Field upstream:Lorg/reactivestreams/Subscription;
     336: lload         7
     338: invokeinterface #29,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     343: aload_0
     344: iload_1
     345: ineg
     346: invokevirtual #74                 // Method addAndGet:(I)I
     349: istore_1
     350: iload_1
     351: ifne          357
     354: goto          360
     357: goto          18
     360: return
}
