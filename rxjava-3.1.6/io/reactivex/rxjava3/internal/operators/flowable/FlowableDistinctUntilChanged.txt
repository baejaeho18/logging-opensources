Compiled from "FlowableDistinctUntilChanged.java"
public final class io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinctUntilChanged<T, K> extends io.reactivex.rxjava3.internal.operators.flowable.AbstractFlowableWithUpstream<T, T> {
  final io.reactivex.rxjava3.functions.Function<? super T, K> keySelector;

  final io.reactivex.rxjava3.functions.BiPredicate<? super K, ? super K> comparer;

  public io.reactivex.rxjava3.internal.operators.flowable.FlowableDistinctUntilChanged(io.reactivex.rxjava3.core.Flowable<T>, io.reactivex.rxjava3.functions.Function<? super T, K>, io.reactivex.rxjava3.functions.BiPredicate<? super K, ? super K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/AbstractFlowableWithUpstream."<init>":(Lio/reactivex/rxjava3/core/Flowable;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field keySelector:Lio/reactivex/rxjava3/functions/Function;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field comparer:Lio/reactivex/rxjava3/functions/BiPredicate;
      15: return

  protected void subscribeActual(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_1
       1: instanceof    #4                  // class io/reactivex/rxjava3/operators/ConditionalSubscriber
       4: ifeq          38
       7: aload_1
       8: checkcast     #4                  // class io/reactivex/rxjava3/operators/ConditionalSubscriber
      11: astore_2
      12: aload_0
      13: getfield      #5                  // Field source:Lio/reactivex/rxjava3/core/Flowable;
      16: new           #6                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableDistinctUntilChanged$DistinctUntilChangedConditionalSubscriber
      19: dup
      20: aload_2
      21: aload_0
      22: getfield      #2                  // Field keySelector:Lio/reactivex/rxjava3/functions/Function;
      25: aload_0
      26: getfield      #3                  // Field comparer:Lio/reactivex/rxjava3/functions/BiPredicate;
      29: invokespecial #7                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableDistinctUntilChanged$DistinctUntilChangedConditionalSubscriber."<init>":(Lio/reactivex/rxjava3/operators/ConditionalSubscriber;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiPredicate;)V
      32: invokevirtual #8                  // Method io/reactivex/rxjava3/core/Flowable.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V
      35: goto          61
      38: aload_0
      39: getfield      #5                  // Field source:Lio/reactivex/rxjava3/core/Flowable;
      42: new           #9                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableDistinctUntilChanged$DistinctUntilChangedSubscriber
      45: dup
      46: aload_1
      47: aload_0
      48: getfield      #2                  // Field keySelector:Lio/reactivex/rxjava3/functions/Function;
      51: aload_0
      52: getfield      #3                  // Field comparer:Lio/reactivex/rxjava3/functions/BiPredicate;
      55: invokespecial #10                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableDistinctUntilChanged$DistinctUntilChangedSubscriber."<init>":(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/BiPredicate;)V
      58: invokevirtual #8                  // Method io/reactivex/rxjava3/core/Flowable.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V
      61: return
}
