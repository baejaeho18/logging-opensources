Compiled from "FlowableTakeUntil.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber$OtherSubscriber extends java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> implements io.reactivex.rxjava3.core.FlowableSubscriber<java.lang.Object> {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber this$0;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber$OtherSubscriber(io.reactivex.rxjava3.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil$TakeUntilMainSubscriber;
       5: aload_0
       6: invokespecial #2                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       9: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #4                  // long 9223372036854775807l
       5: invokestatic  #6                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;J)Z
       8: pop
       9: return

  public void onNext(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: aload_0
       6: invokevirtual #8                  // Method onComplete:()V
       9: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil$TakeUntilMainSubscriber;
       4: getfield      #9                  // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil$TakeUntilMainSubscriber.upstream:Ljava/util/concurrent/atomic/AtomicReference;
       7: invokestatic  #7                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      10: pop
      11: aload_0
      12: getfield      #1                  // Field this$0:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil$TakeUntilMainSubscriber;
      15: getfield      #10                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil$TakeUntilMainSubscriber.downstream:Lorg/reactivestreams/Subscriber;
      18: aload_1
      19: aload_0
      20: getfield      #1                  // Field this$0:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil$TakeUntilMainSubscriber;
      23: aload_0
      24: getfield      #1                  // Field this$0:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil$TakeUntilMainSubscriber;
      27: getfield      #11                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil$TakeUntilMainSubscriber.error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      30: invokestatic  #12                 // Method io/reactivex/rxjava3/internal/util/HalfSerializer.onError:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/rxjava3/internal/util/AtomicThrowable;)V
      33: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil$TakeUntilMainSubscriber;
       4: getfield      #9                  // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil$TakeUntilMainSubscriber.upstream:Ljava/util/concurrent/atomic/AtomicReference;
       7: invokestatic  #7                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      10: pop
      11: aload_0
      12: getfield      #1                  // Field this$0:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil$TakeUntilMainSubscriber;
      15: getfield      #10                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil$TakeUntilMainSubscriber.downstream:Lorg/reactivestreams/Subscriber;
      18: aload_0
      19: getfield      #1                  // Field this$0:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil$TakeUntilMainSubscriber;
      22: aload_0
      23: getfield      #1                  // Field this$0:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil$TakeUntilMainSubscriber;
      26: getfield      #11                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableTakeUntil$TakeUntilMainSubscriber.error:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      29: invokestatic  #13                 // Method io/reactivex/rxjava3/internal/util/HalfSerializer.onComplete:(Lorg/reactivestreams/Subscriber;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/rxjava3/internal/util/AtomicThrowable;)V
      32: return
}
