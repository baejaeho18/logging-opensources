Compiled from "FlowableReplay.java"
public final class io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay<T> extends io.reactivex.rxjava3.flowables.ConnectableFlowable<T> implements io.reactivex.rxjava3.internal.fuseable.HasUpstreamPublisher<T> {
  final io.reactivex.rxjava3.core.Flowable<T> source;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$ReplaySubscriber<T>> current;

  final io.reactivex.rxjava3.functions.Supplier<? extends io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$ReplayBuffer<T>> bufferFactory;

  final org.reactivestreams.Publisher<T> onSubscribe;

  static final io.reactivex.rxjava3.functions.Supplier DEFAULT_UNBOUNDED_FACTORY;

  public static <U, R> io.reactivex.rxjava3.core.Flowable<R> multicastSelector(io.reactivex.rxjava3.functions.Supplier<? extends io.reactivex.rxjava3.flowables.ConnectableFlowable<U>>, io.reactivex.rxjava3.functions.Function<? super io.reactivex.rxjava3.core.Flowable<U>, ? extends org.reactivestreams.Publisher<R>>);
    Code:
       0: new           #1                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$MulticastFlowable
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #2                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$MulticastFlowable."<init>":(Lio/reactivex/rxjava3/functions/Supplier;Lio/reactivex/rxjava3/functions/Function;)V
       9: areturn

  public static <T> io.reactivex.rxjava3.flowables.ConnectableFlowable<T> createFrom(io.reactivex.rxjava3.core.Flowable<? extends T>);
    Code:
       0: aload_0
       1: getstatic     #3                  // Field DEFAULT_UNBOUNDED_FACTORY:Lio/reactivex/rxjava3/functions/Supplier;
       4: invokestatic  #4                  // Method create:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;
       7: areturn

  public static <T> io.reactivex.rxjava3.flowables.ConnectableFlowable<T> create(io.reactivex.rxjava3.core.Flowable<T>, int, boolean);
    Code:
       0: iload_1
       1: ldc           #6                  // int 2147483647
       3: if_icmpne     11
       6: aload_0
       7: invokestatic  #7                  // Method createFrom:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;
      10: areturn
      11: aload_0
      12: new           #8                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBufferSupplier
      15: dup
      16: iload_1
      17: iload_2
      18: invokespecial #9                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBufferSupplier."<init>":(IZ)V
      21: invokestatic  #4                  // Method create:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;
      24: areturn

  public static <T> io.reactivex.rxjava3.flowables.ConnectableFlowable<T> create(io.reactivex.rxjava3.core.Flowable<T>, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler, boolean);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: aload         4
       5: ldc           #6                  // int 2147483647
       7: iload         5
       9: invokestatic  #10                 // Method create:(Lio/reactivex/rxjava3/core/Flowable;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IZ)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;
      12: areturn

  public static <T> io.reactivex.rxjava3.flowables.ConnectableFlowable<T> create(io.reactivex.rxjava3.core.Flowable<T>, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler, int, boolean);
    Code:
       0: aload_0
       1: new           #11                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ScheduledReplayBufferSupplier
       4: dup
       5: iload         5
       7: lload_1
       8: aload_3
       9: aload         4
      11: iload         6
      13: invokespecial #12                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ScheduledReplayBufferSupplier."<init>":(IJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;Z)V
      16: invokestatic  #4                  // Method create:(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/Supplier;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;
      19: areturn

  static <T> io.reactivex.rxjava3.flowables.ConnectableFlowable<T> create(io.reactivex.rxjava3.core.Flowable<T>, io.reactivex.rxjava3.functions.Supplier<? extends io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$ReplayBuffer<T>>);
    Code:
       0: new           #13                 // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       7: astore_2
       8: new           #15                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayPublisher
      11: dup
      12: aload_2
      13: aload_1
      14: invokespecial #16                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayPublisher."<init>":(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/functions/Supplier;)V
      17: astore_3
      18: new           #17                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay
      21: dup
      22: aload_3
      23: aload_0
      24: aload_2
      25: aload_1
      26: invokespecial #18                 // Method "<init>":(Lorg/reactivestreams/Publisher;Lio/reactivex/rxjava3/core/Flowable;Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/functions/Supplier;)V
      29: invokestatic  #19                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onAssembly:(Lio/reactivex/rxjava3/flowables/ConnectableFlowable;)Lio/reactivex/rxjava3/flowables/ConnectableFlowable;
      32: areturn

  private io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay(org.reactivestreams.Publisher<T>, io.reactivex.rxjava3.core.Flowable<T>, java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$ReplaySubscriber<T>>, io.reactivex.rxjava3.functions.Supplier<? extends io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$ReplayBuffer<T>>);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method io/reactivex/rxjava3/flowables/ConnectableFlowable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #21                 // Field onSubscribe:Lorg/reactivestreams/Publisher;
       9: aload_0
      10: aload_2
      11: putfield      #22                 // Field source:Lio/reactivex/rxjava3/core/Flowable;
      14: aload_0
      15: aload_3
      16: putfield      #23                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      19: aload_0
      20: aload         4
      22: putfield      #24                 // Field bufferFactory:Lio/reactivex/rxjava3/functions/Supplier;
      25: return

  public org.reactivestreams.Publisher<T> source();
    Code:
       0: aload_0
       1: getfield      #22                 // Field source:Lio/reactivex/rxjava3/core/Flowable;
       4: areturn

  protected void subscribeActual(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #21                 // Field onSubscribe:Lorg/reactivestreams/Publisher;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      10: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #23                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #27                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplaySubscriber
      10: astore_1
      11: aload_1
      12: ifnull        32
      15: aload_1
      16: invokevirtual #28                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplaySubscriber.isDisposed:()Z
      19: ifeq          32
      22: aload_0
      23: getfield      #23                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      26: aload_1
      27: aconst_null
      28: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      31: pop
      32: return

  public void connect(io.reactivex.rxjava3.functions.Consumer<? super io.reactivex.rxjava3.disposables.Disposable>);
    Code:
       0: aload_0
       1: getfield      #23                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #27                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplaySubscriber
      10: astore_3
      11: aload_3
      12: ifnull        22
      15: aload_3
      16: invokevirtual #28                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplaySubscriber.isDisposed:()Z
      19: ifeq          86
      22: aload_0
      23: getfield      #24                 // Field bufferFactory:Lio/reactivex/rxjava3/functions/Supplier;
      26: invokeinterface #30,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
      31: checkcast     #31                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer
      34: astore        4
      36: goto          52
      39: astore        5
      41: aload         5
      43: invokestatic  #33                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      46: aload         5
      48: invokestatic  #34                 // Method io/reactivex/rxjava3/internal/util/ExceptionHelper.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      51: athrow
      52: new           #27                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplaySubscriber
      55: dup
      56: aload         4
      58: aload_0
      59: getfield      #23                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      62: invokespecial #35                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplaySubscriber."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer;Ljava/util/concurrent/atomic/AtomicReference;)V
      65: astore        5
      67: aload_0
      68: getfield      #23                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      71: aload_3
      72: aload         5
      74: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      77: ifne          83
      80: goto          0
      83: aload         5
      85: astore_3
      86: aload_3
      87: getfield      #36                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplaySubscriber.shouldConnect:Ljava/util/concurrent/atomic/AtomicBoolean;
      90: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      93: ifne          112
      96: aload_3
      97: getfield      #36                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplaySubscriber.shouldConnect:Ljava/util/concurrent/atomic/AtomicBoolean;
     100: iconst_0
     101: iconst_1
     102: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
     105: ifeq          112
     108: iconst_1
     109: goto          113
     112: iconst_0
     113: istore_2
     114: goto          117
     117: aload_1
     118: aload_3
     119: invokeinterface #39,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Consumer.accept:(Ljava/lang/Object;)V
     124: goto          159
     127: astore        4
     129: aload         4
     131: invokestatic  #33                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     134: iload_2
     135: ifeq          148
     138: aload_3
     139: getfield      #36                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplaySubscriber.shouldConnect:Ljava/util/concurrent/atomic/AtomicBoolean;
     142: iconst_1
     143: iconst_0
     144: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
     147: pop
     148: aload         4
     150: invokestatic  #33                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     153: aload         4
     155: invokestatic  #34                 // Method io/reactivex/rxjava3/internal/util/ExceptionHelper.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     158: athrow
     159: iload_2
     160: ifeq          171
     163: aload_0
     164: getfield      #22                 // Field source:Lio/reactivex/rxjava3/core/Flowable;
     167: aload_3
     168: invokevirtual #40                 // Method io/reactivex/rxjava3/core/Flowable.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V
     171: return
    Exception table:
       from    to  target type
          22    36    39   Class java/lang/Throwable
         117   124   127   Class java/lang/Throwable

  static {};
    Code:
       0: new           #41                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$DefaultUnboundedFactory
       3: dup
       4: invokespecial #42                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$DefaultUnboundedFactory."<init>":()V
       7: putstatic     #3                  // Field DEFAULT_UNBOUNDED_FACTORY:Lio/reactivex/rxjava3/functions/Supplier;
      10: return
}
