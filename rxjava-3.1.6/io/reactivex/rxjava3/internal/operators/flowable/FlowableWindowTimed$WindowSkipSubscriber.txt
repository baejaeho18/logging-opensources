Compiled from "FlowableWindowTimed.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber<T> extends io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowTimed$AbstractWindowSubscriber<T> implements java.lang.Runnable {
  private static final long serialVersionUID;

  final long timeskip;

  final io.reactivex.rxjava3.core.Scheduler$Worker worker;

  final java.util.List<io.reactivex.rxjava3.processors.UnicastProcessor<T>> windows;

  static final java.lang.Object WINDOW_OPEN;

  static final java.lang.Object WINDOW_CLOSE;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber(org.reactivestreams.Subscriber<? super io.reactivex.rxjava3.core.Flowable<T>>, long, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler$Worker, int);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         6
       5: iload         8
       7: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$AbstractWindowSubscriber."<init>":(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;I)V
      10: aload_0
      11: lload         4
      13: putfield      #2                  // Field timeskip:J
      16: aload_0
      17: aload         7
      19: putfield      #3                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      22: aload_0
      23: new           #4                  // class java/util/LinkedList
      26: dup
      27: invokespecial #5                  // Method java/util/LinkedList."<init>":()V
      30: putfield      #6                  // Field windows:Ljava/util/List;
      33: return

  void createFirstWindow();
    Code:
       0: aload_0
       1: getfield      #7                  // Field downstreamCancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          199
      10: aload_0
      11: getfield      #9                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      14: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      17: lconst_0
      18: lcmp
      19: ifeq          165
      22: aload_0
      23: lconst_1
      24: putfield      #11                 // Field emitted:J
      27: aload_0
      28: getfield      #12                 // Field windowCount:Ljava/util/concurrent/atomic/AtomicInteger;
      31: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      34: pop
      35: aload_0
      36: getfield      #14                 // Field bufferSize:I
      39: aload_0
      40: invokestatic  #15                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/processors/UnicastProcessor;
      43: astore_1
      44: aload_0
      45: getfield      #6                  // Field windows:Ljava/util/List;
      48: aload_1
      49: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: new           #17                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept
      58: dup
      59: aload_1
      60: invokespecial #18                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept."<init>":(Lio/reactivex/rxjava3/processors/FlowableProcessor;)V
      63: astore_2
      64: aload_0
      65: getfield      #19                 // Field downstream:Lorg/reactivestreams/Subscriber;
      68: aload_2
      69: invokeinterface #20,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      74: aload_0
      75: getfield      #3                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      78: new           #21                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowSkipSubscriber$WindowBoundaryRunnable
      81: dup
      82: aload_0
      83: iconst_0
      84: invokespecial #22                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowSkipSubscriber$WindowBoundaryRunnable."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowSkipSubscriber;Z)V
      87: aload_0
      88: getfield      #23                 // Field timespan:J
      91: aload_0
      92: getfield      #24                 // Field unit:Ljava/util/concurrent/TimeUnit;
      95: invokevirtual #25                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
      98: pop
      99: aload_0
     100: getfield      #3                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     103: new           #21                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowSkipSubscriber$WindowBoundaryRunnable
     106: dup
     107: aload_0
     108: iconst_1
     109: invokespecial #22                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowSkipSubscriber$WindowBoundaryRunnable."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowSkipSubscriber;Z)V
     112: aload_0
     113: getfield      #2                  // Field timeskip:J
     116: aload_0
     117: getfield      #2                  // Field timeskip:J
     120: aload_0
     121: getfield      #24                 // Field unit:Ljava/util/concurrent/TimeUnit;
     124: invokevirtual #26                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedulePeriodically:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
     127: pop
     128: aload_2
     129: invokevirtual #27                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept.tryAbandon:()Z
     132: ifeq          150
     135: aload_1
     136: invokevirtual #28                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onComplete:()V
     139: aload_0
     140: getfield      #6                  // Field windows:Ljava/util/List;
     143: aload_1
     144: invokeinterface #29,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     149: pop
     150: aload_0
     151: getfield      #30                 // Field upstream:Lorg/reactivestreams/Subscription;
     154: ldc2_w        #32                 // long 9223372036854775807l
     157: invokeinterface #34,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     162: goto          199
     165: aload_0
     166: getfield      #30                 // Field upstream:Lorg/reactivestreams/Subscription;
     169: invokeinterface #35,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     174: aload_0
     175: getfield      #19                 // Field downstream:Lorg/reactivestreams/Subscriber;
     178: aload_0
     179: getfield      #11                 // Field emitted:J
     182: invokestatic  #36                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed.missingBackpressureMessage:(J)Lio/reactivex/rxjava3/exceptions/MissingBackpressureException;
     185: invokeinterface #37,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     190: aload_0
     191: invokevirtual #38                 // Method cleanupResources:()V
     194: aload_0
     195: iconst_1
     196: putfield      #39                 // Field upstreamCancelled:Z
     199: return

  void cleanupResources();
    Code:
       0: aload_0
       1: getfield      #3                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
       4: invokevirtual #40                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
       7: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: iconst_1
       9: istore_1
      10: aload_0
      11: getfield      #42                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      14: astore_2
      15: aload_0
      16: getfield      #19                 // Field downstream:Lorg/reactivestreams/Subscriber;
      19: astore_3
      20: aload_0
      21: getfield      #6                  // Field windows:Ljava/util/List;
      24: astore        4
      26: aload_0
      27: getfield      #39                 // Field upstreamCancelled:Z
      30: ifeq          49
      33: aload_2
      34: invokeinterface #43,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.clear:()V
      39: aload         4
      41: invokeinterface #44,  1           // InterfaceMethod java/util/List.clear:()V
      46: goto          509
      49: aload_0
      50: getfield      #45                 // Field done:Z
      53: istore        5
      55: aload_2
      56: invokeinterface #46,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.poll:()Ljava/lang/Object;
      61: astore        6
      63: aload         6
      65: ifnonnull     72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: istore        7
      75: iload         5
      77: ifeq          205
      80: iload         7
      82: ifeq          205
      85: aload_0
      86: getfield      #47                 // Field error:Ljava/lang/Throwable;
      89: astore        8
      91: aload         8
      93: ifnull        148
      96: aload         4
      98: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     103: astore        9
     105: aload         9
     107: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     112: ifeq          137
     115: aload         9
     117: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     122: checkcast     #51                 // class io/reactivex/rxjava3/processors/UnicastProcessor
     125: astore        10
     127: aload         10
     129: aload         8
     131: invokevirtual #52                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onError:(Ljava/lang/Throwable;)V
     134: goto          105
     137: aload_3
     138: aload         8
     140: invokeinterface #37,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     145: goto          193
     148: aload         4
     150: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     155: astore        9
     157: aload         9
     159: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     164: ifeq          187
     167: aload         9
     169: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     174: checkcast     #51                 // class io/reactivex/rxjava3/processors/UnicastProcessor
     177: astore        10
     179: aload         10
     181: invokevirtual #28                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onComplete:()V
     184: goto          157
     187: aload_3
     188: invokeinterface #53,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     193: aload_0
     194: invokevirtual #38                 // Method cleanupResources:()V
     197: aload_0
     198: iconst_1
     199: putfield      #39                 // Field upstreamCancelled:Z
     202: goto          26
     205: iload         7
     207: ifne          509
     210: aload         6
     212: getstatic     #54                 // Field WINDOW_OPEN:Ljava/lang/Object;
     215: if_acmpne     426
     218: aload_0
     219: getfield      #7                  // Field downstreamCancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
     222: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     225: ifne          26
     228: aload_0
     229: getfield      #11                 // Field emitted:J
     232: lstore        8
     234: aload_0
     235: getfield      #9                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     238: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     241: lload         8
     243: lcmp
     244: ifeq          346
     247: aload_0
     248: lload         8
     250: lconst_1
     251: ladd
     252: dup2
     253: lstore        8
     255: putfield      #11                 // Field emitted:J
     258: aload_0
     259: getfield      #12                 // Field windowCount:Ljava/util/concurrent/atomic/AtomicInteger;
     262: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
     265: pop
     266: aload_0
     267: getfield      #14                 // Field bufferSize:I
     270: aload_0
     271: invokestatic  #55                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/processors/UnicastProcessor;
     274: astore        10
     276: aload         4
     278: aload         10
     280: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     285: pop
     286: new           #17                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept
     289: dup
     290: aload         10
     292: invokespecial #18                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept."<init>":(Lio/reactivex/rxjava3/processors/FlowableProcessor;)V
     295: astore        11
     297: aload_3
     298: aload         11
     300: invokeinterface #20,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     305: aload_0
     306: getfield      #3                  // Field worker:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     309: new           #21                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowSkipSubscriber$WindowBoundaryRunnable
     312: dup
     313: aload_0
     314: iconst_0
     315: invokespecial #22                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowSkipSubscriber$WindowBoundaryRunnable."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowSkipSubscriber;Z)V
     318: aload_0
     319: getfield      #23                 // Field timespan:J
     322: aload_0
     323: getfield      #24                 // Field unit:Ljava/util/concurrent/TimeUnit;
     326: invokevirtual #25                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
     329: pop
     330: aload         11
     332: invokevirtual #27                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept.tryAbandon:()Z
     335: ifeq          343
     338: aload         10
     340: invokevirtual #28                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onComplete:()V
     343: goto          423
     346: aload_0
     347: getfield      #30                 // Field upstream:Lorg/reactivestreams/Subscription;
     350: invokeinterface #35,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     355: lload         8
     357: invokestatic  #36                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed.missingBackpressureMessage:(J)Lio/reactivex/rxjava3/exceptions/MissingBackpressureException;
     360: astore        10
     362: aload         4
     364: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     369: astore        11
     371: aload         11
     373: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     378: ifeq          403
     381: aload         11
     383: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     388: checkcast     #51                 // class io/reactivex/rxjava3/processors/UnicastProcessor
     391: astore        12
     393: aload         12
     395: aload         10
     397: invokevirtual #52                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onError:(Ljava/lang/Throwable;)V
     400: goto          371
     403: aload_3
     404: aload         10
     406: invokeinterface #37,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     411: aload_0
     412: invokevirtual #38                 // Method cleanupResources:()V
     415: aload_0
     416: iconst_1
     417: putfield      #39                 // Field upstreamCancelled:Z
     420: goto          26
     423: goto          26
     426: aload         6
     428: getstatic     #56                 // Field WINDOW_CLOSE:Ljava/lang/Object;
     431: if_acmpne     461
     434: aload         4
     436: invokeinterface #57,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     441: ifne          26
     444: aload         4
     446: iconst_0
     447: invokeinterface #58,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     452: checkcast     #51                 // class io/reactivex/rxjava3/processors/UnicastProcessor
     455: invokevirtual #28                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onComplete:()V
     458: goto          26
     461: aload         6
     463: astore        8
     465: aload         4
     467: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     472: astore        9
     474: aload         9
     476: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     481: ifeq          506
     484: aload         9
     486: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     491: checkcast     #51                 // class io/reactivex/rxjava3/processors/UnicastProcessor
     494: astore        10
     496: aload         10
     498: aload         8
     500: invokevirtual #59                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onNext:(Ljava/lang/Object;)V
     503: goto          474
     506: goto          26
     509: aload_0
     510: iload_1
     511: ineg
     512: invokevirtual #60                 // Method addAndGet:(I)I
     515: istore_1
     516: iload_1
     517: ifne          26
     520: goto          523
     523: return

  public void run();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method windowDone:()V
       4: return

  void boundary(boolean);
    Code:
       0: aload_0
       1: getfield      #42                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
       4: iload_1
       5: ifeq          14
       8: getstatic     #54                 // Field WINDOW_OPEN:Ljava/lang/Object;
      11: goto          17
      14: getstatic     #56                 // Field WINDOW_CLOSE:Ljava/lang/Object;
      17: invokeinterface #62,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      22: pop
      23: aload_0
      24: invokevirtual #63                 // Method drain:()V
      27: return

  static {};
    Code:
       0: new           #64                 // class java/lang/Object
       3: dup
       4: invokespecial #65                 // Method java/lang/Object."<init>":()V
       7: putstatic     #54                 // Field WINDOW_OPEN:Ljava/lang/Object;
      10: new           #64                 // class java/lang/Object
      13: dup
      14: invokespecial #65                 // Method java/lang/Object."<init>":()V
      17: putstatic     #56                 // Field WINDOW_CLOSE:Ljava/lang/Object;
      20: return
}
