Compiled from "FlowableReduceMaybe.java"
public final class io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceMaybe<T> extends io.reactivex.rxjava3.core.Maybe<T> implements io.reactivex.rxjava3.internal.fuseable.HasUpstreamPublisher<T>, io.reactivex.rxjava3.internal.fuseable.FuseToFlowable<T> {
  final io.reactivex.rxjava3.core.Flowable<T> source;

  final io.reactivex.rxjava3.functions.BiFunction<T, T, T> reducer;

  public io.reactivex.rxjava3.internal.operators.flowable.FlowableReduceMaybe(io.reactivex.rxjava3.core.Flowable<T>, io.reactivex.rxjava3.functions.BiFunction<T, T, T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/core/Maybe."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lio/reactivex/rxjava3/core/Flowable;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field reducer:Lio/reactivex/rxjava3/functions/BiFunction;
      14: return

  public org.reactivestreams.Publisher<T> source();
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lio/reactivex/rxjava3/core/Flowable;
       4: areturn

  public io.reactivex.rxjava3.core.Flowable<T> fuseToFlowable();
    Code:
       0: new           #4                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReduce
       3: dup
       4: aload_0
       5: getfield      #2                  // Field source:Lio/reactivex/rxjava3/core/Flowable;
       8: aload_0
       9: getfield      #3                  // Field reducer:Lio/reactivex/rxjava3/functions/BiFunction;
      12: invokespecial #5                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReduce."<init>":(Lio/reactivex/rxjava3/core/Flowable;Lio/reactivex/rxjava3/functions/BiFunction;)V
      15: invokestatic  #6                  // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onAssembly:(Lio/reactivex/rxjava3/core/Flowable;)Lio/reactivex/rxjava3/core/Flowable;
      18: areturn

  protected void subscribeActual(io.reactivex.rxjava3.core.MaybeObserver<? super T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lio/reactivex/rxjava3/core/Flowable;
       4: new           #7                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReduceMaybe$ReduceSubscriber
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field reducer:Lio/reactivex/rxjava3/functions/BiFunction;
      13: invokespecial #8                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReduceMaybe$ReduceSubscriber."<init>":(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/functions/BiFunction;)V
      16: invokevirtual #9                  // Method io/reactivex/rxjava3/core/Flowable.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V
      19: return
}
