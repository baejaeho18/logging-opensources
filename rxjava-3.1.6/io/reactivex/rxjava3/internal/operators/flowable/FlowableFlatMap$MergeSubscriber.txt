Compiled from "FlowableFlatMap.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap$MergeSubscriber<T, U> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super U> downstream;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends org.reactivestreams.Publisher<? extends U>> mapper;

  final boolean delayErrors;

  final int maxConcurrency;

  final int bufferSize;

  volatile io.reactivex.rxjava3.operators.SimplePlainQueue<U> queue;

  volatile boolean done;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable errors;

  volatile boolean cancelled;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap$InnerSubscriber<?, ?>[]> subscribers;

  static final io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap$InnerSubscriber<?, ?>[] EMPTY;

  static final io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap$InnerSubscriber<?, ?>[] CANCELLED;

  final java.util.concurrent.atomic.AtomicLong requested;

  org.reactivestreams.Subscription upstream;

  long uniqueId;

  long lastId;

  int lastIndex;

  int scalarEmitted;

  final int scalarLimit;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap$MergeSubscriber(org.reactivestreams.Subscriber<? super U>, io.reactivex.rxjava3.functions.Function<? super T, ? extends org.reactivestreams.Publisher<? extends U>>, boolean, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: new           #2                  // class io/reactivex/rxjava3/internal/util/AtomicThrowable
       8: dup
       9: invokespecial #3                  // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      12: putfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicReference
      19: dup
      20: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      23: putfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      26: aload_0
      27: new           #8                  // class java/util/concurrent/atomic/AtomicLong
      30: dup
      31: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      34: putfield      #10                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      37: aload_0
      38: aload_1
      39: putfield      #11                 // Field downstream:Lorg/reactivestreams/Subscriber;
      42: aload_0
      43: aload_2
      44: putfield      #12                 // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      47: aload_0
      48: iload_3
      49: putfield      #13                 // Field delayErrors:Z
      52: aload_0
      53: iload         4
      55: putfield      #14                 // Field maxConcurrency:I
      58: aload_0
      59: iload         5
      61: putfield      #15                 // Field bufferSize:I
      64: aload_0
      65: iconst_1
      66: iload         4
      68: iconst_1
      69: ishr
      70: invokestatic  #16                 // Method java/lang/Math.max:(II)I
      73: putfield      #17                 // Field scalarLimit:I
      76: aload_0
      77: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      80: getstatic     #18                 // Field EMPTY:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;
      83: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
      86: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #20                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #21                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          65
      11: aload_0
      12: aload_1
      13: putfield      #20                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #11                 // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #22,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_0
      27: getfield      #23                 // Field cancelled:Z
      30: ifne          65
      33: aload_0
      34: getfield      #14                 // Field maxConcurrency:I
      37: ldc           #25                 // int 2147483647
      39: if_icmpne     54
      42: aload_1
      43: ldc2_w        #27                 // long 9223372036854775807l
      46: invokeinterface #29,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      51: goto          65
      54: aload_1
      55: aload_0
      56: getfield      #14                 // Field maxConcurrency:I
      59: i2l
      60: invokeinterface #29,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      65: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #30                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #12                 // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      12: aload_1
      13: invokeinterface #31,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: ldc           #32                 // String The mapper returned a null Publisher
      20: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      23: checkcast     #34                 // class org/reactivestreams/Publisher
      26: astore_2
      27: goto          50
      30: astore_3
      31: aload_3
      32: invokestatic  #36                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      35: aload_0
      36: getfield      #20                 // Field upstream:Lorg/reactivestreams/Subscription;
      39: invokeinterface #37,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      44: aload_0
      45: aload_3
      46: invokevirtual #38                 // Method onError:(Ljava/lang/Throwable;)V
      49: return
      50: aload_2
      51: instanceof    #39                 // class io/reactivex/rxjava3/functions/Supplier
      54: ifeq          160
      57: aload_2
      58: checkcast     #39                 // class io/reactivex/rxjava3/functions/Supplier
      61: invokeinterface #40,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
      66: astore_3
      67: goto          92
      70: astore        4
      72: aload         4
      74: invokestatic  #36                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      77: aload_0
      78: getfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      81: aload         4
      83: invokevirtual #41                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      86: pop
      87: aload_0
      88: invokevirtual #42                 // Method drain:()V
      91: return
      92: aload_3
      93: ifnull        104
      96: aload_0
      97: aload_3
      98: invokevirtual #43                 // Method tryEmitScalar:(Ljava/lang/Object;)V
     101: goto          157
     104: aload_0
     105: getfield      #14                 // Field maxConcurrency:I
     108: ldc           #25                 // int 2147483647
     110: if_icmpeq     157
     113: aload_0
     114: getfield      #23                 // Field cancelled:Z
     117: ifne          157
     120: aload_0
     121: dup
     122: getfield      #44                 // Field scalarEmitted:I
     125: iconst_1
     126: iadd
     127: dup_x1
     128: putfield      #44                 // Field scalarEmitted:I
     131: aload_0
     132: getfield      #17                 // Field scalarLimit:I
     135: if_icmpne     157
     138: aload_0
     139: iconst_0
     140: putfield      #44                 // Field scalarEmitted:I
     143: aload_0
     144: getfield      #20                 // Field upstream:Lorg/reactivestreams/Subscription;
     147: aload_0
     148: getfield      #17                 // Field scalarLimit:I
     151: i2l
     152: invokeinterface #29,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     157: goto          199
     160: new           #45                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber
     163: dup
     164: aload_0
     165: aload_0
     166: getfield      #15                 // Field bufferSize:I
     169: aload_0
     170: dup
     171: getfield      #46                 // Field uniqueId:J
     174: dup2_x1
     175: lconst_1
     176: ladd
     177: putfield      #46                 // Field uniqueId:J
     180: invokespecial #47                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$MergeSubscriber;IJ)V
     183: astore_3
     184: aload_0
     185: aload_3
     186: invokevirtual #48                 // Method addInner:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;)Z
     189: ifeq          199
     192: aload_2
     193: aload_3
     194: invokeinterface #49,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     199: return
    Exception table:
       from    to  target type
           8    27    30   Class java/lang/Throwable
          57    67    70   Class java/lang/Throwable

  boolean addInner(io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap$InnerSubscriber<T, U>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #51                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;"
      10: astore_2
      11: aload_2
      12: getstatic     #52                 // Field CANCELLED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;
      15: if_acmpne     24
      18: aload_1
      19: invokevirtual #53                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.dispose:()V
      22: iconst_0
      23: ireturn
      24: aload_2
      25: arraylength
      26: istore_3
      27: iload_3
      28: iconst_1
      29: iadd
      30: anewarray     #45                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber
      33: astore        4
      35: aload_2
      36: iconst_0
      37: aload         4
      39: iconst_0
      40: iload_3
      41: invokestatic  #54                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      44: aload         4
      46: iload_3
      47: aload_1
      48: aastore
      49: aload_0
      50: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      53: aload_2
      54: aload         4
      56: invokevirtual #55                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      59: ifeq          64
      62: iconst_1
      63: ireturn
      64: goto          0

  void removeInner(io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap$InnerSubscriber<T, U>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #51                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;"
      10: astore_2
      11: aload_2
      12: arraylength
      13: istore_3
      14: iload_3
      15: ifne          19
      18: return
      19: iconst_m1
      20: istore        4
      22: iconst_0
      23: istore        5
      25: iload         5
      27: iload_3
      28: if_icmpge     52
      31: aload_2
      32: iload         5
      34: aaload
      35: aload_1
      36: if_acmpne     46
      39: iload         5
      41: istore        4
      43: goto          52
      46: iinc          5, 1
      49: goto          25
      52: iload         4
      54: ifge          58
      57: return
      58: iload_3
      59: iconst_1
      60: if_icmpne     71
      63: getstatic     #18                 // Field EMPTY:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;
      66: astore        5
      68: goto          107
      71: iload_3
      72: iconst_1
      73: isub
      74: anewarray     #45                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber
      77: astore        5
      79: aload_2
      80: iconst_0
      81: aload         5
      83: iconst_0
      84: iload         4
      86: invokestatic  #54                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      89: aload_2
      90: iload         4
      92: iconst_1
      93: iadd
      94: aload         5
      96: iload         4
      98: iload_3
      99: iload         4
     101: isub
     102: iconst_1
     103: isub
     104: invokestatic  #54                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     107: aload_0
     108: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
     111: aload_2
     112: aload         5
     114: invokevirtual #55                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     117: ifeq          121
     120: return
     121: goto          0

  io.reactivex.rxjava3.operators.SimpleQueue<U> getMainQueue();
    Code:
       0: aload_0
       1: getfield      #56                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
       4: astore_1
       5: aload_1
       6: ifnonnull     50
       9: aload_0
      10: getfield      #14                 // Field maxConcurrency:I
      13: ldc           #25                 // int 2147483647
      15: if_icmpne     33
      18: new           #57                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      21: dup
      22: aload_0
      23: getfield      #15                 // Field bufferSize:I
      26: invokespecial #58                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue."<init>":(I)V
      29: astore_1
      30: goto          45
      33: new           #59                 // class io/reactivex/rxjava3/operators/SpscArrayQueue
      36: dup
      37: aload_0
      38: getfield      #14                 // Field maxConcurrency:I
      41: invokespecial #60                 // Method io/reactivex/rxjava3/operators/SpscArrayQueue."<init>":(I)V
      44: astore_1
      45: aload_0
      46: aload_1
      47: putfield      #56                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      50: aload_1
      51: areturn

  void tryEmitScalar(U);
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method get:()I
       4: ifne          177
       7: aload_0
       8: iconst_0
       9: iconst_1
      10: invokevirtual #62                 // Method compareAndSet:(II)Z
      13: ifeq          177
      16: aload_0
      17: getfield      #10                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      20: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      23: lstore_2
      24: aload_0
      25: getfield      #56                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      28: astore        4
      30: lload_2
      31: lconst_0
      32: lcmp
      33: ifeq          133
      36: aload         4
      38: ifnull        51
      41: aload         4
      43: invokeinterface #64,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.isEmpty:()Z
      48: ifeq          133
      51: aload_0
      52: getfield      #11                 // Field downstream:Lorg/reactivestreams/Subscriber;
      55: aload_1
      56: invokeinterface #65,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      61: lload_2
      62: ldc2_w        #27                 // long 9223372036854775807l
      65: lcmp
      66: ifeq          77
      69: aload_0
      70: getfield      #10                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      73: invokevirtual #66                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
      76: pop2
      77: aload_0
      78: getfield      #14                 // Field maxConcurrency:I
      81: ldc           #25                 // int 2147483647
      83: if_icmpeq     166
      86: aload_0
      87: getfield      #23                 // Field cancelled:Z
      90: ifne          166
      93: aload_0
      94: dup
      95: getfield      #44                 // Field scalarEmitted:I
      98: iconst_1
      99: iadd
     100: dup_x1
     101: putfield      #44                 // Field scalarEmitted:I
     104: aload_0
     105: getfield      #17                 // Field scalarLimit:I
     108: if_icmpne     166
     111: aload_0
     112: iconst_0
     113: putfield      #44                 // Field scalarEmitted:I
     116: aload_0
     117: getfield      #20                 // Field upstream:Lorg/reactivestreams/Subscription;
     120: aload_0
     121: getfield      #17                 // Field scalarLimit:I
     124: i2l
     125: invokeinterface #29,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     130: goto          166
     133: aload         4
     135: ifnonnull     144
     138: aload_0
     139: invokevirtual #67                 // Method getMainQueue:()Lio/reactivex/rxjava3/operators/SimpleQueue;
     142: astore        4
     144: aload         4
     146: aload_1
     147: invokeinterface #68,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.offer:(Ljava/lang/Object;)Z
     152: ifne          166
     155: aload_0
     156: new           #69                 // class io/reactivex/rxjava3/exceptions/QueueOverflowException
     159: dup
     160: invokespecial #70                 // Method io/reactivex/rxjava3/exceptions/QueueOverflowException."<init>":()V
     163: invokevirtual #38                 // Method onError:(Ljava/lang/Throwable;)V
     166: aload_0
     167: invokevirtual #71                 // Method decrementAndGet:()I
     170: ifne          174
     173: return
     174: goto          212
     177: aload_0
     178: invokevirtual #67                 // Method getMainQueue:()Lio/reactivex/rxjava3/operators/SimpleQueue;
     181: astore_2
     182: aload_2
     183: aload_1
     184: invokeinterface #68,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.offer:(Ljava/lang/Object;)Z
     189: ifne          204
     192: aload_0
     193: new           #69                 // class io/reactivex/rxjava3/exceptions/QueueOverflowException
     196: dup
     197: invokespecial #70                 // Method io/reactivex/rxjava3/exceptions/QueueOverflowException."<init>":()V
     200: invokevirtual #38                 // Method onError:(Ljava/lang/Throwable;)V
     203: return
     204: aload_0
     205: invokevirtual #72                 // Method getAndIncrement:()I
     208: ifeq          212
     211: return
     212: aload_0
     213: invokevirtual #73                 // Method drainLoop:()V
     216: return

  void tryEmit(U, io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap$InnerSubscriber<T, U>);
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method get:()I
       4: ifne          142
       7: aload_0
       8: iconst_0
       9: iconst_1
      10: invokevirtual #62                 // Method compareAndSet:(II)Z
      13: ifeq          142
      16: aload_0
      17: getfield      #10                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      20: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      23: lstore_3
      24: aload_2
      25: getfield      #74                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      28: astore        5
      30: lload_3
      31: lconst_0
      32: lcmp
      33: ifeq          85
      36: aload         5
      38: ifnull        51
      41: aload         5
      43: invokeinterface #64,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.isEmpty:()Z
      48: ifeq          85
      51: aload_0
      52: getfield      #11                 // Field downstream:Lorg/reactivestreams/Subscriber;
      55: aload_1
      56: invokeinterface #65,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      61: lload_3
      62: ldc2_w        #27                 // long 9223372036854775807l
      65: lcmp
      66: ifeq          77
      69: aload_0
      70: getfield      #10                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      73: invokevirtual #66                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
      76: pop2
      77: aload_2
      78: lconst_1
      79: invokevirtual #75                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.requestMore:(J)V
      82: goto          131
      85: aload         5
      87: ifnonnull     109
      90: new           #59                 // class io/reactivex/rxjava3/operators/SpscArrayQueue
      93: dup
      94: aload_0
      95: getfield      #15                 // Field bufferSize:I
      98: invokespecial #60                 // Method io/reactivex/rxjava3/operators/SpscArrayQueue."<init>":(I)V
     101: astore        5
     103: aload_2
     104: aload         5
     106: putfield      #74                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
     109: aload         5
     111: aload_1
     112: invokeinterface #68,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.offer:(Ljava/lang/Object;)Z
     117: ifne          131
     120: aload_0
     121: new           #69                 // class io/reactivex/rxjava3/exceptions/QueueOverflowException
     124: dup
     125: invokespecial #70                 // Method io/reactivex/rxjava3/exceptions/QueueOverflowException."<init>":()V
     128: invokevirtual #38                 // Method onError:(Ljava/lang/Throwable;)V
     131: aload_0
     132: invokevirtual #71                 // Method decrementAndGet:()I
     135: ifne          139
     138: return
     139: goto          198
     142: aload_2
     143: getfield      #74                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
     146: astore_3
     147: aload_3
     148: ifnonnull     168
     151: new           #59                 // class io/reactivex/rxjava3/operators/SpscArrayQueue
     154: dup
     155: aload_0
     156: getfield      #15                 // Field bufferSize:I
     159: invokespecial #60                 // Method io/reactivex/rxjava3/operators/SpscArrayQueue."<init>":(I)V
     162: astore_3
     163: aload_2
     164: aload_3
     165: putfield      #74                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
     168: aload_3
     169: aload_1
     170: invokeinterface #68,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.offer:(Ljava/lang/Object;)Z
     175: ifne          190
     178: aload_0
     179: new           #69                 // class io/reactivex/rxjava3/exceptions/QueueOverflowException
     182: dup
     183: invokespecial #70                 // Method io/reactivex/rxjava3/exceptions/QueueOverflowException."<init>":()V
     186: invokevirtual #38                 // Method onError:(Ljava/lang/Throwable;)V
     189: return
     190: aload_0
     191: invokevirtual #72                 // Method getAndIncrement:()I
     194: ifeq          198
     197: return
     198: aload_0
     199: invokevirtual #73                 // Method drainLoop:()V
     202: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #30                 // Field done:Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #76                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      11: return
      12: aload_0
      13: getfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      16: aload_1
      17: invokevirtual #41                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
      20: ifeq          82
      23: aload_0
      24: iconst_1
      25: putfield      #30                 // Field done:Z
      28: aload_0
      29: getfield      #13                 // Field delayErrors:Z
      32: ifne          78
      35: aload_0
      36: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      39: getstatic     #52                 // Field CANCELLED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;
      42: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #51                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;"
      48: astore_2
      49: aload_2
      50: arraylength
      51: istore_3
      52: iconst_0
      53: istore        4
      55: iload         4
      57: iload_3
      58: if_icmpge     78
      61: aload_2
      62: iload         4
      64: aaload
      65: astore        5
      67: aload         5
      69: invokevirtual #53                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.dispose:()V
      72: iinc          4, 1
      75: goto          55
      78: aload_0
      79: invokevirtual #42                 // Method drain:()V
      82: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #30                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #30                 // Field done:Z
      13: aload_0
      14: invokevirtual #42                 // Method drain:()V
      17: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #78                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          20
       7: aload_0
       8: getfield      #10                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      11: lload_1
      12: invokestatic  #79                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      15: pop2
      16: aload_0
      17: invokevirtual #42                 // Method drain:()V
      20: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #23                 // Field cancelled:Z
       4: ifne          47
       7: aload_0
       8: iconst_1
       9: putfield      #23                 // Field cancelled:Z
      12: aload_0
      13: getfield      #20                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: invokeinterface #37,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      21: aload_0
      22: invokevirtual #80                 // Method disposeAll:()V
      25: aload_0
      26: invokevirtual #72                 // Method getAndIncrement:()I
      29: ifne          47
      32: aload_0
      33: getfield      #56                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      36: astore_1
      37: aload_1
      38: ifnull        47
      41: aload_1
      42: invokeinterface #81,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.clear:()V
      47: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method getAndIncrement:()I
       4: ifne          11
       7: aload_0
       8: invokevirtual #73                 // Method drainLoop:()V
      11: return

  void drainLoop();
    Code:
       0: aload_0
       1: getfield      #11                 // Field downstream:Lorg/reactivestreams/Subscriber;
       4: astore_1
       5: iconst_1
       6: istore_2
       7: aload_0
       8: invokevirtual #82                 // Method checkTerminate:()Z
      11: ifeq          15
      14: return
      15: aload_0
      16: getfield      #56                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      19: astore_3
      20: aload_0
      21: getfield      #10                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      24: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      27: lstore        4
      29: lload         4
      31: ldc2_w        #27                 // long 9223372036854775807l
      34: lcmp
      35: ifne          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: istore        6
      45: lconst_0
      46: lstore        7
      48: aload_3
      49: ifnull        150
      52: lconst_0
      53: lstore        9
      55: aconst_null
      56: astore        11
      58: lload         4
      60: lconst_0
      61: lcmp
      62: ifeq          118
      65: aload_3
      66: invokeinterface #83,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.poll:()Ljava/lang/Object;
      71: astore        11
      73: aload_0
      74: invokevirtual #82                 // Method checkTerminate:()Z
      77: ifeq          81
      80: return
      81: aload         11
      83: ifnonnull     89
      86: goto          118
      89: aload_1
      90: aload         11
      92: invokeinterface #65,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      97: lload         7
      99: lconst_1
     100: ladd
     101: lstore        7
     103: lload         9
     105: lconst_1
     106: ladd
     107: lstore        9
     109: lload         4
     111: lconst_1
     112: lsub
     113: lstore        4
     115: goto          58
     118: lload         9
     120: lconst_0
     121: lcmp
     122: ifeq          150
     125: iload         6
     127: ifeq          138
     130: ldc2_w        #27                 // long 9223372036854775807l
     133: lstore        4
     135: goto          150
     138: aload_0
     139: getfield      #10                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     142: lload         9
     144: lneg
     145: invokevirtual #84                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
     148: lstore        4
     150: aload_0
     151: getfield      #30                 // Field done:Z
     154: istore        9
     156: aload_0
     157: getfield      #56                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
     160: astore_3
     161: aload_0
     162: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
     165: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     168: checkcast     #51                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;"
     171: astore        10
     173: aload         10
     175: arraylength
     176: istore        11
     178: iload         9
     180: ifeq          213
     183: aload_3
     184: ifnull        196
     187: aload_3
     188: invokeinterface #85,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.isEmpty:()Z
     193: ifeq          213
     196: iload         11
     198: ifne          213
     201: aload_0
     202: getfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     205: aload_0
     206: getfield      #11                 // Field downstream:Lorg/reactivestreams/Subscriber;
     209: invokevirtual #86                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     212: return
     213: iconst_0
     214: istore        12
     216: iload         11
     218: ifeq          666
     221: aload_0
     222: getfield      #87                 // Field lastId:J
     225: lstore        13
     227: aload_0
     228: getfield      #88                 // Field lastIndex:I
     231: istore        15
     233: iload         11
     235: iload         15
     237: if_icmple     254
     240: aload         10
     242: iload         15
     244: aaload
     245: getfield      #89                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.id:J
     248: lload         13
     250: lcmp
     251: ifeq          336
     254: iload         11
     256: iload         15
     258: if_icmpgt     264
     261: iconst_0
     262: istore        15
     264: iload         15
     266: istore        16
     268: iconst_0
     269: istore        17
     271: iload         17
     273: iload         11
     275: if_icmpge     314
     278: aload         10
     280: iload         16
     282: aaload
     283: getfield      #89                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.id:J
     286: lload         13
     288: lcmp
     289: ifne          295
     292: goto          314
     295: iinc          16, 1
     298: iload         16
     300: iload         11
     302: if_icmpne     308
     305: iconst_0
     306: istore        16
     308: iinc          17, 1
     311: goto          271
     314: iload         16
     316: istore        15
     318: aload_0
     319: iload         16
     321: putfield      #88                 // Field lastIndex:I
     324: aload_0
     325: aload         10
     327: iload         16
     329: aaload
     330: getfield      #89                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.id:J
     333: putfield      #87                 // Field lastId:J
     336: iload         15
     338: istore        16
     340: iconst_0
     341: istore        17
     343: iload         17
     345: iload         11
     347: if_icmpge     648
     350: aload_0
     351: invokevirtual #82                 // Method checkTerminate:()Z
     354: ifeq          358
     357: return
     358: aload         10
     360: iload         16
     362: aaload
     363: astore        18
     365: aconst_null
     366: astore        19
     368: aload         18
     370: getfield      #74                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
     373: astore        20
     375: aload         20
     377: ifnonnull     383
     380: goto          562
     383: lconst_0
     384: lstore        21
     386: lload         4
     388: lconst_0
     389: lcmp
     390: ifeq          505
     393: aload_0
     394: invokevirtual #82                 // Method checkTerminate:()Z
     397: ifeq          401
     400: return
     401: aload         20
     403: invokeinterface #90,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.poll:()Ljava/lang/Object;
     408: astore        19
     410: goto          474
     413: astore        23
     415: aload         23
     417: invokestatic  #36                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     420: aload         18
     422: invokevirtual #53                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.dispose:()V
     425: aload_0
     426: getfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     429: aload         23
     431: invokevirtual #41                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     434: pop
     435: aload_0
     436: getfield      #13                 // Field delayErrors:Z
     439: ifne          451
     442: aload_0
     443: getfield      #20                 // Field upstream:Lorg/reactivestreams/Subscription;
     446: invokeinterface #37,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     451: aload_0
     452: invokevirtual #82                 // Method checkTerminate:()Z
     455: ifeq          459
     458: return
     459: aload_0
     460: aload         18
     462: invokevirtual #91                 // Method removeInner:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;)V
     465: iconst_1
     466: istore        12
     468: iinc          17, 1
     471: goto          642
     474: aload         19
     476: ifnonnull     482
     479: goto          505
     482: aload_1
     483: aload         19
     485: invokeinterface #65,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     490: lload         4
     492: lconst_1
     493: lsub
     494: lstore        4
     496: lload         21
     498: lconst_1
     499: ladd
     500: lstore        21
     502: goto          386
     505: lload         21
     507: lconst_0
     508: lcmp
     509: ifeq          544
     512: iload         6
     514: ifne          532
     517: aload_0
     518: getfield      #10                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     521: lload         21
     523: lneg
     524: invokevirtual #84                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
     527: lstore        4
     529: goto          537
     532: ldc2_w        #27                 // long 9223372036854775807l
     535: lstore        4
     537: aload         18
     539: lload         21
     541: invokevirtual #75                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.requestMore:(J)V
     544: lload         4
     546: lconst_0
     547: lcmp
     548: ifeq          562
     551: aload         19
     553: ifnonnull     559
     556: goto          562
     559: goto          368
     562: aload         18
     564: getfield      #92                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.done:Z
     567: istore        20
     569: aload         18
     571: getfield      #74                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
     574: astore        21
     576: iload         20
     578: ifeq          619
     581: aload         21
     583: ifnull        596
     586: aload         21
     588: invokeinterface #64,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.isEmpty:()Z
     593: ifeq          619
     596: aload_0
     597: aload         18
     599: invokevirtual #91                 // Method removeInner:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;)V
     602: aload_0
     603: invokevirtual #82                 // Method checkTerminate:()Z
     606: ifeq          610
     609: return
     610: lload         7
     612: lconst_1
     613: ladd
     614: lstore        7
     616: iconst_1
     617: istore        12
     619: lload         4
     621: lconst_0
     622: lcmp
     623: ifne          629
     626: goto          648
     629: iinc          16, 1
     632: iload         16
     634: iload         11
     636: if_icmpne     642
     639: iconst_0
     640: istore        16
     642: iinc          17, 1
     645: goto          343
     648: aload_0
     649: iload         16
     651: putfield      #88                 // Field lastIndex:I
     654: aload_0
     655: aload         10
     657: iload         16
     659: aaload
     660: getfield      #89                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.id:J
     663: putfield      #87                 // Field lastId:J
     666: lload         7
     668: lconst_0
     669: lcmp
     670: ifeq          691
     673: aload_0
     674: getfield      #23                 // Field cancelled:Z
     677: ifne          691
     680: aload_0
     681: getfield      #20                 // Field upstream:Lorg/reactivestreams/Subscription;
     684: lload         7
     686: invokeinterface #29,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     691: iload         12
     693: ifeq          699
     696: goto          7
     699: aload_0
     700: iload_2
     701: ineg
     702: invokevirtual #93                 // Method addAndGet:(I)I
     705: istore_2
     706: iload_2
     707: ifne          713
     710: goto          716
     713: goto          7
     716: return
    Exception table:
       from    to  target type
         401   410   413   Class java/lang/Throwable

  boolean checkTerminate();
    Code:
       0: aload_0
       1: getfield      #23                 // Field cancelled:Z
       4: ifeq          13
       7: aload_0
       8: invokevirtual #94                 // Method clearScalarQueue:()V
      11: iconst_1
      12: ireturn
      13: aload_0
      14: getfield      #13                 // Field delayErrors:Z
      17: ifne          47
      20: aload_0
      21: getfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      24: invokevirtual #95                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
      27: ifnull        47
      30: aload_0
      31: invokevirtual #94                 // Method clearScalarQueue:()V
      34: aload_0
      35: getfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      38: aload_0
      39: getfield      #11                 // Field downstream:Lorg/reactivestreams/Subscriber;
      42: invokevirtual #86                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
      45: iconst_1
      46: ireturn
      47: iconst_0
      48: ireturn

  void clearScalarQueue();
    Code:
       0: aload_0
       1: getfield      #56                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #81,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.clear:()V
      15: return

  void disposeAll();
    Code:
       0: aload_0
       1: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: getstatic     #52                 // Field CANCELLED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;
       7: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #51                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;"
      13: astore_1
      14: aload_1
      15: getstatic     #52                 // Field CANCELLED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;
      18: if_acmpeq     59
      21: aload_1
      22: astore_2
      23: aload_2
      24: arraylength
      25: istore_3
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_3
      32: if_icmpge     52
      35: aload_2
      36: iload         4
      38: aaload
      39: astore        5
      41: aload         5
      43: invokevirtual #53                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.dispose:()V
      46: iinc          4, 1
      49: goto          29
      52: aload_0
      53: getfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      56: invokevirtual #96                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      59: return

  void innerError(io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap$InnerSubscriber<T, U>, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       4: aload_2
       5: invokevirtual #41                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
       8: ifeq          81
      11: aload_1
      12: iconst_1
      13: putfield      #92                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.done:Z
      16: aload_0
      17: getfield      #13                 // Field delayErrors:Z
      20: ifne          77
      23: aload_0
      24: getfield      #20                 // Field upstream:Lorg/reactivestreams/Subscription;
      27: invokeinterface #37,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      32: aload_0
      33: getfield      #7                  // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      36: getstatic     #52                 // Field CANCELLED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;
      39: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #51                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;"
      45: astore_3
      46: aload_3
      47: arraylength
      48: istore        4
      50: iconst_0
      51: istore        5
      53: iload         5
      55: iload         4
      57: if_icmpge     77
      60: aload_3
      61: iload         5
      63: aaload
      64: astore        6
      66: aload         6
      68: invokevirtual #53                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber.dispose:()V
      71: iinc          5, 1
      74: goto          53
      77: aload_0
      78: invokevirtual #42                 // Method drain:()V
      81: return

  static {};
    Code:
       0: iconst_0
       1: anewarray     #45                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber
       4: putstatic     #18                 // Field EMPTY:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;
       7: iconst_0
       8: anewarray     #45                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber
      11: putstatic     #52                 // Field CANCELLED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;
      14: return
}
