Compiled from "FlowableConcatMap.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$SimpleScalarSubscription<T> extends java.util.concurrent.atomic.AtomicBoolean implements org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super T> downstream;

  final T value;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMap$SimpleScalarSubscription(T, org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field value:Ljava/lang/Object;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field downstream:Lorg/reactivestreams/Subscriber;
      14: return

  public void request(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          36
       6: aload_0
       7: iconst_0
       8: iconst_1
       9: invokevirtual #4                  // Method compareAndSet:(ZZ)Z
      12: ifeq          36
      15: aload_0
      16: getfield      #3                  // Field downstream:Lorg/reactivestreams/Subscriber;
      19: astore_3
      20: aload_3
      21: aload_0
      22: getfield      #2                  // Field value:Ljava/lang/Object;
      25: invokeinterface #5,  2            // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      30: aload_3
      31: invokeinterface #6,  1            // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      36: return

  public void cancel();
    Code:
       0: return
}
