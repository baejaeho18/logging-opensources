Compiled from "FlowableTimer.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableTimer$TimerSubscriber extends java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> implements org.reactivestreams.Subscription, java.lang.Runnable {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super java.lang.Long> downstream;

  volatile boolean requested;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableTimer$TimerSubscriber(org.reactivestreams.Subscriber<? super java.lang.Long>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #3                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          12
       7: aload_0
       8: iconst_1
       9: putfield      #4                  // Field requested:Z
      12: return

  public void cancel();
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: return

  public void run();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method get:()Ljava/lang/Object;
       4: getstatic     #7                  // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
       7: if_acmpeq     68
      10: aload_0
      11: getfield      #4                  // Field requested:Z
      14: ifeq          49
      17: aload_0
      18: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      21: lconst_0
      22: invokestatic  #8                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: invokeinterface #9,  2            // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      30: aload_0
      31: getstatic     #10                 // Field io/reactivex/rxjava3/internal/disposables/EmptyDisposable.INSTANCE:Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;
      34: invokevirtual #11                 // Method lazySet:(Ljava/lang/Object;)V
      37: aload_0
      38: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      41: invokeinterface #12,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      46: goto          68
      49: aload_0
      50: getstatic     #10                 // Field io/reactivex/rxjava3/internal/disposables/EmptyDisposable.INSTANCE:Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;
      53: invokevirtual #11                 // Method lazySet:(Ljava/lang/Object;)V
      56: aload_0
      57: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      60: invokestatic  #13                 // Method io/reactivex/rxjava3/exceptions/MissingBackpressureException.createDefault:()Lio/reactivex/rxjava3/exceptions/MissingBackpressureException;
      63: invokeinterface #14,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      68: return

  public void setResource(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #15                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.trySet:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       5: pop
       6: return
}
