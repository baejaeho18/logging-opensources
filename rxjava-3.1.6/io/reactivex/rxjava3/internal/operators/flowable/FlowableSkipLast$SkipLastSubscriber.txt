Compiled from "FlowableSkipLast.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber<T> extends java.util.ArrayDeque<T> implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super T> downstream;

  final int skip;

  org.reactivestreams.Subscription upstream;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber(org.reactivestreams.Subscriber<? super T>, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #1                  // Method java/util/ArrayDeque."<init>":(I)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      10: aload_0
      11: iload_2
      12: putfield      #3                  // Field skip:I
      15: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #5                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #6,  2            // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field skip:I
       4: aload_0
       5: invokevirtual #7                  // Method size:()I
       8: if_icmpne     27
      11: aload_0
      12: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      15: aload_0
      16: invokevirtual #8                  // Method poll:()Ljava/lang/Object;
      19: invokeinterface #9,  2            // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      24: goto          37
      27: aload_0
      28: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
      31: lconst_1
      32: invokeinterface #10,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      37: aload_0
      38: aload_1
      39: invokevirtual #11                 // Method offer:(Ljava/lang/Object;)Z
      42: pop
      43: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: invokeinterface #13,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
       9: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #10,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: invokeinterface #14,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return
}
