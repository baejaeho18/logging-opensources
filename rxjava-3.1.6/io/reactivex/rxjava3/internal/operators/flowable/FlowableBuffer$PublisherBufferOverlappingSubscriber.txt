Compiled from "FlowableBuffer.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber<T, C extends java.util.Collection<? super T>> extends java.util.concurrent.atomic.AtomicLong implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription, io.reactivex.rxjava3.functions.BooleanSupplier {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super C> downstream;

  final io.reactivex.rxjava3.functions.Supplier<C> bufferSupplier;

  final int size;

  final int skip;

  final java.util.ArrayDeque<C> buffers;

  final java.util.concurrent.atomic.AtomicBoolean once;

  org.reactivestreams.Subscription upstream;

  boolean done;

  int index;

  volatile boolean cancelled;

  long produced;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber(org.reactivestreams.Subscriber<? super C>, int, int, io.reactivex.rxjava3.functions.Supplier<C>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field size:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field skip:I
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field bufferSupplier:Lio/reactivex/rxjava3/functions/Supplier;
      25: aload_0
      26: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
      29: dup
      30: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      33: putfield      #8                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
      36: aload_0
      37: new           #9                  // class java/util/ArrayDeque
      40: dup
      41: invokespecial #10                 // Method java/util/ArrayDeque."<init>":()V
      44: putfield      #11                 // Field buffers:Ljava/util/ArrayDeque;
      47: return

  public boolean getAsBoolean();
    Code:
       0: aload_0
       1: getfield      #12                 // Field cancelled:Z
       4: ireturn

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #13                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          104
       7: lload_1
       8: aload_0
       9: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      12: aload_0
      13: getfield      #11                 // Field buffers:Ljava/util/ArrayDeque;
      16: aload_0
      17: aload_0
      18: invokestatic  #14                 // Method io/reactivex/rxjava3/internal/util/QueueDrainHelper.postCompleteRequest:(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/rxjava3/functions/BooleanSupplier;)Z
      21: ifeq          25
      24: return
      25: aload_0
      26: getfield      #8                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
      29: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      32: ifne          84
      35: aload_0
      36: getfield      #8                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
      39: iconst_0
      40: iconst_1
      41: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      44: ifeq          84
      47: aload_0
      48: getfield      #4                  // Field skip:I
      51: i2l
      52: lload_1
      53: lconst_1
      54: lsub
      55: invokestatic  #17                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.multiplyCap:(JJ)J
      58: lstore_3
      59: aload_0
      60: getfield      #3                  // Field size:I
      63: i2l
      64: lload_3
      65: invokestatic  #18                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.addCap:(JJ)J
      68: lstore        5
      70: aload_0
      71: getfield      #19                 // Field upstream:Lorg/reactivestreams/Subscription;
      74: lload         5
      76: invokeinterface #20,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      81: goto          104
      84: aload_0
      85: getfield      #4                  // Field skip:I
      88: i2l
      89: lload_1
      90: invokestatic  #17                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.multiplyCap:(JJ)J
      93: lstore_3
      94: aload_0
      95: getfield      #19                 // Field upstream:Lorg/reactivestreams/Subscription;
      98: lload_3
      99: invokeinterface #20,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     104: return

  public void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #12                 // Field cancelled:Z
       5: aload_0
       6: getfield      #19                 // Field upstream:Lorg/reactivestreams/Subscription;
       9: invokeinterface #21,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      14: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #19                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #22                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #19                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #23,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #24                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #11                 // Field buffers:Ljava/util/ArrayDeque;
      12: astore_2
      13: aload_0
      14: getfield      #25                 // Field index:I
      17: istore_3
      18: iload_3
      19: iinc          3, 1
      22: ifne          72
      25: aload_0
      26: getfield      #5                  // Field bufferSupplier:Lio/reactivex/rxjava3/functions/Supplier;
      29: invokeinterface #26,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
      34: ldc           #27                 // String The bufferSupplier returned a null buffer
      36: invokestatic  #28                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      39: checkcast     #29                 // class java/util/Collection
      42: astore        4
      44: goto          65
      47: astore        5
      49: aload         5
      51: invokestatic  #31                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      54: aload_0
      55: invokevirtual #32                 // Method cancel:()V
      58: aload_0
      59: aload         5
      61: invokevirtual #33                 // Method onError:(Ljava/lang/Throwable;)V
      64: return
      65: aload_2
      66: aload         4
      68: invokevirtual #34                 // Method java/util/ArrayDeque.offer:(Ljava/lang/Object;)Z
      71: pop
      72: aload_2
      73: invokevirtual #35                 // Method java/util/ArrayDeque.peek:()Ljava/lang/Object;
      76: checkcast     #29                 // class java/util/Collection
      79: astore        4
      81: aload         4
      83: invokeinterface #36,  1           // InterfaceMethod java/util/Collection.size:()I
      88: iconst_1
      89: iadd
      90: aload_0
      91: getfield      #3                  // Field size:I
      94: if_icmpne     132
      97: aload_2
      98: invokevirtual #37                 // Method java/util/ArrayDeque.poll:()Ljava/lang/Object;
     101: pop
     102: aload         4
     104: aload_1
     105: invokeinterface #38,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     110: pop
     111: aload_0
     112: dup
     113: getfield      #39                 // Field produced:J
     116: lconst_1
     117: ladd
     118: putfield      #39                 // Field produced:J
     121: aload_0
     122: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     125: aload         4
     127: invokeinterface #40,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     132: aload_2
     133: invokevirtual #41                 // Method java/util/ArrayDeque.iterator:()Ljava/util/Iterator;
     136: astore        5
     138: aload         5
     140: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     145: ifeq          172
     148: aload         5
     150: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     155: checkcast     #29                 // class java/util/Collection
     158: astore        6
     160: aload         6
     162: aload_1
     163: invokeinterface #38,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     168: pop
     169: goto          138
     172: iload_3
     173: aload_0
     174: getfield      #4                  // Field skip:I
     177: if_icmpne     182
     180: iconst_0
     181: istore_3
     182: aload_0
     183: iload_3
     184: putfield      #25                 // Field index:I
     187: return
    Exception table:
       from    to  target type
          25    44    47   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #24                 // Field done:Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #44                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      11: return
      12: aload_0
      13: iconst_1
      14: putfield      #24                 // Field done:Z
      17: aload_0
      18: getfield      #11                 // Field buffers:Ljava/util/ArrayDeque;
      21: invokevirtual #45                 // Method java/util/ArrayDeque.clear:()V
      24: aload_0
      25: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      28: aload_1
      29: invokeinterface #46,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      34: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #24                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #24                 // Field done:Z
      13: aload_0
      14: getfield      #39                 // Field produced:J
      17: lstore_1
      18: lload_1
      19: lconst_0
      20: lcmp
      21: ifeq          30
      24: aload_0
      25: lload_1
      26: invokestatic  #47                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.produced:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      29: pop2
      30: aload_0
      31: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      34: aload_0
      35: getfield      #11                 // Field buffers:Ljava/util/ArrayDeque;
      38: aload_0
      39: aload_0
      40: invokestatic  #48                 // Method io/reactivex/rxjava3/internal/util/QueueDrainHelper.postComplete:(Lorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/rxjava3/functions/BooleanSupplier;)V
      43: return
}
