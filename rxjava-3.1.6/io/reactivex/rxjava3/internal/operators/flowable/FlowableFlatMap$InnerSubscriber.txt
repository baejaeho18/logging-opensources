Compiled from "FlowableFlatMap.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap$InnerSubscriber<T, U> extends java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> implements io.reactivex.rxjava3.core.FlowableSubscriber<U>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final long id;

  final io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap$MergeSubscriber<T, U> parent;

  final int limit;

  final int bufferSize;

  volatile boolean done;

  volatile io.reactivex.rxjava3.operators.SimpleQueue<U> queue;

  long produced;

  int fusionMode;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap$InnerSubscriber(io.reactivex.rxjava3.internal.operators.flowable.FlowableFlatMap$MergeSubscriber<T, U>, int, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: lload_3
       6: putfield      #2                  // Field id:J
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$MergeSubscriber;
      14: aload_0
      15: iload_2
      16: putfield      #4                  // Field bufferSize:I
      19: aload_0
      20: iload_2
      21: iconst_2
      22: ishr
      23: putfield      #5                  // Field limit:I
      26: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #6                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z
       5: ifeq          83
       8: aload_1
       9: instanceof    #7                  // class io/reactivex/rxjava3/operators/QueueSubscription
      12: ifeq          72
      15: aload_1
      16: checkcast     #7                  // class io/reactivex/rxjava3/operators/QueueSubscription
      19: astore_2
      20: aload_2
      21: bipush        7
      23: invokeinterface #8,  2            // InterfaceMethod io/reactivex/rxjava3/operators/QueueSubscription.requestFusion:(I)I
      28: istore_3
      29: iload_3
      30: iconst_1
      31: if_icmpne     57
      34: aload_0
      35: iload_3
      36: putfield      #9                  // Field fusionMode:I
      39: aload_0
      40: aload_2
      41: putfield      #10                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      44: aload_0
      45: iconst_1
      46: putfield      #11                 // Field done:Z
      49: aload_0
      50: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$MergeSubscriber;
      53: invokevirtual #12                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$MergeSubscriber.drain:()V
      56: return
      57: iload_3
      58: iconst_2
      59: if_icmpne     72
      62: aload_0
      63: iload_3
      64: putfield      #9                  // Field fusionMode:I
      67: aload_0
      68: aload_2
      69: putfield      #10                 // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      72: aload_1
      73: aload_0
      74: getfield      #4                  // Field bufferSize:I
      77: i2l
      78: invokeinterface #13,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      83: return

  public void onNext(U);
    Code:
       0: aload_0
       1: getfield      #9                  // Field fusionMode:I
       4: iconst_2
       5: if_icmpeq     20
       8: aload_0
       9: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$MergeSubscriber;
      12: aload_1
      13: aload_0
      14: invokevirtual #14                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$MergeSubscriber.tryEmit:(Ljava/lang/Object;Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;)V
      17: goto          27
      20: aload_0
      21: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$MergeSubscriber;
      24: invokevirtual #12                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$MergeSubscriber.drain:()V
      27: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #15                 // Field io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.CANCELLED:Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;
       4: invokevirtual #16                 // Method lazySet:(Ljava/lang/Object;)V
       7: aload_0
       8: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$MergeSubscriber;
      11: aload_0
      12: aload_1
      13: invokevirtual #17                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$MergeSubscriber.innerError:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$InnerSubscriber;Ljava/lang/Throwable;)V
      16: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #11                 // Field done:Z
       5: aload_0
       6: getfield      #3                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$MergeSubscriber;
       9: invokevirtual #12                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableFlatMap$MergeSubscriber.drain:()V
      12: return

  void requestMore(long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field fusionMode:I
       4: iconst_1
       5: if_icmpeq     51
       8: aload_0
       9: getfield      #18                 // Field produced:J
      12: lload_1
      13: ladd
      14: lstore_3
      15: lload_3
      16: aload_0
      17: getfield      #5                  // Field limit:I
      20: i2l
      21: lcmp
      22: iflt          46
      25: aload_0
      26: lconst_0
      27: putfield      #18                 // Field produced:J
      30: aload_0
      31: invokevirtual #19                 // Method get:()Ljava/lang/Object;
      34: checkcast     #20                 // class org/reactivestreams/Subscription
      37: lload_3
      38: invokeinterface #13,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      43: goto          51
      46: aload_0
      47: lload_3
      48: putfield      #18                 // Field produced:J
      51: return

  public void dispose();
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method get:()Ljava/lang/Object;
       4: getstatic     #15                 // Field io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.CANCELLED:Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn
}
