Compiled from "FlowableWindowTimed.java"
public final class io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowTimed<T> extends io.reactivex.rxjava3.internal.operators.flowable.AbstractFlowableWithUpstream<T, io.reactivex.rxjava3.core.Flowable<T>> {
  final long timespan;

  final long timeskip;

  final java.util.concurrent.TimeUnit unit;

  final io.reactivex.rxjava3.core.Scheduler scheduler;

  final long maxSize;

  final int bufferSize;

  final boolean restartTimerOnMaxSize;

  public io.reactivex.rxjava3.internal.operators.flowable.FlowableWindowTimed(io.reactivex.rxjava3.core.Flowable<T>, long, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler, long, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/AbstractFlowableWithUpstream."<init>":(Lio/reactivex/rxjava3/core/Flowable;)V
       5: aload_0
       6: lload_2
       7: putfield      #2                  // Field timespan:J
      10: aload_0
      11: lload         4
      13: putfield      #3                  // Field timeskip:J
      16: aload_0
      17: aload         6
      19: putfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      22: aload_0
      23: aload         7
      25: putfield      #5                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      28: aload_0
      29: lload         8
      31: putfield      #6                  // Field maxSize:J
      34: aload_0
      35: iload         10
      37: putfield      #7                  // Field bufferSize:I
      40: aload_0
      41: iload         11
      43: putfield      #8                  // Field restartTimerOnMaxSize:Z
      46: return

  protected void subscribeActual(org.reactivestreams.Subscriber<? super io.reactivex.rxjava3.core.Flowable<T>>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field timespan:J
       4: aload_0
       5: getfield      #3                  // Field timeskip:J
       8: lcmp
       9: ifne          95
      12: aload_0
      13: getfield      #6                  // Field maxSize:J
      16: ldc2_w        #10                 // long 9223372036854775807l
      19: lcmp
      20: ifne          55
      23: aload_0
      24: getfield      #12                 // Field source:Lio/reactivex/rxjava3/core/Flowable;
      27: new           #13                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber
      30: dup
      31: aload_1
      32: aload_0
      33: getfield      #2                  // Field timespan:J
      36: aload_0
      37: getfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      40: aload_0
      41: getfield      #5                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      44: aload_0
      45: getfield      #7                  // Field bufferSize:I
      48: invokespecial #14                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowExactUnboundedSubscriber."<init>":(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;I)V
      51: invokevirtual #15                 // Method io/reactivex/rxjava3/core/Flowable.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V
      54: return
      55: aload_0
      56: getfield      #12                 // Field source:Lio/reactivex/rxjava3/core/Flowable;
      59: new           #16                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowExactBoundedSubscriber
      62: dup
      63: aload_1
      64: aload_0
      65: getfield      #2                  // Field timespan:J
      68: aload_0
      69: getfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
      72: aload_0
      73: getfield      #5                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      76: aload_0
      77: getfield      #7                  // Field bufferSize:I
      80: aload_0
      81: getfield      #6                  // Field maxSize:J
      84: aload_0
      85: getfield      #8                  // Field restartTimerOnMaxSize:Z
      88: invokespecial #17                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowExactBoundedSubscriber."<init>":(Lorg/reactivestreams/Subscriber;JLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler;IJZ)V
      91: invokevirtual #15                 // Method io/reactivex/rxjava3/core/Flowable.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V
      94: return
      95: aload_0
      96: getfield      #12                 // Field source:Lio/reactivex/rxjava3/core/Flowable;
      99: new           #18                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowSkipSubscriber
     102: dup
     103: aload_1
     104: aload_0
     105: getfield      #2                  // Field timespan:J
     108: aload_0
     109: getfield      #3                  // Field timeskip:J
     112: aload_0
     113: getfield      #4                  // Field unit:Ljava/util/concurrent/TimeUnit;
     116: aload_0
     117: getfield      #5                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
     120: invokevirtual #19                 // Method io/reactivex/rxjava3/core/Scheduler.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;
     123: aload_0
     124: getfield      #7                  // Field bufferSize:I
     127: invokespecial #20                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed$WindowSkipSubscriber."<init>":(Lorg/reactivestreams/Subscriber;JJLjava/util/concurrent/TimeUnit;Lio/reactivex/rxjava3/core/Scheduler$Worker;I)V
     130: invokevirtual #15                 // Method io/reactivex/rxjava3/core/Flowable.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V
     133: return

  static io.reactivex.rxjava3.exceptions.MissingBackpressureException missingBackpressureMessage(long);
    Code:
       0: new           #21                 // class io/reactivex/rxjava3/exceptions/MissingBackpressureException
       3: dup
       4: new           #22                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #24                 // String Unable to emit the next window (#
      13: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: lload_0
      17: invokevirtual #26                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      20: ldc           #27                 // String ) due to lack of requests. Please make sure the downstream is ready to consume windows.
      22: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #29                 // Method io/reactivex/rxjava3/exceptions/MissingBackpressureException."<init>":(Ljava/lang/String;)V
      31: areturn
}
