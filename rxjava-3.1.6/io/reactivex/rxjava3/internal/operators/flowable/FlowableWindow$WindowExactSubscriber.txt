Compiled from "FlowableWindow.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableWindow$WindowExactSubscriber<T> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription, java.lang.Runnable {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super io.reactivex.rxjava3.core.Flowable<T>> downstream;

  final long size;

  final java.util.concurrent.atomic.AtomicBoolean once;

  final int bufferSize;

  long index;

  org.reactivestreams.Subscription upstream;

  io.reactivex.rxjava3.processors.UnicastProcessor<T> window;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableWindow$WindowExactSubscriber(org.reactivestreams.Subscriber<? super io.reactivex.rxjava3.core.Flowable<T>>, long, int);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      10: aload_0
      11: lload_2
      12: putfield      #3                  // Field size:J
      15: aload_0
      16: new           #4                  // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      23: putfield      #6                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
      26: aload_0
      27: iload         4
      29: putfield      #7                  // Field bufferSize:I
      32: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #8                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #9                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #8                  // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #10,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #11                 // Field index:J
       4: lstore_2
       5: aload_0
       6: getfield      #12                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
       9: astore        4
      11: aconst_null
      12: astore        5
      14: lload_2
      15: lconst_0
      16: lcmp
      17: ifne          63
      20: aload_0
      21: invokevirtual #13                 // Method getAndIncrement:()I
      24: pop
      25: aload_0
      26: getfield      #7                  // Field bufferSize:I
      29: aload_0
      30: invokestatic  #14                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.create:(ILjava/lang/Runnable;)Lio/reactivex/rxjava3/processors/UnicastProcessor;
      33: astore        4
      35: aload_0
      36: aload         4
      38: putfield      #12                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
      41: new           #15                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept
      44: dup
      45: aload         4
      47: invokespecial #16                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept."<init>":(Lio/reactivex/rxjava3/processors/FlowableProcessor;)V
      50: astore        5
      52: aload_0
      53: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      56: aload         5
      58: invokeinterface #17,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      63: lload_2
      64: lconst_1
      65: ladd
      66: lstore_2
      67: aload         4
      69: aload_1
      70: invokevirtual #18                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onNext:(Ljava/lang/Object;)V
      73: lload_2
      74: aload_0
      75: getfield      #3                  // Field size:J
      78: lcmp
      79: ifne          100
      82: aload_0
      83: lconst_0
      84: putfield      #11                 // Field index:J
      87: aload_0
      88: aconst_null
      89: putfield      #12                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
      92: aload         4
      94: invokevirtual #19                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.onComplete:()V
      97: goto          105
     100: aload_0
     101: lload_2
     102: putfield      #11                 // Field index:J
     105: aload         5
     107: ifnull        126
     110: aload         5
     112: invokevirtual #20                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept.tryAbandon:()Z
     115: ifeq          126
     118: aload         5
     120: getfield      #21                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowSubscribeIntercept.window:Lio/reactivex/rxjava3/processors/FlowableProcessor;
     123: invokevirtual #22                 // Method io/reactivex/rxjava3/processors/FlowableProcessor.onComplete:()V
     126: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #12                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
       4: astore_2
       5: aload_2
       6: ifnull        21
       9: aload_0
      10: aconst_null
      11: putfield      #12                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
      14: aload_2
      15: aload_1
      16: invokeinterface #23,  2           // InterfaceMethod org/reactivestreams/Processor.onError:(Ljava/lang/Throwable;)V
      21: aload_0
      22: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      25: aload_1
      26: invokeinterface #24,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      31: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #12                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
       4: astore_1
       5: aload_1
       6: ifnull        20
       9: aload_0
      10: aconst_null
      11: putfield      #12                 // Field window:Lio/reactivex/rxjava3/processors/UnicastProcessor;
      14: aload_1
      15: invokeinterface #25,  1           // InterfaceMethod org/reactivestreams/Processor.onComplete:()V
      20: aload_0
      21: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      24: invokeinterface #26,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      29: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #27                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          26
       7: aload_0
       8: getfield      #3                  // Field size:J
      11: lload_1
      12: invokestatic  #28                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.multiplyCap:(JJ)J
      15: lstore_3
      16: aload_0
      17: getfield      #8                  // Field upstream:Lorg/reactivestreams/Subscription;
      20: lload_3
      21: invokeinterface #29,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      26: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field once:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          16
      12: aload_0
      13: invokevirtual #31                 // Method run:()V
      16: return

  public void run();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method decrementAndGet:()I
       4: ifne          16
       7: aload_0
       8: getfield      #8                  // Field upstream:Lorg/reactivestreams/Subscription;
      11: invokeinterface #33,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      16: return
}
