Compiled from "FlowableScanSeed.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber<T, R> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super R> downstream;

  final io.reactivex.rxjava3.functions.BiFunction<R, ? super T, R> accumulator;

  final io.reactivex.rxjava3.operators.SimplePlainQueue<R> queue;

  final java.util.concurrent.atomic.AtomicLong requested;

  final int prefetch;

  final int limit;

  volatile boolean cancelled;

  volatile boolean done;

  java.lang.Throwable error;

  org.reactivestreams.Subscription upstream;

  R value;

  int consumed;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber(org.reactivestreams.Subscriber<? super R>, io.reactivex.rxjava3.functions.BiFunction<R, ? super T, R>, R, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field accumulator:Lio/reactivex/rxjava3/functions/BiFunction;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field value:Ljava/lang/Object;
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field prefetch:I
      25: aload_0
      26: iload         4
      28: iload         4
      30: iconst_2
      31: ishr
      32: isub
      33: putfield      #6                  // Field limit:I
      36: aload_0
      37: new           #7                  // class io/reactivex/rxjava3/operators/SpscArrayQueue
      40: dup
      41: iload         4
      43: invokespecial #8                  // Method io/reactivex/rxjava3/operators/SpscArrayQueue."<init>":(I)V
      46: putfield      #9                  // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      49: aload_0
      50: getfield      #9                  // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      53: aload_3
      54: invokeinterface #10,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      59: pop
      60: aload_0
      61: new           #11                 // class java/util/concurrent/atomic/AtomicLong
      64: dup
      65: invokespecial #12                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      68: putfield      #13                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      71: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #14                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #15                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          39
      11: aload_0
      12: aload_1
      13: putfield      #14                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #16,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_1
      27: aload_0
      28: getfield      #5                  // Field prefetch:I
      31: iconst_1
      32: isub
      33: i2l
      34: invokeinterface #17,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      39: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #18                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #4                  // Field value:Ljava/lang/Object;
      12: astore_2
      13: aload_0
      14: getfield      #3                  // Field accumulator:Lio/reactivex/rxjava3/functions/BiFunction;
      17: aload_2
      18: aload_1
      19: invokeinterface #19,  3           // InterfaceMethod io/reactivex/rxjava3/functions/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: ldc           #20                 // String The accumulator returned a null value
      26: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      29: astore_2
      30: goto          53
      33: astore_3
      34: aload_3
      35: invokestatic  #23                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      38: aload_0
      39: getfield      #14                 // Field upstream:Lorg/reactivestreams/Subscription;
      42: invokeinterface #24,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      47: aload_0
      48: aload_3
      49: invokevirtual #25                 // Method onError:(Ljava/lang/Throwable;)V
      52: return
      53: aload_0
      54: aload_2
      55: putfield      #4                  // Field value:Ljava/lang/Object;
      58: aload_0
      59: getfield      #9                  // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      62: aload_2
      63: invokeinterface #10,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      68: pop
      69: aload_0
      70: invokevirtual #26                 // Method drain:()V
      73: return
    Exception table:
       from    to  target type
          13    30    33   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #18                 // Field done:Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #27                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      11: return
      12: aload_0
      13: aload_1
      14: putfield      #28                 // Field error:Ljava/lang/Throwable;
      17: aload_0
      18: iconst_1
      19: putfield      #18                 // Field done:Z
      22: aload_0
      23: invokevirtual #26                 // Method drain:()V
      26: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #18                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #18                 // Field done:Z
      13: aload_0
      14: invokevirtual #26                 // Method drain:()V
      17: return

  public void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #29                 // Field cancelled:Z
       5: aload_0
       6: getfield      #14                 // Field upstream:Lorg/reactivestreams/Subscription;
       9: invokeinterface #24,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      14: aload_0
      15: invokevirtual #30                 // Method getAndIncrement:()I
      18: ifne          30
      21: aload_0
      22: getfield      #9                  // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      25: invokeinterface #31,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.clear:()V
      30: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #32                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          20
       7: aload_0
       8: getfield      #13                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      11: lload_1
      12: invokestatic  #33                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      15: pop2
      16: aload_0
      17: invokevirtual #26                 // Method drain:()V
      20: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: iconst_1
       9: istore_1
      10: aload_0
      11: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      14: astore_2
      15: aload_0
      16: getfield      #9                  // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      19: astore_3
      20: aload_0
      21: getfield      #6                  // Field limit:I
      24: istore        4
      26: aload_0
      27: getfield      #34                 // Field consumed:I
      30: istore        5
      32: aload_0
      33: getfield      #13                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      36: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      39: lstore        6
      41: lconst_0
      42: lstore        8
      44: lload         8
      46: lload         6
      48: lcmp
      49: ifeq          190
      52: aload_0
      53: getfield      #29                 // Field cancelled:Z
      56: ifeq          66
      59: aload_3
      60: invokeinterface #31,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.clear:()V
      65: return
      66: aload_0
      67: getfield      #18                 // Field done:Z
      70: istore        10
      72: iload         10
      74: ifeq          103
      77: aload_0
      78: getfield      #28                 // Field error:Ljava/lang/Throwable;
      81: astore        11
      83: aload         11
      85: ifnull        103
      88: aload_3
      89: invokeinterface #31,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.clear:()V
      94: aload_2
      95: aload         11
      97: invokeinterface #36,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     102: return
     103: aload_3
     104: invokeinterface #37,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.poll:()Ljava/lang/Object;
     109: astore        11
     111: aload         11
     113: ifnonnull     120
     116: iconst_1
     117: goto          121
     120: iconst_0
     121: istore        12
     123: iload         10
     125: ifeq          140
     128: iload         12
     130: ifeq          140
     133: aload_2
     134: invokeinterface #38,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     139: return
     140: iload         12
     142: ifeq          148
     145: goto          190
     148: aload_2
     149: aload         11
     151: invokeinterface #39,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     156: lload         8
     158: lconst_1
     159: ladd
     160: lstore        8
     162: iinc          5, 1
     165: iload         5
     167: iload         4
     169: if_icmpne     187
     172: iconst_0
     173: istore        5
     175: aload_0
     176: getfield      #14                 // Field upstream:Lorg/reactivestreams/Subscription;
     179: iload         4
     181: i2l
     182: invokeinterface #17,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     187: goto          44
     190: lload         8
     192: lload         6
     194: lcmp
     195: ifne          247
     198: aload_0
     199: getfield      #18                 // Field done:Z
     202: ifeq          247
     205: aload_0
     206: getfield      #28                 // Field error:Ljava/lang/Throwable;
     209: astore        10
     211: aload         10
     213: ifnull        231
     216: aload_3
     217: invokeinterface #31,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.clear:()V
     222: aload_2
     223: aload         10
     225: invokeinterface #36,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     230: return
     231: aload_3
     232: invokeinterface #40,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.isEmpty:()Z
     237: ifeq          247
     240: aload_2
     241: invokeinterface #38,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     246: return
     247: lload         8
     249: lconst_0
     250: lcmp
     251: ifeq          264
     254: aload_0
     255: getfield      #13                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     258: lload         8
     260: invokestatic  #41                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.produced:(Ljava/util/concurrent/atomic/AtomicLong;J)J
     263: pop2
     264: aload_0
     265: iload         5
     267: putfield      #34                 // Field consumed:I
     270: aload_0
     271: iload_1
     272: ineg
     273: invokevirtual #42                 // Method addAndGet:(I)I
     276: istore_1
     277: iload_1
     278: ifne          284
     281: goto          287
     284: goto          32
     287: return
}
