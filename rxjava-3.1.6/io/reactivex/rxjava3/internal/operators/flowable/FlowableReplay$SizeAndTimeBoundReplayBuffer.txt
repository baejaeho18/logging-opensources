Compiled from "FlowableReplay.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer<T> extends io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer<T> {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.Scheduler scheduler;

  final long maxAge;

  final java.util.concurrent.TimeUnit unit;

  final int limit;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer(int, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler, boolean);
    Code:
       0: aload_0
       1: iload         6
       3: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$BoundedReplayBuffer."<init>":(Z)V
       6: aload_0
       7: aload         5
       9: putfield      #2                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      12: aload_0
      13: iload_1
      14: putfield      #3                  // Field limit:I
      17: aload_0
      18: lload_2
      19: putfield      #4                  // Field maxAge:J
      22: aload_0
      23: aload         4
      25: putfield      #5                  // Field unit:Ljava/util/concurrent/TimeUnit;
      28: return

  java.lang.Object enterTransform(java.lang.Object, boolean);
    Code:
       0: new           #6                  // class io/reactivex/rxjava3/schedulers/Timed
       3: dup
       4: aload_1
       5: iload_2
       6: ifeq          15
       9: ldc2_w        #8                  // long 9223372036854775807l
      12: goto          26
      15: aload_0
      16: getfield      #2                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      19: aload_0
      20: getfield      #5                  // Field unit:Ljava/util/concurrent/TimeUnit;
      23: invokevirtual #10                 // Method io/reactivex/rxjava3/core/Scheduler.now:(Ljava/util/concurrent/TimeUnit;)J
      26: aload_0
      27: getfield      #5                  // Field unit:Ljava/util/concurrent/TimeUnit;
      30: invokespecial #11                 // Method io/reactivex/rxjava3/schedulers/Timed."<init>":(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V
      33: areturn

  java.lang.Object leaveTransform(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #6                  // class io/reactivex/rxjava3/schedulers/Timed
       4: invokevirtual #12                 // Method io/reactivex/rxjava3/schedulers/Timed.value:()Ljava/lang/Object;
       7: areturn

  void truncate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
       4: aload_0
       5: getfield      #5                  // Field unit:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #10                 // Method io/reactivex/rxjava3/core/Scheduler.now:(Ljava/util/concurrent/TimeUnit;)J
      11: aload_0
      12: getfield      #4                  // Field maxAge:J
      15: lsub
      16: lstore_1
      17: aload_0
      18: invokevirtual #13                 // Method get:()Ljava/lang/Object;
      21: checkcast     #14                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node
      24: astore_3
      25: aload_3
      26: invokevirtual #15                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node.get:()Ljava/lang/Object;
      29: checkcast     #14                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node
      32: astore        4
      34: iconst_0
      35: istore        5
      37: aload_0
      38: getfield      #16                 // Field size:I
      41: iconst_1
      42: if_icmple     134
      45: aload_0
      46: getfield      #16                 // Field size:I
      49: aload_0
      50: getfield      #3                  // Field limit:I
      53: if_icmple     85
      56: iinc          5, 1
      59: aload_0
      60: dup
      61: getfield      #16                 // Field size:I
      64: iconst_1
      65: isub
      66: putfield      #16                 // Field size:I
      69: aload         4
      71: astore_3
      72: aload         4
      74: invokevirtual #15                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node.get:()Ljava/lang/Object;
      77: checkcast     #14                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node
      80: astore        4
      82: goto          37
      85: aload         4
      87: getfield      #17                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node.value:Ljava/lang/Object;
      90: checkcast     #6                  // class io/reactivex/rxjava3/schedulers/Timed
      93: astore        6
      95: aload         6
      97: invokevirtual #18                 // Method io/reactivex/rxjava3/schedulers/Timed.time:()J
     100: lload_1
     101: lcmp
     102: ifgt          134
     105: iinc          5, 1
     108: aload_0
     109: dup
     110: getfield      #16                 // Field size:I
     113: iconst_1
     114: isub
     115: putfield      #16                 // Field size:I
     118: aload         4
     120: astore_3
     121: aload         4
     123: invokevirtual #15                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node.get:()Ljava/lang/Object;
     126: checkcast     #14                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node
     129: astore        4
     131: goto          37
     134: iload         5
     136: ifeq          144
     139: aload_0
     140: aload_3
     141: invokevirtual #19                 // Method setFirst:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node;)V
     144: return

  void truncateFinal();
    Code:
       0: aload_0
       1: getfield      #2                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
       4: aload_0
       5: getfield      #5                  // Field unit:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #10                 // Method io/reactivex/rxjava3/core/Scheduler.now:(Ljava/util/concurrent/TimeUnit;)J
      11: aload_0
      12: getfield      #4                  // Field maxAge:J
      15: lsub
      16: lstore_1
      17: aload_0
      18: invokevirtual #13                 // Method get:()Ljava/lang/Object;
      21: checkcast     #14                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node
      24: astore_3
      25: aload_3
      26: invokevirtual #15                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node.get:()Ljava/lang/Object;
      29: checkcast     #14                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node
      32: astore        4
      34: iconst_0
      35: istore        5
      37: aload_0
      38: getfield      #16                 // Field size:I
      41: iconst_1
      42: if_icmple     94
      45: aload         4
      47: getfield      #17                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node.value:Ljava/lang/Object;
      50: checkcast     #6                  // class io/reactivex/rxjava3/schedulers/Timed
      53: astore        6
      55: aload         6
      57: invokevirtual #18                 // Method io/reactivex/rxjava3/schedulers/Timed.time:()J
      60: lload_1
      61: lcmp
      62: ifgt          94
      65: iinc          5, 1
      68: aload_0
      69: dup
      70: getfield      #16                 // Field size:I
      73: iconst_1
      74: isub
      75: putfield      #16                 // Field size:I
      78: aload         4
      80: astore_3
      81: aload         4
      83: invokevirtual #15                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node.get:()Ljava/lang/Object;
      86: checkcast     #14                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node
      89: astore        4
      91: goto          37
      94: iload         5
      96: ifeq          104
      99: aload_0
     100: aload_3
     101: invokevirtual #19                 // Method setFirst:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node;)V
     104: return

  io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$Node getHead();
    Code:
       0: aload_0
       1: getfield      #2                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
       4: aload_0
       5: getfield      #5                  // Field unit:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #10                 // Method io/reactivex/rxjava3/core/Scheduler.now:(Ljava/util/concurrent/TimeUnit;)J
      11: aload_0
      12: getfield      #4                  // Field maxAge:J
      15: lsub
      16: lstore_1
      17: aload_0
      18: invokevirtual #13                 // Method get:()Ljava/lang/Object;
      21: checkcast     #14                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node
      24: astore_3
      25: aload_3
      26: invokevirtual #15                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node.get:()Ljava/lang/Object;
      29: checkcast     #14                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node
      32: astore        4
      34: aload         4
      36: ifnonnull     42
      39: goto          103
      42: aload         4
      44: getfield      #17                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node.value:Ljava/lang/Object;
      47: checkcast     #6                  // class io/reactivex/rxjava3/schedulers/Timed
      50: astore        5
      52: aload         5
      54: invokevirtual #12                 // Method io/reactivex/rxjava3/schedulers/Timed.value:()Ljava/lang/Object;
      57: invokestatic  #20                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.isComplete:(Ljava/lang/Object;)Z
      60: ifne          103
      63: aload         5
      65: invokevirtual #12                 // Method io/reactivex/rxjava3/schedulers/Timed.value:()Ljava/lang/Object;
      68: invokestatic  #21                 // Method io/reactivex/rxjava3/internal/util/NotificationLite.isError:(Ljava/lang/Object;)Z
      71: ifeq          77
      74: goto          103
      77: aload         5
      79: invokevirtual #18                 // Method io/reactivex/rxjava3/schedulers/Timed.time:()J
      82: lload_1
      83: lcmp
      84: ifgt          103
      87: aload         4
      89: astore_3
      90: aload         4
      92: invokevirtual #15                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node.get:()Ljava/lang/Object;
      95: checkcast     #14                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$Node
      98: astore        4
     100: goto          34
     103: aload_3
     104: areturn
}
