Compiled from "FlowableSwitchMap.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber<T, R> extends java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> implements io.reactivex.rxjava3.core.FlowableSubscriber<R> {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber<T, R> parent;

  final long index;

  final int bufferSize;

  volatile io.reactivex.rxjava3.operators.SimpleQueue<R> queue;

  volatile boolean done;

  int fusionMode;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber(io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber<T, R>, long, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber;
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field index:J
      14: aload_0
      15: iload         4
      17: putfield      #4                  // Field bufferSize:I
      20: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z
       5: ifeq          110
       8: aload_1
       9: instanceof    #6                  // class io/reactivex/rxjava3/operators/QueueSubscription
      12: ifeq          84
      15: aload_1
      16: checkcast     #6                  // class io/reactivex/rxjava3/operators/QueueSubscription
      19: astore_2
      20: aload_2
      21: bipush        7
      23: invokeinterface #7,  2            // InterfaceMethod io/reactivex/rxjava3/operators/QueueSubscription.requestFusion:(I)I
      28: istore_3
      29: iload_3
      30: iconst_1
      31: if_icmpne     57
      34: aload_0
      35: iload_3
      36: putfield      #8                  // Field fusionMode:I
      39: aload_0
      40: aload_2
      41: putfield      #9                  // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      44: aload_0
      45: iconst_1
      46: putfield      #10                 // Field done:Z
      49: aload_0
      50: getfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber;
      53: invokevirtual #11                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber.drain:()V
      56: return
      57: iload_3
      58: iconst_2
      59: if_icmpne     84
      62: aload_0
      63: iload_3
      64: putfield      #8                  // Field fusionMode:I
      67: aload_0
      68: aload_2
      69: putfield      #9                  // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      72: aload_1
      73: aload_0
      74: getfield      #4                  // Field bufferSize:I
      77: i2l
      78: invokeinterface #12,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      83: return
      84: aload_0
      85: new           #13                 // class io/reactivex/rxjava3/operators/SpscArrayQueue
      88: dup
      89: aload_0
      90: getfield      #4                  // Field bufferSize:I
      93: invokespecial #14                 // Method io/reactivex/rxjava3/operators/SpscArrayQueue."<init>":(I)V
      96: putfield      #9                  // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      99: aload_1
     100: aload_0
     101: getfield      #4                  // Field bufferSize:I
     104: i2l
     105: invokeinterface #12,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     110: return

  public void onNext(R);
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber;
       4: astore_2
       5: aload_0
       6: getfield      #3                  // Field index:J
       9: aload_2
      10: getfield      #15                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber.unique:J
      13: lcmp
      14: ifne          53
      17: aload_0
      18: getfield      #8                  // Field fusionMode:I
      21: ifne          49
      24: aload_0
      25: getfield      #9                  // Field queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
      28: aload_1
      29: invokeinterface #16,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.offer:(Ljava/lang/Object;)Z
      34: ifne          49
      37: aload_0
      38: new           #17                 // class io/reactivex/rxjava3/exceptions/QueueOverflowException
      41: dup
      42: invokespecial #18                 // Method io/reactivex/rxjava3/exceptions/QueueOverflowException."<init>":()V
      45: invokevirtual #19                 // Method onError:(Ljava/lang/Throwable;)V
      48: return
      49: aload_2
      50: invokevirtual #11                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber.drain:()V
      53: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber;
       4: astore_2
       5: aload_0
       6: getfield      #3                  // Field index:J
       9: aload_2
      10: getfield      #15                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber.unique:J
      13: lcmp
      14: ifne          61
      17: aload_2
      18: getfield      #20                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber.errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      21: aload_1
      22: invokevirtual #21                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowable:(Ljava/lang/Throwable;)Z
      25: ifeq          61
      28: aload_2
      29: getfield      #22                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber.delayErrors:Z
      32: ifne          49
      35: aload_2
      36: getfield      #23                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber.upstream:Lorg/reactivestreams/Subscription;
      39: invokeinterface #24,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      44: aload_2
      45: iconst_1
      46: putfield      #25                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber.done:Z
      49: aload_0
      50: iconst_1
      51: putfield      #10                 // Field done:Z
      54: aload_2
      55: invokevirtual #11                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber.drain:()V
      58: goto          65
      61: aload_1
      62: invokestatic  #26                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      65: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber;
       4: astore_1
       5: aload_0
       6: getfield      #3                  // Field index:J
       9: aload_1
      10: getfield      #15                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber.unique:J
      13: lcmp
      14: ifne          26
      17: aload_0
      18: iconst_1
      19: putfield      #10                 // Field done:Z
      22: aload_1
      23: invokevirtual #11                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber.drain:()V
      26: return

  public void cancel();
    Code:
       0: aload_0
       1: invokestatic  #27                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #8                  // Field fusionMode:I
       4: iconst_1
       5: if_icmpeq     21
       8: aload_0
       9: invokevirtual #28                 // Method get:()Ljava/lang/Object;
      12: checkcast     #29                 // class org/reactivestreams/Subscription
      15: lload_1
      16: invokeinterface #12,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      21: return
}
