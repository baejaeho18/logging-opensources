Compiled from "FlowableRange.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableRange$RangeConditionalSubscription extends io.reactivex.rxjava3.internal.operators.flowable.FlowableRange$BaseRangeSubscription {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.operators.ConditionalSubscriber<? super java.lang.Integer> downstream;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableRange$RangeConditionalSubscription(io.reactivex.rxjava3.operators.ConditionalSubscriber<? super java.lang.Integer>, int, int);
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableRange$BaseRangeSubscription."<init>":(II)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
      11: return

  void fastPath();
    Code:
       0: aload_0
       1: getfield      #3                  // Field end:I
       4: istore_1
       5: aload_0
       6: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
       9: astore_2
      10: aload_0
      11: getfield      #4                  // Field index:I
      14: istore_3
      15: iload_3
      16: iload_1
      17: if_icmpeq     45
      20: aload_0
      21: getfield      #5                  // Field cancelled:Z
      24: ifeq          28
      27: return
      28: aload_2
      29: iload_3
      30: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: invokeinterface #7,  2            // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.tryOnNext:(Ljava/lang/Object;)Z
      38: pop
      39: iinc          3, 1
      42: goto          15
      45: aload_0
      46: getfield      #5                  // Field cancelled:Z
      49: ifeq          53
      52: return
      53: aload_2
      54: invokeinterface #8,  1            // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.onComplete:()V
      59: return

  void slowPath(long);
    Code:
       0: lconst_0
       1: lstore_3
       2: aload_0
       3: getfield      #3                  // Field end:I
       6: istore        5
       8: aload_0
       9: getfield      #4                  // Field index:I
      12: istore        6
      14: aload_0
      15: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/operators/ConditionalSubscriber;
      18: astore        7
      20: lload_3
      21: lload_1
      22: lcmp
      23: ifeq          66
      26: iload         6
      28: iload         5
      30: if_icmpeq     66
      33: aload_0
      34: getfield      #5                  // Field cancelled:Z
      37: ifeq          41
      40: return
      41: aload         7
      43: iload         6
      45: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: invokeinterface #7,  2            // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.tryOnNext:(Ljava/lang/Object;)Z
      53: ifeq          60
      56: lload_3
      57: lconst_1
      58: ladd
      59: lstore_3
      60: iinc          6, 1
      63: goto          20
      66: iload         6
      68: iload         5
      70: if_icmpne     88
      73: aload_0
      74: getfield      #5                  // Field cancelled:Z
      77: ifne          87
      80: aload         7
      82: invokeinterface #8,  1            // InterfaceMethod io/reactivex/rxjava3/operators/ConditionalSubscriber.onComplete:()V
      87: return
      88: aload_0
      89: invokevirtual #9                  // Method get:()J
      92: lstore_1
      93: lload_3
      94: lload_1
      95: lcmp
      96: ifne          20
      99: aload_0
     100: iload         6
     102: putfield      #4                  // Field index:I
     105: aload_0
     106: lload_3
     107: lneg
     108: invokevirtual #10                 // Method addAndGet:(J)J
     111: lstore_1
     112: lload_1
     113: lconst_0
     114: lcmp
     115: ifne          119
     118: return
     119: lconst_0
     120: lstore_3
     121: goto          20
}
