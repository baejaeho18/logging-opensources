Compiled from "FlowableSampleTimed.java"
abstract class io.reactivex.rxjava3.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber<T> extends java.util.concurrent.atomic.AtomicReference<T> implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription, java.lang.Runnable {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super T> downstream;

  final long period;

  final java.util.concurrent.TimeUnit unit;

  final io.reactivex.rxjava3.core.Scheduler scheduler;

  final io.reactivex.rxjava3.functions.Consumer<? super T> onDropped;

  final java.util.concurrent.atomic.AtomicLong requested;

  final io.reactivex.rxjava3.internal.disposables.SequentialDisposable timer;

  org.reactivestreams.Subscription upstream;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber(org.reactivestreams.Subscriber<? super T>, long, java.util.concurrent.TimeUnit, io.reactivex.rxjava3.core.Scheduler, io.reactivex.rxjava3.functions.Consumer<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #4                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: new           #5                  // class io/reactivex/rxjava3/internal/disposables/SequentialDisposable
      19: dup
      20: invokespecial #6                  // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable."<init>":()V
      23: putfield      #7                  // Field timer:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
      26: aload_0
      27: aload_1
      28: putfield      #8                  // Field downstream:Lorg/reactivestreams/Subscriber;
      31: aload_0
      32: lload_2
      33: putfield      #9                  // Field period:J
      36: aload_0
      37: aload         4
      39: putfield      #10                 // Field unit:Ljava/util/concurrent/TimeUnit;
      42: aload_0
      43: aload         5
      45: putfield      #11                 // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      48: aload_0
      49: aload         6
      51: putfield      #12                 // Field onDropped:Lio/reactivex/rxjava3/functions/Consumer;
      54: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #13                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #14                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          63
      11: aload_0
      12: aload_1
      13: putfield      #13                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #8                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #15,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_0
      27: getfield      #7                  // Field timer:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
      30: aload_0
      31: getfield      #11                 // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      34: aload_0
      35: aload_0
      36: getfield      #9                  // Field period:J
      39: aload_0
      40: getfield      #9                  // Field period:J
      43: aload_0
      44: getfield      #10                 // Field unit:Ljava/util/concurrent/TimeUnit;
      47: invokevirtual #16                 // Method io/reactivex/rxjava3/core/Scheduler.schedulePeriodicallyDirect:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
      50: invokevirtual #17                 // Method io/reactivex/rxjava3/internal/disposables/SequentialDisposable.replace:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      53: pop
      54: aload_1
      55: ldc2_w        #19                 // long 9223372036854775807l
      58: invokeinterface #21,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      63: return

  public void onNext(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: ifnull        58
      10: aload_0
      11: getfield      #12                 // Field onDropped:Lio/reactivex/rxjava3/functions/Consumer;
      14: ifnull        58
      17: aload_0
      18: getfield      #12                 // Field onDropped:Lio/reactivex/rxjava3/functions/Consumer;
      21: aload_2
      22: invokeinterface #23,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Consumer.accept:(Ljava/lang/Object;)V
      27: goto          58
      30: astore_3
      31: aload_3
      32: invokestatic  #25                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      35: aload_0
      36: invokevirtual #26                 // Method cancelTimer:()V
      39: aload_0
      40: getfield      #13                 // Field upstream:Lorg/reactivestreams/Subscription;
      43: invokeinterface #27,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      48: aload_0
      49: getfield      #8                  // Field downstream:Lorg/reactivestreams/Subscriber;
      52: aload_3
      53: invokeinterface #28,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      58: return
    Exception table:
       from    to  target type
          17    27    30   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method cancelTimer:()V
       4: aload_0
       5: getfield      #8                  // Field downstream:Lorg/reactivestreams/Subscriber;
       8: aload_1
       9: invokeinterface #28,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      14: return

  public void onComplete();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method cancelTimer:()V
       4: aload_0
       5: invokevirtual #29                 // Method complete:()V
       8: return

  void cancelTimer();
    Code:
       0: aload_0
       1: getfield      #7                  // Field timer:Lio/reactivex/rxjava3/internal/disposables/SequentialDisposable;
       4: invokestatic  #30                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #31                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          16
       7: aload_0
       8: getfield      #4                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      11: lload_1
      12: invokestatic  #32                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      15: pop2
      16: return

  public void cancel();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method cancelTimer:()V
       4: aload_0
       5: getfield      #13                 // Field upstream:Lorg/reactivestreams/Subscription;
       8: invokeinterface #27,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      13: return

  void emit();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #22                 // Method getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_1
       6: aload_1
       7: ifnull        62
      10: aload_0
      11: getfield      #4                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      14: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      17: lstore_2
      18: lload_2
      19: lconst_0
      20: lcmp
      21: ifeq          46
      24: aload_0
      25: getfield      #8                  // Field downstream:Lorg/reactivestreams/Subscriber;
      28: aload_1
      29: invokeinterface #34,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      34: aload_0
      35: getfield      #4                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      38: lconst_1
      39: invokestatic  #35                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.produced:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      42: pop2
      43: goto          62
      46: aload_0
      47: invokevirtual #36                 // Method cancel:()V
      50: aload_0
      51: getfield      #8                  // Field downstream:Lorg/reactivestreams/Subscriber;
      54: invokestatic  #37                 // Method io/reactivex/rxjava3/exceptions/MissingBackpressureException.createDefault:()Lio/reactivex/rxjava3/exceptions/MissingBackpressureException;
      57: invokeinterface #28,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      62: return

  abstract void complete();
}
