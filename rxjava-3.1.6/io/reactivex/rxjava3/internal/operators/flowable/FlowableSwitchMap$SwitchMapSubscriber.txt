Compiled from "FlowableSwitchMap.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber<T, R> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super R> downstream;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>> mapper;

  final int bufferSize;

  final boolean delayErrors;

  volatile boolean done;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable errors;

  volatile boolean cancelled;

  org.reactivestreams.Subscription upstream;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber<T, R>> active;

  final java.util.concurrent.atomic.AtomicLong requested;

  static final io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber<java.lang.Object, java.lang.Object> CANCELLED;

  volatile long unique;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber(org.reactivestreams.Subscriber<? super R>, io.reactivex.rxjava3.functions.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>>, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicLong
      19: dup
      20: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      23: putfield      #7                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      26: aload_0
      27: aload_1
      28: putfield      #8                  // Field downstream:Lorg/reactivestreams/Subscriber;
      31: aload_0
      32: aload_2
      33: putfield      #9                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      36: aload_0
      37: iload_3
      38: putfield      #10                 // Field bufferSize:I
      41: aload_0
      42: iload         4
      44: putfield      #11                 // Field delayErrors:Z
      47: aload_0
      48: new           #12                 // class io/reactivex/rxjava3/internal/util/AtomicThrowable
      51: dup
      52: invokespecial #13                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      55: putfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      58: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #15                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #16                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #15                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #8                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #17,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #18                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #19                 // Field unique:J
      12: lconst_1
      13: ladd
      14: lstore_2
      15: aload_0
      16: lload_2
      17: putfield      #19                 // Field unique:J
      20: aload_0
      21: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
      24: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      27: checkcast     #21                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber
      30: astore        4
      32: aload         4
      34: ifnull        42
      37: aload         4
      39: invokevirtual #22                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber.cancel:()V
      42: aload_0
      43: getfield      #9                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      46: aload_1
      47: invokeinterface #23,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      52: ldc           #24                 // String The publisher returned is null
      54: invokestatic  #25                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      57: checkcast     #26                 // class org/reactivestreams/Publisher
      60: astore        5
      62: goto          88
      65: astore        6
      67: aload         6
      69: invokestatic  #28                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      72: aload_0
      73: getfield      #15                 // Field upstream:Lorg/reactivestreams/Subscription;
      76: invokeinterface #29,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      81: aload_0
      82: aload         6
      84: invokevirtual #30                 // Method onError:(Ljava/lang/Throwable;)V
      87: return
      88: new           #21                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber
      91: dup
      92: aload_0
      93: lload_2
      94: aload_0
      95: getfield      #10                 // Field bufferSize:I
      98: invokespecial #31                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber;JI)V
     101: astore        6
     103: aload_0
     104: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
     107: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     110: checkcast     #21                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber
     113: astore        4
     115: aload         4
     117: getstatic     #32                 // Field CANCELLED:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber;
     120: if_acmpne     126
     123: goto          152
     126: aload_0
     127: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
     130: aload         4
     132: aload         6
     134: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     137: ifeq          103
     140: aload         5
     142: aload         6
     144: invokeinterface #34,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     149: goto          152
     152: return
    Exception table:
       from    to  target type
          42    62    65   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #18                 // Field done:Z
       4: ifne          41
       7: aload_0
       8: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      11: aload_1
      12: invokevirtual #35                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowable:(Ljava/lang/Throwable;)Z
      15: ifeq          41
      18: aload_0
      19: getfield      #11                 // Field delayErrors:Z
      22: ifne          29
      25: aload_0
      26: invokevirtual #36                 // Method disposeInner:()V
      29: aload_0
      30: iconst_1
      31: putfield      #18                 // Field done:Z
      34: aload_0
      35: invokevirtual #37                 // Method drain:()V
      38: goto          45
      41: aload_1
      42: invokestatic  #38                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      45: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #18                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #18                 // Field done:Z
      13: aload_0
      14: invokevirtual #37                 // Method drain:()V
      17: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #39                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          44
       7: aload_0
       8: getfield      #7                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      11: lload_1
      12: invokestatic  #40                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      15: pop2
      16: aload_0
      17: getfield      #19                 // Field unique:J
      20: lconst_0
      21: lcmp
      22: ifne          40
      25: aload_0
      26: getfield      #15                 // Field upstream:Lorg/reactivestreams/Subscription;
      29: ldc2_w        #42                 // long 9223372036854775807l
      32: invokeinterface #44,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      37: goto          44
      40: aload_0
      41: invokevirtual #37                 // Method drain:()V
      44: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #45                 // Field cancelled:Z
       4: ifne          32
       7: aload_0
       8: iconst_1
       9: putfield      #45                 // Field cancelled:Z
      12: aload_0
      13: getfield      #15                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: invokeinterface #29,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      21: aload_0
      22: invokevirtual #36                 // Method disposeInner:()V
      25: aload_0
      26: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      29: invokevirtual #46                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      32: return

  void disposeInner();
    Code:
       0: aload_0
       1: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
       4: getstatic     #32                 // Field CANCELLED:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber;
       7: invokevirtual #47                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #21                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber
      13: astore_1
      14: aload_1
      15: getstatic     #32                 // Field CANCELLED:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber;
      18: if_acmpeq     29
      21: aload_1
      22: ifnull        29
      25: aload_1
      26: invokevirtual #22                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber.cancel:()V
      29: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #8                  // Field downstream:Lorg/reactivestreams/Subscriber;
      12: astore_1
      13: iconst_1
      14: istore_2
      15: aload_0
      16: getfield      #45                 // Field cancelled:Z
      19: ifeq          23
      22: return
      23: aload_0
      24: getfield      #18                 // Field done:Z
      27: ifeq          101
      30: aload_0
      31: getfield      #11                 // Field delayErrors:Z
      34: ifeq          56
      37: aload_0
      38: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
      41: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      44: ifnonnull     101
      47: aload_0
      48: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      51: aload_1
      52: invokevirtual #49                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
      55: return
      56: aload_0
      57: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      60: invokevirtual #50                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
      63: checkcast     #27                 // class java/lang/Throwable
      66: astore_3
      67: aload_3
      68: ifnull        84
      71: aload_0
      72: invokevirtual #36                 // Method disposeInner:()V
      75: aload_0
      76: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      79: aload_1
      80: invokevirtual #49                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
      83: return
      84: aload_0
      85: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
      88: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      91: ifnonnull     101
      94: aload_1
      95: invokeinterface #51,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     100: return
     101: aload_0
     102: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
     105: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     108: checkcast     #21                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber
     111: astore_3
     112: aload_3
     113: ifnull        123
     116: aload_3
     117: getfield      #52                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber.queue:Lio/reactivex/rxjava3/operators/SimpleQueue;
     120: goto          124
     123: aconst_null
     124: astore        4
     126: aload         4
     128: ifnull        493
     131: aload_0
     132: getfield      #7                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     135: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     138: lstore        5
     140: lconst_0
     141: lstore        7
     143: iconst_0
     144: istore        9
     146: lload         7
     148: lload         5
     150: lcmp
     151: ifeq          344
     154: aload_0
     155: getfield      #45                 // Field cancelled:Z
     158: ifeq          162
     161: return
     162: aload_3
     163: getfield      #54                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber.done:Z
     166: istore        10
     168: aload         4
     170: invokeinterface #55,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.poll:()Ljava/lang/Object;
     175: astore        11
     177: goto          207
     180: astore        12
     182: aload         12
     184: invokestatic  #28                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     187: aload_3
     188: invokevirtual #22                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber.cancel:()V
     191: aload_0
     192: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     195: aload         12
     197: invokevirtual #56                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
     200: pop
     201: iconst_1
     202: istore        10
     204: aconst_null
     205: astore        11
     207: aload         11
     209: ifnonnull     216
     212: iconst_1
     213: goto          217
     216: iconst_0
     217: istore        12
     219: aload_3
     220: aload_0
     221: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
     224: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     227: if_acmpeq     236
     230: iconst_1
     231: istore        9
     233: goto          344
     236: iload         10
     238: ifeq          319
     241: aload_0
     242: getfield      #11                 // Field delayErrors:Z
     245: ifne          298
     248: aload_0
     249: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     252: invokevirtual #50                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
     255: checkcast     #27                 // class java/lang/Throwable
     258: astore        13
     260: aload         13
     262: ifnull        274
     265: aload_0
     266: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     269: aload_1
     270: invokevirtual #49                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     273: return
     274: iload         12
     276: ifeq          295
     279: aload_0
     280: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
     283: aload_3
     284: aconst_null
     285: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     288: pop
     289: iconst_1
     290: istore        9
     292: goto          344
     295: goto          319
     298: iload         12
     300: ifeq          319
     303: aload_0
     304: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
     307: aload_3
     308: aconst_null
     309: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     312: pop
     313: iconst_1
     314: istore        9
     316: goto          344
     319: iload         12
     321: ifeq          327
     324: goto          344
     327: aload_1
     328: aload         11
     330: invokeinterface #57,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     335: lload         7
     337: lconst_1
     338: ladd
     339: lstore        7
     341: goto          146
     344: lload         7
     346: lload         5
     348: lcmp
     349: ifne          445
     352: aload_3
     353: getfield      #54                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber.done:Z
     356: ifeq          445
     359: aload_0
     360: getfield      #11                 // Field delayErrors:Z
     363: ifne          422
     366: aload_0
     367: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     370: invokevirtual #50                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
     373: checkcast     #27                 // class java/lang/Throwable
     376: astore        10
     378: aload         10
     380: ifnull        396
     383: aload_0
     384: invokevirtual #36                 // Method disposeInner:()V
     387: aload_0
     388: getfield      #14                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     391: aload_1
     392: invokevirtual #49                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     395: return
     396: aload         4
     398: invokeinterface #58,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.isEmpty:()Z
     403: ifeq          419
     406: aload_0
     407: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
     410: aload_3
     411: aconst_null
     412: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     415: pop
     416: goto          15
     419: goto          445
     422: aload         4
     424: invokeinterface #58,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimpleQueue.isEmpty:()Z
     429: ifeq          445
     432: aload_0
     433: getfield      #4                  // Field active:Ljava/util/concurrent/atomic/AtomicReference;
     436: aload_3
     437: aconst_null
     438: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     441: pop
     442: goto          15
     445: lload         7
     447: lconst_0
     448: lcmp
     449: ifeq          485
     452: aload_0
     453: getfield      #45                 // Field cancelled:Z
     456: ifne          485
     459: lload         5
     461: ldc2_w        #42                 // long 9223372036854775807l
     464: lcmp
     465: ifeq          479
     468: aload_0
     469: getfield      #7                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     472: lload         7
     474: lneg
     475: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
     478: pop2
     479: aload_3
     480: lload         7
     482: invokevirtual #60                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber.request:(J)V
     485: iload         9
     487: ifeq          493
     490: goto          15
     493: aload_0
     494: iload_2
     495: ineg
     496: invokevirtual #61                 // Method addAndGet:(I)I
     499: istore_2
     500: iload_2
     501: ifne          507
     504: goto          510
     507: goto          15
     510: return
    Exception table:
       from    to  target type
         168   177   180   Class java/lang/Throwable

  static {};
    Code:
       0: new           #21                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber
       3: dup
       4: aconst_null
       5: ldc2_w        #62                 // long -1l
       8: iconst_1
       9: invokespecial #31                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapSubscriber;JI)V
      12: putstatic     #32                 // Field CANCELLED:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber;
      15: getstatic     #32                 // Field CANCELLED:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber;
      18: invokevirtual #22                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableSwitchMap$SwitchMapInnerSubscriber.cancel:()V
      21: return
}
