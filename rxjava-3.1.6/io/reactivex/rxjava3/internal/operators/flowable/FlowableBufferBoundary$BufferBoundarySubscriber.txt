Compiled from "FlowableBufferBoundary.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber<T, C extends java.util.Collection<? super T>, Open, Close> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super C> downstream;

  final io.reactivex.rxjava3.functions.Supplier<C> bufferSupplier;

  final org.reactivestreams.Publisher<? extends Open> bufferOpen;

  final io.reactivex.rxjava3.functions.Function<? super Open, ? extends org.reactivestreams.Publisher<? extends Close>> bufferClose;

  final io.reactivex.rxjava3.disposables.CompositeDisposable subscribers;

  final java.util.concurrent.atomic.AtomicLong requested;

  final java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> upstream;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable errors;

  volatile boolean done;

  final io.reactivex.rxjava3.operators.SpscLinkedArrayQueue<C> queue;

  volatile boolean cancelled;

  long index;

  java.util.Map<java.lang.Long, C> buffers;

  long emitted;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber(org.reactivestreams.Subscriber<? super C>, org.reactivestreams.Publisher<? extends Open>, io.reactivex.rxjava3.functions.Function<? super Open, ? extends org.reactivestreams.Publisher<? extends Close>>, io.reactivex.rxjava3.functions.Supplier<C>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: aload         4
      12: putfield      #3                  // Field bufferSupplier:Lio/reactivex/rxjava3/functions/Supplier;
      15: aload_0
      16: aload_2
      17: putfield      #4                  // Field bufferOpen:Lorg/reactivestreams/Publisher;
      20: aload_0
      21: aload_3
      22: putfield      #5                  // Field bufferClose:Lio/reactivex/rxjava3/functions/Function;
      25: aload_0
      26: new           #6                  // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      29: dup
      30: invokestatic  #7                  // Method io/reactivex/rxjava3/core/Flowable.bufferSize:()I
      33: invokespecial #8                  // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue."<init>":(I)V
      36: putfield      #9                  // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
      39: aload_0
      40: new           #10                 // class io/reactivex/rxjava3/disposables/CompositeDisposable
      43: dup
      44: invokespecial #11                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable."<init>":()V
      47: putfield      #12                 // Field subscribers:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      50: aload_0
      51: new           #13                 // class java/util/concurrent/atomic/AtomicLong
      54: dup
      55: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      58: putfield      #15                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      61: aload_0
      62: new           #16                 // class java/util/concurrent/atomic/AtomicReference
      65: dup
      66: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      69: putfield      #18                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      72: aload_0
      73: new           #19                 // class java/util/LinkedHashMap
      76: dup
      77: invokespecial #20                 // Method java/util/LinkedHashMap."<init>":()V
      80: putfield      #21                 // Field buffers:Ljava/util/Map;
      83: aload_0
      84: new           #22                 // class io/reactivex/rxjava3/internal/util/AtomicThrowable
      87: dup
      88: invokespecial #23                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      91: putfield      #24                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      94: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #18                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokestatic  #25                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          48
      11: new           #26                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber
      14: dup
      15: aload_0
      16: invokespecial #27                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferBoundary$BufferBoundarySubscriber;)V
      19: astore_2
      20: aload_0
      21: getfield      #12                 // Field subscribers:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      24: aload_2
      25: invokevirtual #28                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      28: pop
      29: aload_0
      30: getfield      #4                  // Field bufferOpen:Lorg/reactivestreams/Publisher;
      33: aload_2
      34: invokeinterface #29,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      39: aload_1
      40: ldc2_w        #31                 // long 9223372036854775807l
      43: invokeinterface #33,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      48: return

  public void onNext(T);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #21                 // Field buffers:Ljava/util/Map;
       8: astore_3
       9: aload_3
      10: ifnonnull     16
      13: aload_2
      14: monitorexit
      15: return
      16: aload_3
      17: invokeinterface #34,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      22: invokeinterface #35,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      27: astore        4
      29: aload         4
      31: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          63
      39: aload         4
      41: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #38                 // class java/util/Collection
      49: astore        5
      51: aload         5
      53: aload_1
      54: invokeinterface #39,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      59: pop
      60: goto          29
      63: aload_2
      64: monitorexit
      65: goto          75
      68: astore        6
      70: aload_2
      71: monitorexit
      72: aload         6
      74: athrow
      75: return
    Exception table:
       from    to  target type
           4    15    68   any
          16    65    68   any
          68    72    68   any

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #24                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
       4: aload_1
       5: invokevirtual #40                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryAddThrowableOrReport:(Ljava/lang/Throwable;)Z
       8: ifeq          46
      11: aload_0
      12: getfield      #12                 // Field subscribers:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      15: invokevirtual #41                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      18: aload_0
      19: dup
      20: astore_2
      21: monitorenter
      22: aload_0
      23: aconst_null
      24: putfield      #21                 // Field buffers:Ljava/util/Map;
      27: aload_2
      28: monitorexit
      29: goto          37
      32: astore_3
      33: aload_2
      34: monitorexit
      35: aload_3
      36: athrow
      37: aload_0
      38: iconst_1
      39: putfield      #42                 // Field done:Z
      42: aload_0
      43: invokevirtual #43                 // Method drain:()V
      46: return
    Exception table:
       from    to  target type
          22    29    32   any
          32    35    32   any

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #12                 // Field subscribers:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
       4: invokevirtual #41                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #21                 // Field buffers:Ljava/util/Map;
      15: astore_2
      16: aload_2
      17: ifnonnull     23
      20: aload_1
      21: monitorexit
      22: return
      23: aload_2
      24: invokeinterface #34,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      29: invokeinterface #35,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      34: astore_3
      35: aload_3
      36: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          68
      44: aload_3
      45: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #38                 // class java/util/Collection
      53: astore        4
      55: aload_0
      56: getfield      #9                  // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
      59: aload         4
      61: invokevirtual #44                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.offer:(Ljava/lang/Object;)Z
      64: pop
      65: goto          35
      68: aload_0
      69: aconst_null
      70: putfield      #21                 // Field buffers:Ljava/util/Map;
      73: aload_1
      74: monitorexit
      75: goto          85
      78: astore        5
      80: aload_1
      81: monitorexit
      82: aload         5
      84: athrow
      85: aload_0
      86: iconst_1
      87: putfield      #42                 // Field done:Z
      90: aload_0
      91: invokevirtual #43                 // Method drain:()V
      94: return
    Exception table:
       from    to  target type
          11    22    78   any
          23    75    78   any
          78    82    78   any

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #15                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
       4: lload_1
       5: invokestatic  #45                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
       8: pop2
       9: aload_0
      10: invokevirtual #43                 // Method drain:()V
      13: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #18                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #46                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: ifeq          55
      10: aload_0
      11: iconst_1
      12: putfield      #47                 // Field cancelled:Z
      15: aload_0
      16: getfield      #12                 // Field subscribers:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      19: invokevirtual #41                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
      22: aload_0
      23: dup
      24: astore_1
      25: monitorenter
      26: aload_0
      27: aconst_null
      28: putfield      #21                 // Field buffers:Ljava/util/Map;
      31: aload_1
      32: monitorexit
      33: goto          41
      36: astore_2
      37: aload_1
      38: monitorexit
      39: aload_2
      40: athrow
      41: aload_0
      42: invokevirtual #48                 // Method getAndIncrement:()I
      45: ifeq          55
      48: aload_0
      49: getfield      #9                  // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
      52: invokevirtual #49                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.clear:()V
      55: return
    Exception table:
       from    to  target type
          26    33    36   any
          36    39    36   any

  void open(Open);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bufferSupplier:Lio/reactivex/rxjava3/functions/Supplier;
       4: invokeinterface #50,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
       9: ldc           #51                 // String The bufferSupplier returned a null Collection
      11: invokestatic  #52                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #38                 // class java/util/Collection
      17: astore_3
      18: aload_0
      19: getfield      #5                  // Field bufferClose:Lio/reactivex/rxjava3/functions/Function;
      22: aload_1
      23: invokeinterface #53,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: ldc           #54                 // String The bufferClose returned a null Publisher
      30: invokestatic  #52                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      33: checkcast     #55                 // class org/reactivestreams/Publisher
      36: astore_2
      37: goto          62
      40: astore        4
      42: aload         4
      44: invokestatic  #57                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      47: aload_0
      48: getfield      #18                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      51: invokestatic  #46                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      54: pop
      55: aload_0
      56: aload         4
      58: invokevirtual #58                 // Method onError:(Ljava/lang/Throwable;)V
      61: return
      62: aload_0
      63: getfield      #59                 // Field index:J
      66: lstore        4
      68: aload_0
      69: lload         4
      71: lconst_1
      72: ladd
      73: putfield      #59                 // Field index:J
      76: aload_0
      77: dup
      78: astore        6
      80: monitorenter
      81: aload_0
      82: getfield      #21                 // Field buffers:Ljava/util/Map;
      85: astore        7
      87: aload         7
      89: ifnonnull     96
      92: aload         6
      94: monitorexit
      95: return
      96: aload         7
      98: lload         4
     100: invokestatic  #60                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     103: aload_3
     104: invokeinterface #61,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: aload         6
     112: monitorexit
     113: goto          124
     116: astore        8
     118: aload         6
     120: monitorexit
     121: aload         8
     123: athrow
     124: new           #62                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableBufferBoundary$BufferCloseSubscriber
     127: dup
     128: aload_0
     129: lload         4
     131: invokespecial #63                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableBufferBoundary$BufferCloseSubscriber."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableBufferBoundary$BufferBoundarySubscriber;J)V
     134: astore        6
     136: aload_0
     137: getfield      #12                 // Field subscribers:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
     140: aload         6
     142: invokevirtual #28                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
     145: pop
     146: aload_2
     147: aload         6
     149: invokeinterface #29,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     154: return
    Exception table:
       from    to  target type
           0    37    40   Class java/lang/Throwable
          81    95   116   any
          96   113   116   any
         116   121   116   any

  void openComplete(io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber<Open>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field subscribers:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
       4: aload_1
       5: invokevirtual #64                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: pop
       9: aload_0
      10: getfield      #12                 // Field subscribers:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      13: invokevirtual #65                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.size:()I
      16: ifne          36
      19: aload_0
      20: getfield      #18                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      23: invokestatic  #46                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      26: pop
      27: aload_0
      28: iconst_1
      29: putfield      #42                 // Field done:Z
      32: aload_0
      33: invokevirtual #43                 // Method drain:()V
      36: return

  void close(io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferBoundary$BufferCloseSubscriber<T, C>, long);
    Code:
       0: aload_0
       1: getfield      #12                 // Field subscribers:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
       4: aload_1
       5: invokevirtual #64                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: pop
       9: iconst_0
      10: istore        4
      12: aload_0
      13: getfield      #12                 // Field subscribers:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      16: invokevirtual #65                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.size:()I
      19: ifne          33
      22: iconst_1
      23: istore        4
      25: aload_0
      26: getfield      #18                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      29: invokestatic  #46                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      32: pop
      33: aload_0
      34: dup
      35: astore        5
      37: monitorenter
      38: aload_0
      39: getfield      #21                 // Field buffers:Ljava/util/Map;
      42: astore        6
      44: aload         6
      46: ifnonnull     53
      49: aload         5
      51: monitorexit
      52: return
      53: aload_0
      54: getfield      #9                  // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
      57: aload_0
      58: getfield      #21                 // Field buffers:Ljava/util/Map;
      61: lload_2
      62: invokestatic  #60                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      65: invokeinterface #66,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      70: invokevirtual #44                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.offer:(Ljava/lang/Object;)Z
      73: pop
      74: aload         5
      76: monitorexit
      77: goto          88
      80: astore        7
      82: aload         5
      84: monitorexit
      85: aload         7
      87: athrow
      88: iload         4
      90: ifeq          98
      93: aload_0
      94: iconst_1
      95: putfield      #42                 // Field done:Z
      98: aload_0
      99: invokevirtual #43                 // Method drain:()V
     102: return
    Exception table:
       from    to  target type
          38    52    80   any
          53    77    80   any
          80    85    80   any

  void boundaryError(io.reactivex.rxjava3.disposables.Disposable, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #18                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #46                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: getfield      #12                 // Field subscribers:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      12: aload_1
      13: invokevirtual #64                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.delete:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      16: pop
      17: aload_0
      18: aload_2
      19: invokevirtual #58                 // Method onError:(Ljava/lang/Throwable;)V
      22: return

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: iconst_1
       9: istore_1
      10: aload_0
      11: getfield      #67                 // Field emitted:J
      14: lstore_2
      15: aload_0
      16: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      19: astore        4
      21: aload_0
      22: getfield      #9                  // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
      25: astore        5
      27: aload_0
      28: getfield      #15                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      31: invokevirtual #68                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      34: lstore        6
      36: lload_2
      37: lload         6
      39: lcmp
      40: ifeq          156
      43: aload_0
      44: getfield      #47                 // Field cancelled:Z
      47: ifeq          56
      50: aload         5
      52: invokevirtual #49                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.clear:()V
      55: return
      56: aload_0
      57: getfield      #42                 // Field done:Z
      60: istore        8
      62: iload         8
      64: ifeq          92
      67: aload_0
      68: getfield      #24                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      71: invokevirtual #69                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
      74: ifnull        92
      77: aload         5
      79: invokevirtual #49                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.clear:()V
      82: aload_0
      83: getfield      #24                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      86: aload         4
      88: invokevirtual #70                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
      91: return
      92: aload         5
      94: invokevirtual #71                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.poll:()Ljava/lang/Object;
      97: checkcast     #38                 // class java/util/Collection
     100: astore        9
     102: aload         9
     104: ifnonnull     111
     107: iconst_1
     108: goto          112
     111: iconst_0
     112: istore        10
     114: iload         8
     116: ifeq          132
     119: iload         10
     121: ifeq          132
     124: aload         4
     126: invokeinterface #72,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     131: return
     132: iload         10
     134: ifeq          140
     137: goto          156
     140: aload         4
     142: aload         9
     144: invokeinterface #73,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     149: lload_2
     150: lconst_1
     151: ladd
     152: lstore_2
     153: goto          36
     156: lload_2
     157: lload         6
     159: lcmp
     160: ifne          224
     163: aload_0
     164: getfield      #47                 // Field cancelled:Z
     167: ifeq          176
     170: aload         5
     172: invokevirtual #49                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.clear:()V
     175: return
     176: aload_0
     177: getfield      #42                 // Field done:Z
     180: ifeq          224
     183: aload_0
     184: getfield      #24                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     187: invokevirtual #69                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.get:()Ljava/lang/Object;
     190: ifnull        208
     193: aload         5
     195: invokevirtual #49                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.clear:()V
     198: aload_0
     199: getfield      #24                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
     202: aload         4
     204: invokevirtual #70                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateConsumer:(Lorg/reactivestreams/Subscriber;)V
     207: return
     208: aload         5
     210: invokevirtual #74                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.isEmpty:()Z
     213: ifeq          224
     216: aload         4
     218: invokeinterface #72,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     223: return
     224: aload_0
     225: lload_2
     226: putfield      #67                 // Field emitted:J
     229: aload_0
     230: iload_1
     231: ineg
     232: invokevirtual #75                 // Method addAndGet:(I)I
     235: istore_1
     236: iload_1
     237: ifne          243
     240: goto          246
     243: goto          27
     246: return
}
