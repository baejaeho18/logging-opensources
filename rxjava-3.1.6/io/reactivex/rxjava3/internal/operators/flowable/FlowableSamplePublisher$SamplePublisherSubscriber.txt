Compiled from "FlowableSamplePublisher.java"
abstract class io.reactivex.rxjava3.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber<T> extends java.util.concurrent.atomic.AtomicReference<T> implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super T> downstream;

  final org.reactivestreams.Publisher<?> sampler;

  final java.util.concurrent.atomic.AtomicLong requested;

  final java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> other;

  org.reactivestreams.Subscription upstream;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber(org.reactivestreams.Subscriber<? super T>, org.reactivestreams.Publisher<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #4                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicReference
      19: dup
      20: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      23: putfield      #6                  // Field other:Ljava/util/concurrent/atomic/AtomicReference;
      26: aload_0
      27: aload_1
      28: putfield      #7                  // Field downstream:Lorg/reactivestreams/Subscriber;
      31: aload_0
      32: aload_2
      33: putfield      #8                  // Field sampler:Lorg/reactivestreams/Publisher;
      36: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #9                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #10                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          62
      11: aload_0
      12: aload_1
      13: putfield      #9                  // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #7                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #11,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_0
      27: getfield      #6                  // Field other:Ljava/util/concurrent/atomic/AtomicReference;
      30: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      33: ifnonnull     62
      36: aload_0
      37: getfield      #8                  // Field sampler:Lorg/reactivestreams/Publisher;
      40: new           #13                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableSamplePublisher$SamplerSubscriber
      43: dup
      44: aload_0
      45: invokespecial #14                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableSamplePublisher$SamplerSubscriber."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableSamplePublisher$SamplePublisherSubscriber;)V
      48: invokeinterface #15,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      53: aload_1
      54: ldc2_w        #17                 // long 9223372036854775807l
      57: invokeinterface #19,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      62: return

  public void onNext(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method lazySet:(Ljava/lang/Object;)V
       5: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field other:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #21                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: getfield      #7                  // Field downstream:Lorg/reactivestreams/Subscriber;
      12: aload_1
      13: invokeinterface #22,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      18: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field other:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #21                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: invokevirtual #23                 // Method completion:()V
      12: return

  void setOther(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #6                  // Field other:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: ldc2_w        #17                 // long 9223372036854775807l
       8: invokestatic  #24                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;J)Z
      11: pop
      12: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #25                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          16
       7: aload_0
       8: getfield      #4                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      11: lload_1
      12: invokestatic  #26                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      15: pop2
      16: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field other:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #21                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: getfield      #9                  // Field upstream:Lorg/reactivestreams/Subscription;
      12: invokeinterface #27,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      17: return

  public void error(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #9                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: invokeinterface #27,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: aload_0
      10: getfield      #7                  // Field downstream:Lorg/reactivestreams/Subscriber;
      13: aload_1
      14: invokeinterface #22,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      19: return

  public void complete();
    Code:
       0: aload_0
       1: getfield      #9                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: invokeinterface #27,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: aload_0
      10: invokevirtual #23                 // Method completion:()V
      13: return

  void emit();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #28                 // Method getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_1
       6: aload_1
       7: ifnull        62
      10: aload_0
      11: getfield      #4                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      14: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      17: lstore_2
      18: lload_2
      19: lconst_0
      20: lcmp
      21: ifeq          46
      24: aload_0
      25: getfield      #7                  // Field downstream:Lorg/reactivestreams/Subscriber;
      28: aload_1
      29: invokeinterface #30,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      34: aload_0
      35: getfield      #4                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      38: lconst_1
      39: invokestatic  #31                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.produced:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      42: pop2
      43: goto          62
      46: aload_0
      47: invokevirtual #32                 // Method cancel:()V
      50: aload_0
      51: getfield      #7                  // Field downstream:Lorg/reactivestreams/Subscriber;
      54: invokestatic  #33                 // Method io/reactivex/rxjava3/exceptions/MissingBackpressureException.createDefault:()Lio/reactivex/rxjava3/exceptions/MissingBackpressureException;
      57: invokeinterface #22,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      62: return

  abstract void completion();

  abstract void run();
}
