Compiled from "FlowableConcatMapEagerPublisher.java"
public final class io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEagerPublisher<T, R> extends io.reactivex.rxjava3.core.Flowable<R> {
  final org.reactivestreams.Publisher<T> source;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>> mapper;

  final int maxConcurrency;

  final int prefetch;

  final io.reactivex.rxjava3.internal.util.ErrorMode errorMode;

  public io.reactivex.rxjava3.internal.operators.flowable.FlowableConcatMapEagerPublisher(org.reactivestreams.Publisher<T>, io.reactivex.rxjava3.functions.Function<? super T, ? extends org.reactivestreams.Publisher<? extends R>>, int, int, io.reactivex.rxjava3.internal.util.ErrorMode);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/core/Flowable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lorg/reactivestreams/Publisher;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field maxConcurrency:I
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field prefetch:I
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field errorMode:Lio/reactivex/rxjava3/internal/util/ErrorMode;
      31: return

  protected void subscribeActual(org.reactivestreams.Subscriber<? super R>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lorg/reactivestreams/Publisher;
       4: new           #7                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      13: aload_0
      14: getfield      #4                  // Field maxConcurrency:I
      17: aload_0
      18: getfield      #5                  // Field prefetch:I
      21: aload_0
      22: getfield      #6                  // Field errorMode:Lio/reactivex/rxjava3/internal/util/ErrorMode;
      25: invokespecial #8                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber."<init>":(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;IILio/reactivex/rxjava3/internal/util/ErrorMode;)V
      28: invokeinterface #9,  2            // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      33: return
}
