Compiled from "FlowableRetryWhen.java"
public final class io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryWhen<T> extends io.reactivex.rxjava3.internal.operators.flowable.AbstractFlowableWithUpstream<T, T> {
  final io.reactivex.rxjava3.functions.Function<? super io.reactivex.rxjava3.core.Flowable<java.lang.Throwable>, ? extends org.reactivestreams.Publisher<?>> handler;

  public io.reactivex.rxjava3.internal.operators.flowable.FlowableRetryWhen(io.reactivex.rxjava3.core.Flowable<T>, io.reactivex.rxjava3.functions.Function<? super io.reactivex.rxjava3.core.Flowable<java.lang.Throwable>, ? extends org.reactivestreams.Publisher<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/AbstractFlowableWithUpstream."<init>":(Lio/reactivex/rxjava3/core/Flowable;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field handler:Lio/reactivex/rxjava3/functions/Function;
      10: return

  public void subscribeActual(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: new           #3                  // class io/reactivex/rxjava3/subscribers/SerializedSubscriber
       3: dup
       4: aload_1
       5: invokespecial #4                  // Method io/reactivex/rxjava3/subscribers/SerializedSubscriber."<init>":(Lorg/reactivestreams/Subscriber;)V
       8: astore_2
       9: bipush        8
      11: invokestatic  #5                  // Method io/reactivex/rxjava3/processors/UnicastProcessor.create:(I)Lio/reactivex/rxjava3/processors/UnicastProcessor;
      14: invokevirtual #6                  // Method io/reactivex/rxjava3/processors/UnicastProcessor.toSerialized:()Lio/reactivex/rxjava3/processors/FlowableProcessor;
      17: astore_3
      18: aload_0
      19: getfield      #2                  // Field handler:Lio/reactivex/rxjava3/functions/Function;
      22: aload_3
      23: invokeinterface #7,  2            // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: ldc           #8                  // String handler returned a null Publisher
      30: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      33: checkcast     #10                 // class org/reactivestreams/Publisher
      36: astore        4
      38: goto          55
      41: astore        5
      43: aload         5
      45: invokestatic  #12                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      48: aload         5
      50: aload_1
      51: invokestatic  #13                 // Method io/reactivex/rxjava3/internal/subscriptions/EmptySubscription.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V
      54: return
      55: new           #14                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableRepeatWhen$WhenReceiver
      58: dup
      59: aload_0
      60: getfield      #15                 // Field source:Lio/reactivex/rxjava3/core/Flowable;
      63: invokespecial #16                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableRepeatWhen$WhenReceiver."<init>":(Lorg/reactivestreams/Publisher;)V
      66: astore        5
      68: new           #17                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableRetryWhen$RetryWhenSubscriber
      71: dup
      72: aload_2
      73: aload_3
      74: aload         5
      76: invokespecial #18                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableRetryWhen$RetryWhenSubscriber."<init>":(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/processors/FlowableProcessor;Lorg/reactivestreams/Subscription;)V
      79: astore        6
      81: aload         5
      83: aload         6
      85: putfield      #19                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableRepeatWhen$WhenReceiver.subscriber:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRepeatWhen$WhenSourceSubscriber;
      88: aload_1
      89: aload         6
      91: invokeinterface #20,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      96: aload         4
      98: aload         5
     100: invokeinterface #21,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     105: aload         5
     107: iconst_0
     108: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     111: invokevirtual #23                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableRepeatWhen$WhenReceiver.onNext:(Ljava/lang/Object;)V
     114: return
    Exception table:
       from    to  target type
          18    38    41   Class java/lang/Throwable
}
