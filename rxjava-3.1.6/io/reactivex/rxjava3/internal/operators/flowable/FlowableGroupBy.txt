Compiled from "FlowableGroupBy.java"
public final class io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy<T, K, V> extends io.reactivex.rxjava3.internal.operators.flowable.AbstractFlowableWithUpstream<T, io.reactivex.rxjava3.flowables.GroupedFlowable<K, V>> {
  final io.reactivex.rxjava3.functions.Function<? super T, ? extends K> keySelector;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends V> valueSelector;

  final int bufferSize;

  final boolean delayError;

  final io.reactivex.rxjava3.functions.Function<? super io.reactivex.rxjava3.functions.Consumer<java.lang.Object>, ? extends java.util.Map<K, java.lang.Object>> mapFactory;

  public io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy(io.reactivex.rxjava3.core.Flowable<T>, io.reactivex.rxjava3.functions.Function<? super T, ? extends K>, io.reactivex.rxjava3.functions.Function<? super T, ? extends V>, int, boolean, io.reactivex.rxjava3.functions.Function<? super io.reactivex.rxjava3.functions.Consumer<java.lang.Object>, ? extends java.util.Map<K, java.lang.Object>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/flowable/AbstractFlowableWithUpstream."<init>":(Lio/reactivex/rxjava3/core/Flowable;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field keySelector:Lio/reactivex/rxjava3/functions/Function;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field valueSelector:Lio/reactivex/rxjava3/functions/Function;
      15: aload_0
      16: iload         4
      18: putfield      #4                  // Field bufferSize:I
      21: aload_0
      22: iload         5
      24: putfield      #5                  // Field delayError:Z
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field mapFactory:Lio/reactivex/rxjava3/functions/Function;
      33: return

  protected void subscribeActual(org.reactivestreams.Subscriber<? super io.reactivex.rxjava3.flowables.GroupedFlowable<K, V>>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field mapFactory:Lio/reactivex/rxjava3/functions/Function;
       4: ifnonnull     20
       7: aconst_null
       8: astore_3
       9: new           #7                  // class java/util/concurrent/ConcurrentHashMap
      12: dup
      13: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      16: astore_2
      17: goto          53
      20: new           #9                  // class java/util/concurrent/ConcurrentLinkedQueue
      23: dup
      24: invokespecial #10                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      27: astore_3
      28: new           #11                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy$EvictionAction
      31: dup
      32: aload_3
      33: invokespecial #12                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy$EvictionAction."<init>":(Ljava/util/Queue;)V
      36: astore        4
      38: aload_0
      39: getfield      #6                  // Field mapFactory:Lio/reactivex/rxjava3/functions/Function;
      42: aload         4
      44: invokeinterface #13,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #14                 // class java/util/Map
      52: astore_2
      53: goto          81
      56: astore        4
      58: aload         4
      60: invokestatic  #16                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      63: aload_1
      64: getstatic     #17                 // Field io/reactivex/rxjava3/internal/util/EmptyComponent.INSTANCE:Lio/reactivex/rxjava3/internal/util/EmptyComponent;
      67: invokeinterface #18,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      72: aload_1
      73: aload         4
      75: invokeinterface #19,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      80: return
      81: new           #20                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy$GroupBySubscriber
      84: dup
      85: aload_1
      86: aload_0
      87: getfield      #2                  // Field keySelector:Lio/reactivex/rxjava3/functions/Function;
      90: aload_0
      91: getfield      #3                  // Field valueSelector:Lio/reactivex/rxjava3/functions/Function;
      94: aload_0
      95: getfield      #4                  // Field bufferSize:I
      98: aload_0
      99: getfield      #5                  // Field delayError:Z
     102: aload_2
     103: aload_3
     104: invokespecial #21                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy$GroupBySubscriber."<init>":(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/functions/Function;Lio/reactivex/rxjava3/functions/Function;IZLjava/util/Map;Ljava/util/Queue;)V
     107: astore        4
     109: aload_0
     110: getfield      #22                 // Field source:Lio/reactivex/rxjava3/core/Flowable;
     113: aload         4
     115: invokevirtual #23                 // Method io/reactivex/rxjava3/core/Flowable.subscribe:(Lio/reactivex/rxjava3/core/FlowableSubscriber;)V
     118: return
    Exception table:
       from    to  target type
           0    53    56   Class java/lang/Throwable
}
