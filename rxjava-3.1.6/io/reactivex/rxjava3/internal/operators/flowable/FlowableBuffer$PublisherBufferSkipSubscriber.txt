Compiled from "FlowableBuffer.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber<T, C extends java.util.Collection<? super T>> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super C> downstream;

  final io.reactivex.rxjava3.functions.Supplier<C> bufferSupplier;

  final int size;

  final int skip;

  C buffer;

  org.reactivestreams.Subscription upstream;

  boolean done;

  int index;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber(org.reactivestreams.Subscriber<? super C>, int, int, io.reactivex.rxjava3.functions.Supplier<C>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field size:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field skip:I
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field bufferSupplier:Lio/reactivex/rxjava3/functions/Supplier;
      25: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #6                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          87
       7: aload_0
       8: invokevirtual #7                  // Method get:()I
      11: ifne          69
      14: aload_0
      15: iconst_0
      16: iconst_1
      17: invokevirtual #8                  // Method compareAndSet:(II)Z
      20: ifeq          69
      23: lload_1
      24: aload_0
      25: getfield      #3                  // Field size:I
      28: i2l
      29: invokestatic  #9                  // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.multiplyCap:(JJ)J
      32: lstore_3
      33: aload_0
      34: getfield      #4                  // Field skip:I
      37: aload_0
      38: getfield      #3                  // Field size:I
      41: isub
      42: i2l
      43: lload_1
      44: lconst_1
      45: lsub
      46: invokestatic  #9                  // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.multiplyCap:(JJ)J
      49: lstore        5
      51: aload_0
      52: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
      55: lload_3
      56: lload         5
      58: invokestatic  #11                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.addCap:(JJ)J
      61: invokeinterface #12,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      66: goto          87
      69: aload_0
      70: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
      73: aload_0
      74: getfield      #4                  // Field skip:I
      77: i2l
      78: lload_1
      79: invokestatic  #9                  // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.multiplyCap:(JJ)J
      82: invokeinterface #12,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      87: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: invokeinterface #13,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #14                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #15,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #16                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #17                 // Field buffer:Ljava/util/Collection;
      12: astore_2
      13: aload_0
      14: getfield      #18                 // Field index:I
      17: istore_3
      18: iload_3
      19: iinc          3, 1
      22: ifne          69
      25: aload_0
      26: getfield      #5                  // Field bufferSupplier:Lio/reactivex/rxjava3/functions/Supplier;
      29: invokeinterface #19,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
      34: ldc           #20                 // String The bufferSupplier returned a null buffer
      36: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      39: checkcast     #22                 // class java/util/Collection
      42: astore_2
      43: goto          64
      46: astore        4
      48: aload         4
      50: invokestatic  #24                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      53: aload_0
      54: invokevirtual #25                 // Method cancel:()V
      57: aload_0
      58: aload         4
      60: invokevirtual #26                 // Method onError:(Ljava/lang/Throwable;)V
      63: return
      64: aload_0
      65: aload_2
      66: putfield      #17                 // Field buffer:Ljava/util/Collection;
      69: aload_2
      70: ifnull        109
      73: aload_2
      74: aload_1
      75: invokeinterface #27,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      80: pop
      81: aload_2
      82: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.size:()I
      87: aload_0
      88: getfield      #3                  // Field size:I
      91: if_icmpne     109
      94: aload_0
      95: aconst_null
      96: putfield      #17                 // Field buffer:Ljava/util/Collection;
      99: aload_0
     100: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
     103: aload_2
     104: invokeinterface #29,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     109: iload_3
     110: aload_0
     111: getfield      #4                  // Field skip:I
     114: if_icmpne     119
     117: iconst_0
     118: istore_3
     119: aload_0
     120: iload_3
     121: putfield      #18                 // Field index:I
     124: return
    Exception table:
       from    to  target type
          25    43    46   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #16                 // Field done:Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #30                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      11: return
      12: aload_0
      13: iconst_1
      14: putfield      #16                 // Field done:Z
      17: aload_0
      18: aconst_null
      19: putfield      #17                 // Field buffer:Ljava/util/Collection;
      22: aload_0
      23: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      26: aload_1
      27: invokeinterface #31,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      32: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #16                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #16                 // Field done:Z
      13: aload_0
      14: getfield      #17                 // Field buffer:Ljava/util/Collection;
      17: astore_1
      18: aload_0
      19: aconst_null
      20: putfield      #17                 // Field buffer:Ljava/util/Collection;
      23: aload_1
      24: ifnull        37
      27: aload_0
      28: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      31: aload_1
      32: invokeinterface #29,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      37: aload_0
      38: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      41: invokeinterface #32,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      46: return
}
