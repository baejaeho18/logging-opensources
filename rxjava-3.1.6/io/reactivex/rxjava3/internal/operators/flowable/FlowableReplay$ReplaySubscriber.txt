Compiled from "FlowableReplay.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$ReplaySubscriber<T> extends java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$ReplayBuffer<T> buffer;

  boolean done;

  static final io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$InnerSubscription[] EMPTY;

  static final io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$InnerSubscription[] TERMINATED;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$InnerSubscription<T>[]> subscribers;

  final java.util.concurrent.atomic.AtomicBoolean shouldConnect;

  final java.util.concurrent.atomic.AtomicInteger management;

  long requestedFromUpstream;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$ReplaySubscriber<T>> current;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$ReplaySubscriber(io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$ReplayBuffer<T>, java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$ReplaySubscriber<T>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field buffer:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      14: aload_0
      15: new           #4                  // class java/util/concurrent/atomic/AtomicInteger
      18: dup
      19: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      22: putfield      #6                  // Field management:Ljava/util/concurrent/atomic/AtomicInteger;
      25: aload_0
      26: new           #7                  // class java/util/concurrent/atomic/AtomicReference
      29: dup
      30: getstatic     #8                  // Field EMPTY:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;
      33: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      36: putfield      #10                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      39: aload_0
      40: new           #11                 // class java/util/concurrent/atomic/AtomicBoolean
      43: dup
      44: invokespecial #12                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      47: putfield      #13                 // Field shouldConnect:Ljava/util/concurrent/atomic/AtomicBoolean;
      50: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #10                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #15                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;
      10: if_acmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #10                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: getstatic     #15                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;
       7: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      10: aload_0
      11: getfield      #3                  // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      14: aload_0
      15: aconst_null
      16: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      19: pop
      20: aload_0
      21: invokestatic  #18                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      24: pop
      25: return

  boolean add(io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$InnerSubscription<T>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #19                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;"
      10: astore_2
      11: aload_2
      12: getstatic     #15                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;
      15: if_acmpne     20
      18: iconst_0
      19: ireturn
      20: aload_2
      21: arraylength
      22: istore_3
      23: iload_3
      24: iconst_1
      25: iadd
      26: anewarray     #20                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription
      29: astore        4
      31: aload_2
      32: iconst_0
      33: aload         4
      35: iconst_0
      36: iload_3
      37: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      40: aload         4
      42: iload_3
      43: aload_1
      44: aastore
      45: aload_0
      46: getfield      #10                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      49: aload_2
      50: aload         4
      52: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      55: ifeq          60
      58: iconst_1
      59: ireturn
      60: goto          0

  void remove(io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$InnerSubscription<T>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #19                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;"
      10: astore_2
      11: aload_2
      12: arraylength
      13: istore_3
      14: iload_3
      15: ifne          19
      18: return
      19: iconst_m1
      20: istore        4
      22: iconst_0
      23: istore        5
      25: iload         5
      27: iload_3
      28: if_icmpge     55
      31: aload_2
      32: iload         5
      34: aaload
      35: aload_1
      36: invokevirtual #22                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      39: ifeq          49
      42: iload         5
      44: istore        4
      46: goto          55
      49: iinc          5, 1
      52: goto          25
      55: iload         4
      57: ifge          61
      60: return
      61: iload_3
      62: iconst_1
      63: if_icmpne     74
      66: getstatic     #8                  // Field EMPTY:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;
      69: astore        5
      71: goto          110
      74: iload_3
      75: iconst_1
      76: isub
      77: anewarray     #20                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription
      80: astore        5
      82: aload_2
      83: iconst_0
      84: aload         5
      86: iconst_0
      87: iload         4
      89: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      92: aload_2
      93: iload         4
      95: iconst_1
      96: iadd
      97: aload         5
      99: iload         4
     101: iload_3
     102: iload         4
     104: isub
     105: iconst_1
     106: isub
     107: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     110: aload_0
     111: getfield      #10                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
     114: aload_2
     115: aload         5
     117: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     120: ifeq          124
     123: return
     124: goto          0

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #23                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/reactivestreams/Subscription;)Z
       5: ifeq          58
       8: aload_0
       9: invokevirtual #24                 // Method manageRequests:()V
      12: aload_0
      13: getfield      #10                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      16: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      19: checkcast     #19                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;"
      22: astore_2
      23: aload_2
      24: arraylength
      25: istore_3
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_3
      32: if_icmpge     58
      35: aload_2
      36: iload         4
      38: aaload
      39: astore        5
      41: aload_0
      42: getfield      #2                  // Field buffer:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer;
      45: aload         5
      47: invokeinterface #25,  2           // InterfaceMethod io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer.replay:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;)V
      52: iinc          4, 1
      55: goto          29
      58: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #26                 // Field done:Z
       4: ifne          63
       7: aload_0
       8: getfield      #2                  // Field buffer:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer;
      11: aload_1
      12: invokeinterface #27,  2           // InterfaceMethod io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer.next:(Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #10                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      21: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      24: checkcast     #19                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;"
      27: astore_2
      28: aload_2
      29: arraylength
      30: istore_3
      31: iconst_0
      32: istore        4
      34: iload         4
      36: iload_3
      37: if_icmpge     63
      40: aload_2
      41: iload         4
      43: aaload
      44: astore        5
      46: aload_0
      47: getfield      #2                  // Field buffer:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer;
      50: aload         5
      52: invokeinterface #25,  2           // InterfaceMethod io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer.replay:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;)V
      57: iinc          4, 1
      60: goto          34
      63: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #26                 // Field done:Z
       4: ifne          74
       7: aload_0
       8: iconst_1
       9: putfield      #26                 // Field done:Z
      12: aload_0
      13: getfield      #2                  // Field buffer:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer;
      16: aload_1
      17: invokeinterface #28,  2           // InterfaceMethod io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer.error:(Ljava/lang/Throwable;)V
      22: aload_0
      23: getfield      #10                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      26: getstatic     #15                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;
      29: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #19                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;"
      35: astore_2
      36: aload_2
      37: arraylength
      38: istore_3
      39: iconst_0
      40: istore        4
      42: iload         4
      44: iload_3
      45: if_icmpge     71
      48: aload_2
      49: iload         4
      51: aaload
      52: astore        5
      54: aload_0
      55: getfield      #2                  // Field buffer:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer;
      58: aload         5
      60: invokeinterface #25,  2           // InterfaceMethod io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer.replay:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;)V
      65: iinc          4, 1
      68: goto          42
      71: goto          78
      74: aload_1
      75: invokestatic  #30                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      78: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #26                 // Field done:Z
       4: ifne          67
       7: aload_0
       8: iconst_1
       9: putfield      #26                 // Field done:Z
      12: aload_0
      13: getfield      #2                  // Field buffer:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer;
      16: invokeinterface #31,  1           // InterfaceMethod io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer.complete:()V
      21: aload_0
      22: getfield      #10                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      25: getstatic     #15                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;
      28: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #19                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;"
      34: astore_1
      35: aload_1
      36: arraylength
      37: istore_2
      38: iconst_0
      39: istore_3
      40: iload_3
      41: iload_2
      42: if_icmpge     67
      45: aload_1
      46: iload_3
      47: aaload
      48: astore        4
      50: aload_0
      51: getfield      #2                  // Field buffer:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer;
      54: aload         4
      56: invokeinterface #25,  2           // InterfaceMethod io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$ReplayBuffer.replay:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;)V
      61: iinc          3, 1
      64: goto          40
      67: return

  void manageRequests();
    Code:
       0: aload_0
       1: getfield      #6                  // Field management:Ljava/util/concurrent/atomic/AtomicInteger;
       4: astore_1
       5: aload_1
       6: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       9: ifeq          13
      12: return
      13: iconst_1
      14: istore_2
      15: aload_0
      16: invokevirtual #33                 // Method isDisposed:()Z
      19: ifeq          23
      22: return
      23: aload_0
      24: invokevirtual #34                 // Method get:()Ljava/lang/Object;
      27: checkcast     #35                 // class org/reactivestreams/Subscription
      30: astore_3
      31: aload_3
      32: ifnull        128
      35: aload_0
      36: getfield      #36                 // Field requestedFromUpstream:J
      39: lstore        4
      41: lload         4
      43: lstore        6
      45: aload_0
      46: getfield      #10                 // Field subscribers:Ljava/util/concurrent/atomic/AtomicReference;
      49: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      52: checkcast     #19                 // class "[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;"
      55: astore        8
      57: aload         8
      59: arraylength
      60: istore        9
      62: iconst_0
      63: istore        10
      65: iload         10
      67: iload         9
      69: if_icmpge     100
      72: aload         8
      74: iload         10
      76: aaload
      77: astore        11
      79: lload         6
      81: aload         11
      83: getfield      #37                 // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription.totalRequested:Ljava/util/concurrent/atomic/AtomicLong;
      86: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      89: invokestatic  #39                 // Method java/lang/Math.max:(JJ)J
      92: lstore        6
      94: iinc          10, 1
      97: goto          65
     100: lload         6
     102: lload         4
     104: lsub
     105: lstore        8
     107: lload         8
     109: lconst_0
     110: lcmp
     111: ifeq          128
     114: aload_0
     115: lload         6
     117: putfield      #36                 // Field requestedFromUpstream:J
     120: aload_3
     121: lload         8
     123: invokeinterface #40,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     128: aload_1
     129: iload_2
     130: ineg
     131: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicInteger.addAndGet:(I)I
     134: istore_2
     135: iload_2
     136: ifne          142
     139: goto          145
     142: goto          15
     145: return

  static {};
    Code:
       0: iconst_0
       1: anewarray     #20                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription
       4: putstatic     #8                  // Field EMPTY:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;
       7: iconst_0
       8: anewarray     #20                 // class io/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription
      11: putstatic     #15                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$InnerSubscription;
      14: return
}
