Compiled from "FlowableGroupBy.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy$State<T, K> extends io.reactivex.rxjava3.internal.subscriptions.BasicIntQueueSubscription<T> implements org.reactivestreams.Publisher<T> {
  private static final long serialVersionUID;

  final K key;

  final io.reactivex.rxjava3.operators.SpscLinkedArrayQueue<T> queue;

  final io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber<?, K, T> parent;

  final boolean delayError;

  final java.util.concurrent.atomic.AtomicLong requested;

  volatile boolean done;

  java.lang.Throwable error;

  final java.util.concurrent.atomic.AtomicBoolean cancelled;

  final java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscriber<? super T>> actual;

  boolean outputFused;

  int produced;

  final java.util.concurrent.atomic.AtomicInteger once;

  static final int FRESH;

  static final int HAS_SUBSCRIBER;

  static final int ABANDONED;

  static final int ABANDONED_HAS_SUBSCRIBER;

  final java.util.concurrent.atomic.AtomicBoolean evictOnce;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy$State(int, io.reactivex.rxjava3.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber<?, K, T>, K, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method io/reactivex/rxjava3/internal/subscriptions/BasicIntQueueSubscription."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #5                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      23: putfield      #8                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
      26: aload_0
      27: new           #9                  // class java/util/concurrent/atomic/AtomicReference
      30: dup
      31: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      34: putfield      #11                 // Field actual:Ljava/util/concurrent/atomic/AtomicReference;
      37: aload_0
      38: new           #12                 // class java/util/concurrent/atomic/AtomicInteger
      41: dup
      42: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      45: putfield      #14                 // Field once:Ljava/util/concurrent/atomic/AtomicInteger;
      48: aload_0
      49: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
      52: dup
      53: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      56: putfield      #15                 // Field evictOnce:Ljava/util/concurrent/atomic/AtomicBoolean;
      59: aload_0
      60: new           #16                 // class io/reactivex/rxjava3/operators/SpscLinkedArrayQueue
      63: dup
      64: iload_1
      65: invokespecial #17                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue."<init>":(I)V
      68: putfield      #18                 // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
      71: aload_0
      72: aload_2
      73: putfield      #19                 // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy$GroupBySubscriber;
      76: aload_0
      77: aload_3
      78: putfield      #20                 // Field key:Ljava/lang/Object;
      81: aload_0
      82: iload         4
      84: putfield      #21                 // Field delayError:Z
      87: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #22                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          20
       7: aload_0
       8: getfield      #5                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      11: lload_1
      12: invokestatic  #23                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      15: pop2
      16: aload_0
      17: invokevirtual #24                 // Method drain:()V
      20: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #8                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          20
      12: aload_0
      13: invokevirtual #26                 // Method cancelParent:()V
      16: aload_0
      17: invokevirtual #24                 // Method drain:()V
      20: return

  public void subscribe(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field once:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: istore_2
       8: iload_2
       9: iconst_1
      10: iand
      11: ifeq          17
      14: goto          77
      17: iload_2
      18: iconst_1
      19: ior
      20: istore_3
      21: aload_0
      22: getfield      #14                 // Field once:Ljava/util/concurrent/atomic/AtomicInteger;
      25: iload_2
      26: iload_3
      27: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      30: ifeq          74
      33: aload_1
      34: aload_0
      35: invokeinterface #29,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      40: aload_0
      41: getfield      #11                 // Field actual:Ljava/util/concurrent/atomic/AtomicReference;
      44: aload_1
      45: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
      48: aload_0
      49: getfield      #8                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
      52: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      55: ifeq          69
      58: aload_0
      59: getfield      #11                 // Field actual:Ljava/util/concurrent/atomic/AtomicReference;
      62: aconst_null
      63: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
      66: goto          73
      69: aload_0
      70: invokevirtual #24                 // Method drain:()V
      73: return
      74: goto          0
      77: new           #32                 // class java/lang/IllegalStateException
      80: dup
      81: ldc           #33                 // String Only one Subscriber allowed!
      83: invokespecial #34                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      86: aload_1
      87: invokestatic  #35                 // Method io/reactivex/rxjava3/internal/subscriptions/EmptySubscription.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V
      90: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #18                 // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
       4: aload_1
       5: invokevirtual #36                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.offer:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: invokevirtual #24                 // Method drain:()V
      13: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field error:Ljava/lang/Throwable;
       5: aload_0
       6: iconst_1
       7: putfield      #38                 // Field done:Z
      10: aload_0
      11: invokevirtual #24                 // Method drain:()V
      14: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #38                 // Field done:Z
       5: aload_0
       6: invokevirtual #24                 // Method drain:()V
       9: return

  boolean tryComplete();
    Code:
       0: aload_0
       1: getfield      #15                 // Field evictOnce:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: istore_1
      10: aload_0
      11: iconst_1
      12: putfield      #38                 // Field done:Z
      15: aload_0
      16: invokevirtual #24                 // Method drain:()V
      19: iload_1
      20: ireturn

  void cancelParent();
    Code:
       0: aload_0
       1: getfield      #14                 // Field once:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: iconst_2
       8: iand
       9: ifne          35
      12: aload_0
      13: getfield      #15                 // Field evictOnce:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: iconst_0
      17: iconst_1
      18: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      21: ifeq          35
      24: aload_0
      25: getfield      #19                 // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy$GroupBySubscriber;
      28: aload_0
      29: getfield      #20                 // Field key:Ljava/lang/Object;
      32: invokevirtual #39                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy$GroupBySubscriber.cancel:(Ljava/lang/Object;)V
      35: return

  boolean tryAbandon();
    Code:
       0: aload_0
       1: getfield      #14                 // Field once:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifne          26
      10: aload_0
      11: getfield      #14                 // Field once:Ljava/util/concurrent/atomic/AtomicInteger;
      14: iconst_0
      15: iconst_2
      16: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #41                 // Field outputFused:Z
      12: ifeq          22
      15: aload_0
      16: invokevirtual #42                 // Method drainFused:()V
      19: goto          26
      22: aload_0
      23: invokevirtual #43                 // Method drainNormal:()V
      26: return

  void drainFused();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #18                 // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
       6: astore_2
       7: aload_0
       8: getfield      #11                 // Field actual:Ljava/util/concurrent/atomic/AtomicReference;
      11: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      14: checkcast     #45                 // class org/reactivestreams/Subscriber
      17: astore_3
      18: aload_3
      19: ifnull        116
      22: aload_0
      23: getfield      #8                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
      26: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      29: ifeq          33
      32: return
      33: aload_0
      34: getfield      #38                 // Field done:Z
      37: istore        4
      39: iload         4
      41: ifeq          75
      44: aload_0
      45: getfield      #21                 // Field delayError:Z
      48: ifne          75
      51: aload_0
      52: getfield      #37                 // Field error:Ljava/lang/Throwable;
      55: astore        5
      57: aload         5
      59: ifnull        75
      62: aload_2
      63: invokevirtual #46                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.clear:()V
      66: aload_3
      67: aload         5
      69: invokeinterface #47,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      74: return
      75: aload_3
      76: aconst_null
      77: invokeinterface #48,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      82: iload         4
      84: ifeq          116
      87: aload_0
      88: getfield      #37                 // Field error:Ljava/lang/Throwable;
      91: astore        5
      93: aload         5
      95: ifnull        109
      98: aload_3
      99: aload         5
     101: invokeinterface #47,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     106: goto          115
     109: aload_3
     110: invokeinterface #49,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     115: return
     116: aload_0
     117: iload_1
     118: ineg
     119: invokevirtual #50                 // Method addAndGet:(I)I
     122: istore_1
     123: iload_1
     124: ifne          128
     127: return
     128: aload_3
     129: ifnonnull     18
     132: aload_0
     133: getfield      #11                 // Field actual:Ljava/util/concurrent/atomic/AtomicReference;
     136: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     139: checkcast     #45                 // class org/reactivestreams/Subscriber
     142: astore_3
     143: goto          18

  void drainNormal();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #18                 // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
       6: astore_2
       7: aload_0
       8: getfield      #21                 // Field delayError:Z
      11: istore_3
      12: aload_0
      13: getfield      #11                 // Field actual:Ljava/util/concurrent/atomic/AtomicReference;
      16: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      19: checkcast     #45                 // class org/reactivestreams/Subscriber
      22: astore        4
      24: aload_0
      25: getfield      #8                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
      28: astore        5
      30: aload         5
      32: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      35: ifeq          47
      38: aload_0
      39: lconst_0
      40: iconst_0
      41: invokevirtual #51                 // Method cleanupQueue:(JZ)V
      44: goto          206
      47: aload         4
      49: ifnull        206
      52: aload_0
      53: getfield      #5                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      56: invokevirtual #52                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      59: lstore        6
      61: lconst_0
      62: lstore        8
      64: lload         8
      66: lload         6
      68: lcmp
      69: ifeq          151
      72: aload_0
      73: getfield      #38                 // Field done:Z
      76: istore        10
      78: aload_2
      79: invokevirtual #53                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.poll:()Ljava/lang/Object;
      82: astore        11
      84: aload         11
      86: ifnonnull     93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: istore        12
      96: aload_0
      97: iload         10
      99: iload         12
     101: aload         4
     103: iload_3
     104: lload         8
     106: iload         12
     108: ifne          115
     111: iconst_1
     112: goto          116
     115: iconst_0
     116: invokevirtual #54                 // Method checkTerminated:(ZZLorg/reactivestreams/Subscriber;ZJZ)Z
     119: ifeq          125
     122: goto          30
     125: iload         12
     127: ifeq          133
     130: goto          151
     133: aload         4
     135: aload         11
     137: invokeinterface #48,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     142: lload         8
     144: lconst_1
     145: ladd
     146: lstore        8
     148: goto          64
     151: lload         8
     153: lload         6
     155: lcmp
     156: ifne          183
     159: aload_0
     160: aload_0
     161: getfield      #38                 // Field done:Z
     164: aload_2
     165: invokevirtual #55                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.isEmpty:()Z
     168: aload         4
     170: iload_3
     171: lload         8
     173: iconst_0
     174: invokevirtual #54                 // Method checkTerminated:(ZZLorg/reactivestreams/Subscriber;ZJZ)Z
     177: ifeq          183
     180: goto          30
     183: lload         8
     185: lconst_0
     186: lcmp
     187: ifeq          206
     190: aload_0
     191: getfield      #5                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     194: lload         8
     196: invokestatic  #56                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.produced:(Ljava/util/concurrent/atomic/AtomicLong;J)J
     199: pop2
     200: aload_0
     201: lload         8
     203: invokevirtual #57                 // Method requestParent:(J)V
     206: aload_0
     207: iload_1
     208: ineg
     209: invokevirtual #50                 // Method addAndGet:(I)I
     212: istore_1
     213: iload_1
     214: ifne          220
     217: goto          240
     220: aload         4
     222: ifnonnull     30
     225: aload_0
     226: getfield      #11                 // Field actual:Ljava/util/concurrent/atomic/AtomicReference;
     229: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     232: checkcast     #45                 // class org/reactivestreams/Subscriber
     235: astore        4
     237: goto          30
     240: return

  void requestParent(long);
    Code:
       0: aload_0
       1: getfield      #14                 // Field once:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: iconst_2
       8: iand
       9: ifne          20
      12: aload_0
      13: getfield      #19                 // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy$GroupBySubscriber;
      16: lload_1
      17: invokevirtual #58                 // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy$GroupBySubscriber.requestGroup:(J)V
      20: return

  void cleanupQueue(long, boolean);
    Code:
       0: aload_0
       1: getfield      #18                 // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
       4: invokevirtual #53                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.poll:()Ljava/lang/Object;
       7: ifnull        17
      10: lload_1
      11: lconst_1
      12: ladd
      13: lstore_1
      14: goto          0
      17: aload_0
      18: lload_1
      19: iload_3
      20: invokevirtual #59                 // Method replenishParent:(JZ)V
      23: return

  void replenishParent(long, boolean);
    Code:
       0: iload_3
       1: ifeq          8
       4: lload_1
       5: lconst_1
       6: ladd
       7: lstore_1
       8: lload_1
       9: lconst_0
      10: lcmp
      11: ifeq          19
      14: aload_0
      15: lload_1
      16: invokevirtual #57                 // Method requestParent:(J)V
      19: return

  boolean checkTerminated(boolean, boolean, org.reactivestreams.Subscriber<? super T>, boolean, long, boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          20
      10: aload_0
      11: lload         5
      13: iload         7
      15: invokevirtual #51                 // Method cleanupQueue:(JZ)V
      18: iconst_1
      19: ireturn
      20: iload_1
      21: ifeq          143
      24: iload         4
      26: ifeq          79
      29: iload_2
      30: ifeq          143
      33: aload_0
      34: getfield      #8                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
      37: iconst_1
      38: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicBoolean.lazySet:(Z)V
      41: aload_0
      42: getfield      #37                 // Field error:Ljava/lang/Throwable;
      45: astore        8
      47: aload         8
      49: ifnull        63
      52: aload_3
      53: aload         8
      55: invokeinterface #47,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      60: goto          77
      63: aload_3
      64: invokeinterface #49,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      69: aload_0
      70: lload         5
      72: iload         7
      74: invokevirtual #59                 // Method replenishParent:(JZ)V
      77: iconst_1
      78: ireturn
      79: aload_0
      80: getfield      #37                 // Field error:Ljava/lang/Throwable;
      83: astore        8
      85: aload         8
      87: ifnull        115
      90: aload_0
      91: getfield      #18                 // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
      94: invokevirtual #46                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.clear:()V
      97: aload_0
      98: getfield      #8                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
     101: iconst_1
     102: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicBoolean.lazySet:(Z)V
     105: aload_3
     106: aload         8
     108: invokeinterface #47,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     113: iconst_1
     114: ireturn
     115: iload_2
     116: ifeq          143
     119: aload_0
     120: getfield      #8                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
     123: iconst_1
     124: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicBoolean.lazySet:(Z)V
     127: aload_3
     128: invokeinterface #49,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     133: aload_0
     134: lload         5
     136: iload         7
     138: invokevirtual #59                 // Method replenishParent:(JZ)V
     141: iconst_1
     142: ireturn
     143: iconst_0
     144: ireturn

  public int requestFusion(int);
    Code:
       0: iconst_0
       1: ireturn

  void tryReplenish();
    Code:
       0: aload_0
       1: getfield      #62                 // Field produced:I
       4: istore_1
       5: iload_1
       6: ifeq          20
       9: aload_0
      10: iconst_0
      11: putfield      #62                 // Field produced:I
      14: aload_0
      15: iload_1
      16: i2l
      17: invokevirtual #57                 // Method requestParent:(J)V
      20: return

  public T poll();
    Code:
       0: aload_0
       1: getfield      #18                 // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
       4: invokevirtual #53                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.poll:()Ljava/lang/Object;
       7: astore_1
       8: aload_1
       9: ifnull        24
      12: aload_0
      13: dup
      14: getfield      #62                 // Field produced:I
      17: iconst_1
      18: iadd
      19: putfield      #62                 // Field produced:I
      22: aload_1
      23: areturn
      24: aload_0
      25: invokevirtual #63                 // Method tryReplenish:()V
      28: aconst_null
      29: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #18                 // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
       4: invokevirtual #55                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.isEmpty:()Z
       7: ifeq          16
      10: aload_0
      11: invokevirtual #63                 // Method tryReplenish:()V
      14: iconst_1
      15: ireturn
      16: aload_0
      17: invokevirtual #63                 // Method tryReplenish:()V
      20: iconst_0
      21: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #18                 // Field queue:Lio/reactivex/rxjava3/operators/SpscLinkedArrayQueue;
       4: astore_1
       5: aload_1
       6: invokevirtual #53                 // Method io/reactivex/rxjava3/operators/SpscLinkedArrayQueue.poll:()Ljava/lang/Object;
       9: ifnull        25
      12: aload_0
      13: dup
      14: getfield      #62                 // Field produced:I
      17: iconst_1
      18: iadd
      19: putfield      #62                 // Field produced:I
      22: goto          5
      25: aload_0
      26: invokevirtual #63                 // Method tryReplenish:()V
      29: return
}
