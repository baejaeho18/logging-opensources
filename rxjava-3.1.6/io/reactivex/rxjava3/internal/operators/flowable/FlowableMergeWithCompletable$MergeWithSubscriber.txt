Compiled from "FlowableMergeWithCompletable.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber<T> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super T> downstream;

  final java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> mainSubscription;

  final io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver otherObserver;

  final io.reactivex.rxjava3.internal.util.AtomicThrowable errors;

  final java.util.concurrent.atomic.AtomicLong requested;

  volatile boolean mainDone;

  volatile boolean otherDone;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicReference
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      17: putfield      #5                  // Field mainSubscription:Ljava/util/concurrent/atomic/AtomicReference;
      20: aload_0
      21: new           #6                  // class io/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver
      24: dup
      25: aload_0
      26: invokespecial #7                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithCompletable$MergeWithSubscriber;)V
      29: putfield      #8                  // Field otherObserver:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver;
      32: aload_0
      33: new           #9                  // class io/reactivex/rxjava3/internal/util/AtomicThrowable
      36: dup
      37: invokespecial #10                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable."<init>":()V
      40: putfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      43: aload_0
      44: new           #12                 // class java/util/concurrent/atomic/AtomicLong
      47: dup
      48: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      51: putfield      #14                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      54: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mainSubscription:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_0
       5: getfield      #14                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
       8: aload_1
       9: invokestatic  #15                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.deferredSetOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;Lorg/reactivestreams/Subscription;)Z
      12: pop
      13: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: aload_1
       5: aload_0
       6: aload_0
       7: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      10: invokestatic  #16                 // Method io/reactivex/rxjava3/internal/util/HalfSerializer.onNext:(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/rxjava3/internal/util/AtomicThrowable;)Z
      13: pop
      14: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field otherObserver:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver;
       4: invokestatic  #17                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      12: aload_1
      13: aload_0
      14: aload_0
      15: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      18: invokestatic  #18                 // Method io/reactivex/rxjava3/internal/util/HalfSerializer.onError:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/rxjava3/internal/util/AtomicThrowable;)V
      21: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #19                 // Field mainDone:Z
       5: aload_0
       6: getfield      #20                 // Field otherDone:Z
       9: ifeq          24
      12: aload_0
      13: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      16: aload_0
      17: aload_0
      18: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      21: invokestatic  #21                 // Method io/reactivex/rxjava3/internal/util/HalfSerializer.onComplete:(Lorg/reactivestreams/Subscriber;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/rxjava3/internal/util/AtomicThrowable;)V
      24: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mainSubscription:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_0
       5: getfield      #14                 // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
       8: lload_1
       9: invokestatic  #22                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V
      12: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mainSubscription:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #23                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: getfield      #8                  // Field otherObserver:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver;
      12: invokestatic  #17                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      15: pop
      16: aload_0
      17: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      20: invokevirtual #24                 // Method io/reactivex/rxjava3/internal/util/AtomicThrowable.tryTerminateAndReport:()V
      23: return

  void otherError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mainSubscription:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #23                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      12: aload_1
      13: aload_0
      14: aload_0
      15: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      18: invokestatic  #18                 // Method io/reactivex/rxjava3/internal/util/HalfSerializer.onError:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/rxjava3/internal/util/AtomicThrowable;)V
      21: return

  void otherComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #20                 // Field otherDone:Z
       5: aload_0
       6: getfield      #19                 // Field mainDone:Z
       9: ifeq          24
      12: aload_0
      13: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      16: aload_0
      17: aload_0
      18: getfield      #11                 // Field errors:Lio/reactivex/rxjava3/internal/util/AtomicThrowable;
      21: invokestatic  #21                 // Method io/reactivex/rxjava3/internal/util/HalfSerializer.onComplete:(Lorg/reactivestreams/Subscriber;Ljava/util/concurrent/atomic/AtomicInteger;Lio/reactivex/rxjava3/internal/util/AtomicThrowable;)V
      24: return
}
