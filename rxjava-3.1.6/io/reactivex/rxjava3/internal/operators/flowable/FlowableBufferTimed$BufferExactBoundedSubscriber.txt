Compiled from "FlowableBufferTimed.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber<T, U extends java.util.Collection<? super T>> extends io.reactivex.rxjava3.internal.subscribers.QueueDrainSubscriber<T, U, U> implements org.reactivestreams.Subscription, java.lang.Runnable, io.reactivex.rxjava3.disposables.Disposable {
  final io.reactivex.rxjava3.functions.Supplier<U> bufferSupplier;

  final long timespan;

  final java.util.concurrent.TimeUnit unit;

  final int maxSize;

  final boolean restartTimerOnMaxSize;

  final io.reactivex.rxjava3.core.Scheduler$Worker w;

  U buffer;

  io.reactivex.rxjava3.disposables.Disposable timer;

  org.reactivestreams.Subscription upstream;

  long producerIndex;

  long consumerIndex;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber(org.reactivestreams.Subscriber<? super U>, io.reactivex.rxjava3.functions.Supplier<U>, long, java.util.concurrent.TimeUnit, int, boolean, io.reactivex.rxjava3.core.Scheduler$Worker);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class io/reactivex/rxjava3/internal/queue/MpscLinkedQueue
       5: dup
       6: invokespecial #2                  // Method io/reactivex/rxjava3/internal/queue/MpscLinkedQueue."<init>":()V
       9: invokespecial #3                  // Method io/reactivex/rxjava3/internal/subscribers/QueueDrainSubscriber."<init>":(Lorg/reactivestreams/Subscriber;Lio/reactivex/rxjava3/operators/SimplePlainQueue;)V
      12: aload_0
      13: aload_2
      14: putfield      #4                  // Field bufferSupplier:Lio/reactivex/rxjava3/functions/Supplier;
      17: aload_0
      18: lload_3
      19: putfield      #5                  // Field timespan:J
      22: aload_0
      23: aload         5
      25: putfield      #6                  // Field unit:Ljava/util/concurrent/TimeUnit;
      28: aload_0
      29: iload         6
      31: putfield      #7                  // Field maxSize:I
      34: aload_0
      35: iload         7
      37: putfield      #8                  // Field restartTimerOnMaxSize:Z
      40: aload_0
      41: aload         8
      43: putfield      #9                  // Field w:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      46: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #11                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifne          12
      11: return
      12: aload_0
      13: aload_1
      14: putfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
      17: aload_0
      18: getfield      #4                  // Field bufferSupplier:Lio/reactivex/rxjava3/functions/Supplier;
      21: invokeinterface #12,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
      26: ldc           #13                 // String The supplied buffer is null
      28: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      31: checkcast     #15                 // class java/util/Collection
      34: astore_2
      35: goto          65
      38: astore_3
      39: aload_3
      40: invokestatic  #17                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      43: aload_0
      44: getfield      #9                  // Field w:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      47: invokevirtual #18                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      50: aload_1
      51: invokeinterface #19,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      56: aload_3
      57: aload_0
      58: getfield      #20                 // Field downstream:Lorg/reactivestreams/Subscriber;
      61: invokestatic  #21                 // Method io/reactivex/rxjava3/internal/subscriptions/EmptySubscription.error:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber;)V
      64: return
      65: aload_0
      66: aload_2
      67: putfield      #22                 // Field buffer:Ljava/util/Collection;
      70: aload_0
      71: getfield      #20                 // Field downstream:Lorg/reactivestreams/Subscriber;
      74: aload_0
      75: invokeinterface #23,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      80: aload_0
      81: aload_0
      82: getfield      #9                  // Field w:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      85: aload_0
      86: aload_0
      87: getfield      #5                  // Field timespan:J
      90: aload_0
      91: getfield      #5                  // Field timespan:J
      94: aload_0
      95: getfield      #6                  // Field unit:Ljava/util/concurrent/TimeUnit;
      98: invokevirtual #24                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedulePeriodically:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
     101: putfield      #25                 // Field timer:Lio/reactivex/rxjava3/disposables/Disposable;
     104: aload_1
     105: ldc2_w        #27                 // long 9223372036854775807l
     108: invokeinterface #29,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     113: return
    Exception table:
       from    to  target type
          17    35    38   Class java/lang/Throwable

  public void onNext(T);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #22                 // Field buffer:Ljava/util/Collection;
       8: astore_2
       9: aload_2
      10: ifnonnull     16
      13: aload_3
      14: monitorexit
      15: return
      16: aload_2
      17: aload_1
      18: invokeinterface #30,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      23: pop
      24: aload_2
      25: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.size:()I
      30: aload_0
      31: getfield      #7                  // Field maxSize:I
      34: if_icmpge     40
      37: aload_3
      38: monitorexit
      39: return
      40: aload_0
      41: aconst_null
      42: putfield      #22                 // Field buffer:Ljava/util/Collection;
      45: aload_0
      46: dup
      47: getfield      #32                 // Field producerIndex:J
      50: lconst_1
      51: ladd
      52: putfield      #32                 // Field producerIndex:J
      55: aload_3
      56: monitorexit
      57: goto          67
      60: astore        4
      62: aload_3
      63: monitorexit
      64: aload         4
      66: athrow
      67: aload_0
      68: getfield      #8                  // Field restartTimerOnMaxSize:Z
      71: ifeq          83
      74: aload_0
      75: getfield      #25                 // Field timer:Lio/reactivex/rxjava3/disposables/Disposable;
      78: invokeinterface #33,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      83: aload_0
      84: aload_2
      85: iconst_0
      86: aload_0
      87: invokevirtual #34                 // Method fastPathOrderedEmitMax:(Ljava/lang/Object;ZLio/reactivex/rxjava3/disposables/Disposable;)V
      90: aload_0
      91: getfield      #4                  // Field bufferSupplier:Lio/reactivex/rxjava3/functions/Supplier;
      94: invokeinterface #12,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
      99: ldc           #13                 // String The supplied buffer is null
     101: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     104: checkcast     #15                 // class java/util/Collection
     107: astore_2
     108: goto          131
     111: astore_3
     112: aload_3
     113: invokestatic  #17                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     116: aload_0
     117: invokevirtual #35                 // Method cancel:()V
     120: aload_0
     121: getfield      #20                 // Field downstream:Lorg/reactivestreams/Subscriber;
     124: aload_3
     125: invokeinterface #36,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     130: return
     131: aload_0
     132: dup
     133: astore_3
     134: monitorenter
     135: aload_0
     136: aload_2
     137: putfield      #22                 // Field buffer:Ljava/util/Collection;
     140: aload_0
     141: dup
     142: getfield      #37                 // Field consumerIndex:J
     145: lconst_1
     146: ladd
     147: putfield      #37                 // Field consumerIndex:J
     150: aload_3
     151: monitorexit
     152: goto          162
     155: astore        5
     157: aload_3
     158: monitorexit
     159: aload         5
     161: athrow
     162: aload_0
     163: getfield      #8                  // Field restartTimerOnMaxSize:Z
     166: ifeq          193
     169: aload_0
     170: aload_0
     171: getfield      #9                  // Field w:Lio/reactivex/rxjava3/core/Scheduler$Worker;
     174: aload_0
     175: aload_0
     176: getfield      #5                  // Field timespan:J
     179: aload_0
     180: getfield      #5                  // Field timespan:J
     183: aload_0
     184: getfield      #6                  // Field unit:Ljava/util/concurrent/TimeUnit;
     187: invokevirtual #24                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.schedulePeriodically:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/Disposable;
     190: putfield      #25                 // Field timer:Lio/reactivex/rxjava3/disposables/Disposable;
     193: return
    Exception table:
       from    to  target type
           4    15    60   any
          16    39    60   any
          40    57    60   any
          60    64    60   any
          90   108   111   Class java/lang/Throwable
         135   152   155   any
         155   159   155   any

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: aconst_null
       6: putfield      #22                 // Field buffer:Ljava/util/Collection;
       9: aload_2
      10: monitorexit
      11: goto          19
      14: astore_3
      15: aload_2
      16: monitorexit
      17: aload_3
      18: athrow
      19: aload_0
      20: getfield      #20                 // Field downstream:Lorg/reactivestreams/Subscriber;
      23: aload_1
      24: invokeinterface #36,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      29: aload_0
      30: getfield      #9                  // Field w:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      33: invokevirtual #18                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      36: return
    Exception table:
       from    to  target type
           4    11    14   any
          14    17    14   any

  public void onComplete();
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #22                 // Field buffer:Ljava/util/Collection;
       8: astore_1
       9: aload_0
      10: aconst_null
      11: putfield      #22                 // Field buffer:Ljava/util/Collection;
      14: aload_2
      15: monitorexit
      16: goto          24
      19: astore_3
      20: aload_2
      21: monitorexit
      22: aload_3
      23: athrow
      24: aload_1
      25: ifnull        72
      28: aload_0
      29: getfield      #38                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      32: aload_1
      33: invokeinterface #39,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      38: pop
      39: aload_0
      40: iconst_1
      41: putfield      #40                 // Field done:Z
      44: aload_0
      45: invokevirtual #41                 // Method enter:()Z
      48: ifeq          65
      51: aload_0
      52: getfield      #38                 // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      55: aload_0
      56: getfield      #20                 // Field downstream:Lorg/reactivestreams/Subscriber;
      59: iconst_0
      60: aload_0
      61: aload_0
      62: invokestatic  #42                 // Method io/reactivex/rxjava3/internal/util/QueueDrainHelper.drainMaxLoop:(Lio/reactivex/rxjava3/operators/SimplePlainQueue;Lorg/reactivestreams/Subscriber;ZLio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/internal/util/QueueDrain;)V
      65: aload_0
      66: getfield      #9                  // Field w:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      69: invokevirtual #18                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      72: return
    Exception table:
       from    to  target type
           4    16    19   any
          19    22    19   any

  public boolean accept(org.reactivestreams.Subscriber<? super U>, U);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #43,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
       7: iconst_1
       8: ireturn

  public void request(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #44                 // Method requested:(J)V
       5: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #45                 // Field cancelled:Z
       4: ifne          16
       7: aload_0
       8: iconst_1
       9: putfield      #45                 // Field cancelled:Z
      12: aload_0
      13: invokevirtual #46                 // Method dispose:()V
      16: return

  public void dispose();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: aconst_null
       6: putfield      #22                 // Field buffer:Ljava/util/Collection;
       9: aload_1
      10: monitorexit
      11: goto          19
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
      19: aload_0
      20: getfield      #10                 // Field upstream:Lorg/reactivestreams/Subscription;
      23: invokeinterface #19,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      28: aload_0
      29: getfield      #9                  // Field w:Lio/reactivex/rxjava3/core/Scheduler$Worker;
      32: invokevirtual #18                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.dispose:()V
      35: return
    Exception table:
       from    to  target type
           4    11    14   any
          14    17    14   any

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #9                  // Field w:Lio/reactivex/rxjava3/core/Scheduler$Worker;
       4: invokevirtual #47                 // Method io/reactivex/rxjava3/core/Scheduler$Worker.isDisposed:()Z
       7: ireturn

  public void run();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bufferSupplier:Lio/reactivex/rxjava3/functions/Supplier;
       4: invokeinterface #12,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
       9: ldc           #13                 // String The supplied buffer is null
      11: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #15                 // class java/util/Collection
      17: astore_1
      18: goto          41
      21: astore_2
      22: aload_2
      23: invokestatic  #17                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      26: aload_0
      27: invokevirtual #35                 // Method cancel:()V
      30: aload_0
      31: getfield      #20                 // Field downstream:Lorg/reactivestreams/Subscriber;
      34: aload_2
      35: invokeinterface #36,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      40: return
      41: aload_0
      42: dup
      43: astore_3
      44: monitorenter
      45: aload_0
      46: getfield      #22                 // Field buffer:Ljava/util/Collection;
      49: astore_2
      50: aload_2
      51: ifnull        66
      54: aload_0
      55: getfield      #32                 // Field producerIndex:J
      58: aload_0
      59: getfield      #37                 // Field consumerIndex:J
      62: lcmp
      63: ifeq          69
      66: aload_3
      67: monitorexit
      68: return
      69: aload_0
      70: aload_1
      71: putfield      #22                 // Field buffer:Ljava/util/Collection;
      74: aload_3
      75: monitorexit
      76: goto          86
      79: astore        4
      81: aload_3
      82: monitorexit
      83: aload         4
      85: athrow
      86: aload_0
      87: aload_2
      88: iconst_0
      89: aload_0
      90: invokevirtual #34                 // Method fastPathOrderedEmitMax:(Ljava/lang/Object;ZLio/reactivex/rxjava3/disposables/Disposable;)V
      93: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/Throwable
          45    68    79   any
          69    76    79   any
          79    83    79   any

  public boolean accept(org.reactivestreams.Subscriber, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #15                 // class java/util/Collection
       6: invokevirtual #48                 // Method accept:(Lorg/reactivestreams/Subscriber;Ljava/util/Collection;)Z
       9: ireturn
}
