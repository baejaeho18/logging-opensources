Compiled from "FlowableRefCount.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableRefCount$RefConnection extends java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> implements java.lang.Runnable, io.reactivex.rxjava3.functions.Consumer<io.reactivex.rxjava3.disposables.Disposable> {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.internal.operators.flowable.FlowableRefCount<?> parent;

  io.reactivex.rxjava3.disposables.Disposable timer;

  long subscriberCount;

  boolean connected;

  boolean disconnectedEarly;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableRefCount$RefConnection(io.reactivex.rxjava3.internal.operators.flowable.FlowableRefCount<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRefCount;
       9: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRefCount;
       4: aload_0
       5: invokevirtual #3                  // Method io/reactivex/rxjava3/internal/operators/flowable/FlowableRefCount.timeout:(Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRefCount$RefConnection;)V
       8: return

  public void accept(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       5: pop
       6: aload_0
       7: getfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRefCount;
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: getfield      #5                  // Field disconnectedEarly:Z
      17: ifeq          30
      20: aload_0
      21: getfield      #2                  // Field parent:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableRefCount;
      24: getfield      #6                  // Field io/reactivex/rxjava3/internal/operators/flowable/FlowableRefCount.source:Lio/reactivex/rxjava3/flowables/ConnectableFlowable;
      27: invokevirtual #7                  // Method io/reactivex/rxjava3/flowables/ConnectableFlowable.reset:()V
      30: aload_2
      31: monitorexit
      32: goto          40
      35: astore_3
      36: aload_2
      37: monitorexit
      38: aload_3
      39: athrow
      40: return
    Exception table:
       from    to  target type
          13    32    35   any
          35    38    35   any

  public void accept(java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class io/reactivex/rxjava3/disposables/Disposable
       5: invokevirtual #9                  // Method accept:(Lio/reactivex/rxjava3/disposables/Disposable;)V
       8: return
}
