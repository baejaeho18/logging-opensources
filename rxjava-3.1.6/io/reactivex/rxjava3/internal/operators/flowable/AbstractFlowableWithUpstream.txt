Compiled from "AbstractFlowableWithUpstream.java"
abstract class io.reactivex.rxjava3.internal.operators.flowable.AbstractFlowableWithUpstream<T, R> extends io.reactivex.rxjava3.core.Flowable<R> implements io.reactivex.rxjava3.internal.fuseable.HasUpstreamPublisher<T> {
  protected final io.reactivex.rxjava3.core.Flowable<T> source;

  io.reactivex.rxjava3.internal.operators.flowable.AbstractFlowableWithUpstream(io.reactivex.rxjava3.core.Flowable<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/core/Flowable."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String source is null
       8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class io/reactivex/rxjava3/core/Flowable
      14: putfield      #5                  // Field source:Lio/reactivex/rxjava3/core/Flowable;
      17: return

  public final org.reactivestreams.Publisher<T> source();
    Code:
       0: aload_0
       1: getfield      #5                  // Field source:Lio/reactivex/rxjava3/core/Flowable;
       4: areturn
}
