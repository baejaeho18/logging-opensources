Compiled from "FlowableReplay.java"
final class io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$MulticastFlowable$DisposableConsumer implements io.reactivex.rxjava3.functions.Consumer<io.reactivex.rxjava3.disposables.Disposable> {
  private final io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper<R> srw;

  final io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$MulticastFlowable this$0;

  io.reactivex.rxjava3.internal.operators.flowable.FlowableReplay$MulticastFlowable$DisposableConsumer(io.reactivex.rxjava3.internal.subscribers.SubscriberResourceWrapper<R>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/reactivex/rxjava3/internal/operators/flowable/FlowableReplay$MulticastFlowable;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field srw:Lio/reactivex/rxjava3/internal/subscribers/SubscriberResourceWrapper;
      14: return

  public void accept(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field srw:Lio/reactivex/rxjava3/internal/subscribers/SubscriberResourceWrapper;
       4: aload_1
       5: invokevirtual #4                  // Method io/reactivex/rxjava3/internal/subscribers/SubscriberResourceWrapper.setResource:(Lio/reactivex/rxjava3/disposables/Disposable;)V
       8: return

  public void accept(java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class io/reactivex/rxjava3/disposables/Disposable
       5: invokevirtual #6                  // Method accept:(Lio/reactivex/rxjava3/disposables/Disposable;)V
       8: return
}
