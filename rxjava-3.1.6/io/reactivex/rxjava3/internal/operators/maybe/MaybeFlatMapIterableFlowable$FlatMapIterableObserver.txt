Compiled from "MaybeFlatMapIterableFlowable.java"
final class io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver<T, R> extends io.reactivex.rxjava3.internal.subscriptions.BasicIntQueueSubscription<R> implements io.reactivex.rxjava3.core.MaybeObserver<T> {
  private static final long serialVersionUID;

  final org.reactivestreams.Subscriber<? super R> downstream;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends java.lang.Iterable<? extends R>> mapper;

  final java.util.concurrent.atomic.AtomicLong requested;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  volatile java.util.Iterator<? extends R> it;

  volatile boolean cancelled;

  boolean outputFused;

  io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver(org.reactivestreams.Subscriber<? super R>, io.reactivex.rxjava3.functions.Function<? super T, ? extends java.lang.Iterable<? extends R>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/internal/subscriptions/BasicIntQueueSubscription."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
      14: aload_0
      15: new           #4                  // class java/util/concurrent/atomic/AtomicLong
      18: dup
      19: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      22: putfield      #6                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      25: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #8                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #7                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      20: aload_0
      21: invokeinterface #9,  2            // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onSuccess(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field mapper:Lio/reactivex/rxjava3/functions/Function;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class java/lang/Iterable
      13: invokeinterface #12,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: istore_3
      26: goto          48
      29: astore        4
      31: aload         4
      33: invokestatic  #15                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      36: aload_0
      37: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      40: aload         4
      42: invokeinterface #16,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      47: return
      48: iload_3
      49: ifne          62
      52: aload_0
      53: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      56: invokeinterface #17,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      61: return
      62: aload_0
      63: aload_2
      64: putfield      #18                 // Field it:Ljava/util/Iterator;
      67: aload_0
      68: invokevirtual #19                 // Method drain:()V
      71: return
    Exception table:
       from    to  target type
           0    26    29   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #20                 // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
       4: putfield      #7                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       7: aload_0
       8: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      11: aload_1
      12: invokeinterface #16,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      17: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
       4: invokeinterface #17,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
       9: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #21                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          20
       7: aload_0
       8: getfield      #6                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      11: lload_1
      12: invokestatic  #22                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      15: pop2
      16: aload_0
      17: invokevirtual #19                 // Method drain:()V
      20: return

  public void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #23                 // Field cancelled:Z
       5: aload_0
       6: getfield      #7                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       9: invokeinterface #24,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      14: aload_0
      15: getstatic     #20                 // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
      18: putfield      #7                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      21: return

  void fastPath(org.reactivestreams.Subscriber<? super R>, java.util.Iterator<? extends R>);
    Code:
       0: aload_0
       1: getfield      #23                 // Field cancelled:Z
       4: ifeq          8
       7: return
       8: aload_2
       9: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      14: astore_3
      15: goto          34
      18: astore        4
      20: aload         4
      22: invokestatic  #15                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      25: aload_1
      26: aload         4
      28: invokeinterface #16,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      33: return
      34: aload_1
      35: aload_3
      36: invokeinterface #26,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      41: aload_0
      42: getfield      #23                 // Field cancelled:Z
      45: ifeq          49
      48: return
      49: aload_2
      50: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: istore        4
      57: goto          76
      60: astore        5
      62: aload         5
      64: invokestatic  #15                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      67: aload_1
      68: aload         5
      70: invokeinterface #16,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      75: return
      76: iload         4
      78: ifne          88
      81: aload_1
      82: invokeinterface #17,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      87: return
      88: goto          0
    Exception table:
       from    to  target type
           8    15    18   Class java/lang/Throwable
          49    57    60   Class java/lang/Throwable

  void drain();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #2                  // Field downstream:Lorg/reactivestreams/Subscriber;
      12: astore_1
      13: aload_0
      14: getfield      #18                 // Field it:Ljava/util/Iterator;
      17: astore_2
      18: aload_0
      19: getfield      #28                 // Field outputFused:Z
      22: ifeq          43
      25: aload_2
      26: ifnull        43
      29: aload_1
      30: aconst_null
      31: invokeinterface #26,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      36: aload_1
      37: invokeinterface #17,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      42: return
      43: iconst_1
      44: istore_3
      45: aload_2
      46: ifnull        206
      49: aload_0
      50: getfield      #6                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
      53: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      56: lstore        4
      58: lload         4
      60: ldc2_w        #31                 // long 9223372036854775807l
      63: lcmp
      64: ifne          74
      67: aload_0
      68: aload_1
      69: aload_2
      70: invokevirtual #33                 // Method fastPath:(Lorg/reactivestreams/Subscriber;Ljava/util/Iterator;)V
      73: return
      74: lconst_0
      75: lstore        6
      77: lload         6
      79: lload         4
      81: lcmp
      82: ifeq          189
      85: aload_0
      86: getfield      #23                 // Field cancelled:Z
      89: ifeq          93
      92: return
      93: aload_2
      94: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      99: ldc           #34                 // String The iterator returned a null value
     101: invokestatic  #35                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     104: astore        8
     106: goto          125
     109: astore        9
     111: aload         9
     113: invokestatic  #15                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     116: aload_1
     117: aload         9
     119: invokeinterface #16,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     124: return
     125: aload_1
     126: aload         8
     128: invokeinterface #26,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     133: aload_0
     134: getfield      #23                 // Field cancelled:Z
     137: ifeq          141
     140: return
     141: lload         6
     143: lconst_1
     144: ladd
     145: lstore        6
     147: aload_2
     148: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     153: istore        9
     155: goto          174
     158: astore        10
     160: aload         10
     162: invokestatic  #15                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     165: aload_1
     166: aload         10
     168: invokeinterface #16,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     173: return
     174: iload         9
     176: ifne          186
     179: aload_1
     180: invokeinterface #17,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     185: return
     186: goto          77
     189: lload         6
     191: lconst_0
     192: lcmp
     193: ifeq          206
     196: aload_0
     197: getfield      #6                  // Field requested:Ljava/util/concurrent/atomic/AtomicLong;
     200: lload         6
     202: invokestatic  #36                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.produced:(Ljava/util/concurrent/atomic/AtomicLong;J)J
     205: pop2
     206: aload_0
     207: iload_3
     208: ineg
     209: invokevirtual #37                 // Method addAndGet:(I)I
     212: istore_3
     213: iload_3
     214: ifne          220
     217: goto          232
     220: aload_2
     221: ifnonnull     45
     224: aload_0
     225: getfield      #18                 // Field it:Ljava/util/Iterator;
     228: astore_2
     229: goto          45
     232: return
    Exception table:
       from    to  target type
          93   106   109   Class java/lang/Throwable
         147   155   158   Class java/lang/Throwable

  public int requestFusion(int);
    Code:
       0: iload_1
       1: iconst_2
       2: iand
       3: ifeq          13
       6: aload_0
       7: iconst_1
       8: putfield      #28                 // Field outputFused:Z
      11: iconst_2
      12: ireturn
      13: iconst_0
      14: ireturn

  public void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #18                 // Field it:Ljava/util/Iterator;
       5: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #18                 // Field it:Ljava/util/Iterator;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public R poll();
    Code:
       0: aload_0
       1: getfield      #18                 // Field it:Ljava/util/Iterator;
       4: astore_1
       5: aload_1
       6: ifnull        37
       9: aload_1
      10: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      15: ldc           #34                 // String The iterator returned a null value
      17: invokestatic  #35                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: astore_2
      21: aload_1
      22: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifne          35
      30: aload_0
      31: aconst_null
      32: putfield      #18                 // Field it:Ljava/util/Iterator;
      35: aload_2
      36: areturn
      37: aconst_null
      38: areturn
}
