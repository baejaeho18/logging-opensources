Compiled from "MaybeConcatArray.java"
public final class io.reactivex.rxjava3.internal.operators.maybe.MaybeConcatArray<T> extends io.reactivex.rxjava3.core.Flowable<T> {
  final io.reactivex.rxjava3.core.MaybeSource<? extends T>[] sources;

  public io.reactivex.rxjava3.internal.operators.maybe.MaybeConcatArray(io.reactivex.rxjava3.core.MaybeSource<? extends T>[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/core/Flowable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field sources:[Lio/reactivex/rxjava3/core/MaybeSource;
       9: return

  protected void subscribeActual(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: new           #3                  // class io/reactivex/rxjava3/internal/operators/maybe/MaybeConcatArray$ConcatMaybeObserver
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field sources:[Lio/reactivex/rxjava3/core/MaybeSource;
       9: invokespecial #4                  // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeConcatArray$ConcatMaybeObserver."<init>":(Lorg/reactivestreams/Subscriber;[Lio/reactivex/rxjava3/core/MaybeSource;)V
      12: astore_2
      13: aload_1
      14: aload_2
      15: invokeinterface #5,  2            // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      20: aload_2
      21: invokevirtual #6                  // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeConcatArray$ConcatMaybeObserver.drain:()V
      24: return
}
