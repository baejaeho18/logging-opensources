Compiled from "MaybeOnErrorNext.java"
final class io.reactivex.rxjava3.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver<T> extends java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> implements io.reactivex.rxjava3.core.MaybeObserver<T>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.MaybeObserver<? super T> downstream;

  final io.reactivex.rxjava3.functions.Function<? super java.lang.Throwable, ? extends io.reactivex.rxjava3.core.MaybeSource<? extends T>> resumeFunction;

  io.reactivex.rxjava3.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver(io.reactivex.rxjava3.core.MaybeObserver<? super T>, io.reactivex.rxjava3.functions.Function<? super java.lang.Throwable, ? extends io.reactivex.rxjava3.core.MaybeSource<? extends T>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field resumeFunction:Lio/reactivex/rxjava3/functions/Function;
      14: return

  public void dispose();
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method get:()Ljava/lang/Object;
       4: checkcast     #6                  // class io/reactivex/rxjava3/disposables/Disposable
       7: invokestatic  #7                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      10: ireturn

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #8                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       5: ifeq          18
       8: aload_0
       9: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      12: aload_0
      13: invokeinterface #9,  2            // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      18: return

  public void onSuccess(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSuccess:(Ljava/lang/Object;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field resumeFunction:Lio/reactivex/rxjava3/functions/Function;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ldc           #12                 // String The resumeFunction returned a null MaybeSource
      12: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: checkcast     #14                 // class io/reactivex/rxjava3/core/MaybeSource
      18: astore_2
      19: goto          56
      22: astore_3
      23: aload_3
      24: invokestatic  #16                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      27: aload_0
      28: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      31: new           #17                 // class io/reactivex/rxjava3/exceptions/CompositeException
      34: dup
      35: iconst_2
      36: anewarray     #18                 // class java/lang/Throwable
      39: dup
      40: iconst_0
      41: aload_1
      42: aastore
      43: dup
      44: iconst_1
      45: aload_3
      46: aastore
      47: invokespecial #19                 // Method io/reactivex/rxjava3/exceptions/CompositeException."<init>":([Ljava/lang/Throwable;)V
      50: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      55: return
      56: aload_0
      57: aconst_null
      58: invokestatic  #21                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
      61: pop
      62: aload_2
      63: new           #22                 // class io/reactivex/rxjava3/internal/operators/maybe/MaybeOnErrorNext$OnErrorNextMaybeObserver$NextMaybeObserver
      66: dup
      67: aload_0
      68: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      71: aload_0
      72: invokespecial #23                 // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeOnErrorNext$OnErrorNextMaybeObserver$NextMaybeObserver."<init>":(Lio/reactivex/rxjava3/core/MaybeObserver;Ljava/util/concurrent/atomic/AtomicReference;)V
      75: invokeinterface #24,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeSource.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V
      80: return
    Exception table:
       from    to  target type
           0    19    22   Class java/lang/Throwable

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
       4: invokeinterface #25,  1           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onComplete:()V
       9: return
}
