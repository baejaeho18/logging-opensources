Compiled from "MaybeEqualSingle.java"
final class io.reactivex.rxjava3.internal.operators.maybe.MaybeEqualSingle$EqualCoordinator<T> extends java.util.concurrent.atomic.AtomicInteger implements io.reactivex.rxjava3.disposables.Disposable {
  final io.reactivex.rxjava3.core.SingleObserver<? super java.lang.Boolean> downstream;

  final io.reactivex.rxjava3.internal.operators.maybe.MaybeEqualSingle$EqualObserver<T> observer1;

  final io.reactivex.rxjava3.internal.operators.maybe.MaybeEqualSingle$EqualObserver<T> observer2;

  final io.reactivex.rxjava3.functions.BiPredicate<? super T, ? super T> isEqual;

  io.reactivex.rxjava3.internal.operators.maybe.MaybeEqualSingle$EqualCoordinator(io.reactivex.rxjava3.core.SingleObserver<? super java.lang.Boolean>, io.reactivex.rxjava3.functions.BiPredicate<? super T, ? super T>);
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/SingleObserver;
      10: aload_0
      11: aload_2
      12: putfield      #3                  // Field isEqual:Lio/reactivex/rxjava3/functions/BiPredicate;
      15: aload_0
      16: new           #4                  // class io/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver
      19: dup
      20: aload_0
      21: invokespecial #5                  // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualCoordinator;)V
      24: putfield      #6                  // Field observer1:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver;
      27: aload_0
      28: new           #4                  // class io/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver
      31: dup
      32: aload_0
      33: invokespecial #5                  // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualCoordinator;)V
      36: putfield      #7                  // Field observer2:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver;
      39: return

  void subscribe(io.reactivex.rxjava3.core.MaybeSource<? extends T>, io.reactivex.rxjava3.core.MaybeSource<? extends T>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field observer1:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver;
       5: invokeinterface #8,  2            // InterfaceMethod io/reactivex/rxjava3/core/MaybeSource.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V
      10: aload_2
      11: aload_0
      12: getfield      #7                  // Field observer2:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver;
      15: invokeinterface #8,  2            // InterfaceMethod io/reactivex/rxjava3/core/MaybeSource.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V
      20: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #6                  // Field observer1:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver;
       4: invokevirtual #9                  // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver.dispose:()V
       7: aload_0
       8: getfield      #7                  // Field observer2:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver;
      11: invokevirtual #9                  // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver.dispose:()V
      14: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field observer1:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver;
       4: invokevirtual #10                 // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver.get:()Ljava/lang/Object;
       7: checkcast     #11                 // class io/reactivex/rxjava3/disposables/Disposable
      10: invokestatic  #12                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      13: ireturn

  void done();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method decrementAndGet:()I
       4: ifne          106
       7: aload_0
       8: getfield      #6                  // Field observer1:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver;
      11: getfield      #14                 // Field io/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver.value:Ljava/lang/Object;
      14: astore_1
      15: aload_0
      16: getfield      #7                  // Field observer2:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver;
      19: getfield      #14                 // Field io/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver.value:Ljava/lang/Object;
      22: astore_2
      23: aload_1
      24: ifnull        81
      27: aload_2
      28: ifnull        81
      31: aload_0
      32: getfield      #3                  // Field isEqual:Lio/reactivex/rxjava3/functions/BiPredicate;
      35: aload_1
      36: aload_2
      37: invokeinterface #15,  3           // InterfaceMethod io/reactivex/rxjava3/functions/BiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
      42: istore_3
      43: goto          65
      46: astore        4
      48: aload         4
      50: invokestatic  #17                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      53: aload_0
      54: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/SingleObserver;
      57: aload         4
      59: invokeinterface #18,  2           // InterfaceMethod io/reactivex/rxjava3/core/SingleObserver.onError:(Ljava/lang/Throwable;)V
      64: return
      65: aload_0
      66: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/SingleObserver;
      69: iload_3
      70: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      73: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/core/SingleObserver.onSuccess:(Ljava/lang/Object;)V
      78: goto          106
      81: aload_0
      82: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/SingleObserver;
      85: aload_1
      86: ifnonnull     97
      89: aload_2
      90: ifnonnull     97
      93: iconst_1
      94: goto          98
      97: iconst_0
      98: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     101: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/core/SingleObserver.onSuccess:(Ljava/lang/Object;)V
     106: return
    Exception table:
       from    to  target type
          31    43    46   Class java/lang/Throwable

  void error(io.reactivex.rxjava3.internal.operators.maybe.MaybeEqualSingle$EqualObserver<T>, java.lang.Throwable);
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #21                 // Method getAndSet:(I)I
       5: ifle          46
       8: aload_1
       9: aload_0
      10: getfield      #6                  // Field observer1:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver;
      13: if_acmpne     26
      16: aload_0
      17: getfield      #7                  // Field observer2:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver;
      20: invokevirtual #9                  // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver.dispose:()V
      23: goto          33
      26: aload_0
      27: getfield      #6                  // Field observer1:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver;
      30: invokevirtual #9                  // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeEqualSingle$EqualObserver.dispose:()V
      33: aload_0
      34: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/SingleObserver;
      37: aload_2
      38: invokeinterface #18,  2           // InterfaceMethod io/reactivex/rxjava3/core/SingleObserver.onError:(Ljava/lang/Throwable;)V
      43: goto          50
      46: aload_2
      47: invokestatic  #22                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      50: return
}
