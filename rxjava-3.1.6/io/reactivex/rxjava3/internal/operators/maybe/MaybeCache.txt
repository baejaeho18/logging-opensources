Compiled from "MaybeCache.java"
public final class io.reactivex.rxjava3.internal.operators.maybe.MaybeCache<T> extends io.reactivex.rxjava3.core.Maybe<T> implements io.reactivex.rxjava3.core.MaybeObserver<T> {
  static final io.reactivex.rxjava3.internal.operators.maybe.MaybeCache$CacheDisposable[] EMPTY;

  static final io.reactivex.rxjava3.internal.operators.maybe.MaybeCache$CacheDisposable[] TERMINATED;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.core.MaybeSource<T>> source;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.internal.operators.maybe.MaybeCache$CacheDisposable<T>[]> observers;

  T value;

  java.lang.Throwable error;

  public io.reactivex.rxjava3.internal.operators.maybe.MaybeCache(io.reactivex.rxjava3.core.MaybeSource<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/core/Maybe."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: aload_1
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      13: putfield      #4                  // Field source:Ljava/util/concurrent/atomic/AtomicReference;
      16: aload_0
      17: new           #2                  // class java/util/concurrent/atomic/AtomicReference
      20: dup
      21: getstatic     #5                  // Field EMPTY:[Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable;
      24: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      27: putfield      #6                  // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
      30: return

  protected void subscribeActual(io.reactivex.rxjava3.core.MaybeObserver<? super T>);
    Code:
       0: new           #7                  // class io/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #8                  // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable."<init>":(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache;)V
       9: astore_2
      10: aload_1
      11: aload_2
      12: invokeinterface #9,  2            // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      17: aload_0
      18: aload_2
      19: invokevirtual #10                 // Method add:(Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable;)Z
      22: ifeq          38
      25: aload_2
      26: invokevirtual #11                 // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable.isDisposed:()Z
      29: ifeq          93
      32: aload_0
      33: aload_2
      34: invokevirtual #12                 // Method remove:(Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable;)V
      37: return
      38: aload_2
      39: invokevirtual #11                 // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable.isDisposed:()Z
      42: ifne          92
      45: aload_0
      46: getfield      #13                 // Field error:Ljava/lang/Throwable;
      49: astore_3
      50: aload_3
      51: ifnull        64
      54: aload_1
      55: aload_3
      56: invokeinterface #14,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      61: goto          92
      64: aload_0
      65: getfield      #15                 // Field value:Ljava/lang/Object;
      68: astore        4
      70: aload         4
      72: ifnull        86
      75: aload_1
      76: aload         4
      78: invokeinterface #16,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSuccess:(Ljava/lang/Object;)V
      83: goto          92
      86: aload_1
      87: invokeinterface #17,  1           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onComplete:()V
      92: return
      93: aload_0
      94: getfield      #4                  // Field source:Ljava/util/concurrent/atomic/AtomicReference;
      97: aconst_null
      98: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
     101: checkcast     #19                 // class io/reactivex/rxjava3/core/MaybeSource
     104: astore_3
     105: aload_3
     106: ifnull        116
     109: aload_3
     110: aload_0
     111: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeSource.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V
     116: return

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: return

  public void onSuccess(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field value:Ljava/lang/Object;
       5: aload_0
       6: getfield      #6                  // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       9: getstatic     #21                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable;
      12: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #22                 // class "[Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable;"
      18: astore_2
      19: aload_2
      20: arraylength
      21: istore_3
      22: iconst_0
      23: istore        4
      25: iload         4
      27: iload_3
      28: if_icmpge     62
      31: aload_2
      32: iload         4
      34: aaload
      35: astore        5
      37: aload         5
      39: invokevirtual #11                 // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable.isDisposed:()Z
      42: ifne          56
      45: aload         5
      47: getfield      #23                 // Field io/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable.downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      50: aload_1
      51: invokeinterface #16,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSuccess:(Ljava/lang/Object;)V
      56: iinc          4, 1
      59: goto          25
      62: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field error:Ljava/lang/Throwable;
       5: aload_0
       6: getfield      #6                  // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       9: getstatic     #21                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable;
      12: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #22                 // class "[Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable;"
      18: astore_2
      19: aload_2
      20: arraylength
      21: istore_3
      22: iconst_0
      23: istore        4
      25: iload         4
      27: iload_3
      28: if_icmpge     62
      31: aload_2
      32: iload         4
      34: aaload
      35: astore        5
      37: aload         5
      39: invokevirtual #11                 // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable.isDisposed:()Z
      42: ifne          56
      45: aload         5
      47: getfield      #23                 // Field io/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable.downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      50: aload_1
      51: invokeinterface #14,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      56: iinc          4, 1
      59: goto          25
      62: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       4: getstatic     #21                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable;
       7: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #22                 // class "[Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable;"
      13: astore_1
      14: aload_1
      15: arraylength
      16: istore_2
      17: iconst_0
      18: istore_3
      19: iload_3
      20: iload_2
      21: if_icmpge     53
      24: aload_1
      25: iload_3
      26: aaload
      27: astore        4
      29: aload         4
      31: invokevirtual #11                 // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable.isDisposed:()Z
      34: ifne          47
      37: aload         4
      39: getfield      #23                 // Field io/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable.downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      42: invokeinterface #17,  1           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onComplete:()V
      47: iinc          3, 1
      50: goto          19
      53: return

  boolean add(io.reactivex.rxjava3.internal.operators.maybe.MaybeCache$CacheDisposable<T>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #22                 // class "[Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable;"
      10: astore_2
      11: aload_2
      12: getstatic     #21                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable;
      15: if_acmpne     20
      18: iconst_0
      19: ireturn
      20: aload_2
      21: arraylength
      22: istore_3
      23: iload_3
      24: iconst_1
      25: iadd
      26: anewarray     #7                  // class io/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable
      29: astore        4
      31: aload_2
      32: iconst_0
      33: aload         4
      35: iconst_0
      36: iload_3
      37: invokestatic  #25                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      40: aload         4
      42: iload_3
      43: aload_1
      44: aastore
      45: aload_0
      46: getfield      #6                  // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
      49: aload_2
      50: aload         4
      52: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      55: ifeq          60
      58: iconst_1
      59: ireturn
      60: goto          0

  void remove(io.reactivex.rxjava3.internal.operators.maybe.MaybeCache$CacheDisposable<T>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #22                 // class "[Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable;"
      10: astore_2
      11: aload_2
      12: arraylength
      13: istore_3
      14: iload_3
      15: ifne          19
      18: return
      19: iconst_m1
      20: istore        4
      22: iconst_0
      23: istore        5
      25: iload         5
      27: iload_3
      28: if_icmpge     52
      31: aload_2
      32: iload         5
      34: aaload
      35: aload_1
      36: if_acmpne     46
      39: iload         5
      41: istore        4
      43: goto          52
      46: iinc          5, 1
      49: goto          25
      52: iload         4
      54: ifge          58
      57: return
      58: iload_3
      59: iconst_1
      60: if_icmpne     71
      63: getstatic     #5                  // Field EMPTY:[Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable;
      66: astore        5
      68: goto          107
      71: iload_3
      72: iconst_1
      73: isub
      74: anewarray     #7                  // class io/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable
      77: astore        5
      79: aload_2
      80: iconst_0
      81: aload         5
      83: iconst_0
      84: iload         4
      86: invokestatic  #25                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      89: aload_2
      90: iload         4
      92: iconst_1
      93: iadd
      94: aload         5
      96: iload         4
      98: iload_3
      99: iload         4
     101: isub
     102: iconst_1
     103: isub
     104: invokestatic  #25                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     107: aload_0
     108: getfield      #6                  // Field observers:Ljava/util/concurrent/atomic/AtomicReference;
     111: aload_2
     112: aload         5
     114: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     117: ifeq          121
     120: return
     121: goto          0

  static {};
    Code:
       0: iconst_0
       1: anewarray     #7                  // class io/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable
       4: putstatic     #5                  // Field EMPTY:[Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable;
       7: iconst_0
       8: anewarray     #7                  // class io/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable
      11: putstatic     #21                 // Field TERMINATED:[Lio/reactivex/rxjava3/internal/operators/maybe/MaybeCache$CacheDisposable;
      14: return
}
