Compiled from "MaybeFlatMapNotification.java"
final class io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver<T, R> extends java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> implements io.reactivex.rxjava3.core.MaybeObserver<T>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.MaybeObserver<? super R> downstream;

  final io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.MaybeSource<? extends R>> onSuccessMapper;

  final io.reactivex.rxjava3.functions.Function<? super java.lang.Throwable, ? extends io.reactivex.rxjava3.core.MaybeSource<? extends R>> onErrorMapper;

  final io.reactivex.rxjava3.functions.Supplier<? extends io.reactivex.rxjava3.core.MaybeSource<? extends R>> onCompleteSupplier;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  io.reactivex.rxjava3.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver(io.reactivex.rxjava3.core.MaybeObserver<? super R>, io.reactivex.rxjava3.functions.Function<? super T, ? extends io.reactivex.rxjava3.core.MaybeSource<? extends R>>, io.reactivex.rxjava3.functions.Function<? super java.lang.Throwable, ? extends io.reactivex.rxjava3.core.MaybeSource<? extends R>>, io.reactivex.rxjava3.functions.Supplier<? extends io.reactivex.rxjava3.core.MaybeSource<? extends R>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field onSuccessMapper:Lio/reactivex/rxjava3/functions/Function;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field onErrorMapper:Lio/reactivex/rxjava3/functions/Function;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field onCompleteSupplier:Lio/reactivex/rxjava3/functions/Supplier;
      25: return

  public void dispose();
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: aload_0
       6: getfield      #7                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       9: invokeinterface #8,  1            // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      14: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method get:()Ljava/lang/Object;
       4: checkcast     #10                 // class io/reactivex/rxjava3/disposables/Disposable
       7: invokestatic  #11                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      10: ireturn

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #12                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #7                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      20: aload_0
      21: invokeinterface #13,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      26: return

  public void onSuccess(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field onSuccessMapper:Lio/reactivex/rxjava3/functions/Function;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ldc           #15                 // String The onSuccessMapper returned a null MaybeSource
      12: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: checkcast     #17                 // class io/reactivex/rxjava3/core/MaybeSource
      18: astore_2
      19: goto          38
      22: astore_3
      23: aload_3
      24: invokestatic  #19                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      27: aload_0
      28: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      31: aload_3
      32: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      37: return
      38: aload_0
      39: invokevirtual #21                 // Method isDisposed:()Z
      42: ifne          59
      45: aload_2
      46: new           #22                 // class io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$FlatMapMaybeObserver$InnerObserver
      49: dup
      50: aload_0
      51: invokespecial #23                 // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$FlatMapMaybeObserver$InnerObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$FlatMapMaybeObserver;)V
      54: invokeinterface #24,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeSource.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V
      59: return
    Exception table:
       from    to  target type
           0    19    22   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field onErrorMapper:Lio/reactivex/rxjava3/functions/Function;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ldc           #25                 // String The onErrorMapper returned a null MaybeSource
      12: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: checkcast     #17                 // class io/reactivex/rxjava3/core/MaybeSource
      18: astore_2
      19: goto          56
      22: astore_3
      23: aload_3
      24: invokestatic  #19                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      27: aload_0
      28: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      31: new           #26                 // class io/reactivex/rxjava3/exceptions/CompositeException
      34: dup
      35: iconst_2
      36: anewarray     #27                 // class java/lang/Throwable
      39: dup
      40: iconst_0
      41: aload_1
      42: aastore
      43: dup
      44: iconst_1
      45: aload_3
      46: aastore
      47: invokespecial #28                 // Method io/reactivex/rxjava3/exceptions/CompositeException."<init>":([Ljava/lang/Throwable;)V
      50: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      55: return
      56: aload_0
      57: invokevirtual #21                 // Method isDisposed:()Z
      60: ifne          77
      63: aload_2
      64: new           #22                 // class io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$FlatMapMaybeObserver$InnerObserver
      67: dup
      68: aload_0
      69: invokespecial #23                 // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$FlatMapMaybeObserver$InnerObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$FlatMapMaybeObserver;)V
      72: invokeinterface #24,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeSource.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V
      77: return
    Exception table:
       from    to  target type
           0    19    22   Class java/lang/Throwable

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #5                  // Field onCompleteSupplier:Lio/reactivex/rxjava3/functions/Supplier;
       4: invokeinterface #29,  1           // InterfaceMethod io/reactivex/rxjava3/functions/Supplier.get:()Ljava/lang/Object;
       9: ldc           #30                 // String The onCompleteSupplier returned a null MaybeSource
      11: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #17                 // class io/reactivex/rxjava3/core/MaybeSource
      17: astore_1
      18: goto          37
      21: astore_2
      22: aload_2
      23: invokestatic  #19                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      26: aload_0
      27: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      30: aload_2
      31: invokeinterface #20,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      36: return
      37: aload_0
      38: invokevirtual #21                 // Method isDisposed:()Z
      41: ifne          58
      44: aload_1
      45: new           #22                 // class io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$FlatMapMaybeObserver$InnerObserver
      48: dup
      49: aload_0
      50: invokespecial #23                 // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$FlatMapMaybeObserver$InnerObserver."<init>":(Lio/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification$FlatMapMaybeObserver;)V
      53: invokeinterface #24,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeSource.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V
      58: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/Throwable
}
