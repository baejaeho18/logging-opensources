Compiled from "MaybeUsing.java"
final class io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing$UsingObserver<T, D> extends java.util.concurrent.atomic.AtomicReference<java.lang.Object> implements io.reactivex.rxjava3.core.MaybeObserver<T>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.MaybeObserver<? super T> downstream;

  final io.reactivex.rxjava3.functions.Consumer<? super D> disposer;

  final boolean eager;

  io.reactivex.rxjava3.disposables.Disposable upstream;

  io.reactivex.rxjava3.internal.operators.maybe.MaybeUsing$UsingObserver(io.reactivex.rxjava3.core.MaybeObserver<? super T>, D, io.reactivex.rxjava3.functions.Consumer<? super D>, boolean);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field disposer:Lio/reactivex/rxjava3/functions/Consumer;
      15: aload_0
      16: iload         4
      18: putfield      #4                  // Field eager:Z
      21: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #4                  // Field eager:Z
       4: ifeq          30
       7: aload_0
       8: invokevirtual #5                  // Method disposeResource:()V
      11: aload_0
      12: getfield      #6                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      15: invokeinterface #7,  1            // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      20: aload_0
      21: getstatic     #8                  // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
      24: putfield      #6                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      27: goto          50
      30: aload_0
      31: getfield      #6                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      34: invokeinterface #7,  1            // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      39: aload_0
      40: getstatic     #8                  // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
      43: putfield      #6                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      46: aload_0
      47: invokevirtual #5                  // Method disposeResource:()V
      50: return

  void disposeResource();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #9                  // Method getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_1
       6: aload_1
       7: aload_0
       8: if_acmpeq     33
      11: aload_0
      12: getfield      #3                  // Field disposer:Lio/reactivex/rxjava3/functions/Consumer;
      15: aload_1
      16: invokeinterface #10,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Consumer.accept:(Ljava/lang/Object;)V
      21: goto          33
      24: astore_2
      25: aload_2
      26: invokestatic  #12                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      29: aload_2
      30: invokestatic  #13                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      33: return
    Exception table:
       from    to  target type
          11    21    24   Class java/lang/Throwable

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: invokeinterface #14,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.isDisposed:()Z
       9: ireturn

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       4: aload_1
       5: invokestatic  #15                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.validate:(Lio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
      16: aload_0
      17: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      20: aload_0
      21: invokeinterface #16,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      26: return

  public void onSuccess(T);
    Code:
       0: aload_0
       1: getstatic     #8                  // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
       4: putfield      #6                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       7: aload_0
       8: getfield      #4                  // Field eager:Z
      11: ifeq          55
      14: aload_0
      15: aload_0
      16: invokevirtual #9                  // Method getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      19: astore_2
      20: aload_2
      21: aload_0
      22: if_acmpeq     54
      25: aload_0
      26: getfield      #3                  // Field disposer:Lio/reactivex/rxjava3/functions/Consumer;
      29: aload_2
      30: invokeinterface #10,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Consumer.accept:(Ljava/lang/Object;)V
      35: goto          55
      38: astore_3
      39: aload_3
      40: invokestatic  #12                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      43: aload_0
      44: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      47: aload_3
      48: invokeinterface #17,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      53: return
      54: return
      55: aload_0
      56: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      59: aload_1
      60: invokeinterface #18,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSuccess:(Ljava/lang/Object;)V
      65: aload_0
      66: getfield      #4                  // Field eager:Z
      69: ifne          76
      72: aload_0
      73: invokevirtual #5                  // Method disposeResource:()V
      76: return
    Exception table:
       from    to  target type
          25    35    38   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #8                  // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
       4: putfield      #6                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       7: aload_0
       8: getfield      #4                  // Field eager:Z
      11: ifeq          67
      14: aload_0
      15: aload_0
      16: invokevirtual #9                  // Method getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      19: astore_2
      20: aload_2
      21: aload_0
      22: if_acmpeq     66
      25: aload_0
      26: getfield      #3                  // Field disposer:Lio/reactivex/rxjava3/functions/Consumer;
      29: aload_2
      30: invokeinterface #10,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Consumer.accept:(Ljava/lang/Object;)V
      35: goto          67
      38: astore_3
      39: aload_3
      40: invokestatic  #12                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      43: new           #19                 // class io/reactivex/rxjava3/exceptions/CompositeException
      46: dup
      47: iconst_2
      48: anewarray     #20                 // class java/lang/Throwable
      51: dup
      52: iconst_0
      53: aload_1
      54: aastore
      55: dup
      56: iconst_1
      57: aload_3
      58: aastore
      59: invokespecial #21                 // Method io/reactivex/rxjava3/exceptions/CompositeException."<init>":([Ljava/lang/Throwable;)V
      62: astore_1
      63: goto          67
      66: return
      67: aload_0
      68: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      71: aload_1
      72: invokeinterface #17,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      77: aload_0
      78: getfield      #4                  // Field eager:Z
      81: ifne          88
      84: aload_0
      85: invokevirtual #5                  // Method disposeResource:()V
      88: return
    Exception table:
       from    to  target type
          25    35    38   Class java/lang/Throwable

  public void onComplete();
    Code:
       0: aload_0
       1: getstatic     #8                  // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
       4: putfield      #6                  // Field upstream:Lio/reactivex/rxjava3/disposables/Disposable;
       7: aload_0
       8: getfield      #4                  // Field eager:Z
      11: ifeq          55
      14: aload_0
      15: aload_0
      16: invokevirtual #9                  // Method getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      19: astore_1
      20: aload_1
      21: aload_0
      22: if_acmpeq     54
      25: aload_0
      26: getfield      #3                  // Field disposer:Lio/reactivex/rxjava3/functions/Consumer;
      29: aload_1
      30: invokeinterface #10,  2           // InterfaceMethod io/reactivex/rxjava3/functions/Consumer.accept:(Ljava/lang/Object;)V
      35: goto          55
      38: astore_2
      39: aload_2
      40: invokestatic  #12                 // Method io/reactivex/rxjava3/exceptions/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      43: aload_0
      44: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      47: aload_2
      48: invokeinterface #17,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      53: return
      54: return
      55: aload_0
      56: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      59: invokeinterface #22,  1           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onComplete:()V
      64: aload_0
      65: getfield      #4                  // Field eager:Z
      68: ifne          75
      71: aload_0
      72: invokevirtual #5                  // Method disposeResource:()V
      75: return
    Exception table:
       from    to  target type
          25    35    38   Class java/lang/Throwable
}
