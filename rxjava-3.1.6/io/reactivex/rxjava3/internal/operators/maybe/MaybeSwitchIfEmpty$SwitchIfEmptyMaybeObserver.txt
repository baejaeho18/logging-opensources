Compiled from "MaybeSwitchIfEmpty.java"
final class io.reactivex.rxjava3.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver<T> extends java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> implements io.reactivex.rxjava3.core.MaybeObserver<T>, io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.MaybeObserver<? super T> downstream;

  final io.reactivex.rxjava3.core.MaybeSource<? extends T> other;

  io.reactivex.rxjava3.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver(io.reactivex.rxjava3.core.MaybeObserver<? super T>, io.reactivex.rxjava3.core.MaybeSource<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field other:Lio/reactivex/rxjava3/core/MaybeSource;
      14: return

  public void dispose();
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method get:()Ljava/lang/Object;
       4: checkcast     #6                  // class io/reactivex/rxjava3/disposables/Disposable
       7: invokestatic  #7                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      10: ireturn

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #8                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       5: ifeq          18
       8: aload_0
       9: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      12: aload_0
      13: invokeinterface #9,  2            // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      18: return

  public void onSuccess(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSuccess:(Ljava/lang/Object;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onComplete();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method get:()Ljava/lang/Object;
       4: checkcast     #6                  // class io/reactivex/rxjava3/disposables/Disposable
       7: astore_1
       8: aload_1
       9: getstatic     #12                 // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
      12: if_acmpeq     45
      15: aload_0
      16: aload_1
      17: aconst_null
      18: invokevirtual #13                 // Method compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      21: ifeq          45
      24: aload_0
      25: getfield      #3                  // Field other:Lio/reactivex/rxjava3/core/MaybeSource;
      28: new           #14                 // class io/reactivex/rxjava3/internal/operators/maybe/MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver$OtherMaybeObserver
      31: dup
      32: aload_0
      33: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      36: aload_0
      37: invokespecial #15                 // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver$OtherMaybeObserver."<init>":(Lio/reactivex/rxjava3/core/MaybeObserver;Ljava/util/concurrent/atomic/AtomicReference;)V
      40: invokeinterface #16,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeSource.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V
      45: return
}
