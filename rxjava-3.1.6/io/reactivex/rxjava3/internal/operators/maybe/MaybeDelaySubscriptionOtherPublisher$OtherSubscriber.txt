Compiled from "MaybeDelaySubscriptionOtherPublisher.java"
final class io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$OtherSubscriber<T> implements io.reactivex.rxjava3.core.FlowableSubscriber<java.lang.Object>, io.reactivex.rxjava3.disposables.Disposable {
  final io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver<T> main;

  io.reactivex.rxjava3.core.MaybeSource<T> source;

  org.reactivestreams.Subscription upstream;

  io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$OtherSubscriber(io.reactivex.rxjava3.core.MaybeObserver<? super T>, io.reactivex.rxjava3.core.MaybeSource<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver
       8: dup
       9: aload_1
      10: invokespecial #3                  // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver."<init>":(Lio/reactivex/rxjava3/core/MaybeObserver;)V
      13: putfield      #4                  // Field main:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver;
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field source:Lio/reactivex/rxjava3/core/MaybeSource;
      21: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #6                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #7                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          38
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #4                  // Field main:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver;
      20: getfield      #8                  // Field io/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver.downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      23: aload_0
      24: invokeinterface #9,  2            // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      29: aload_1
      30: ldc2_w        #11                 // long 9223372036854775807l
      33: invokeinterface #13,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      38: return

  public void onNext(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: getstatic     #14                 // Field io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.CANCELLED:Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;
       7: if_acmpeq     30
      10: aload_0
      11: getfield      #6                  // Field upstream:Lorg/reactivestreams/Subscription;
      14: invokeinterface #15,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      19: aload_0
      20: getstatic     #14                 // Field io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.CANCELLED:Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;
      23: putfield      #6                  // Field upstream:Lorg/reactivestreams/Subscription;
      26: aload_0
      27: invokevirtual #16                 // Method subscribeNext:()V
      30: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: getstatic     #14                 // Field io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.CANCELLED:Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;
       7: if_acmpeq     33
      10: aload_0
      11: getstatic     #14                 // Field io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.CANCELLED:Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;
      14: putfield      #6                  // Field upstream:Lorg/reactivestreams/Subscription;
      17: aload_0
      18: getfield      #4                  // Field main:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver;
      21: getfield      #8                  // Field io/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver.downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      24: aload_1
      25: invokeinterface #17,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      30: goto          37
      33: aload_1
      34: invokestatic  #18                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      37: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: getstatic     #14                 // Field io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.CANCELLED:Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;
       7: if_acmpeq     21
      10: aload_0
      11: getstatic     #14                 // Field io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.CANCELLED:Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;
      14: putfield      #6                  // Field upstream:Lorg/reactivestreams/Subscription;
      17: aload_0
      18: invokevirtual #16                 // Method subscribeNext:()V
      21: return

  void subscribeNext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field source:Lio/reactivex/rxjava3/core/MaybeSource;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #5                  // Field source:Lio/reactivex/rxjava3/core/MaybeSource;
      10: aload_1
      11: aload_0
      12: getfield      #4                  // Field main:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver;
      15: invokeinterface #19,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeSource.subscribe:(Lio/reactivex/rxjava3/core/MaybeObserver;)V
      20: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field main:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver;
       4: invokevirtual #20                 // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver.get:()Ljava/lang/Object;
       7: checkcast     #21                 // class io/reactivex/rxjava3/disposables/Disposable
      10: invokestatic  #22                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      13: ireturn

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #6                  // Field upstream:Lorg/reactivestreams/Subscription;
       4: invokeinterface #15,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: aload_0
      10: getstatic     #14                 // Field io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.CANCELLED:Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;
      13: putfield      #6                  // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #4                  // Field main:Lio/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver;
      20: invokestatic  #23                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      23: pop
      24: return
}
