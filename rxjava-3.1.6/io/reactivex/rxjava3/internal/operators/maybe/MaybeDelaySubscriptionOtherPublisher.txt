Compiled from "MaybeDelaySubscriptionOtherPublisher.java"
public final class io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher<T, U> extends io.reactivex.rxjava3.internal.operators.maybe.AbstractMaybeWithUpstream<T, T> {
  final org.reactivestreams.Publisher<U> other;

  public io.reactivex.rxjava3.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher(io.reactivex.rxjava3.core.MaybeSource<T>, org.reactivestreams.Publisher<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/reactivex/rxjava3/internal/operators/maybe/AbstractMaybeWithUpstream."<init>":(Lio/reactivex/rxjava3/core/MaybeSource;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field other:Lorg/reactivestreams/Publisher;
      10: return

  protected void subscribeActual(io.reactivex.rxjava3.core.MaybeObserver<? super T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field other:Lorg/reactivestreams/Publisher;
       4: new           #3                  // class io/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$OtherSubscriber
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #4                  // Field source:Lio/reactivex/rxjava3/core/MaybeSource;
      13: invokespecial #5                  // Method io/reactivex/rxjava3/internal/operators/maybe/MaybeDelaySubscriptionOtherPublisher$OtherSubscriber."<init>":(Lio/reactivex/rxjava3/core/MaybeObserver;Lio/reactivex/rxjava3/core/MaybeSource;)V
      16: invokeinterface #6,  2            // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      21: return
}
