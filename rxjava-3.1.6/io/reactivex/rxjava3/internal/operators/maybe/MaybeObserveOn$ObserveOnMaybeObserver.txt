Compiled from "MaybeObserveOn.java"
final class io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver<T> extends java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> implements io.reactivex.rxjava3.core.MaybeObserver<T>, io.reactivex.rxjava3.disposables.Disposable, java.lang.Runnable {
  private static final long serialVersionUID;

  final io.reactivex.rxjava3.core.MaybeObserver<? super T> downstream;

  final io.reactivex.rxjava3.core.Scheduler scheduler;

  T value;

  java.lang.Throwable error;

  io.reactivex.rxjava3.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver(io.reactivex.rxjava3.core.MaybeObserver<? super T>, io.reactivex.rxjava3.core.Scheduler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      14: return

  public void dispose();
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       4: pop
       5: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method get:()Ljava/lang/Object;
       4: checkcast     #6                  // class io/reactivex/rxjava3/disposables/Disposable
       7: invokestatic  #7                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.isDisposed:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      10: ireturn

  public void onSubscribe(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #8                  // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.setOnce:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       5: ifeq          18
       8: aload_0
       9: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      12: aload_0
      13: invokeinterface #9,  2            // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSubscribe:(Lio/reactivex/rxjava3/disposables/Disposable;)V
      18: return

  public void onSuccess(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field value:Ljava/lang/Object;
       5: aload_0
       6: aload_0
       7: getfield      #3                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      10: aload_0
      11: invokevirtual #11                 // Method io/reactivex/rxjava3/core/Scheduler.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/disposables/Disposable;
      14: invokestatic  #12                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
      17: pop
      18: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field error:Ljava/lang/Throwable;
       5: aload_0
       6: aload_0
       7: getfield      #3                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
      10: aload_0
      11: invokevirtual #11                 // Method io/reactivex/rxjava3/core/Scheduler.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/disposables/Disposable;
      14: invokestatic  #12                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
      17: pop
      18: return

  public void onComplete();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field scheduler:Lio/reactivex/rxjava3/core/Scheduler;
       5: aload_0
       6: invokevirtual #11                 // Method io/reactivex/rxjava3/core/Scheduler.scheduleDirect:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/disposables/Disposable;
       9: invokestatic  #12                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
      12: pop
      13: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #13                 // Field error:Ljava/lang/Throwable;
       4: astore_1
       5: aload_1
       6: ifnull        27
       9: aload_0
      10: aconst_null
      11: putfield      #13                 // Field error:Ljava/lang/Throwable;
      14: aload_0
      15: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      18: aload_1
      19: invokeinterface #14,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onError:(Ljava/lang/Throwable;)V
      24: goto          63
      27: aload_0
      28: getfield      #10                 // Field value:Ljava/lang/Object;
      31: astore_2
      32: aload_2
      33: ifnull        54
      36: aload_0
      37: aconst_null
      38: putfield      #10                 // Field value:Ljava/lang/Object;
      41: aload_0
      42: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      45: aload_2
      46: invokeinterface #15,  2           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onSuccess:(Ljava/lang/Object;)V
      51: goto          63
      54: aload_0
      55: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/MaybeObserver;
      58: invokeinterface #16,  1           // InterfaceMethod io/reactivex/rxjava3/core/MaybeObserver.onComplete:()V
      63: return
}
