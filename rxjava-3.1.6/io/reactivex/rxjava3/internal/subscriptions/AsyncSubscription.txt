Compiled from "AsyncSubscription.java"
public final class io.reactivex.rxjava3.internal.subscriptions.AsyncSubscription extends java.util.concurrent.atomic.AtomicLong implements org.reactivestreams.Subscription,io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> actual;

  final java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable> resource;

  public io.reactivex.rxjava3.internal.subscriptions.AsyncSubscription();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field resource:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/atomic/AtomicReference
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      23: putfield      #5                  // Field actual:Ljava/util/concurrent/atomic/AtomicReference;
      26: return

  public io.reactivex.rxjava3.internal.subscriptions.AsyncSubscription(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method "<init>":()V
       4: aload_0
       5: getfield      #4                  // Field resource:Ljava/util/concurrent/atomic/AtomicReference;
       8: aload_1
       9: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReference.lazySet:(Ljava/lang/Object;)V
      12: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field actual:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_0
       5: lload_1
       6: invokestatic  #8                  // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V
       9: return

  public void cancel();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method dispose:()V
       4: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #5                  // Field actual:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokestatic  #10                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       7: pop
       8: aload_0
       9: getfield      #4                  // Field resource:Ljava/util/concurrent/atomic/AtomicReference;
      12: invokestatic  #11                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.dispose:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      15: pop
      16: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field actual:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #13                 // Field io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.CANCELLED:Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;
      10: if_acmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public boolean setResource(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field resource:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokestatic  #14                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.set:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ireturn

  public boolean replaceResource(io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field resource:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokestatic  #15                 // Method io/reactivex/rxjava3/internal/disposables/DisposableHelper.replace:(Ljava/util/concurrent/atomic/AtomicReference;Lio/reactivex/rxjava3/disposables/Disposable;)Z
       8: ireturn

  public void setSubscription(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #5                  // Field actual:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_0
       5: aload_1
       6: invokestatic  #16                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.deferredSetOnce:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;Lorg/reactivestreams/Subscription;)Z
       9: pop
      10: return
}
