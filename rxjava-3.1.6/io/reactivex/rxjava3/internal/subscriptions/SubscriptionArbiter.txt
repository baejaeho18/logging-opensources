Compiled from "SubscriptionArbiter.java"
public class io.reactivex.rxjava3.internal.subscriptions.SubscriptionArbiter extends java.util.concurrent.atomic.AtomicInteger implements org.reactivestreams.Subscription {
  private static final long serialVersionUID;

  org.reactivestreams.Subscription actual;

  long requested;

  final java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> missedSubscription;

  final java.util.concurrent.atomic.AtomicLong missedRequested;

  final java.util.concurrent.atomic.AtomicLong missedProduced;

  final boolean cancelOnReplace;

  volatile boolean cancelled;

  protected boolean unbounded;

  public io.reactivex.rxjava3.internal.subscriptions.SubscriptionArbiter(boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field cancelOnReplace:Z
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicReference
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      17: putfield      #5                  // Field missedSubscription:Ljava/util/concurrent/atomic/AtomicReference;
      20: aload_0
      21: new           #6                  // class java/util/concurrent/atomic/AtomicLong
      24: dup
      25: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      28: putfield      #8                  // Field missedRequested:Ljava/util/concurrent/atomic/AtomicLong;
      31: aload_0
      32: new           #6                  // class java/util/concurrent/atomic/AtomicLong
      35: dup
      36: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      39: putfield      #9                  // Field missedProduced:Ljava/util/concurrent/atomic/AtomicLong;
      42: return

  public final void setSubscription(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #10                 // Field cancelled:Z
       4: ifeq          14
       7: aload_1
       8: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      13: return
      14: aload_1
      15: ldc           #12                 // String s is null
      17: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: aload_0
      22: invokevirtual #14                 // Method get:()I
      25: ifne          94
      28: aload_0
      29: iconst_0
      30: iconst_1
      31: invokevirtual #15                 // Method compareAndSet:(II)Z
      34: ifeq          94
      37: aload_0
      38: getfield      #16                 // Field actual:Lorg/reactivestreams/Subscription;
      41: astore_2
      42: aload_2
      43: ifnull        59
      46: aload_0
      47: getfield      #2                  // Field cancelOnReplace:Z
      50: ifeq          59
      53: aload_2
      54: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      59: aload_0
      60: aload_1
      61: putfield      #16                 // Field actual:Lorg/reactivestreams/Subscription;
      64: aload_0
      65: getfield      #17                 // Field requested:J
      68: lstore_3
      69: aload_0
      70: invokevirtual #18                 // Method decrementAndGet:()I
      73: ifeq          80
      76: aload_0
      77: invokevirtual #19                 // Method drainLoop:()V
      80: lload_3
      81: lconst_0
      82: lcmp
      83: ifeq          93
      86: aload_1
      87: lload_3
      88: invokeinterface #20,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      93: return
      94: aload_0
      95: getfield      #5                  // Field missedSubscription:Ljava/util/concurrent/atomic/AtomicReference;
      98: aload_1
      99: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
     102: checkcast     #22                 // class org/reactivestreams/Subscription
     105: astore_2
     106: aload_2
     107: ifnull        123
     110: aload_0
     111: getfield      #2                  // Field cancelOnReplace:Z
     114: ifeq          123
     117: aload_2
     118: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     123: aload_0
     124: invokevirtual #23                 // Method drain:()V
     127: return

  public final void request(long);
    Code:
       0: lload_1
       1: invokestatic  #24                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.validate:(J)Z
       4: ifeq          112
       7: aload_0
       8: getfield      #25                 // Field unbounded:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: invokevirtual #14                 // Method get:()I
      19: ifne          99
      22: aload_0
      23: iconst_0
      24: iconst_1
      25: invokevirtual #15                 // Method compareAndSet:(II)Z
      28: ifeq          99
      31: aload_0
      32: getfield      #17                 // Field requested:J
      35: lstore_3
      36: lload_3
      37: ldc2_w        #27                 // long 9223372036854775807l
      40: lcmp
      41: ifeq          68
      44: lload_3
      45: lload_1
      46: invokestatic  #29                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.addCap:(JJ)J
      49: lstore_3
      50: aload_0
      51: lload_3
      52: putfield      #17                 // Field requested:J
      55: lload_3
      56: ldc2_w        #27                 // long 9223372036854775807l
      59: lcmp
      60: ifne          68
      63: aload_0
      64: iconst_1
      65: putfield      #25                 // Field unbounded:Z
      68: aload_0
      69: getfield      #16                 // Field actual:Lorg/reactivestreams/Subscription;
      72: astore        5
      74: aload_0
      75: invokevirtual #18                 // Method decrementAndGet:()I
      78: ifeq          85
      81: aload_0
      82: invokevirtual #19                 // Method drainLoop:()V
      85: aload         5
      87: ifnull        98
      90: aload         5
      92: lload_1
      93: invokeinterface #20,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      98: return
      99: aload_0
     100: getfield      #8                  // Field missedRequested:Ljava/util/concurrent/atomic/AtomicLong;
     103: lload_1
     104: invokestatic  #30                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
     107: pop2
     108: aload_0
     109: invokevirtual #23                 // Method drain:()V
     112: return

  public final void produced(long);
    Code:
       0: aload_0
       1: getfield      #25                 // Field unbounded:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #14                 // Method get:()I
      12: ifne          76
      15: aload_0
      16: iconst_0
      17: iconst_1
      18: invokevirtual #15                 // Method compareAndSet:(II)Z
      21: ifeq          76
      24: aload_0
      25: getfield      #17                 // Field requested:J
      28: lstore_3
      29: lload_3
      30: ldc2_w        #27                 // long 9223372036854775807l
      33: lcmp
      34: ifeq          63
      37: lload_3
      38: lload_1
      39: lsub
      40: lstore        5
      42: lload         5
      44: lconst_0
      45: lcmp
      46: ifge          57
      49: lload         5
      51: invokestatic  #31                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.reportMoreProduced:(J)V
      54: lconst_0
      55: lstore        5
      57: aload_0
      58: lload         5
      60: putfield      #17                 // Field requested:J
      63: aload_0
      64: invokevirtual #18                 // Method decrementAndGet:()I
      67: ifne          71
      70: return
      71: aload_0
      72: invokevirtual #19                 // Method drainLoop:()V
      75: return
      76: aload_0
      77: getfield      #9                  // Field missedProduced:Ljava/util/concurrent/atomic/AtomicLong;
      80: lload_1
      81: invokestatic  #30                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.add:(Ljava/util/concurrent/atomic/AtomicLong;J)J
      84: pop2
      85: aload_0
      86: invokevirtual #23                 // Method drain:()V
      89: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #10                 // Field cancelled:Z
       4: ifne          16
       7: aload_0
       8: iconst_1
       9: putfield      #10                 // Field cancelled:Z
      12: aload_0
      13: invokevirtual #23                 // Method drain:()V
      16: return

  final void drain();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method getAndIncrement:()I
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #19                 // Method drainLoop:()V
      12: return

  final void drainLoop();
    Code:
       0: iconst_1
       1: istore_1
       2: lconst_0
       3: lstore_2
       4: aconst_null
       5: astore        4
       7: aload_0
       8: getfield      #5                  // Field missedSubscription:Ljava/util/concurrent/atomic/AtomicReference;
      11: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      14: checkcast     #22                 // class org/reactivestreams/Subscription
      17: astore        5
      19: aload         5
      21: ifnull        37
      24: aload_0
      25: getfield      #5                  // Field missedSubscription:Ljava/util/concurrent/atomic/AtomicReference;
      28: aconst_null
      29: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #22                 // class org/reactivestreams/Subscription
      35: astore        5
      37: aload_0
      38: getfield      #8                  // Field missedRequested:Ljava/util/concurrent/atomic/AtomicLong;
      41: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      44: lstore        6
      46: lload         6
      48: lconst_0
      49: lcmp
      50: ifeq          63
      53: aload_0
      54: getfield      #8                  // Field missedRequested:Ljava/util/concurrent/atomic/AtomicLong;
      57: lconst_0
      58: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicLong.getAndSet:(J)J
      61: lstore        6
      63: aload_0
      64: getfield      #9                  // Field missedProduced:Ljava/util/concurrent/atomic/AtomicLong;
      67: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      70: lstore        8
      72: lload         8
      74: lconst_0
      75: lcmp
      76: ifeq          89
      79: aload_0
      80: getfield      #9                  // Field missedProduced:Ljava/util/concurrent/atomic/AtomicLong;
      83: lconst_0
      84: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicLong.getAndSet:(J)J
      87: lstore        8
      89: aload_0
      90: getfield      #16                 // Field actual:Lorg/reactivestreams/Subscription;
      93: astore        10
      95: aload_0
      96: getfield      #10                 // Field cancelled:Z
      99: ifeq          134
     102: aload         10
     104: ifnull        119
     107: aload         10
     109: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     114: aload_0
     115: aconst_null
     116: putfield      #16                 // Field actual:Lorg/reactivestreams/Subscription;
     119: aload         5
     121: ifnull        280
     124: aload         5
     126: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     131: goto          280
     134: aload_0
     135: getfield      #17                 // Field requested:J
     138: lstore        11
     140: lload         11
     142: ldc2_w        #27                 // long 9223372036854775807l
     145: lcmp
     146: ifeq          206
     149: lload         11
     151: lload         6
     153: invokestatic  #29                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.addCap:(JJ)J
     156: lstore        13
     158: lload         13
     160: ldc2_w        #27                 // long 9223372036854775807l
     163: lcmp
     164: ifeq          196
     167: lload         13
     169: lload         8
     171: lsub
     172: lstore        15
     174: lload         15
     176: lconst_0
     177: lcmp
     178: ifge          189
     181: lload         15
     183: invokestatic  #31                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.reportMoreProduced:(J)V
     186: lconst_0
     187: lstore        15
     189: lload         15
     191: lstore        11
     193: goto          200
     196: lload         13
     198: lstore        11
     200: aload_0
     201: lload         11
     203: putfield      #17                 // Field requested:J
     206: aload         5
     208: ifnull        257
     211: aload         10
     213: ifnull        230
     216: aload_0
     217: getfield      #2                  // Field cancelOnReplace:Z
     220: ifeq          230
     223: aload         10
     225: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     230: aload_0
     231: aload         5
     233: putfield      #16                 // Field actual:Lorg/reactivestreams/Subscription;
     236: lload         11
     238: lconst_0
     239: lcmp
     240: ifeq          280
     243: lload_2
     244: lload         11
     246: invokestatic  #29                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.addCap:(JJ)J
     249: lstore_2
     250: aload         5
     252: astore        4
     254: goto          280
     257: aload         10
     259: ifnull        280
     262: lload         6
     264: lconst_0
     265: lcmp
     266: ifeq          280
     269: lload_2
     270: lload         6
     272: invokestatic  #29                 // Method io/reactivex/rxjava3/internal/util/BackpressureHelper.addCap:(JJ)J
     275: lstore_2
     276: aload         10
     278: astore        4
     280: aload_0
     281: iload_1
     282: ineg
     283: invokevirtual #36                 // Method addAndGet:(I)I
     286: istore_1
     287: iload_1
     288: ifne          306
     291: lload_2
     292: lconst_0
     293: lcmp
     294: ifeq          305
     297: aload         4
     299: lload_2
     300: invokeinterface #20,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     305: return
     306: goto          7

  public final boolean isUnbounded();
    Code:
       0: aload_0
       1: getfield      #25                 // Field unbounded:Z
       4: ireturn

  public final boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #10                 // Field cancelled:Z
       4: ireturn
}
