Compiled from "EndConsumerHelper.java"
public final class io.reactivex.rxjava3.internal.util.EndConsumerHelper {
  private io.reactivex.rxjava3.internal.util.EndConsumerHelper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: new           #2                  // class java/lang/IllegalStateException
       7: dup
       8: ldc           #3                  // String No instances!
      10: invokespecial #4                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      13: athrow

  public static boolean validate(io.reactivex.rxjava3.disposables.Disposable, io.reactivex.rxjava3.disposables.Disposable, java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #5                  // String next is null
       3: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: ifnull        30
      11: aload_1
      12: invokeinterface #7,  1            // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      17: aload_0
      18: getstatic     #8                  // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
      21: if_acmpeq     28
      24: aload_2
      25: invokestatic  #9                  // Method reportDoubleSubscription:(Ljava/lang/Class;)V
      28: iconst_0
      29: ireturn
      30: iconst_1
      31: ireturn

  public static boolean setOnce(java.util.concurrent.atomic.AtomicReference<io.reactivex.rxjava3.disposables.Disposable>, io.reactivex.rxjava3.disposables.Disposable, java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #5                  // String next is null
       3: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aconst_null
       9: aload_1
      10: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: ifne          38
      16: aload_1
      17: invokeinterface #7,  1            // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
      22: aload_0
      23: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      26: getstatic     #8                  // Field io/reactivex/rxjava3/internal/disposables/DisposableHelper.DISPOSED:Lio/reactivex/rxjava3/internal/disposables/DisposableHelper;
      29: if_acmpeq     36
      32: aload_2
      33: invokestatic  #9                  // Method reportDoubleSubscription:(Ljava/lang/Class;)V
      36: iconst_0
      37: ireturn
      38: iconst_1
      39: ireturn

  public static boolean validate(org.reactivestreams.Subscription, org.reactivestreams.Subscription, java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #5                  // String next is null
       3: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: ifnull        30
      11: aload_1
      12: invokeinterface #12,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      17: aload_0
      18: getstatic     #13                 // Field io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.CANCELLED:Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;
      21: if_acmpeq     28
      24: aload_2
      25: invokestatic  #9                  // Method reportDoubleSubscription:(Ljava/lang/Class;)V
      28: iconst_0
      29: ireturn
      30: iconst_1
      31: ireturn

  public static boolean setOnce(java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription>, org.reactivestreams.Subscription, java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #5                  // String next is null
       3: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aconst_null
       9: aload_1
      10: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: ifne          38
      16: aload_1
      17: invokeinterface #12,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      22: aload_0
      23: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      26: getstatic     #13                 // Field io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.CANCELLED:Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;
      29: if_acmpeq     36
      32: aload_2
      33: invokestatic  #9                  // Method reportDoubleSubscription:(Ljava/lang/Class;)V
      36: iconst_0
      37: ireturn
      38: iconst_1
      39: ireturn

  public static java.lang.String composeMessage(java.lang.String);
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #16                 // String It is not allowed to subscribe with a(n)
       9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #18                 // String  multiple times. Please create a fresh instance of
      18: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #19                 // String  and subscribe that to the target source instead.
      27: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: areturn

  public static void reportDoubleSubscription(java.lang.Class<?>);
    Code:
       0: new           #21                 // class io/reactivex/rxjava3/exceptions/ProtocolViolationException
       3: dup
       4: aload_0
       5: invokevirtual #22                 // Method java/lang/Class.getName:()Ljava/lang/String;
       8: invokestatic  #23                 // Method composeMessage:(Ljava/lang/String;)Ljava/lang/String;
      11: invokespecial #24                 // Method io/reactivex/rxjava3/exceptions/ProtocolViolationException."<init>":(Ljava/lang/String;)V
      14: invokestatic  #25                 // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      17: return
}
