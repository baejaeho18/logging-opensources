Compiled from "QueueDrainObserver.java"
public abstract class io.reactivex.rxjava3.internal.observers.QueueDrainObserver<T, U, V> extends io.reactivex.rxjava3.internal.observers.QueueDrainSubscriberPad2 implements io.reactivex.rxjava3.core.Observer<T>, io.reactivex.rxjava3.internal.util.ObservableQueueDrain<U, V> {
  protected final io.reactivex.rxjava3.core.Observer<? super V> downstream;

  protected final io.reactivex.rxjava3.operators.SimplePlainQueue<U> queue;

  protected volatile boolean cancelled;

  protected volatile boolean done;

  protected java.lang.Throwable error;

  public io.reactivex.rxjava3.internal.observers.QueueDrainObserver(io.reactivex.rxjava3.core.Observer<? super V>, io.reactivex.rxjava3.operators.SimplePlainQueue<U>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/internal/observers/QueueDrainSubscriberPad2."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      14: return

  public final boolean cancelled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cancelled:Z
       4: ireturn

  public final boolean done();
    Code:
       0: aload_0
       1: getfield      #5                  // Field done:Z
       4: ireturn

  public final boolean enter();
    Code:
       0: aload_0
       1: getfield      #6                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected final void fastPathEmit(U, boolean, io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: astore        4
       6: aload_0
       7: getfield      #3                  // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      10: astore        5
      12: aload_0
      13: getfield      #6                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
      16: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      19: ifne          50
      22: aload_0
      23: getfield      #6                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
      26: iconst_0
      27: iconst_1
      28: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      31: ifeq          50
      34: aload_0
      35: aload         4
      37: aload_1
      38: invokevirtual #10                 // Method accept:(Lio/reactivex/rxjava3/core/Observer;Ljava/lang/Object;)V
      41: aload_0
      42: iconst_m1
      43: invokevirtual #11                 // Method leave:(I)I
      46: ifne          67
      49: return
      50: aload         5
      52: aload_1
      53: invokeinterface #12,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      58: pop
      59: aload_0
      60: invokevirtual #13                 // Method enter:()Z
      63: ifne          67
      66: return
      67: aload         5
      69: aload         4
      71: iload_2
      72: aload_3
      73: aload_0
      74: invokestatic  #14                 // Method io/reactivex/rxjava3/internal/util/QueueDrainHelper.drainLoop:(Lio/reactivex/rxjava3/operators/SimplePlainQueue;Lio/reactivex/rxjava3/core/Observer;ZLio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;)V
      77: return

  protected final void fastPathOrderedEmit(U, boolean, io.reactivex.rxjava3.disposables.Disposable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field downstream:Lio/reactivex/rxjava3/core/Observer;
       4: astore        4
       6: aload_0
       7: getfield      #3                  // Field queue:Lio/reactivex/rxjava3/operators/SimplePlainQueue;
      10: astore        5
      12: aload_0
      13: getfield      #6                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
      16: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      19: ifne          72
      22: aload_0
      23: getfield      #6                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
      26: iconst_0
      27: iconst_1
      28: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      31: ifeq          72
      34: aload         5
      36: invokeinterface #15,  1           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.isEmpty:()Z
      41: ifeq          60
      44: aload_0
      45: aload         4
      47: aload_1
      48: invokevirtual #10                 // Method accept:(Lio/reactivex/rxjava3/core/Observer;Ljava/lang/Object;)V
      51: aload_0
      52: iconst_m1
      53: invokevirtual #11                 // Method leave:(I)I
      56: ifne          89
      59: return
      60: aload         5
      62: aload_1
      63: invokeinterface #12,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      68: pop
      69: goto          89
      72: aload         5
      74: aload_1
      75: invokeinterface #12,  2           // InterfaceMethod io/reactivex/rxjava3/operators/SimplePlainQueue.offer:(Ljava/lang/Object;)Z
      80: pop
      81: aload_0
      82: invokevirtual #13                 // Method enter:()Z
      85: ifne          89
      88: return
      89: aload         5
      91: aload         4
      93: iload_2
      94: aload_3
      95: aload_0
      96: invokestatic  #14                 // Method io/reactivex/rxjava3/internal/util/QueueDrainHelper.drainLoop:(Lio/reactivex/rxjava3/operators/SimplePlainQueue;Lio/reactivex/rxjava3/core/Observer;ZLio/reactivex/rxjava3/disposables/Disposable;Lio/reactivex/rxjava3/internal/util/ObservableQueueDrain;)V
      99: return

  public final java.lang.Throwable error();
    Code:
       0: aload_0
       1: getfield      #16                 // Field error:Ljava/lang/Throwable;
       4: areturn

  public final int leave(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iload_1
       5: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicInteger.addAndGet:(I)I
       8: ireturn

  public void accept(io.reactivex.rxjava3.core.Observer<? super V>, U);
    Code:
       0: return
}
