Compiled from "IoScheduler.java"
final class io.reactivex.rxjava3.internal.schedulers.IoScheduler$CachedWorkerPool implements java.lang.Runnable {
  private final long keepAliveTime;

  private final java.util.concurrent.ConcurrentLinkedQueue<io.reactivex.rxjava3.internal.schedulers.IoScheduler$ThreadWorker> expiringWorkerQueue;

  final io.reactivex.rxjava3.disposables.CompositeDisposable allWorkers;

  private final java.util.concurrent.ScheduledExecutorService evictorService;

  private final java.util.concurrent.Future<?> evictorTask;

  private final java.util.concurrent.ThreadFactory threadFactory;

  io.reactivex.rxjava3.internal.schedulers.IoScheduler$CachedWorkerPool(long, java.util.concurrent.TimeUnit, java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_3
       6: ifnull        17
       9: aload_3
      10: lload_1
      11: invokevirtual #2                  // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      14: goto          18
      17: lconst_0
      18: putfield      #3                  // Field keepAliveTime:J
      21: aload_0
      22: new           #4                  // class java/util/concurrent/ConcurrentLinkedQueue
      25: dup
      26: invokespecial #5                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      29: putfield      #6                  // Field expiringWorkerQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      32: aload_0
      33: new           #7                  // class io/reactivex/rxjava3/disposables/CompositeDisposable
      36: dup
      37: invokespecial #8                  // Method io/reactivex/rxjava3/disposables/CompositeDisposable."<init>":()V
      40: putfield      #9                  // Field allWorkers:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      43: aload_0
      44: aload         4
      46: putfield      #10                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
      49: aconst_null
      50: astore        5
      52: aconst_null
      53: astore        6
      55: aload_3
      56: ifnull        89
      59: iconst_1
      60: getstatic     #11                 // Field io/reactivex/rxjava3/internal/schedulers/IoScheduler.EVICTOR_THREAD_FACTORY:Lio/reactivex/rxjava3/internal/schedulers/RxThreadFactory;
      63: invokestatic  #12                 // Method java/util/concurrent/Executors.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
      66: astore        5
      68: aload         5
      70: aload_0
      71: aload_0
      72: getfield      #3                  // Field keepAliveTime:J
      75: aload_0
      76: getfield      #3                  // Field keepAliveTime:J
      79: getstatic     #13                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      82: invokeinterface #14,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      87: astore        6
      89: aload_0
      90: aload         5
      92: putfield      #15                 // Field evictorService:Ljava/util/concurrent/ScheduledExecutorService;
      95: aload_0
      96: aload         6
      98: putfield      #16                 // Field evictorTask:Ljava/util/concurrent/Future;
     101: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #6                  // Field expiringWorkerQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: aload_0
       5: getfield      #9                  // Field allWorkers:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
       8: invokestatic  #17                 // Method evictExpiredWorkers:(Ljava/util/concurrent/ConcurrentLinkedQueue;Lio/reactivex/rxjava3/disposables/CompositeDisposable;)V
      11: return

  io.reactivex.rxjava3.internal.schedulers.IoScheduler$ThreadWorker get();
    Code:
       0: aload_0
       1: getfield      #9                  // Field allWorkers:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
       4: invokevirtual #18                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.isDisposed:()Z
       7: ifeq          14
      10: getstatic     #19                 // Field io/reactivex/rxjava3/internal/schedulers/IoScheduler.SHUTDOWN_THREAD_WORKER:Lio/reactivex/rxjava3/internal/schedulers/IoScheduler$ThreadWorker;
      13: areturn
      14: aload_0
      15: getfield      #6                  // Field expiringWorkerQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      18: invokevirtual #20                 // Method java/util/concurrent/ConcurrentLinkedQueue.isEmpty:()Z
      21: ifne          44
      24: aload_0
      25: getfield      #6                  // Field expiringWorkerQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      28: invokevirtual #21                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
      31: checkcast     #22                 // class io/reactivex/rxjava3/internal/schedulers/IoScheduler$ThreadWorker
      34: astore_1
      35: aload_1
      36: ifnull        41
      39: aload_1
      40: areturn
      41: goto          14
      44: new           #22                 // class io/reactivex/rxjava3/internal/schedulers/IoScheduler$ThreadWorker
      47: dup
      48: aload_0
      49: getfield      #10                 // Field threadFactory:Ljava/util/concurrent/ThreadFactory;
      52: invokespecial #23                 // Method io/reactivex/rxjava3/internal/schedulers/IoScheduler$ThreadWorker."<init>":(Ljava/util/concurrent/ThreadFactory;)V
      55: astore_1
      56: aload_0
      57: getfield      #9                  // Field allWorkers:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
      60: aload_1
      61: invokevirtual #24                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.add:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      64: pop
      65: aload_1
      66: areturn

  void release(io.reactivex.rxjava3.internal.schedulers.IoScheduler$ThreadWorker);
    Code:
       0: aload_1
       1: invokestatic  #25                 // Method now:()J
       4: aload_0
       5: getfield      #3                  // Field keepAliveTime:J
       8: ladd
       9: invokevirtual #26                 // Method io/reactivex/rxjava3/internal/schedulers/IoScheduler$ThreadWorker.setExpirationTime:(J)V
      12: aload_0
      13: getfield      #6                  // Field expiringWorkerQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      16: aload_1
      17: invokevirtual #27                 // Method java/util/concurrent/ConcurrentLinkedQueue.offer:(Ljava/lang/Object;)Z
      20: pop
      21: return

  static void evictExpiredWorkers(java.util.concurrent.ConcurrentLinkedQueue<io.reactivex.rxjava3.internal.schedulers.IoScheduler$ThreadWorker>, io.reactivex.rxjava3.disposables.CompositeDisposable);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method java/util/concurrent/ConcurrentLinkedQueue.isEmpty:()Z
       4: ifne          68
       7: invokestatic  #25                 // Method now:()J
      10: lstore_2
      11: aload_0
      12: invokevirtual #28                 // Method java/util/concurrent/ConcurrentLinkedQueue.iterator:()Ljava/util/Iterator;
      15: astore        4
      17: aload         4
      19: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          68
      27: aload         4
      29: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #22                 // class io/reactivex/rxjava3/internal/schedulers/IoScheduler$ThreadWorker
      37: astore        5
      39: aload         5
      41: invokevirtual #31                 // Method io/reactivex/rxjava3/internal/schedulers/IoScheduler$ThreadWorker.getExpirationTime:()J
      44: lload_2
      45: lcmp
      46: ifgt          68
      49: aload_0
      50: aload         5
      52: invokevirtual #32                 // Method java/util/concurrent/ConcurrentLinkedQueue.remove:(Ljava/lang/Object;)Z
      55: ifeq          65
      58: aload_1
      59: aload         5
      61: invokevirtual #33                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.remove:(Lio/reactivex/rxjava3/disposables/Disposable;)Z
      64: pop
      65: goto          17
      68: return

  static long now();
    Code:
       0: invokestatic  #34                 // Method java/lang/System.nanoTime:()J
       3: lreturn

  void shutdown();
    Code:
       0: aload_0
       1: getfield      #9                  // Field allWorkers:Lio/reactivex/rxjava3/disposables/CompositeDisposable;
       4: invokevirtual #35                 // Method io/reactivex/rxjava3/disposables/CompositeDisposable.dispose:()V
       7: aload_0
       8: getfield      #16                 // Field evictorTask:Ljava/util/concurrent/Future;
      11: ifnull        25
      14: aload_0
      15: getfield      #16                 // Field evictorTask:Ljava/util/concurrent/Future;
      18: iconst_1
      19: invokeinterface #36,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      24: pop
      25: aload_0
      26: getfield      #15                 // Field evictorService:Ljava/util/concurrent/ScheduledExecutorService;
      29: ifnull        42
      32: aload_0
      33: getfield      #15                 // Field evictorService:Ljava/util/concurrent/ScheduledExecutorService;
      36: invokeinterface #37,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdownNow:()Ljava/util/List;
      41: pop
      42: return
}
