Compiled from "ExecutorScheduler.java"
final class io.reactivex.rxjava3.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable extends java.util.concurrent.atomic.AtomicBoolean implements java.lang.Runnable,io.reactivex.rxjava3.disposables.Disposable {
  private static final long serialVersionUID;

  final java.lang.Runnable actual;

  io.reactivex.rxjava3.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Ljava/lang/Runnable;
       9: return

  public void run();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method get:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #2                  // Field actual:Ljava/lang/Runnable;
      12: invokeinterface #4,  1            // InterfaceMethod java/lang/Runnable.run:()V
      17: aload_0
      18: iconst_1
      19: invokevirtual #5                  // Method lazySet:(Z)V
      22: goto          40
      25: astore_1
      26: aload_1
      27: invokestatic  #7                  // Method io/reactivex/rxjava3/plugins/RxJavaPlugins.onError:(Ljava/lang/Throwable;)V
      30: aload_1
      31: athrow
      32: astore_2
      33: aload_0
      34: iconst_1
      35: invokevirtual #5                  // Method lazySet:(Z)V
      38: aload_2
      39: athrow
      40: return
    Exception table:
       from    to  target type
           8    17    25   Class java/lang/Throwable
           8    17    32   any
          25    33    32   any

  public void dispose();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #5                  // Method lazySet:(Z)V
       5: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method get:()Z
       4: ireturn
}
