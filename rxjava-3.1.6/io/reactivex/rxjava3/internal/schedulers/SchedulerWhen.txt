Compiled from "SchedulerWhen.java"
public class io.reactivex.rxjava3.internal.schedulers.SchedulerWhen extends io.reactivex.rxjava3.core.Scheduler implements io.reactivex.rxjava3.disposables.Disposable {
  private final io.reactivex.rxjava3.core.Scheduler actualScheduler;

  private final io.reactivex.rxjava3.processors.FlowableProcessor<io.reactivex.rxjava3.core.Flowable<io.reactivex.rxjava3.core.Completable>> workerProcessor;

  private io.reactivex.rxjava3.disposables.Disposable disposable;

  static final io.reactivex.rxjava3.disposables.Disposable SUBSCRIBED;

  static final io.reactivex.rxjava3.disposables.Disposable DISPOSED;

  public io.reactivex.rxjava3.internal.schedulers.SchedulerWhen(io.reactivex.rxjava3.functions.Function<io.reactivex.rxjava3.core.Flowable<io.reactivex.rxjava3.core.Flowable<io.reactivex.rxjava3.core.Completable>>, io.reactivex.rxjava3.core.Completable>, io.reactivex.rxjava3.core.Scheduler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/core/Scheduler."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field actualScheduler:Lio/reactivex/rxjava3/core/Scheduler;
       9: aload_0
      10: invokestatic  #3                  // Method io/reactivex/rxjava3/processors/UnicastProcessor.create:()Lio/reactivex/rxjava3/processors/UnicastProcessor;
      13: invokevirtual #4                  // Method io/reactivex/rxjava3/processors/UnicastProcessor.toSerialized:()Lio/reactivex/rxjava3/processors/FlowableProcessor;
      16: putfield      #5                  // Field workerProcessor:Lio/reactivex/rxjava3/processors/FlowableProcessor;
      19: aload_0
      20: aload_1
      21: aload_0
      22: getfield      #5                  // Field workerProcessor:Lio/reactivex/rxjava3/processors/FlowableProcessor;
      25: invokeinterface #6,  2            // InterfaceMethod io/reactivex/rxjava3/functions/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #7                  // class io/reactivex/rxjava3/core/Completable
      33: invokevirtual #8                  // Method io/reactivex/rxjava3/core/Completable.subscribe:()Lio/reactivex/rxjava3/disposables/Disposable;
      36: putfield      #9                  // Field disposable:Lio/reactivex/rxjava3/disposables/Disposable;
      39: goto          48
      42: astore_3
      43: aload_3
      44: invokestatic  #11                 // Method io/reactivex/rxjava3/internal/util/ExceptionHelper.wrapOrThrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      47: athrow
      48: return
    Exception table:
       from    to  target type
          19    39    42   Class java/lang/Throwable

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #9                  // Field disposable:Lio/reactivex/rxjava3/disposables/Disposable;
       4: invokeinterface #12,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.dispose:()V
       9: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #9                  // Field disposable:Lio/reactivex/rxjava3/disposables/Disposable;
       4: invokeinterface #13,  1           // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.isDisposed:()Z
       9: ireturn

  public io.reactivex.rxjava3.core.Scheduler$Worker createWorker();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actualScheduler:Lio/reactivex/rxjava3/core/Scheduler;
       4: invokevirtual #14                 // Method io/reactivex/rxjava3/core/Scheduler.createWorker:()Lio/reactivex/rxjava3/core/Scheduler$Worker;
       7: astore_1
       8: invokestatic  #15                 // Method io/reactivex/rxjava3/processors/UnicastProcessor.create:()Lio/reactivex/rxjava3/processors/UnicastProcessor;
      11: invokevirtual #4                  // Method io/reactivex/rxjava3/processors/UnicastProcessor.toSerialized:()Lio/reactivex/rxjava3/processors/FlowableProcessor;
      14: astore_2
      15: aload_2
      16: new           #16                 // class io/reactivex/rxjava3/internal/schedulers/SchedulerWhen$CreateWorkerFunction
      19: dup
      20: aload_1
      21: invokespecial #17                 // Method io/reactivex/rxjava3/internal/schedulers/SchedulerWhen$CreateWorkerFunction."<init>":(Lio/reactivex/rxjava3/core/Scheduler$Worker;)V
      24: invokevirtual #18                 // Method io/reactivex/rxjava3/processors/FlowableProcessor.map:(Lio/reactivex/rxjava3/functions/Function;)Lio/reactivex/rxjava3/core/Flowable;
      27: astore_3
      28: new           #19                 // class io/reactivex/rxjava3/internal/schedulers/SchedulerWhen$QueueWorker
      31: dup
      32: aload_2
      33: aload_1
      34: invokespecial #20                 // Method io/reactivex/rxjava3/internal/schedulers/SchedulerWhen$QueueWorker."<init>":(Lio/reactivex/rxjava3/processors/FlowableProcessor;Lio/reactivex/rxjava3/core/Scheduler$Worker;)V
      37: astore        4
      39: aload_0
      40: getfield      #5                  // Field workerProcessor:Lio/reactivex/rxjava3/processors/FlowableProcessor;
      43: aload_3
      44: invokevirtual #21                 // Method io/reactivex/rxjava3/processors/FlowableProcessor.onNext:(Ljava/lang/Object;)V
      47: aload         4
      49: areturn

  static {};
    Code:
       0: new           #22                 // class io/reactivex/rxjava3/internal/schedulers/SchedulerWhen$SubscribedDisposable
       3: dup
       4: invokespecial #23                 // Method io/reactivex/rxjava3/internal/schedulers/SchedulerWhen$SubscribedDisposable."<init>":()V
       7: putstatic     #24                 // Field SUBSCRIBED:Lio/reactivex/rxjava3/disposables/Disposable;
      10: invokestatic  #25                 // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.disposed:()Lio/reactivex/rxjava3/disposables/Disposable;
      13: putstatic     #26                 // Field DISPOSED:Lio/reactivex/rxjava3/disposables/Disposable;
      16: return
}
