Compiled from "TrampolineScheduler.java"
final class io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler$TrampolineWorker extends io.reactivex.rxjava3.core.Scheduler$Worker {
  final java.util.concurrent.PriorityBlockingQueue<io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler$TimedRunnable> queue;

  private final java.util.concurrent.atomic.AtomicInteger wip;

  final java.util.concurrent.atomic.AtomicInteger counter;

  volatile boolean disposed;

  io.reactivex.rxjava3.internal.schedulers.TrampolineScheduler$TrampolineWorker();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/rxjava3/core/Scheduler$Worker."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/PriorityBlockingQueue
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/PriorityBlockingQueue."<init>":()V
      12: putfield      #4                  // Field queue:Ljava/util/concurrent/PriorityBlockingQueue;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicInteger
      19: dup
      20: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      23: putfield      #7                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
      26: aload_0
      27: new           #5                  // class java/util/concurrent/atomic/AtomicInteger
      30: dup
      31: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      34: putfield      #8                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      37: return

  public io.reactivex.rxjava3.disposables.Disposable schedule(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getstatic     #9                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       6: invokevirtual #10                 // Method now:(Ljava/util/concurrent/TimeUnit;)J
       9: invokevirtual #11                 // Method enqueue:(Ljava/lang/Runnable;J)Lio/reactivex/rxjava3/disposables/Disposable;
      12: areturn

  public io.reactivex.rxjava3.disposables.Disposable schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getstatic     #9                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       4: invokevirtual #10                 // Method now:(Ljava/util/concurrent/TimeUnit;)J
       7: aload         4
       9: lload_2
      10: invokevirtual #12                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      13: ladd
      14: lstore        5
      16: aload_0
      17: new           #13                 // class io/reactivex/rxjava3/internal/schedulers/TrampolineScheduler$SleepingRunnable
      20: dup
      21: aload_1
      22: aload_0
      23: lload         5
      25: invokespecial #14                 // Method io/reactivex/rxjava3/internal/schedulers/TrampolineScheduler$SleepingRunnable."<init>":(Ljava/lang/Runnable;Lio/reactivex/rxjava3/internal/schedulers/TrampolineScheduler$TrampolineWorker;J)V
      28: lload         5
      30: invokevirtual #11                 // Method enqueue:(Ljava/lang/Runnable;J)Lio/reactivex/rxjava3/disposables/Disposable;
      33: areturn

  io.reactivex.rxjava3.disposables.Disposable enqueue(java.lang.Runnable, long);
    Code:
       0: aload_0
       1: getfield      #15                 // Field disposed:Z
       4: ifeq          11
       7: getstatic     #16                 // Field io/reactivex/rxjava3/internal/disposables/EmptyDisposable.INSTANCE:Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;
      10: areturn
      11: new           #17                 // class io/reactivex/rxjava3/internal/schedulers/TrampolineScheduler$TimedRunnable
      14: dup
      15: aload_1
      16: lload_2
      17: invokestatic  #18                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      20: aload_0
      21: getfield      #8                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      24: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      27: invokespecial #20                 // Method io/reactivex/rxjava3/internal/schedulers/TrampolineScheduler$TimedRunnable."<init>":(Ljava/lang/Runnable;Ljava/lang/Long;I)V
      30: astore        4
      32: aload_0
      33: getfield      #4                  // Field queue:Ljava/util/concurrent/PriorityBlockingQueue;
      36: aload         4
      38: invokevirtual #21                 // Method java/util/concurrent/PriorityBlockingQueue.add:(Ljava/lang/Object;)Z
      41: pop
      42: aload_0
      43: getfield      #7                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
      46: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      49: ifne          138
      52: iconst_1
      53: istore        5
      55: aload_0
      56: getfield      #15                 // Field disposed:Z
      59: ifeq          73
      62: aload_0
      63: getfield      #4                  // Field queue:Ljava/util/concurrent/PriorityBlockingQueue;
      66: invokevirtual #23                 // Method java/util/concurrent/PriorityBlockingQueue.clear:()V
      69: getstatic     #16                 // Field io/reactivex/rxjava3/internal/disposables/EmptyDisposable.INSTANCE:Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;
      72: areturn
      73: aload_0
      74: getfield      #4                  // Field queue:Ljava/util/concurrent/PriorityBlockingQueue;
      77: invokevirtual #24                 // Method java/util/concurrent/PriorityBlockingQueue.poll:()Ljava/lang/Object;
      80: checkcast     #17                 // class io/reactivex/rxjava3/internal/schedulers/TrampolineScheduler$TimedRunnable
      83: astore        6
      85: aload         6
      87: ifnonnull     93
      90: goto          114
      93: aload         6
      95: getfield      #25                 // Field io/reactivex/rxjava3/internal/schedulers/TrampolineScheduler$TimedRunnable.disposed:Z
      98: ifne          111
     101: aload         6
     103: getfield      #26                 // Field io/reactivex/rxjava3/internal/schedulers/TrampolineScheduler$TimedRunnable.run:Ljava/lang/Runnable;
     106: invokeinterface #27,  1           // InterfaceMethod java/lang/Runnable.run:()V
     111: goto          55
     114: aload_0
     115: getfield      #7                  // Field wip:Ljava/util/concurrent/atomic/AtomicInteger;
     118: iload         5
     120: ineg
     121: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicInteger.addAndGet:(I)I
     124: istore        5
     126: iload         5
     128: ifne          55
     131: goto          134
     134: getstatic     #16                 // Field io/reactivex/rxjava3/internal/disposables/EmptyDisposable.INSTANCE:Lio/reactivex/rxjava3/internal/disposables/EmptyDisposable;
     137: areturn
     138: new           #29                 // class io/reactivex/rxjava3/internal/schedulers/TrampolineScheduler$TrampolineWorker$AppendToQueueTask
     141: dup
     142: aload_0
     143: aload         4
     145: invokespecial #30                 // Method io/reactivex/rxjava3/internal/schedulers/TrampolineScheduler$TrampolineWorker$AppendToQueueTask."<init>":(Lio/reactivex/rxjava3/internal/schedulers/TrampolineScheduler$TrampolineWorker;Lio/reactivex/rxjava3/internal/schedulers/TrampolineScheduler$TimedRunnable;)V
     148: invokestatic  #31                 // InterfaceMethod io/reactivex/rxjava3/disposables/Disposable.fromRunnable:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/disposables/Disposable;
     151: areturn

  public void dispose();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #15                 // Field disposed:Z
       5: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #15                 // Field disposed:Z
       4: ireturn
}
