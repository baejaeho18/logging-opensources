Compiled from "TestSubscriber.java"
public class io.reactivex.rxjava3.subscribers.TestSubscriber<T> extends io.reactivex.rxjava3.observers.BaseTestConsumer<T, io.reactivex.rxjava3.subscribers.TestSubscriber<T>> implements io.reactivex.rxjava3.core.FlowableSubscriber<T>, org.reactivestreams.Subscription {
  private final org.reactivestreams.Subscriber<? super T> downstream;

  private volatile boolean cancelled;

  private final java.util.concurrent.atomic.AtomicReference<org.reactivestreams.Subscription> upstream;

  private final java.util.concurrent.atomic.AtomicLong missedRequested;

  public static <T> io.reactivex.rxjava3.subscribers.TestSubscriber<T> create();
    Code:
       0: new           #1                  // class io/reactivex/rxjava3/subscribers/TestSubscriber
       3: dup
       4: invokespecial #2                  // Method "<init>":()V
       7: areturn

  public static <T> io.reactivex.rxjava3.subscribers.TestSubscriber<T> create(long);
    Code:
       0: new           #1                  // class io/reactivex/rxjava3/subscribers/TestSubscriber
       3: dup
       4: lload_0
       5: invokespecial #3                  // Method "<init>":(J)V
       8: areturn

  public static <T> io.reactivex.rxjava3.subscribers.TestSubscriber<T> create(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: new           #1                  // class io/reactivex/rxjava3/subscribers/TestSubscriber
       3: dup
       4: aload_0
       5: invokespecial #4                  // Method "<init>":(Lorg/reactivestreams/Subscriber;)V
       8: areturn

  public io.reactivex.rxjava3.subscribers.TestSubscriber();
    Code:
       0: aload_0
       1: getstatic     #5                  // Field io/reactivex/rxjava3/subscribers/TestSubscriber$EmptySubscriber.INSTANCE:Lio/reactivex/rxjava3/subscribers/TestSubscriber$EmptySubscriber;
       4: ldc2_w        #7                  // long 9223372036854775807l
       7: invokespecial #9                  // Method "<init>":(Lorg/reactivestreams/Subscriber;J)V
      10: return

  public io.reactivex.rxjava3.subscribers.TestSubscriber(long);
    Code:
       0: aload_0
       1: getstatic     #5                  // Field io/reactivex/rxjava3/subscribers/TestSubscriber$EmptySubscriber.INSTANCE:Lio/reactivex/rxjava3/subscribers/TestSubscriber$EmptySubscriber;
       4: lload_1
       5: invokespecial #9                  // Method "<init>":(Lorg/reactivestreams/Subscriber;J)V
       8: return

  public io.reactivex.rxjava3.subscribers.TestSubscriber(org.reactivestreams.Subscriber<? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #7                  // long 9223372036854775807l
       5: invokespecial #9                  // Method "<init>":(Lorg/reactivestreams/Subscriber;J)V
       8: return

  public io.reactivex.rxjava3.subscribers.TestSubscriber(org.reactivestreams.Subscriber<? super T>, long);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method io/reactivex/rxjava3/observers/BaseTestConsumer."<init>":()V
       4: lload_2
       5: lconst_0
       6: lcmp
       7: ifge          20
      10: new           #11                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #12                 // String Negative initial request not allowed
      16: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: aload_1
      22: putfield      #14                 // Field downstream:Lorg/reactivestreams/Subscriber;
      25: aload_0
      26: new           #15                 // class java/util/concurrent/atomic/AtomicReference
      29: dup
      30: invokespecial #16                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      33: putfield      #17                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      36: aload_0
      37: new           #18                 // class java/util/concurrent/atomic/AtomicLong
      40: dup
      41: lload_2
      42: invokespecial #19                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      45: putfield      #20                 // Field missedRequested:Ljava/util/concurrent/atomic/AtomicLong;
      48: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: putfield      #22                 // Field lastThread:Ljava/lang/Thread;
       7: aload_1
       8: ifnonnull     31
      11: aload_0
      12: getfield      #23                 // Field errors:Ljava/util/List;
      15: new           #24                 // class java/lang/NullPointerException
      18: dup
      19: ldc           #25                 // String onSubscribe received a null Subscription
      21: invokespecial #26                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      24: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: return
      31: aload_0
      32: getfield      #17                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      35: aconst_null
      36: aload_1
      37: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      40: ifne          99
      43: aload_1
      44: invokeinterface #29,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      49: aload_0
      50: getfield      #17                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      53: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      56: getstatic     #31                 // Field io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.CANCELLED:Lio/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper;
      59: if_acmpeq     98
      62: aload_0
      63: getfield      #23                 // Field errors:Ljava/util/List;
      66: new           #32                 // class java/lang/IllegalStateException
      69: dup
      70: new           #33                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      77: ldc           #35                 // String onSubscribe received multiple subscriptions:
      79: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_1
      83: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      92: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      97: pop
      98: return
      99: aload_0
     100: getfield      #14                 // Field downstream:Lorg/reactivestreams/Subscriber;
     103: aload_1
     104: invokeinterface #40,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
     109: aload_0
     110: getfield      #20                 // Field missedRequested:Ljava/util/concurrent/atomic/AtomicLong;
     113: lconst_0
     114: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicLong.getAndSet:(J)J
     117: lstore_2
     118: lload_2
     119: lconst_0
     120: lcmp
     121: ifeq          131
     124: aload_1
     125: lload_2
     126: invokeinterface #42,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     131: aload_0
     132: invokevirtual #43                 // Method onStart:()V
     135: return

  protected void onStart();
    Code:
       0: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #44                 // Field checkSubscriptionOnce:Z
       4: ifne          41
       7: aload_0
       8: iconst_1
       9: putfield      #44                 // Field checkSubscriptionOnce:Z
      12: aload_0
      13: getfield      #17                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      16: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      19: ifnonnull     41
      22: aload_0
      23: getfield      #23                 // Field errors:Ljava/util/List;
      26: new           #32                 // class java/lang/IllegalStateException
      29: dup
      30: ldc           #45                 // String onSubscribe not called in proper order
      32: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      35: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: aload_0
      42: invokestatic  #21                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      45: putfield      #22                 // Field lastThread:Ljava/lang/Thread;
      48: aload_0
      49: getfield      #46                 // Field values:Ljava/util/List;
      52: aload_1
      53: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_1
      60: ifnonnull     82
      63: aload_0
      64: getfield      #23                 // Field errors:Ljava/util/List;
      67: new           #24                 // class java/lang/NullPointerException
      70: dup
      71: ldc           #47                 // String onNext received a null value
      73: invokespecial #26                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      76: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      81: pop
      82: aload_0
      83: getfield      #14                 // Field downstream:Lorg/reactivestreams/Subscriber;
      86: aload_1
      87: invokeinterface #48,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      92: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #44                 // Field checkSubscriptionOnce:Z
       4: ifne          41
       7: aload_0
       8: iconst_1
       9: putfield      #44                 // Field checkSubscriptionOnce:Z
      12: aload_0
      13: getfield      #17                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      16: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      19: ifnonnull     41
      22: aload_0
      23: getfield      #23                 // Field errors:Ljava/util/List;
      26: new           #32                 // class java/lang/IllegalStateException
      29: dup
      30: ldc           #45                 // String onSubscribe not called in proper order
      32: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      35: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: aload_0
      42: invokestatic  #21                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      45: putfield      #22                 // Field lastThread:Ljava/lang/Thread;
      48: aload_1
      49: ifnonnull     74
      52: aload_0
      53: getfield      #23                 // Field errors:Ljava/util/List;
      56: new           #24                 // class java/lang/NullPointerException
      59: dup
      60: ldc           #49                 // String onError received a null Throwable
      62: invokespecial #26                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      65: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: goto          85
      74: aload_0
      75: getfield      #23                 // Field errors:Ljava/util/List;
      78: aload_1
      79: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      84: pop
      85: aload_0
      86: getfield      #14                 // Field downstream:Lorg/reactivestreams/Subscriber;
      89: aload_1
      90: invokeinterface #50,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      95: aload_0
      96: getfield      #51                 // Field done:Ljava/util/concurrent/CountDownLatch;
      99: invokevirtual #52                 // Method java/util/concurrent/CountDownLatch.countDown:()V
     102: goto          115
     105: astore_2
     106: aload_0
     107: getfield      #51                 // Field done:Ljava/util/concurrent/CountDownLatch;
     110: invokevirtual #52                 // Method java/util/concurrent/CountDownLatch.countDown:()V
     113: aload_2
     114: athrow
     115: return
    Exception table:
       from    to  target type
          41    95   105   any

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #44                 // Field checkSubscriptionOnce:Z
       4: ifne          41
       7: aload_0
       8: iconst_1
       9: putfield      #44                 // Field checkSubscriptionOnce:Z
      12: aload_0
      13: getfield      #17                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      16: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      19: ifnonnull     41
      22: aload_0
      23: getfield      #23                 // Field errors:Ljava/util/List;
      26: new           #32                 // class java/lang/IllegalStateException
      29: dup
      30: ldc           #45                 // String onSubscribe not called in proper order
      32: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      35: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: aload_0
      42: invokestatic  #21                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      45: putfield      #22                 // Field lastThread:Ljava/lang/Thread;
      48: aload_0
      49: dup
      50: getfield      #53                 // Field completions:J
      53: lconst_1
      54: ladd
      55: putfield      #53                 // Field completions:J
      58: aload_0
      59: getfield      #14                 // Field downstream:Lorg/reactivestreams/Subscriber;
      62: invokeinterface #54,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      67: aload_0
      68: getfield      #51                 // Field done:Ljava/util/concurrent/CountDownLatch;
      71: invokevirtual #52                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      74: goto          87
      77: astore_1
      78: aload_0
      79: getfield      #51                 // Field done:Ljava/util/concurrent/CountDownLatch;
      82: invokevirtual #52                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      85: aload_1
      86: athrow
      87: return
    Exception table:
       from    to  target type
          41    67    77   any

  public final void request(long);
    Code:
       0: aload_0
       1: getfield      #17                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_0
       5: getfield      #20                 // Field missedRequested:Ljava/util/concurrent/atomic/AtomicLong;
       8: lload_1
       9: invokestatic  #55                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.deferredRequest:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicLong;J)V
      12: return

  public final void cancel();
    Code:
       0: aload_0
       1: getfield      #56                 // Field cancelled:Z
       4: ifne          20
       7: aload_0
       8: iconst_1
       9: putfield      #56                 // Field cancelled:Z
      12: aload_0
      13: getfield      #17                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
      16: invokestatic  #57                 // Method io/reactivex/rxjava3/internal/subscriptions/SubscriptionHelper.cancel:(Ljava/util/concurrent/atomic/AtomicReference;)Z
      19: pop
      20: return

  public final boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #56                 // Field cancelled:Z
       4: ireturn

  protected final void dispose();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method cancel:()V
       4: return

  protected final boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #56                 // Field cancelled:Z
       4: ireturn

  public final boolean hasSubscription();
    Code:
       0: aload_0
       1: getfield      #17                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected final io.reactivex.rxjava3.subscribers.TestSubscriber<T> assertSubscribed();
    Code:
       0: aload_0
       1: getfield      #17                 // Field upstream:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnonnull     17
      10: aload_0
      11: ldc           #59                 // String Not subscribed!
      13: invokevirtual #60                 // Method fail:(Ljava/lang/String;)Ljava/lang/AssertionError;
      16: athrow
      17: aload_0
      18: areturn

  public final io.reactivex.rxjava3.subscribers.TestSubscriber<T> requestMore(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #61                 // Method request:(J)V
       5: aload_0
       6: areturn

  protected io.reactivex.rxjava3.observers.BaseTestConsumer assertSubscribed();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method assertSubscribed:()Lio/reactivex/rxjava3/subscribers/TestSubscriber;
       4: areturn
}
