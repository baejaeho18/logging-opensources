Compiled from "SpscLinkedArrayQueue.java"
public final class io.reactivex.rxjava3.operators.SpscLinkedArrayQueue<T> implements io.reactivex.rxjava3.operators.SimplePlainQueue<T> {
  static final int MAX_LOOK_AHEAD_STEP;

  final java.util.concurrent.atomic.AtomicLong producerIndex;

  int producerLookAheadStep;

  long producerLookAhead;

  final int producerMask;

  java.util.concurrent.atomic.AtomicReferenceArray<java.lang.Object> producerBuffer;

  final int consumerMask;

  java.util.concurrent.atomic.AtomicReferenceArray<java.lang.Object> consumerBuffer;

  final java.util.concurrent.atomic.AtomicLong consumerIndex;

  private static final java.lang.Object HAS_NEXT;

  public io.reactivex.rxjava3.operators.SpscLinkedArrayQueue(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #4                  // Field producerIndex:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/atomic/AtomicLong
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      23: putfield      #5                  // Field consumerIndex:Ljava/util/concurrent/atomic/AtomicLong;
      26: bipush        8
      28: iload_1
      29: invokestatic  #6                  // Method java/lang/Math.max:(II)I
      32: invokestatic  #7                  // Method io/reactivex/rxjava3/internal/util/Pow2.roundToPowerOfTwo:(I)I
      35: istore_2
      36: iload_2
      37: iconst_1
      38: isub
      39: istore_3
      40: new           #8                  // class java/util/concurrent/atomic/AtomicReferenceArray
      43: dup
      44: iload_2
      45: iconst_1
      46: iadd
      47: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":(I)V
      50: astore        4
      52: aload_0
      53: aload         4
      55: putfield      #10                 // Field producerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      58: aload_0
      59: iload_3
      60: putfield      #11                 // Field producerMask:I
      63: aload_0
      64: iload_2
      65: invokespecial #12                 // Method adjustLookAheadStep:(I)V
      68: aload_0
      69: aload         4
      71: putfield      #13                 // Field consumerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      74: aload_0
      75: iload_3
      76: putfield      #14                 // Field consumerMask:I
      79: aload_0
      80: iload_3
      81: iconst_1
      82: isub
      83: i2l
      84: putfield      #15                 // Field producerLookAhead:J
      87: aload_0
      88: lconst_0
      89: invokespecial #16                 // Method soProducerIndex:(J)V
      92: return

  public boolean offer(T);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     15
       5: new           #17                 // class java/lang/NullPointerException
       8: dup
       9: ldc           #18                 // String Null is not a valid element
      11: invokespecial #19                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: getfield      #10                 // Field producerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      19: astore_2
      20: aload_0
      21: invokespecial #20                 // Method lpProducerIndex:()J
      24: lstore_3
      25: aload_0
      26: getfield      #11                 // Field producerMask:I
      29: istore        5
      31: lload_3
      32: iload         5
      34: invokestatic  #21                 // Method calcWrappedOffset:(JI)I
      37: istore        6
      39: lload_3
      40: aload_0
      41: getfield      #15                 // Field producerLookAhead:J
      44: lcmp
      45: ifge          58
      48: aload_0
      49: aload_2
      50: aload_1
      51: lload_3
      52: iload         6
      54: invokespecial #22                 // Method writeToQueue:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/lang/Object;JI)Z
      57: ireturn
      58: aload_0
      59: getfield      #23                 // Field producerLookAheadStep:I
      62: istore        7
      64: lload_3
      65: iload         7
      67: i2l
      68: ladd
      69: iload         5
      71: invokestatic  #21                 // Method calcWrappedOffset:(JI)I
      74: istore        8
      76: aconst_null
      77: aload_2
      78: iload         8
      80: invokestatic  #24                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      83: if_acmpne     107
      86: aload_0
      87: lload_3
      88: iload         7
      90: i2l
      91: ladd
      92: lconst_1
      93: lsub
      94: putfield      #15                 // Field producerLookAhead:J
      97: aload_0
      98: aload_2
      99: aload_1
     100: lload_3
     101: iload         6
     103: invokespecial #22                 // Method writeToQueue:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/lang/Object;JI)Z
     106: ireturn
     107: aconst_null
     108: aload_2
     109: lload_3
     110: lconst_1
     111: ladd
     112: iload         5
     114: invokestatic  #21                 // Method calcWrappedOffset:(JI)I
     117: invokestatic  #24                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
     120: if_acmpne     133
     123: aload_0
     124: aload_2
     125: aload_1
     126: lload_3
     127: iload         6
     129: invokespecial #22                 // Method writeToQueue:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/lang/Object;JI)Z
     132: ireturn
     133: aload_0
     134: aload_2
     135: lload_3
     136: iload         6
     138: aload_1
     139: iload         5
     141: i2l
     142: invokespecial #25                 // Method resize:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JILjava/lang/Object;J)V
     145: iconst_1
     146: ireturn

  private boolean writeToQueue(java.util.concurrent.atomic.AtomicReferenceArray<java.lang.Object>, T, long, int);
    Code:
       0: aload_1
       1: iload         5
       3: aload_2
       4: invokestatic  #26                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
       7: aload_0
       8: lload_3
       9: lconst_1
      10: ladd
      11: invokespecial #16                 // Method soProducerIndex:(J)V
      14: iconst_1
      15: ireturn

  private void resize(java.util.concurrent.atomic.AtomicReferenceArray<java.lang.Object>, long, int, T, long);
    Code:
       0: aload_1
       1: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicReferenceArray.length:()I
       4: istore        8
       6: new           #8                  // class java/util/concurrent/atomic/AtomicReferenceArray
       9: dup
      10: iload         8
      12: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":(I)V
      15: astore        9
      17: aload_0
      18: aload         9
      20: putfield      #10                 // Field producerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      23: aload_0
      24: lload_2
      25: lload         6
      27: ladd
      28: lconst_1
      29: lsub
      30: putfield      #15                 // Field producerLookAhead:J
      33: aload         9
      35: iload         4
      37: aload         5
      39: invokestatic  #26                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      42: aload_0
      43: aload_1
      44: aload         9
      46: invokespecial #28                 // Method soNext:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/util/concurrent/atomic/AtomicReferenceArray;)V
      49: aload_1
      50: iload         4
      52: getstatic     #29                 // Field HAS_NEXT:Ljava/lang/Object;
      55: invokestatic  #26                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      58: aload_0
      59: lload_2
      60: lconst_1
      61: ladd
      62: invokespecial #16                 // Method soProducerIndex:(J)V
      65: return

  private void soNext(java.util.concurrent.atomic.AtomicReferenceArray<java.lang.Object>, java.util.concurrent.atomic.AtomicReferenceArray<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_1
       2: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicReferenceArray.length:()I
       5: iconst_1
       6: isub
       7: invokestatic  #30                 // Method calcDirectOffset:(I)I
      10: aload_2
      11: invokestatic  #26                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      14: return

  private java.util.concurrent.atomic.AtomicReferenceArray<java.lang.Object> lvNextBufferAndUnlink(java.util.concurrent.atomic.AtomicReferenceArray<java.lang.Object>, int);
    Code:
       0: iload_2
       1: invokestatic  #30                 // Method calcDirectOffset:(I)I
       4: istore_3
       5: aload_1
       6: iload_3
       7: invokestatic  #24                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      10: checkcast     #8                  // class java/util/concurrent/atomic/AtomicReferenceArray
      13: astore        4
      15: aload_1
      16: iload_3
      17: aconst_null
      18: invokestatic  #26                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      21: aload         4
      23: areturn

  public T poll();
    Code:
       0: aload_0
       1: getfield      #13                 // Field consumerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore_1
       5: aload_0
       6: invokespecial #31                 // Method lpConsumerIndex:()J
       9: lstore_2
      10: aload_0
      11: getfield      #14                 // Field consumerMask:I
      14: istore        4
      16: lload_2
      17: iload         4
      19: invokestatic  #21                 // Method calcWrappedOffset:(JI)I
      22: istore        5
      24: aload_1
      25: iload         5
      27: invokestatic  #24                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      30: astore        6
      32: aload         6
      34: getstatic     #29                 // Field HAS_NEXT:Ljava/lang/Object;
      37: if_acmpne     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: istore        7
      47: aconst_null
      48: aload         6
      50: if_acmpeq     75
      53: iload         7
      55: ifne          75
      58: aload_1
      59: iload         5
      61: aconst_null
      62: invokestatic  #26                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      65: aload_0
      66: lload_2
      67: lconst_1
      68: ladd
      69: invokespecial #32                 // Method soConsumerIndex:(J)V
      72: aload         6
      74: areturn
      75: iload         7
      77: ifeq          97
      80: aload_0
      81: aload_0
      82: aload_1
      83: iload         4
      85: iconst_1
      86: iadd
      87: invokespecial #33                 // Method lvNextBufferAndUnlink:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/util/concurrent/atomic/AtomicReferenceArray;
      90: lload_2
      91: iload         4
      93: invokespecial #34                 // Method newBufferPoll:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JI)Ljava/lang/Object;
      96: areturn
      97: aconst_null
      98: areturn

  private T newBufferPoll(java.util.concurrent.atomic.AtomicReferenceArray<java.lang.Object>, long, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field consumerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       5: lload_2
       6: iload         4
       8: invokestatic  #21                 // Method calcWrappedOffset:(JI)I
      11: istore        5
      13: aload_1
      14: iload         5
      16: invokestatic  #24                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      19: astore        6
      21: aconst_null
      22: aload         6
      24: if_acmpeq     41
      27: aload_1
      28: iload         5
      30: aconst_null
      31: invokestatic  #26                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      34: aload_0
      35: lload_2
      36: lconst_1
      37: ladd
      38: invokespecial #32                 // Method soConsumerIndex:(J)V
      41: aload         6
      43: areturn

  public T peek();
    Code:
       0: aload_0
       1: getfield      #13                 // Field consumerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore_1
       5: aload_0
       6: invokespecial #31                 // Method lpConsumerIndex:()J
       9: lstore_2
      10: aload_0
      11: getfield      #14                 // Field consumerMask:I
      14: istore        4
      16: lload_2
      17: iload         4
      19: invokestatic  #21                 // Method calcWrappedOffset:(JI)I
      22: istore        5
      24: aload_1
      25: iload         5
      27: invokestatic  #24                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      30: astore        6
      32: aload         6
      34: getstatic     #29                 // Field HAS_NEXT:Ljava/lang/Object;
      37: if_acmpne     57
      40: aload_0
      41: aload_0
      42: aload_1
      43: iload         4
      45: iconst_1
      46: iadd
      47: invokespecial #33                 // Method lvNextBufferAndUnlink:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/util/concurrent/atomic/AtomicReferenceArray;
      50: lload_2
      51: iload         4
      53: invokespecial #35                 // Method newBufferPeek:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JI)Ljava/lang/Object;
      56: areturn
      57: aload         6
      59: areturn

  private T newBufferPeek(java.util.concurrent.atomic.AtomicReferenceArray<java.lang.Object>, long, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field consumerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       5: lload_2
       6: iload         4
       8: invokestatic  #21                 // Method calcWrappedOffset:(JI)I
      11: istore        5
      13: aload_1
      14: iload         5
      16: invokestatic  #24                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      19: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method poll:()Ljava/lang/Object;
       4: ifnonnull     0
       7: aload_0
       8: invokevirtual #37                 // Method isEmpty:()Z
      11: ifne          17
      14: goto          0
      17: return

  public int size();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method lvConsumerIndex:()J
       4: lstore_1
       5: lload_1
       6: lstore_3
       7: aload_0
       8: invokespecial #39                 // Method lvProducerIndex:()J
      11: lstore        5
      13: aload_0
      14: invokespecial #38                 // Method lvConsumerIndex:()J
      17: lstore_1
      18: lload_3
      19: lload_1
      20: lcmp
      21: ifne          30
      24: lload         5
      26: lload_1
      27: lsub
      28: l2i
      29: ireturn
      30: goto          5

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method lvProducerIndex:()J
       4: aload_0
       5: invokespecial #38                 // Method lvConsumerIndex:()J
       8: lcmp
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private void adjustLookAheadStep(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_4
       3: idiv
       4: getstatic     #40                 // Field MAX_LOOK_AHEAD_STEP:I
       7: invokestatic  #41                 // Method java/lang/Math.min:(II)I
      10: putfield      #23                 // Field producerLookAheadStep:I
      13: return

  private long lvProducerIndex();
    Code:
       0: aload_0
       1: getfield      #4                  // Field producerIndex:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  private long lvConsumerIndex();
    Code:
       0: aload_0
       1: getfield      #5                  // Field consumerIndex:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  private long lpProducerIndex();
    Code:
       0: aload_0
       1: getfield      #4                  // Field producerIndex:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  private long lpConsumerIndex();
    Code:
       0: aload_0
       1: getfield      #5                  // Field consumerIndex:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  private void soProducerIndex(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field producerIndex:Ljava/util/concurrent/atomic/AtomicLong;
       4: lload_1
       5: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicLong.lazySet:(J)V
       8: return

  private void soConsumerIndex(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field consumerIndex:Ljava/util/concurrent/atomic/AtomicLong;
       4: lload_1
       5: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicLong.lazySet:(J)V
       8: return

  private static int calcWrappedOffset(long, int);
    Code:
       0: lload_0
       1: l2i
       2: iload_2
       3: iand
       4: invokestatic  #30                 // Method calcDirectOffset:(I)I
       7: ireturn

  private static int calcDirectOffset(int);
    Code:
       0: iload_0
       1: ireturn

  private static void soElement(java.util.concurrent.atomic.AtomicReferenceArray<java.lang.Object>, int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
       6: return

  private static java.lang.Object lvElement(java.util.concurrent.atomic.AtomicReferenceArray<java.lang.Object>, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
       5: areturn

  public boolean offer(T, T);
    Code:
       0: aload_0
       1: getfield      #10                 // Field producerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore_3
       5: aload_0
       6: invokespecial #39                 // Method lvProducerIndex:()J
       9: lstore        4
      11: aload_0
      12: getfield      #11                 // Field producerMask:I
      15: istore        6
      17: lload         4
      19: ldc2_w        #46                 // long 2l
      22: ladd
      23: iload         6
      25: invokestatic  #21                 // Method calcWrappedOffset:(JI)I
      28: istore        7
      30: aconst_null
      31: aload_3
      32: iload         7
      34: invokestatic  #24                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      37: if_acmpne     78
      40: lload         4
      42: iload         6
      44: invokestatic  #21                 // Method calcWrappedOffset:(JI)I
      47: istore        7
      49: aload_3
      50: iload         7
      52: iconst_1
      53: iadd
      54: aload_2
      55: invokestatic  #26                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      58: aload_3
      59: iload         7
      61: aload_1
      62: invokestatic  #26                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      65: aload_0
      66: lload         4
      68: ldc2_w        #46                 // long 2l
      71: ladd
      72: invokespecial #16                 // Method soProducerIndex:(J)V
      75: goto          154
      78: aload_3
      79: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicReferenceArray.length:()I
      82: istore        8
      84: new           #8                  // class java/util/concurrent/atomic/AtomicReferenceArray
      87: dup
      88: iload         8
      90: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":(I)V
      93: astore        9
      95: aload_0
      96: aload         9
      98: putfield      #10                 // Field producerBuffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
     101: lload         4
     103: iload         6
     105: invokestatic  #21                 // Method calcWrappedOffset:(JI)I
     108: istore        7
     110: aload         9
     112: iload         7
     114: iconst_1
     115: iadd
     116: aload_2
     117: invokestatic  #26                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     120: aload         9
     122: iload         7
     124: aload_1
     125: invokestatic  #26                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     128: aload_0
     129: aload_3
     130: aload         9
     132: invokespecial #28                 // Method soNext:(Ljava/util/concurrent/atomic/AtomicReferenceArray;Ljava/util/concurrent/atomic/AtomicReferenceArray;)V
     135: aload_3
     136: iload         7
     138: getstatic     #29                 // Field HAS_NEXT:Ljava/lang/Object;
     141: invokestatic  #26                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     144: aload_0
     145: lload         4
     147: ldc2_w        #46                 // long 2l
     150: ladd
     151: invokespecial #16                 // Method soProducerIndex:(J)V
     154: iconst_1
     155: ireturn

  static {};
    Code:
       0: ldc           #48                 // String jctools.spsc.max.lookahead.step
       2: sipush        4096
       5: invokestatic  #49                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
       8: invokevirtual #50                 // Method java/lang/Integer.intValue:()I
      11: putstatic     #40                 // Field MAX_LOOK_AHEAD_STEP:I
      14: new           #51                 // class java/lang/Object
      17: dup
      18: invokespecial #1                  // Method java/lang/Object."<init>":()V
      21: putstatic     #29                 // Field HAS_NEXT:Ljava/lang/Object;
      24: return
}
