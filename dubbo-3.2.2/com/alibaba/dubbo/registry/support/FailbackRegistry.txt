Compiled from "FailbackRegistry.java"
public abstract class com.alibaba.dubbo.registry.support.FailbackRegistry implements org.apache.dubbo.registry.Registry,com.alibaba.dubbo.registry.Registry {
  private com.alibaba.dubbo.registry.support.FailbackRegistry$CompatibleFailbackRegistry failbackRegistry;

  public com.alibaba.dubbo.registry.support.FailbackRegistry(com.alibaba.dubbo.common.URL);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry
       8: dup
       9: aload_1
      10: invokevirtual #3                  // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
      13: aload_0
      14: invokespecial #4                  // Method com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry."<init>":(Lorg/apache/dubbo/common/URL;Lcom/alibaba/dubbo/registry/support/FailbackRegistry;)V
      17: putfield      #5                  // Field failbackRegistry:Lcom/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry;
      20: return

  public void removeFailedRegisteredTask(com.alibaba.dubbo.common.URL);
    Code:
       0: aload_0
       1: getfield      #5                  // Field failbackRegistry:Lcom/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry;
       4: aload_1
       5: invokevirtual #3                  // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       8: invokevirtual #6                  // Method com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry.removeFailedRegisteredTask:(Lorg/apache/dubbo/common/URL;)V
      11: return

  public void removeFailedUnregisteredTask(com.alibaba.dubbo.common.URL);
    Code:
       0: aload_0
       1: getfield      #5                  // Field failbackRegistry:Lcom/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry;
       4: aload_1
       5: invokevirtual #3                  // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       8: invokevirtual #7                  // Method com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry.removeFailedUnregisteredTask:(Lorg/apache/dubbo/common/URL;)V
      11: return

  public void removeFailedSubscribedTask(com.alibaba.dubbo.common.URL, com.alibaba.dubbo.registry.NotifyListener);
    Code:
       0: aload_0
       1: getfield      #5                  // Field failbackRegistry:Lcom/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry;
       4: aload_1
       5: invokevirtual #3                  // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       8: new           #8                  // class com/alibaba/dubbo/registry/NotifyListener$ReverseCompatibleNotifyListener
      11: dup
      12: aload_2
      13: invokespecial #9                  // Method com/alibaba/dubbo/registry/NotifyListener$ReverseCompatibleNotifyListener."<init>":(Lcom/alibaba/dubbo/registry/NotifyListener;)V
      16: invokevirtual #10                 // Method com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry.removeFailedSubscribedTask:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/NotifyListener;)V
      19: return

  public void removeFailedUnsubscribedTask(com.alibaba.dubbo.common.URL, com.alibaba.dubbo.registry.NotifyListener);
    Code:
       0: aload_0
       1: getfield      #5                  // Field failbackRegistry:Lcom/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry;
       4: aload_1
       5: invokevirtual #3                  // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       8: new           #8                  // class com/alibaba/dubbo/registry/NotifyListener$ReverseCompatibleNotifyListener
      11: dup
      12: aload_2
      13: invokespecial #9                  // Method com/alibaba/dubbo/registry/NotifyListener$ReverseCompatibleNotifyListener."<init>":(Lcom/alibaba/dubbo/registry/NotifyListener;)V
      16: invokevirtual #11                 // Method com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry.removeFailedUnsubscribedTask:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/NotifyListener;)V
      19: return

  public void register(com.alibaba.dubbo.common.URL);
    Code:
       0: aload_0
       1: getfield      #5                  // Field failbackRegistry:Lcom/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry;
       4: aload_1
       5: invokevirtual #3                  // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       8: invokevirtual #12                 // Method com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry.register:(Lorg/apache/dubbo/common/URL;)V
      11: return

  public void unregister(com.alibaba.dubbo.common.URL);
    Code:
       0: aload_0
       1: getfield      #5                  // Field failbackRegistry:Lcom/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry;
       4: aload_1
       5: invokevirtual #3                  // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       8: invokevirtual #13                 // Method com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry.unregister:(Lorg/apache/dubbo/common/URL;)V
      11: return

  public void subscribe(com.alibaba.dubbo.common.URL, com.alibaba.dubbo.registry.NotifyListener);
    Code:
       0: aload_0
       1: getfield      #5                  // Field failbackRegistry:Lcom/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry;
       4: aload_1
       5: invokevirtual #3                  // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       8: new           #8                  // class com/alibaba/dubbo/registry/NotifyListener$ReverseCompatibleNotifyListener
      11: dup
      12: aload_2
      13: invokespecial #9                  // Method com/alibaba/dubbo/registry/NotifyListener$ReverseCompatibleNotifyListener."<init>":(Lcom/alibaba/dubbo/registry/NotifyListener;)V
      16: invokevirtual #14                 // Method com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry.subscribe:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/NotifyListener;)V
      19: return

  public void unsubscribe(com.alibaba.dubbo.common.URL, com.alibaba.dubbo.registry.NotifyListener);
    Code:
       0: aload_0
       1: getfield      #5                  // Field failbackRegistry:Lcom/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry;
       4: aload_1
       5: invokevirtual #3                  // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       8: new           #8                  // class com/alibaba/dubbo/registry/NotifyListener$ReverseCompatibleNotifyListener
      11: dup
      12: aload_2
      13: invokespecial #9                  // Method com/alibaba/dubbo/registry/NotifyListener$ReverseCompatibleNotifyListener."<init>":(Lcom/alibaba/dubbo/registry/NotifyListener;)V
      16: invokevirtual #15                 // Method com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry.unsubscribe:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/NotifyListener;)V
      19: return

  protected void notify(com.alibaba.dubbo.common.URL, com.alibaba.dubbo.registry.NotifyListener, java.util.List<com.alibaba.dubbo.common.URL>);
    Code:
       0: aload_3
       1: invokeinterface #16,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #17,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      11: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokestatic  #19                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      19: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      24: checkcast     #21                 // class java/util/List
      27: astore        4
      29: aload_0
      30: getfield      #5                  // Field failbackRegistry:Lcom/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry;
      33: aload_1
      34: invokevirtual #3                  // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
      37: new           #8                  // class com/alibaba/dubbo/registry/NotifyListener$ReverseCompatibleNotifyListener
      40: dup
      41: aload_2
      42: invokespecial #9                  // Method com/alibaba/dubbo/registry/NotifyListener$ReverseCompatibleNotifyListener."<init>":(Lcom/alibaba/dubbo/registry/NotifyListener;)V
      45: aload         4
      47: invokevirtual #22                 // Method com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry.notify:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/NotifyListener;Ljava/util/List;)V
      50: return

  protected void doNotify(com.alibaba.dubbo.common.URL, com.alibaba.dubbo.registry.NotifyListener, java.util.List<com.alibaba.dubbo.common.URL>);
    Code:
       0: aload_3
       1: invokeinterface #16,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #17,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      11: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokestatic  #19                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      19: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      24: checkcast     #21                 // class java/util/List
      27: astore        4
      29: aload_0
      30: getfield      #5                  // Field failbackRegistry:Lcom/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry;
      33: aload_1
      34: invokevirtual #3                  // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
      37: new           #8                  // class com/alibaba/dubbo/registry/NotifyListener$ReverseCompatibleNotifyListener
      40: dup
      41: aload_2
      42: invokespecial #9                  // Method com/alibaba/dubbo/registry/NotifyListener$ReverseCompatibleNotifyListener."<init>":(Lcom/alibaba/dubbo/registry/NotifyListener;)V
      45: aload         4
      47: invokevirtual #23                 // Method com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry.doNotify:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/NotifyListener;Ljava/util/List;)V
      50: return

  protected void recover() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #5                  // Field failbackRegistry:Lcom/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry;
       4: invokevirtual #24                 // Method com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry.recover:()V
       7: return

  public java.util.List<com.alibaba.dubbo.common.URL> lookup(com.alibaba.dubbo.common.URL);
    Code:
       0: aload_0
       1: getfield      #5                  // Field failbackRegistry:Lcom/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry;
       4: aload_1
       5: invokevirtual #3                  // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       8: invokevirtual #25                 // Method com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry.lookup:(Lorg/apache/dubbo/common/URL;)Ljava/util/List;
      11: invokeinterface #16,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      16: invokedynamic #26,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      21: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: invokestatic  #19                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      29: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      34: checkcast     #21                 // class java/util/List
      37: areturn

  public com.alibaba.dubbo.common.URL getUrl();
    Code:
       0: new           #27                 // class com/alibaba/dubbo/common/URL
       3: dup
       4: aload_0
       5: getfield      #5                  // Field failbackRegistry:Lcom/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry;
       8: invokevirtual #28                 // Method com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry.getUrl:()Lorg/apache/dubbo/common/URL;
      11: invokespecial #29                 // Method com/alibaba/dubbo/common/URL."<init>":(Lorg/apache/dubbo/common/URL;)V
      14: areturn

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #5                  // Field failbackRegistry:Lcom/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry;
       4: invokevirtual #30                 // Method com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry.destroy:()V
       7: return

  public abstract void doRegister(com.alibaba.dubbo.common.URL);

  public abstract void doUnregister(com.alibaba.dubbo.common.URL);

  public abstract void doSubscribe(com.alibaba.dubbo.common.URL, com.alibaba.dubbo.registry.NotifyListener);

  public abstract void doUnsubscribe(com.alibaba.dubbo.common.URL, com.alibaba.dubbo.registry.NotifyListener);

  public void register(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: new           #27                 // class com/alibaba/dubbo/common/URL
       4: dup
       5: aload_1
       6: invokespecial #29                 // Method com/alibaba/dubbo/common/URL."<init>":(Lorg/apache/dubbo/common/URL;)V
       9: invokevirtual #31                 // Method register:(Lcom/alibaba/dubbo/common/URL;)V
      12: return

  public void unregister(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: new           #27                 // class com/alibaba/dubbo/common/URL
       4: dup
       5: aload_1
       6: invokespecial #29                 // Method com/alibaba/dubbo/common/URL."<init>":(Lorg/apache/dubbo/common/URL;)V
       9: invokevirtual #32                 // Method unregister:(Lcom/alibaba/dubbo/common/URL;)V
      12: return

  public void subscribe(org.apache.dubbo.common.URL, org.apache.dubbo.registry.NotifyListener);
    Code:
       0: aload_0
       1: new           #27                 // class com/alibaba/dubbo/common/URL
       4: dup
       5: aload_1
       6: invokespecial #29                 // Method com/alibaba/dubbo/common/URL."<init>":(Lorg/apache/dubbo/common/URL;)V
       9: new           #33                 // class com/alibaba/dubbo/registry/NotifyListener$CompatibleNotifyListener
      12: dup
      13: aload_2
      14: invokespecial #34                 // Method com/alibaba/dubbo/registry/NotifyListener$CompatibleNotifyListener."<init>":(Lorg/apache/dubbo/registry/NotifyListener;)V
      17: invokevirtual #35                 // Method subscribe:(Lcom/alibaba/dubbo/common/URL;Lcom/alibaba/dubbo/registry/NotifyListener;)V
      20: return

  public void unsubscribe(org.apache.dubbo.common.URL, org.apache.dubbo.registry.NotifyListener);
    Code:
       0: aload_0
       1: new           #27                 // class com/alibaba/dubbo/common/URL
       4: dup
       5: aload_1
       6: invokespecial #29                 // Method com/alibaba/dubbo/common/URL."<init>":(Lorg/apache/dubbo/common/URL;)V
       9: new           #33                 // class com/alibaba/dubbo/registry/NotifyListener$CompatibleNotifyListener
      12: dup
      13: aload_2
      14: invokespecial #34                 // Method com/alibaba/dubbo/registry/NotifyListener$CompatibleNotifyListener."<init>":(Lorg/apache/dubbo/registry/NotifyListener;)V
      17: invokevirtual #36                 // Method unsubscribe:(Lcom/alibaba/dubbo/common/URL;Lcom/alibaba/dubbo/registry/NotifyListener;)V
      20: return

  public java.util.List<org.apache.dubbo.common.URL> lookup(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: getfield      #5                  // Field failbackRegistry:Lcom/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry;
       4: aload_1
       5: invokevirtual #25                 // Method com/alibaba/dubbo/registry/support/FailbackRegistry$CompatibleFailbackRegistry.lookup:(Lorg/apache/dubbo/common/URL;)Ljava/util/List;
       8: areturn

  public org.apache.dubbo.common.URL getUrl();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getUrl:()Lcom/alibaba/dubbo/common/URL;
       4: areturn

  private static com.alibaba.dubbo.common.URL lambda$lookup$0(org.apache.dubbo.common.URL);
    Code:
       0: new           #27                 // class com/alibaba/dubbo/common/URL
       3: dup
       4: aload_0
       5: invokespecial #29                 // Method com/alibaba/dubbo/common/URL."<init>":(Lorg/apache/dubbo/common/URL;)V
       8: areturn
}
