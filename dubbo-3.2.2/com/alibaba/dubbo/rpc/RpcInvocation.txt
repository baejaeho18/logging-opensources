Compiled from "RpcInvocation.java"
public class com.alibaba.dubbo.rpc.RpcInvocation implements com.alibaba.dubbo.rpc.Invocation,java.io.Serializable {
  private static final long serialVersionUID;

  private java.lang.String methodName;

  private java.lang.Class<?>[] parameterTypes;

  private java.lang.Object[] arguments;

  private java.util.Map<java.lang.String, java.lang.String> attachments;

  private transient com.alibaba.dubbo.rpc.Invoker<?> invoker;

  public com.alibaba.dubbo.rpc.RpcInvocation();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public com.alibaba.dubbo.rpc.RpcInvocation(com.alibaba.dubbo.rpc.Invocation, com.alibaba.dubbo.rpc.Invoker<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2,  1            // InterfaceMethod com/alibaba/dubbo/rpc/Invocation.getMethodName:()Ljava/lang/String;
       7: aload_1
       8: invokeinterface #3,  1            // InterfaceMethod com/alibaba/dubbo/rpc/Invocation.getParameterTypes:()[Ljava/lang/Class;
      13: aload_1
      14: invokeinterface #4,  1            // InterfaceMethod com/alibaba/dubbo/rpc/Invocation.getArguments:()[Ljava/lang/Object;
      19: new           #5                  // class java/util/HashMap
      22: dup
      23: aload_1
      24: invokeinterface #6,  1            // InterfaceMethod com/alibaba/dubbo/rpc/Invocation.getAttachments:()Ljava/util/Map;
      29: invokespecial #7                  // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      32: aload_1
      33: invokeinterface #8,  1            // InterfaceMethod com/alibaba/dubbo/rpc/Invocation.getInvoker:()Lcom/alibaba/dubbo/rpc/Invoker;
      38: invokespecial #9                  // Method "<init>":(Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;Ljava/util/Map;Lcom/alibaba/dubbo/rpc/Invoker;)V
      41: aload_2
      42: ifnull        190
      45: aload_2
      46: invokeinterface #10,  1           // InterfaceMethod com/alibaba/dubbo/rpc/Invoker.getUrl:()Lcom/alibaba/dubbo/common/URL;
      51: astore_3
      52: aload_0
      53: ldc           #12                 // String path
      55: aload_3
      56: invokevirtual #13                 // Method com/alibaba/dubbo/common/URL.getPath:()Ljava/lang/String;
      59: invokevirtual #14                 // Method setAttachment:(Ljava/lang/String;Ljava/lang/String;)V
      62: aload_3
      63: ldc           #15                 // String interface
      65: invokevirtual #16                 // Method com/alibaba/dubbo/common/URL.hasParameter:(Ljava/lang/String;)Z
      68: ifeq          83
      71: aload_0
      72: ldc           #15                 // String interface
      74: aload_3
      75: ldc           #15                 // String interface
      77: invokevirtual #17                 // Method com/alibaba/dubbo/common/URL.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      80: invokevirtual #14                 // Method setAttachment:(Ljava/lang/String;Ljava/lang/String;)V
      83: aload_3
      84: ldc           #18                 // String group
      86: invokevirtual #16                 // Method com/alibaba/dubbo/common/URL.hasParameter:(Ljava/lang/String;)Z
      89: ifeq          104
      92: aload_0
      93: ldc           #18                 // String group
      95: aload_3
      96: ldc           #18                 // String group
      98: invokevirtual #17                 // Method com/alibaba/dubbo/common/URL.getParameter:(Ljava/lang/String;)Ljava/lang/String;
     101: invokevirtual #14                 // Method setAttachment:(Ljava/lang/String;Ljava/lang/String;)V
     104: aload_3
     105: ldc           #19                 // String version
     107: invokevirtual #16                 // Method com/alibaba/dubbo/common/URL.hasParameter:(Ljava/lang/String;)Z
     110: ifeq          127
     113: aload_0
     114: ldc           #19                 // String version
     116: aload_3
     117: ldc           #19                 // String version
     119: ldc           #20                 // String 0.0.0
     121: invokevirtual #21                 // Method com/alibaba/dubbo/common/URL.getParameter:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     124: invokevirtual #14                 // Method setAttachment:(Ljava/lang/String;Ljava/lang/String;)V
     127: aload_3
     128: ldc           #22                 // String timeout
     130: invokevirtual #16                 // Method com/alibaba/dubbo/common/URL.hasParameter:(Ljava/lang/String;)Z
     133: ifeq          148
     136: aload_0
     137: ldc           #22                 // String timeout
     139: aload_3
     140: ldc           #22                 // String timeout
     142: invokevirtual #17                 // Method com/alibaba/dubbo/common/URL.getParameter:(Ljava/lang/String;)Ljava/lang/String;
     145: invokevirtual #14                 // Method setAttachment:(Ljava/lang/String;Ljava/lang/String;)V
     148: aload_3
     149: ldc           #23                 // String token
     151: invokevirtual #16                 // Method com/alibaba/dubbo/common/URL.hasParameter:(Ljava/lang/String;)Z
     154: ifeq          169
     157: aload_0
     158: ldc           #23                 // String token
     160: aload_3
     161: ldc           #23                 // String token
     163: invokevirtual #17                 // Method com/alibaba/dubbo/common/URL.getParameter:(Ljava/lang/String;)Ljava/lang/String;
     166: invokevirtual #14                 // Method setAttachment:(Ljava/lang/String;Ljava/lang/String;)V
     169: aload_3
     170: ldc           #24                 // String application
     172: invokevirtual #16                 // Method com/alibaba/dubbo/common/URL.hasParameter:(Ljava/lang/String;)Z
     175: ifeq          190
     178: aload_0
     179: ldc           #24                 // String application
     181: aload_3
     182: ldc           #24                 // String application
     184: invokevirtual #17                 // Method com/alibaba/dubbo/common/URL.getParameter:(Ljava/lang/String;)Ljava/lang/String;
     187: invokevirtual #14                 // Method setAttachment:(Ljava/lang/String;Ljava/lang/String;)V
     190: return

  public com.alibaba.dubbo.rpc.RpcInvocation(com.alibaba.dubbo.rpc.Invocation);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #2,  1            // InterfaceMethod com/alibaba/dubbo/rpc/Invocation.getMethodName:()Ljava/lang/String;
       7: aload_1
       8: invokeinterface #3,  1            // InterfaceMethod com/alibaba/dubbo/rpc/Invocation.getParameterTypes:()[Ljava/lang/Class;
      13: aload_1
      14: invokeinterface #4,  1            // InterfaceMethod com/alibaba/dubbo/rpc/Invocation.getArguments:()[Ljava/lang/Object;
      19: aload_1
      20: invokeinterface #6,  1            // InterfaceMethod com/alibaba/dubbo/rpc/Invocation.getAttachments:()Ljava/util/Map;
      25: aload_1
      26: invokeinterface #8,  1            // InterfaceMethod com/alibaba/dubbo/rpc/Invocation.getInvoker:()Lcom/alibaba/dubbo/rpc/Invoker;
      31: invokespecial #9                  // Method "<init>":(Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;Ljava/util/Map;Lcom/alibaba/dubbo/rpc/Invoker;)V
      34: return

  public com.alibaba.dubbo.rpc.RpcInvocation(java.lang.reflect.Method, java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #26                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
       9: aload_2
      10: aconst_null
      11: aconst_null
      12: invokespecial #9                  // Method "<init>":(Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;Ljava/util/Map;Lcom/alibaba/dubbo/rpc/Invoker;)V
      15: return

  public com.alibaba.dubbo.rpc.RpcInvocation(java.lang.reflect.Method, java.lang.Object[], java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #26                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
       9: aload_2
      10: aload_3
      11: aconst_null
      12: invokespecial #9                  // Method "<init>":(Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;Ljava/util/Map;Lcom/alibaba/dubbo/rpc/Invoker;)V
      15: return

  public com.alibaba.dubbo.rpc.RpcInvocation(java.lang.String, java.lang.Class<?>[], java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: aconst_null
       6: invokespecial #9                  // Method "<init>":(Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;Ljava/util/Map;Lcom/alibaba/dubbo/rpc/Invoker;)V
       9: return

  public com.alibaba.dubbo.rpc.RpcInvocation(java.lang.String, java.lang.Class<?>[], java.lang.Object[], java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: invokespecial #9                  // Method "<init>":(Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;Ljava/util/Map;Lcom/alibaba/dubbo/rpc/Invoker;)V
      10: return

  public com.alibaba.dubbo.rpc.RpcInvocation(java.lang.String, java.lang.Class<?>[], java.lang.Object[], java.util.Map<java.lang.String, java.lang.String>, com.alibaba.dubbo.rpc.Invoker<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #27                 // Field methodName:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: ifnonnull     21
      14: iconst_0
      15: anewarray     #28                 // class java/lang/Class
      18: goto          22
      21: aload_2
      22: putfield      #29                 // Field parameterTypes:[Ljava/lang/Class;
      25: aload_0
      26: aload_3
      27: ifnonnull     37
      30: iconst_0
      31: anewarray     #30                 // class java/lang/Object
      34: goto          38
      37: aload_3
      38: putfield      #31                 // Field arguments:[Ljava/lang/Object;
      41: aload_0
      42: aload         4
      44: ifnonnull     57
      47: new           #5                  // class java/util/HashMap
      50: dup
      51: invokespecial #32                 // Method java/util/HashMap."<init>":()V
      54: goto          59
      57: aload         4
      59: putfield      #33                 // Field attachments:Ljava/util/Map;
      62: aload_0
      63: aload         5
      65: putfield      #34                 // Field invoker:Lcom/alibaba/dubbo/rpc/Invoker;
      68: return

  public com.alibaba.dubbo.rpc.Invoker<?> getInvoker();
    Code:
       0: aload_0
       1: getfield      #34                 // Field invoker:Lcom/alibaba/dubbo/rpc/Invoker;
       4: areturn

  public void setInvoker(com.alibaba.dubbo.rpc.Invoker<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field invoker:Lcom/alibaba/dubbo/rpc/Invoker;
       5: return

  public java.lang.String getProtocolServiceKey();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getMethodName();
    Code:
       0: aload_0
       1: getfield      #27                 // Field methodName:Ljava/lang/String;
       4: areturn

  public void setMethodName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field methodName:Ljava/lang/String;
       5: return

  public java.lang.Class<?>[] getParameterTypes();
    Code:
       0: aload_0
       1: getfield      #29                 // Field parameterTypes:[Ljava/lang/Class;
       4: areturn

  public void setParameterTypes(java.lang.Class<?>[]);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     12
       5: iconst_0
       6: anewarray     #28                 // class java/lang/Class
       9: goto          13
      12: aload_1
      13: putfield      #29                 // Field parameterTypes:[Ljava/lang/Class;
      16: return

  public java.lang.Object[] getArguments();
    Code:
       0: aload_0
       1: getfield      #31                 // Field arguments:[Ljava/lang/Object;
       4: areturn

  public void setArguments(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     12
       5: iconst_0
       6: anewarray     #30                 // class java/lang/Object
       9: goto          13
      12: aload_1
      13: putfield      #31                 // Field arguments:[Ljava/lang/Object;
      16: return

  public java.util.Map<java.lang.String, java.lang.String> getAttachments();
    Code:
       0: aload_0
       1: getfield      #33                 // Field attachments:Ljava/util/Map;
       4: areturn

  public void setAttachments(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     15
       5: new           #5                  // class java/util/HashMap
       8: dup
       9: invokespecial #32                 // Method java/util/HashMap."<init>":()V
      12: goto          16
      15: aload_1
      16: putfield      #33                 // Field attachments:Ljava/util/Map;
      19: return

  public void setAttachment(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #33                 // Field attachments:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #5                  // class java/util/HashMap
      11: dup
      12: invokespecial #32                 // Method java/util/HashMap."<init>":()V
      15: putfield      #33                 // Field attachments:Ljava/util/Map;
      18: aload_0
      19: getfield      #33                 // Field attachments:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #35,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: return

  public void setAttachmentIfAbsent(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #33                 // Field attachments:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #5                  // class java/util/HashMap
      11: dup
      12: invokespecial #32                 // Method java/util/HashMap."<init>":()V
      15: putfield      #33                 // Field attachments:Ljava/util/Map;
      18: aload_0
      19: getfield      #33                 // Field attachments:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #36,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      28: ifne          43
      31: aload_0
      32: getfield      #33                 // Field attachments:Ljava/util/Map;
      35: aload_1
      36: aload_2
      37: invokeinterface #35,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: return

  public void addAttachments(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #33                 // Field attachments:Ljava/util/Map;
       9: ifnonnull     23
      12: aload_0
      13: new           #5                  // class java/util/HashMap
      16: dup
      17: invokespecial #32                 // Method java/util/HashMap."<init>":()V
      20: putfield      #33                 // Field attachments:Ljava/util/Map;
      23: aload_0
      24: getfield      #33                 // Field attachments:Ljava/util/Map;
      27: aload_1
      28: invokeinterface #37,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      33: return

  public void addAttachmentsIfAbsent(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: invokeinterface #38,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      11: invokeinterface #39,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          61
      26: aload_2
      27: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #42                 // class java/util/Map$Entry
      35: astore_3
      36: aload_0
      37: aload_3
      38: invokeinterface #43,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      43: checkcast     #44                 // class java/lang/String
      46: aload_3
      47: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      52: checkcast     #44                 // class java/lang/String
      55: invokevirtual #46                 // Method setAttachmentIfAbsent:(Ljava/lang/String;Ljava/lang/String;)V
      58: goto          17
      61: return

  public java.lang.String getAttachment(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #33                 // Field attachments:Ljava/util/Map;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #33                 // Field attachments:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #47,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #44                 // class java/lang/String
      22: areturn

  public java.lang.String getAttachment(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #33                 // Field attachments:Ljava/util/Map;
       4: ifnonnull     9
       7: aload_2
       8: areturn
       9: aload_0
      10: getfield      #33                 // Field attachments:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #47,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #44                 // class java/lang/String
      22: astore_3
      23: aload_3
      24: ifnull        34
      27: aload_3
      28: invokevirtual #48                 // Method java/lang/String.length:()I
      31: ifne          36
      34: aload_2
      35: areturn
      36: aload_3
      37: areturn

  public void addInvokedInvoker(org.apache.dubbo.rpc.Invoker<?>);
    Code:
       0: new           #49                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #50                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.util.List<org.apache.dubbo.rpc.Invoker<?>> getInvokedInvokers();
    Code:
       0: new           #49                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #50                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.String toString();
    Code:
       0: new           #51                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #53                 // String RpcInvocation [methodName=
       9: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #27                 // Field methodName:Ljava/lang/String;
      16: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #55                 // String , parameterTypes=
      21: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #29                 // Field parameterTypes:[Ljava/lang/Class;
      28: invokestatic  #56                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      31: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #57                 // String , arguments=
      36: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #31                 // Field arguments:[Ljava/lang/Object;
      43: invokestatic  #56                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      46: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #58                 // String , attachments=
      51: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: getfield      #33                 // Field attachments:Ljava/util/Map;
      58: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: ldc           #60                 // String ]
      63: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: areturn

  public org.apache.dubbo.rpc.Invoker getInvoker();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method getInvoker:()Lcom/alibaba/dubbo/rpc/Invoker;
       4: areturn
}
