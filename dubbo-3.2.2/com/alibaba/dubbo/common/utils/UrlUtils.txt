Compiled from "UrlUtils.java"
public class com.alibaba.dubbo.common.utils.UrlUtils {
  public com.alibaba.dubbo.common.utils.UrlUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static com.alibaba.dubbo.common.URL parseURL(java.lang.String, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: new           #2                  // class com/alibaba/dubbo/common/URL
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #3                  // Method org/apache/dubbo/common/utils/UrlUtils.parseURL:(Ljava/lang/String;Ljava/util/Map;)Lorg/apache/dubbo/common/URL;
       9: invokespecial #4                  // Method com/alibaba/dubbo/common/URL."<init>":(Lorg/apache/dubbo/common/URL;)V
      12: areturn

  public static java.util.List<com.alibaba.dubbo.common.URL> parseURLs(java.lang.String, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method org/apache/dubbo/common/utils/UrlUtils.parseURLs:(Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;
       5: invokeinterface #6,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      10: invokedynamic #7,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      15: invokeinterface #8,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      20: invokestatic  #9                  // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      23: invokeinterface #10,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      28: checkcast     #11                 // class java/util/List
      31: areturn

  public static java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>> convertRegister(java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>);
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method org/apache/dubbo/common/utils/UrlUtils.convertRegister:(Ljava/util/Map;)Ljava/util/Map;
       4: areturn

  public static java.util.Map<java.lang.String, java.lang.String> convertSubscribe(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method org/apache/dubbo/common/utils/UrlUtils.convertSubscribe:(Ljava/util/Map;)Ljava/util/Map;
       4: areturn

  public static java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>> revertRegister(java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method org/apache/dubbo/common/utils/UrlUtils.revertRegister:(Ljava/util/Map;)Ljava/util/Map;
       4: areturn

  public static java.util.Map<java.lang.String, java.lang.String> revertSubscribe(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: invokestatic  #15                 // Method org/apache/dubbo/common/utils/UrlUtils.revertSubscribe:(Ljava/util/Map;)Ljava/util/Map;
       4: areturn

  public static java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>> revertNotify(java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>);
    Code:
       0: aload_0
       1: invokestatic  #16                 // Method org/apache/dubbo/common/utils/UrlUtils.revertNotify:(Ljava/util/Map;)Ljava/util/Map;
       4: areturn

  public static java.util.List<java.lang.String> revertForbid(java.util.List<java.lang.String>, java.util.Set<com.alibaba.dubbo.common.URL>);
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #18,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      11: invokeinterface #8,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokestatic  #19                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      19: invokeinterface #10,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      24: checkcast     #20                 // class java/util/Set
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokestatic  #21                 // Method org/apache/dubbo/common/utils/UrlUtils.revertForbid:(Ljava/util/List;Ljava/util/Set;)Ljava/util/List;
      33: areturn

  public static com.alibaba.dubbo.common.URL getEmptyUrl(java.lang.String, java.lang.String);
    Code:
       0: new           #2                  // class com/alibaba/dubbo/common/URL
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #22                 // Method org/apache/dubbo/common/utils/UrlUtils.getEmptyUrl:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/dubbo/common/URL;
       9: invokespecial #4                  // Method com/alibaba/dubbo/common/URL."<init>":(Lorg/apache/dubbo/common/URL;)V
      12: areturn

  public static boolean isMatchCategory(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #23                 // Method org/apache/dubbo/common/utils/UrlUtils.isMatchCategory:(Ljava/lang/String;Ljava/lang/String;)Z
       5: ireturn

  public static boolean isMatch(com.alibaba.dubbo.common.URL, com.alibaba.dubbo.common.URL);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       4: aload_1
       5: invokevirtual #24                 // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       8: invokestatic  #25                 // Method org/apache/dubbo/common/utils/UrlUtils.isMatch:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/common/URL;)Z
      11: ireturn

  public static boolean isMatchGlobPattern(java.lang.String, java.lang.String, com.alibaba.dubbo.common.URL);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #24                 // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       6: invokestatic  #26                 // Method org/apache/dubbo/common/utils/UrlUtils.isMatchGlobPattern:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/dubbo/common/URL;)Z
       9: ireturn

  public static boolean isMatchGlobPattern(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method org/apache/dubbo/common/utils/UrlUtils.isMatchGlobPattern:(Ljava/lang/String;Ljava/lang/String;)Z
       5: ireturn

  public static boolean isServiceKeyMatch(com.alibaba.dubbo.common.URL, com.alibaba.dubbo.common.URL);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       4: aload_1
       5: invokevirtual #24                 // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       8: invokestatic  #28                 // Method org/apache/dubbo/common/utils/UrlUtils.isServiceKeyMatch:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/common/URL;)Z
      11: ireturn

  public static boolean isConfigurator(com.alibaba.dubbo.common.URL);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       4: invokestatic  #29                 // Method org/apache/dubbo/common/utils/UrlUtils.isConfigurator:(Lorg/apache/dubbo/common/URL;)Z
       7: ireturn

  public static boolean isRoute(com.alibaba.dubbo.common.URL);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       4: invokestatic  #30                 // Method org/apache/dubbo/common/utils/UrlUtils.isRoute:(Lorg/apache/dubbo/common/URL;)Z
       7: ireturn

  public static boolean isProvider(com.alibaba.dubbo.common.URL);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       4: invokestatic  #31                 // Method org/apache/dubbo/common/utils/UrlUtils.isProvider:(Lorg/apache/dubbo/common/URL;)Z
       7: ireturn

  public static int getHeartbeat(com.alibaba.dubbo.common.URL);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       4: invokestatic  #32                 // Method org/apache/dubbo/remoting/utils/UrlUtils.getHeartbeat:(Lorg/apache/dubbo/common/URL;)I
       7: ireturn

  public static int getIdleTimeout(com.alibaba.dubbo.common.URL);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       4: invokestatic  #33                 // Method org/apache/dubbo/remoting/utils/UrlUtils.getIdleTimeout:(Lorg/apache/dubbo/common/URL;)I
       7: ireturn

  private static org.apache.dubbo.common.URL lambda$revertForbid$1(com.alibaba.dubbo.common.URL);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method com/alibaba/dubbo/common/URL.getOriginalURL:()Lorg/apache/dubbo/common/URL;
       4: areturn

  private static com.alibaba.dubbo.common.URL lambda$parseURLs$0(org.apache.dubbo.common.URL);
    Code:
       0: new           #2                  // class com/alibaba/dubbo/common/URL
       3: dup
       4: aload_0
       5: invokespecial #4                  // Method com/alibaba/dubbo/common/URL."<init>":(Lorg/apache/dubbo/common/URL;)V
       8: areturn
}
