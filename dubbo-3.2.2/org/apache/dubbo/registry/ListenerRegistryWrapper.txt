Compiled from "ListenerRegistryWrapper.java"
public class org.apache.dubbo.registry.ListenerRegistryWrapper implements org.apache.dubbo.registry.Registry {
  private static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  private final org.apache.dubbo.registry.Registry registry;

  private final java.util.List<org.apache.dubbo.registry.RegistryServiceListener> listeners;

  public org.apache.dubbo.registry.ListenerRegistryWrapper(org.apache.dubbo.registry.Registry, java.util.List<org.apache.dubbo.registry.RegistryServiceListener>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field listeners:Ljava/util/List;
      14: return

  public org.apache.dubbo.common.URL getUrl();
    Code:
       0: aload_0
       1: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
       4: invokeinterface #5,  1            // InterfaceMethod org/apache/dubbo/registry/Registry.getUrl:()Lorg/apache/dubbo/common/URL;
       9: areturn

  public boolean isAvailable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/dubbo/registry/Registry.isAvailable:()Z
       9: ireturn

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
       4: invokeinterface #7,  1            // InterfaceMethod org/apache/dubbo/registry/Registry.destroy:()V
       9: return

  public void register(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
       4: ifnull        17
       7: aload_0
       8: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
      11: aload_1
      12: invokeinterface #8,  2            // InterfaceMethod org/apache/dubbo/registry/Registry.register:(Lorg/apache/dubbo/common/URL;)V
      17: aload_1
      18: invokestatic  #9                  // Method org/apache/dubbo/common/utils/UrlUtils.isConsumer:(Lorg/apache/dubbo/common/URL;)Z
      21: ifne          59
      24: aload_0
      25: aload_0
      26: aload_1
      27: invokedynamic #10,  0             // InvokeDynamic #0:accept:(Lorg/apache/dubbo/registry/ListenerRegistryWrapper;Lorg/apache/dubbo/common/URL;)Ljava/util/function/Consumer;
      32: invokespecial #11                 // Method listenerEvent:(Ljava/util/function/Consumer;)V
      35: goto          59
      38: astore_2
      39: aload_1
      40: invokestatic  #9                  // Method org/apache/dubbo/common/utils/UrlUtils.isConsumer:(Lorg/apache/dubbo/common/URL;)Z
      43: ifne          57
      46: aload_0
      47: aload_0
      48: aload_1
      49: invokedynamic #10,  0             // InvokeDynamic #0:accept:(Lorg/apache/dubbo/registry/ListenerRegistryWrapper;Lorg/apache/dubbo/common/URL;)Ljava/util/function/Consumer;
      54: invokespecial #11                 // Method listenerEvent:(Ljava/util/function/Consumer;)V
      57: aload_2
      58: athrow
      59: return
    Exception table:
       from    to  target type
           0    17    38   any

  public void unregister(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
       4: ifnull        17
       7: aload_0
       8: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
      11: aload_1
      12: invokeinterface #12,  2           // InterfaceMethod org/apache/dubbo/registry/Registry.unregister:(Lorg/apache/dubbo/common/URL;)V
      17: aload_1
      18: invokestatic  #9                  // Method org/apache/dubbo/common/utils/UrlUtils.isConsumer:(Lorg/apache/dubbo/common/URL;)Z
      21: ifne          59
      24: aload_0
      25: aload_0
      26: aload_1
      27: invokedynamic #13,  0             // InvokeDynamic #1:accept:(Lorg/apache/dubbo/registry/ListenerRegistryWrapper;Lorg/apache/dubbo/common/URL;)Ljava/util/function/Consumer;
      32: invokespecial #11                 // Method listenerEvent:(Ljava/util/function/Consumer;)V
      35: goto          59
      38: astore_2
      39: aload_1
      40: invokestatic  #9                  // Method org/apache/dubbo/common/utils/UrlUtils.isConsumer:(Lorg/apache/dubbo/common/URL;)Z
      43: ifne          57
      46: aload_0
      47: aload_0
      48: aload_1
      49: invokedynamic #13,  0             // InvokeDynamic #1:accept:(Lorg/apache/dubbo/registry/ListenerRegistryWrapper;Lorg/apache/dubbo/common/URL;)Ljava/util/function/Consumer;
      54: invokespecial #11                 // Method listenerEvent:(Ljava/util/function/Consumer;)V
      57: aload_2
      58: athrow
      59: return
    Exception table:
       from    to  target type
           0    17    38   any

  public void subscribe(org.apache.dubbo.common.URL, org.apache.dubbo.registry.NotifyListener);
    Code:
       0: aload_0
       1: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
       4: ifnull        18
       7: aload_0
       8: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
      11: aload_1
      12: aload_2
      13: invokeinterface #14,  3           // InterfaceMethod org/apache/dubbo/registry/Registry.subscribe:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/NotifyListener;)V
      18: aload_0
      19: aload_0
      20: aload_1
      21: invokedynamic #15,  0             // InvokeDynamic #2:accept:(Lorg/apache/dubbo/registry/ListenerRegistryWrapper;Lorg/apache/dubbo/common/URL;)Ljava/util/function/Consumer;
      26: invokespecial #11                 // Method listenerEvent:(Ljava/util/function/Consumer;)V
      29: goto          46
      32: astore_3
      33: aload_0
      34: aload_0
      35: aload_1
      36: invokedynamic #15,  0             // InvokeDynamic #2:accept:(Lorg/apache/dubbo/registry/ListenerRegistryWrapper;Lorg/apache/dubbo/common/URL;)Ljava/util/function/Consumer;
      41: invokespecial #11                 // Method listenerEvent:(Ljava/util/function/Consumer;)V
      44: aload_3
      45: athrow
      46: return
    Exception table:
       from    to  target type
           0    18    32   any

  public void unsubscribe(org.apache.dubbo.common.URL, org.apache.dubbo.registry.NotifyListener);
    Code:
       0: aload_0
       1: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
       4: aload_1
       5: aload_2
       6: invokeinterface #16,  3           // InterfaceMethod org/apache/dubbo/registry/Registry.unsubscribe:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/NotifyListener;)V
      11: aload_0
      12: aload_0
      13: aload_1
      14: invokedynamic #17,  0             // InvokeDynamic #3:accept:(Lorg/apache/dubbo/registry/ListenerRegistryWrapper;Lorg/apache/dubbo/common/URL;)Ljava/util/function/Consumer;
      19: invokespecial #11                 // Method listenerEvent:(Ljava/util/function/Consumer;)V
      22: goto          39
      25: astore_3
      26: aload_0
      27: aload_0
      28: aload_1
      29: invokedynamic #17,  0             // InvokeDynamic #3:accept:(Lorg/apache/dubbo/registry/ListenerRegistryWrapper;Lorg/apache/dubbo/common/URL;)Ljava/util/function/Consumer;
      34: invokespecial #11                 // Method listenerEvent:(Ljava/util/function/Consumer;)V
      37: aload_3
      38: athrow
      39: return
    Exception table:
       from    to  target type
           0    11    25   any

  public boolean isServiceDiscovery();
    Code:
       0: aload_0
       1: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
       4: invokeinterface #18,  1           // InterfaceMethod org/apache/dubbo/registry/Registry.isServiceDiscovery:()Z
       9: ireturn

  public java.util.List<org.apache.dubbo.common.URL> lookup(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod org/apache/dubbo/registry/Registry.lookup:(Lorg/apache/dubbo/common/URL;)Ljava/util/List;
      10: areturn

  public org.apache.dubbo.registry.Registry getRegistry();
    Code:
       0: aload_0
       1: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
       4: areturn

  private void listenerEvent(java.util.function.Consumer<org.apache.dubbo.registry.RegistryServiceListener>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field listeners:Ljava/util/List;
       4: invokestatic  #20                 // Method org/apache/dubbo/common/utils/CollectionUtils.isNotEmpty:(Ljava/util/Collection;)Z
       7: ifeq          93
      10: aconst_null
      11: astore_2
      12: aload_0
      13: getfield      #4                  // Field listeners:Ljava/util/List;
      16: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      21: astore_3
      22: aload_3
      23: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          87
      31: aload_3
      32: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #24                 // class org/apache/dubbo/registry/RegistryServiceListener
      40: astore        4
      42: aload         4
      44: ifnull        84
      47: aload_1
      48: aload         4
      50: invokeinterface #25,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      55: goto          84
      58: astore        5
      60: getstatic     #27                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      63: ldc           #28                 // String 99-0
      65: ldc           #29                 // String unknown error in registry module
      67: ldc           #30                 // String
      69: aload         5
      71: invokevirtual #31                 // Method java/lang/RuntimeException.getMessage:()Ljava/lang/String;
      74: aload         5
      76: invokeinterface #32,  6           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      81: aload         5
      83: astore_2
      84: goto          22
      87: aload_2
      88: ifnull        93
      91: aload_2
      92: athrow
      93: return
    Exception table:
       from    to  target type
          47    55    58   Class java/lang/RuntimeException

  private void lambda$unsubscribe$3(org.apache.dubbo.common.URL, org.apache.dubbo.registry.RegistryServiceListener);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
       6: invokeinterface #33,  3           // InterfaceMethod org/apache/dubbo/registry/RegistryServiceListener.onUnsubscribe:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/Registry;)V
      11: return

  private void lambda$subscribe$2(org.apache.dubbo.common.URL, org.apache.dubbo.registry.RegistryServiceListener);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
       6: invokeinterface #34,  3           // InterfaceMethod org/apache/dubbo/registry/RegistryServiceListener.onSubscribe:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/Registry;)V
      11: return

  private void lambda$unregister$1(org.apache.dubbo.common.URL, org.apache.dubbo.registry.RegistryServiceListener);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
       6: invokeinterface #35,  3           // InterfaceMethod org/apache/dubbo/registry/RegistryServiceListener.onUnregister:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/Registry;)V
      11: return

  private void lambda$register$0(org.apache.dubbo.common.URL, org.apache.dubbo.registry.RegistryServiceListener);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: getfield      #3                  // Field registry:Lorg/apache/dubbo/registry/Registry;
       6: invokeinterface #36,  3           // InterfaceMethod org/apache/dubbo/registry/RegistryServiceListener.onRegister:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/Registry;)V
      11: return

  static {};
    Code:
       0: ldc           #37                 // class org/apache/dubbo/registry/ListenerRegistryWrapper
       2: invokestatic  #38                 // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #27                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: return
}
