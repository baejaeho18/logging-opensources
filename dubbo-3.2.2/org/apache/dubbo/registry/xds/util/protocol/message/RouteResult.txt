Compiled from "RouteResult.java"
public class org.apache.dubbo.registry.xds.util.protocol.message.RouteResult {
  private final java.util.Map<java.lang.String, java.util.Set<java.lang.String>> domainMap;

  private java.util.Map<java.lang.String, io.envoyproxy.envoy.config.route.v3.VirtualHost> virtualHostMap;

  public org.apache.dubbo.registry.xds.util.protocol.message.RouteResult();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field domainMap:Ljava/util/Map;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #5                  // Field virtualHostMap:Ljava/util/Map;
      26: return

  public org.apache.dubbo.registry.xds.util.protocol.message.RouteResult(java.util.Map<java.lang.String, java.util.Set<java.lang.String>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field domainMap:Ljava/util/Map;
       9: aload_0
      10: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: putfield      #5                  // Field virtualHostMap:Ljava/util/Map;
      20: return

  public org.apache.dubbo.registry.xds.util.protocol.message.RouteResult(java.util.Map<java.lang.String, java.util.Set<java.lang.String>>, java.util.Map<java.lang.String, io.envoyproxy.envoy.config.route.v3.VirtualHost>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field domainMap:Ljava/util/Map;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field virtualHostMap:Ljava/util/Map;
      14: return

  public java.util.Map<java.lang.String, java.util.Set<java.lang.String>> getDomainMap();
    Code:
       0: aload_0
       1: getfield      #4                  // Field domainMap:Ljava/util/Map;
       4: areturn

  public boolean isNotEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field domainMap:Ljava/util/Map;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.util.Set<java.lang.String> searchDomain(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field domainMap:Ljava/util/Map;
       4: aload_1
       5: new           #7                  // class org/apache/dubbo/common/utils/ConcurrentHashSet
       8: dup
       9: invokespecial #8                  // Method org/apache/dubbo/common/utils/ConcurrentHashSet."<init>":()V
      12: invokeinterface #9,  3            // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #10                 // class java/util/Set
      20: areturn

  public java.util.Set<java.lang.String> getDomains();
    Code:
       0: aload_0
       1: getfield      #4                  // Field domainMap:Ljava/util/Map;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokestatic  #12                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      12: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #14                 // class org/apache/dubbo/registry/xds/util/protocol/message/RouteResult
      28: astore_2
      29: aload_0
      30: getfield      #4                  // Field domainMap:Ljava/util/Map;
      33: aload_2
      34: getfield      #4                  // Field domainMap:Ljava/util/Map;
      37: invokestatic  #15                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      40: ifeq          61
      43: aload_0
      44: getfield      #5                  // Field virtualHostMap:Ljava/util/Map;
      47: aload_2
      48: getfield      #5                  // Field virtualHostMap:Ljava/util/Map;
      51: invokestatic  #15                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      54: ifeq          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ireturn

  public int hashCode();
    Code:
       0: iconst_2
       1: anewarray     #16                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #4                  // Field domainMap:Ljava/util/Map;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #5                  // Field virtualHostMap:Ljava/util/Map;
      17: aastore
      18: invokestatic  #17                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      21: ireturn

  public io.envoyproxy.envoy.config.route.v3.VirtualHost searchVirtualHost(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field virtualHostMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class io/envoyproxy/envoy/config/route/v3/VirtualHost
      13: areturn

  public void removeVirtualHost(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field virtualHostMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public java.lang.String toString();
    Code:
       0: new           #21                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #23                 // String RouteResult{domainMap=
       9: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field domainMap:Ljava/util/Map;
      16: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #26                 // String , virtualHostMap=
      21: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #5                  // Field virtualHostMap:Ljava/util/Map;
      28: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: bipush        125
      33: invokevirtual #27                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn
}
