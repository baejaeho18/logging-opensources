Compiled from "MigrationRuleHandler.java"
public class org.apache.dubbo.registry.client.migration.MigrationRuleHandler<T> {
  public static final java.lang.String DUBBO_SERVICEDISCOVERY_MIGRATION;

  private static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  private final org.apache.dubbo.registry.client.migration.MigrationClusterInvoker<T> migrationInvoker;

  private volatile org.apache.dubbo.registry.client.migration.model.MigrationStep currentStep;

  private volatile java.lang.Float currentThreshold;

  private final org.apache.dubbo.common.URL consumerURL;

  public org.apache.dubbo.registry.client.migration.MigrationRuleHandler(org.apache.dubbo.registry.client.migration.MigrationClusterInvoker<T>, org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: fconst_0
       6: invokestatic  #3                  // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       9: putfield      #4                  // Field currentThreshold:Ljava/lang/Float;
      12: aload_0
      13: aload_1
      14: putfield      #5                  // Field migrationInvoker:Lorg/apache/dubbo/registry/client/migration/MigrationClusterInvoker;
      17: aload_0
      18: aload_2
      19: putfield      #6                  // Field consumerURL:Lorg/apache/dubbo/common/URL;
      22: return

  public synchronized void doMigrate(org.apache.dubbo.registry.client.migration.model.MigrationRule);
    Code:
       0: aload_0
       1: getfield      #5                  // Field migrationInvoker:Lorg/apache/dubbo/registry/client/migration/MigrationClusterInvoker;
       4: instanceof    #7                  // class org/apache/dubbo/registry/client/migration/ServiceDiscoveryMigrationInvoker
       7: ifeq          24
      10: aload_0
      11: getstatic     #8                  // Field org/apache/dubbo/registry/client/migration/model/MigrationStep.FORCE_APPLICATION:Lorg/apache/dubbo/registry/client/migration/model/MigrationStep;
      14: fconst_1
      15: invokestatic  #3                  // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      18: aload_1
      19: invokespecial #9                  // Method refreshInvoker:(Lorg/apache/dubbo/registry/client/migration/model/MigrationStep;Ljava/lang/Float;Lorg/apache/dubbo/registry/client/migration/model/MigrationRule;)Z
      22: pop
      23: return
      24: getstatic     #10                 // Field org/apache/dubbo/registry/client/migration/model/MigrationStep.APPLICATION_FIRST:Lorg/apache/dubbo/registry/client/migration/model/MigrationStep;
      27: astore_2
      28: ldc           #11                 // float -1.0f
      30: fstore_3
      31: aload_1
      32: aload_0
      33: getfield      #6                  // Field consumerURL:Lorg/apache/dubbo/common/URL;
      36: invokevirtual #12                 // Method org/apache/dubbo/registry/client/migration/model/MigrationRule.getStep:(Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/registry/client/migration/model/MigrationStep;
      39: astore_2
      40: aload_1
      41: aload_0
      42: getfield      #6                  // Field consumerURL:Lorg/apache/dubbo/common/URL;
      45: invokevirtual #13                 // Method org/apache/dubbo/registry/client/migration/model/MigrationRule.getThreshold:(Lorg/apache/dubbo/common/URL;)F
      48: fstore_3
      49: goto          89
      52: astore        4
      54: getstatic     #15                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      57: ldc           #16                 // String 1-5
      59: ldc           #17                 // String
      61: ldc           #17                 // String
      63: new           #18                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #20                 // String Failed to get step and threshold info from rule:
      72: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_1
      76: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: aload         4
      84: invokeinterface #24,  6           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      89: aload_0
      90: aload_2
      91: fload_3
      92: invokestatic  #3                  // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      95: aload_1
      96: invokespecial #9                  // Method refreshInvoker:(Lorg/apache/dubbo/registry/client/migration/model/MigrationStep;Ljava/lang/Float;Lorg/apache/dubbo/registry/client/migration/model/MigrationRule;)Z
      99: ifeq          107
     102: aload_0
     103: aload_1
     104: invokespecial #25                 // Method setMigrationRule:(Lorg/apache/dubbo/registry/client/migration/model/MigrationRule;)V
     107: return
    Exception table:
       from    to  target type
          31    49    52   Class java/lang/Exception

  private boolean refreshInvoker(org.apache.dubbo.registry.client.migration.model.MigrationStep, java.lang.Float, org.apache.dubbo.registry.client.migration.model.MigrationRule);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     18
       8: new           #26                 // class java/lang/IllegalStateException
      11: dup
      12: ldc           #27                 // String Step or threshold of migration rule cannot be null
      14: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: getfield      #29                 // Field currentStep:Lorg/apache/dubbo/registry/client/migration/model/MigrationStep;
      22: astore        4
      24: aload_0
      25: getfield      #29                 // Field currentStep:Lorg/apache/dubbo/registry/client/migration/model/MigrationStep;
      28: ifnull        50
      31: aload_0
      32: getfield      #29                 // Field currentStep:Lorg/apache/dubbo/registry/client/migration/model/MigrationStep;
      35: aload_1
      36: if_acmpne     50
      39: aload_0
      40: getfield      #4                  // Field currentThreshold:Ljava/lang/Float;
      43: aload_2
      44: invokevirtual #30                 // Method java/lang/Float.equals:(Ljava/lang/Object;)Z
      47: ifne          252
      50: iconst_1
      51: istore        5
      53: getstatic     #31                 // Field org/apache/dubbo/registry/client/migration/MigrationRuleHandler$1.$SwitchMap$org$apache$dubbo$registry$client$migration$model$MigrationStep:[I
      56: aload_1
      57: invokevirtual #32                 // Method org/apache/dubbo/registry/client/migration/model/MigrationStep.ordinal:()I
      60: iaload
      61: tableswitch   { // 1 to 3
                     1: 88
                     2: 101
                     3: 116
               default: 116
          }
      88: aload_0
      89: getfield      #5                  // Field migrationInvoker:Lorg/apache/dubbo/registry/client/migration/MigrationClusterInvoker;
      92: aload_3
      93: invokeinterface #33,  2           // InterfaceMethod org/apache/dubbo/registry/client/migration/MigrationClusterInvoker.migrateToApplicationFirstInvoker:(Lorg/apache/dubbo/registry/client/migration/model/MigrationRule;)V
      98: goto          128
     101: aload_0
     102: getfield      #5                  // Field migrationInvoker:Lorg/apache/dubbo/registry/client/migration/MigrationClusterInvoker;
     105: aload_3
     106: invokeinterface #34,  2           // InterfaceMethod org/apache/dubbo/registry/client/migration/MigrationClusterInvoker.migrateToForceApplicationInvoker:(Lorg/apache/dubbo/registry/client/migration/model/MigrationRule;)Z
     111: istore        5
     113: goto          128
     116: aload_0
     117: getfield      #5                  // Field migrationInvoker:Lorg/apache/dubbo/registry/client/migration/MigrationClusterInvoker;
     120: aload_3
     121: invokeinterface #35,  2           // InterfaceMethod org/apache/dubbo/registry/client/migration/MigrationClusterInvoker.migrateToForceInterfaceInvoker:(Lorg/apache/dubbo/registry/client/migration/model/MigrationRule;)Z
     126: istore        5
     128: iload         5
     130: ifeq          193
     133: aload_0
     134: aload_1
     135: aload_2
     136: invokespecial #36                 // Method setCurrentStepAndThreshold:(Lorg/apache/dubbo/registry/client/migration/model/MigrationStep;Ljava/lang/Float;)V
     139: getstatic     #15                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
     142: new           #18                 // class java/lang/StringBuilder
     145: dup
     146: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     149: ldc           #37                 // String Succeed Migrated to
     151: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: aload_1
     155: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     158: ldc           #38                 // String  mode. Service Name:
     160: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: aload_0
     164: getfield      #6                  // Field consumerURL:Lorg/apache/dubbo/common/URL;
     167: invokevirtual #39                 // Method org/apache/dubbo/common/URL.getDisplayServiceKey:()Ljava/lang/String;
     170: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     176: invokeinterface #40,  2           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.info:(Ljava/lang/String;)V
     181: aload_0
     182: aload_1
     183: aload         4
     185: ldc           #41                 // String true
     187: invokespecial #42                 // Method report:(Lorg/apache/dubbo/registry/client/migration/model/MigrationStep;Lorg/apache/dubbo/registry/client/migration/model/MigrationStep;Ljava/lang/String;)V
     190: goto          249
     193: getstatic     #15                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
     196: ldc           #43                 // String 99-0
     198: ldc           #44                 // String unknown error in registry module
     200: ldc           #17                 // String
     202: new           #18                 // class java/lang/StringBuilder
     205: dup
     206: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     209: ldc           #45                 // String Migrate to
     211: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     214: aload_1
     215: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     218: ldc           #46                 // String  mode failed. Probably not satisfy the threshold you set
     220: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     223: aload_2
     224: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     227: ldc           #47                 // String . Please try re-publish configuration if you still after check.
     229: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     235: invokeinterface #48,  5           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.warn:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     240: aload_0
     241: aload_1
     242: aload         4
     244: ldc           #49                 // String false
     246: invokespecial #42                 // Method report:(Lorg/apache/dubbo/registry/client/migration/model/MigrationStep;Lorg/apache/dubbo/registry/client/migration/model/MigrationStep;Ljava/lang/String;)V
     249: iload         5
     251: ireturn
     252: iconst_1
     253: ireturn

  private void report(org.apache.dubbo.registry.client.migration.model.MigrationStep, org.apache.dubbo.registry.client.migration.model.MigrationStep, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field consumerURL:Lorg/apache/dubbo/common/URL;
       4: invokevirtual #50                 // Method org/apache/dubbo/common/URL.getOrDefaultApplicationModel:()Lorg/apache/dubbo/rpc/model/ApplicationModel;
       7: invokevirtual #51                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getBeanFactory:()Lorg/apache/dubbo/common/beans/factory/ScopeBeanFactory;
      10: ldc           #52                 // class org/apache/dubbo/common/status/reporter/FrameworkStatusReportService
      12: invokevirtual #53                 // Method org/apache/dubbo/common/beans/factory/ScopeBeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      15: checkcast     #52                 // class org/apache/dubbo/common/status/reporter/FrameworkStatusReportService
      18: astore        4
      20: aload         4
      22: invokevirtual #54                 // Method org/apache/dubbo/common/status/reporter/FrameworkStatusReportService.hasReporter:()Z
      25: ifeq          68
      28: aload         4
      30: aload         4
      32: aload_0
      33: getfield      #6                  // Field consumerURL:Lorg/apache/dubbo/common/URL;
      36: invokevirtual #55                 // Method org/apache/dubbo/common/URL.getServiceInterface:()Ljava/lang/String;
      39: aload_0
      40: getfield      #6                  // Field consumerURL:Lorg/apache/dubbo/common/URL;
      43: invokevirtual #56                 // Method org/apache/dubbo/common/URL.getVersion:()Ljava/lang/String;
      46: aload_0
      47: getfield      #6                  // Field consumerURL:Lorg/apache/dubbo/common/URL;
      50: invokevirtual #57                 // Method org/apache/dubbo/common/URL.getGroup:()Ljava/lang/String;
      53: aload_2
      54: invokestatic  #58                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      57: aload_1
      58: invokestatic  #58                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      61: aload_3
      62: invokevirtual #59                 // Method org/apache/dubbo/common/status/reporter/FrameworkStatusReportService.createMigrationStepReport:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      65: invokevirtual #60                 // Method org/apache/dubbo/common/status/reporter/FrameworkStatusReportService.reportMigrationStepStatus:(Ljava/lang/Object;)V
      68: return

  private void setMigrationRule(org.apache.dubbo.registry.client.migration.model.MigrationRule);
    Code:
       0: aload_0
       1: getfield      #5                  // Field migrationInvoker:Lorg/apache/dubbo/registry/client/migration/MigrationClusterInvoker;
       4: aload_1
       5: invokeinterface #61,  2           // InterfaceMethod org/apache/dubbo/registry/client/migration/MigrationClusterInvoker.setMigrationRule:(Lorg/apache/dubbo/registry/client/migration/model/MigrationRule;)V
      10: return

  private void setCurrentStepAndThreshold(org.apache.dubbo.registry.client.migration.model.MigrationStep, java.lang.Float);
    Code:
       0: aload_2
       1: ifnull        9
       4: aload_0
       5: aload_2
       6: putfield      #4                  // Field currentThreshold:Ljava/lang/Float;
       9: aload_1
      10: ifnull        28
      13: aload_0
      14: aload_1
      15: putfield      #29                 // Field currentStep:Lorg/apache/dubbo/registry/client/migration/model/MigrationStep;
      18: aload_0
      19: getfield      #5                  // Field migrationInvoker:Lorg/apache/dubbo/registry/client/migration/MigrationClusterInvoker;
      22: aload_1
      23: invokeinterface #62,  2           // InterfaceMethod org/apache/dubbo/registry/client/migration/MigrationClusterInvoker.setMigrationStep:(Lorg/apache/dubbo/registry/client/migration/model/MigrationStep;)V
      28: return

  public org.apache.dubbo.registry.client.migration.model.MigrationStep getMigrationStep();
    Code:
       0: aload_0
       1: getfield      #29                 // Field currentStep:Lorg/apache/dubbo/registry/client/migration/model/MigrationStep;
       4: areturn

  static {};
    Code:
       0: ldc           #63                 // class org/apache/dubbo/registry/client/migration/MigrationRuleHandler
       2: invokestatic  #64                 // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #15                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: return
}
