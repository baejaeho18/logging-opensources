Compiled from "DefaultServiceInstance.java"
public class org.apache.dubbo.registry.client.DefaultServiceInstance implements org.apache.dubbo.registry.client.ServiceInstance {
  private static final long serialVersionUID;

  private java.lang.String rawAddress;

  private java.lang.String serviceName;

  private java.lang.String host;

  private int port;

  private boolean enabled;

  private boolean healthy;

  private java.util.Map<java.lang.String, java.lang.String> metadata;

  private transient java.lang.String address;

  private transient org.apache.dubbo.metadata.MetadataInfo serviceMetadata;

  private transient java.lang.String registryCluster;

  private transient java.util.Map<java.lang.String, java.lang.String> extendParams;

  private transient java.util.List<org.apache.dubbo.registry.client.DefaultServiceInstance$Endpoint> endpoints;

  private transient org.apache.dubbo.rpc.model.ApplicationModel applicationModel;

  private transient java.util.Map<java.lang.String, org.apache.dubbo.registry.client.InstanceAddressURL> instanceAddressURL;

  public org.apache.dubbo.registry.client.DefaultServiceInstance();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field enabled:Z
       9: aload_0
      10: iconst_1
      11: putfield      #4                  // Field healthy:Z
      14: aload_0
      15: new           #5                  // class java/util/HashMap
      18: dup
      19: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      22: putfield      #7                  // Field metadata:Ljava/util/Map;
      25: aload_0
      26: new           #8                  // class java/util/concurrent/ConcurrentHashMap
      29: dup
      30: invokespecial #9                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      33: putfield      #10                 // Field instanceAddressURL:Ljava/util/Map;
      36: return

  public org.apache.dubbo.registry.client.DefaultServiceInstance(org.apache.dubbo.registry.client.DefaultServiceInstance);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field enabled:Z
       9: aload_0
      10: iconst_1
      11: putfield      #4                  // Field healthy:Z
      14: aload_0
      15: new           #5                  // class java/util/HashMap
      18: dup
      19: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      22: putfield      #7                  // Field metadata:Ljava/util/Map;
      25: aload_0
      26: new           #8                  // class java/util/concurrent/ConcurrentHashMap
      29: dup
      30: invokespecial #9                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      33: putfield      #10                 // Field instanceAddressURL:Ljava/util/Map;
      36: aload_0
      37: aload_1
      38: getfield      #11                 // Field serviceName:Ljava/lang/String;
      41: putfield      #11                 // Field serviceName:Ljava/lang/String;
      44: aload_0
      45: aload_1
      46: getfield      #12                 // Field host:Ljava/lang/String;
      49: putfield      #12                 // Field host:Ljava/lang/String;
      52: aload_0
      53: aload_1
      54: getfield      #13                 // Field port:I
      57: putfield      #13                 // Field port:I
      60: aload_0
      61: aload_1
      62: getfield      #3                  // Field enabled:Z
      65: putfield      #3                  // Field enabled:Z
      68: aload_0
      69: aload_1
      70: getfield      #4                  // Field healthy:Z
      73: putfield      #4                  // Field healthy:Z
      76: aload_0
      77: aload_1
      78: getfield      #14                 // Field serviceMetadata:Lorg/apache/dubbo/metadata/MetadataInfo;
      81: putfield      #14                 // Field serviceMetadata:Lorg/apache/dubbo/metadata/MetadataInfo;
      84: aload_0
      85: aload_1
      86: getfield      #15                 // Field registryCluster:Ljava/lang/String;
      89: putfield      #15                 // Field registryCluster:Ljava/lang/String;
      92: aload_0
      93: aconst_null
      94: putfield      #16                 // Field address:Ljava/lang/String;
      97: aload_0
      98: new           #5                  // class java/util/HashMap
     101: dup
     102: aload_1
     103: getfield      #7                  // Field metadata:Ljava/util/Map;
     106: invokespecial #17                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
     109: putfield      #7                  // Field metadata:Ljava/util/Map;
     112: aload_0
     113: aload_1
     114: getfield      #18                 // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
     117: putfield      #18                 // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
     120: aload_0
     121: aload_1
     122: getfield      #19                 // Field extendParams:Ljava/util/Map;
     125: ifnull        142
     128: new           #5                  // class java/util/HashMap
     131: dup
     132: aload_1
     133: getfield      #19                 // Field extendParams:Ljava/util/Map;
     136: invokespecial #17                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
     139: goto          146
     142: aload_1
     143: getfield      #19                 // Field extendParams:Ljava/util/Map;
     146: putfield      #19                 // Field extendParams:Ljava/util/Map;
     149: aload_0
     150: aload_1
     151: getfield      #20                 // Field endpoints:Ljava/util/List;
     154: ifnull        171
     157: new           #21                 // class java/util/ArrayList
     160: dup
     161: aload_1
     162: getfield      #20                 // Field endpoints:Ljava/util/List;
     165: invokespecial #22                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     168: goto          175
     171: aload_1
     172: getfield      #20                 // Field endpoints:Ljava/util/List;
     175: putfield      #20                 // Field endpoints:Ljava/util/List;
     178: return

  public org.apache.dubbo.registry.client.DefaultServiceInstance(java.lang.String, java.lang.String, java.lang.Integer, org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field enabled:Z
       9: aload_0
      10: iconst_1
      11: putfield      #4                  // Field healthy:Z
      14: aload_0
      15: new           #5                  // class java/util/HashMap
      18: dup
      19: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      22: putfield      #7                  // Field metadata:Ljava/util/Map;
      25: aload_0
      26: new           #8                  // class java/util/concurrent/ConcurrentHashMap
      29: dup
      30: invokespecial #9                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      33: putfield      #10                 // Field instanceAddressURL:Ljava/util/Map;
      36: aload_3
      37: ifnull        48
      40: aload_3
      41: invokevirtual #23                 // Method java/lang/Integer.intValue:()I
      44: iconst_1
      45: if_icmpge     75
      48: new           #24                 // class java/lang/IllegalArgumentException
      51: dup
      52: new           #25                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #27                 // String The port value is illegal, the value is
      61: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_3
      65: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      68: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: aload_0
      76: aload_1
      77: putfield      #11                 // Field serviceName:Ljava/lang/String;
      80: aload_0
      81: aload_2
      82: putfield      #12                 // Field host:Ljava/lang/String;
      85: aload_0
      86: aload_3
      87: invokevirtual #23                 // Method java/lang/Integer.intValue:()I
      90: putfield      #13                 // Field port:I
      93: aload_0
      94: aload         4
      96: invokevirtual #32                 // Method setApplicationModel:(Lorg/apache/dubbo/rpc/model/ApplicationModel;)V
      99: return

  public org.apache.dubbo.registry.client.DefaultServiceInstance(java.lang.String, org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field enabled:Z
       9: aload_0
      10: iconst_1
      11: putfield      #4                  // Field healthy:Z
      14: aload_0
      15: new           #5                  // class java/util/HashMap
      18: dup
      19: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      22: putfield      #7                  // Field metadata:Ljava/util/Map;
      25: aload_0
      26: new           #8                  // class java/util/concurrent/ConcurrentHashMap
      29: dup
      30: invokespecial #9                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      33: putfield      #10                 // Field instanceAddressURL:Ljava/util/Map;
      36: aload_0
      37: aload_1
      38: putfield      #11                 // Field serviceName:Ljava/lang/String;
      41: aload_0
      42: aload_2
      43: invokevirtual #32                 // Method setApplicationModel:(Lorg/apache/dubbo/rpc/model/ApplicationModel;)V
      46: return

  public void setRawAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field rawAddress:Ljava/lang/String;
       5: return

  public void setServiceName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field serviceName:Ljava/lang/String;
       5: return

  public void setHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field host:Ljava/lang/String;
       5: return

  public java.lang.String getServiceName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field serviceName:Ljava/lang/String;
       4: areturn

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #12                 // Field host:Ljava/lang/String;
       4: areturn

  public void setPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field port:I
       5: return

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #13                 // Field port:I
       4: ireturn

  public java.lang.String getAddress();
    Code:
       0: aload_0
       1: getfield      #16                 // Field address:Ljava/lang/String;
       4: ifnonnull     25
       7: aload_0
       8: aload_0
       9: getfield      #12                 // Field host:Ljava/lang/String;
      12: aload_0
      13: getfield      #13                 // Field port:I
      16: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: invokestatic  #35                 // Method getAddress:(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/String;
      22: putfield      #16                 // Field address:Ljava/lang/String;
      25: aload_0
      26: getfield      #16                 // Field address:Ljava/lang/String;
      29: areturn

  private static java.lang.String getAddress(java.lang.String, java.lang.Integer);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_1
       5: invokevirtual #23                 // Method java/lang/Integer.intValue:()I
       8: ifgt          15
      11: aload_0
      12: goto          38
      15: new           #25                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      22: aload_0
      23: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: bipush        58
      28: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: areturn

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #3                  // Field enabled:Z
       4: ireturn

  public void setEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field enabled:Z
       5: return

  public boolean isHealthy();
    Code:
       0: aload_0
       1: getfield      #4                  // Field healthy:Z
       4: ireturn

  public void setHealthy(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field healthy:Z
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getMetadata();
    Code:
       0: aload_0
       1: getfield      #7                  // Field metadata:Ljava/util/Map;
       4: areturn

  public java.util.SortedMap<java.lang.String, java.lang.String> getSortedMetadata();
    Code:
       0: new           #37                 // class java/util/TreeMap
       3: dup
       4: aload_0
       5: invokevirtual #38                 // Method getMetadata:()Ljava/util/Map;
       8: invokespecial #39                 // Method java/util/TreeMap."<init>":(Ljava/util/Map;)V
      11: areturn

  public java.lang.String getRegistryCluster();
    Code:
       0: aload_0
       1: getfield      #15                 // Field registryCluster:Ljava/lang/String;
       4: areturn

  public void setRegistryCluster(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field registryCluster:Ljava/lang/String;
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getExtendParams();
    Code:
       0: aload_0
       1: getfield      #19                 // Field extendParams:Ljava/util/Map;
       4: ifnonnull     11
       7: invokestatic  #40                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      10: areturn
      11: aload_0
      12: getfield      #19                 // Field extendParams:Ljava/util/Map;
      15: areturn

  public java.lang.String getExtendParam(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field extendParams:Ljava/util/Map;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #19                 // Field extendParams:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #42                 // class java/lang/String
      22: areturn

  public java.lang.String putExtendParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field extendParams:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #5                  // class java/util/HashMap
      11: dup
      12: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      15: putfield      #19                 // Field extendParams:Ljava/util/Map;
      18: aload_0
      19: getfield      #19                 // Field extendParams:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #43,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #42                 // class java/lang/String
      32: areturn

  public java.lang.String putExtendParamIfAbsent(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field extendParams:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #5                  // class java/util/HashMap
      11: dup
      12: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      15: putfield      #19                 // Field extendParams:Ljava/util/Map;
      18: aload_0
      19: getfield      #19                 // Field extendParams:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #44,  3           // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #42                 // class java/lang/String
      32: areturn

  public java.lang.String removeExtendParam(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field extendParams:Ljava/util/Map;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #19                 // Field extendParams:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #45,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #42                 // class java/lang/String
      22: areturn

  public void setEndpoints(java.util.List<org.apache.dubbo.registry.client.DefaultServiceInstance$Endpoint>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field endpoints:Ljava/util/List;
       5: return

  public java.util.List<org.apache.dubbo.registry.client.DefaultServiceInstance$Endpoint> getEndpoints();
    Code:
       0: aload_0
       1: getfield      #20                 // Field endpoints:Ljava/util/List;
       4: ifnonnull     37
       7: aload_0
       8: new           #46                 // class java/util/LinkedList
      11: dup
      12: aload_0
      13: getfield      #7                  // Field metadata:Ljava/util/Map;
      16: ldc           #47                 // String dubbo.endpoints
      18: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #42                 // class java/lang/String
      26: ldc           #48                 // class org/apache/dubbo/registry/client/DefaultServiceInstance$Endpoint
      28: invokestatic  #49                 // Method org/apache/dubbo/common/utils/JsonUtils.toJavaList:(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/List;
      31: invokespecial #50                 // Method java/util/LinkedList."<init>":(Ljava/util/Collection;)V
      34: putfield      #20                 // Field endpoints:Ljava/util/List;
      37: aload_0
      38: getfield      #20                 // Field endpoints:Ljava/util/List;
      41: areturn

  public org.apache.dubbo.registry.client.DefaultServiceInstance copyFrom(org.apache.dubbo.registry.client.DefaultServiceInstance$Endpoint);
    Code:
       0: new           #51                 // class org/apache/dubbo/registry/client/DefaultServiceInstance
       3: dup
       4: aload_0
       5: invokespecial #52                 // Method "<init>":(Lorg/apache/dubbo/registry/client/DefaultServiceInstance;)V
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokevirtual #53                 // Method org/apache/dubbo/registry/client/DefaultServiceInstance$Endpoint.getPort:()I
      14: invokevirtual #54                 // Method setPort:(I)V
      17: aload_2
      18: areturn

  public org.apache.dubbo.registry.client.DefaultServiceInstance copyFrom(int);
    Code:
       0: new           #51                 // class org/apache/dubbo/registry/client/DefaultServiceInstance
       3: dup
       4: aload_0
       5: invokespecial #52                 // Method "<init>":(Lorg/apache/dubbo/registry/client/DefaultServiceInstance;)V
       8: astore_2
       9: aload_2
      10: iload_1
      11: invokevirtual #54                 // Method setPort:(I)V
      14: aload_2
      15: areturn

  public java.util.Map<java.lang.String, java.lang.String> getAllParams();
    Code:
       0: aload_0
       1: getfield      #19                 // Field extendParams:Ljava/util/Map;
       4: ifnonnull     12
       7: aload_0
       8: getfield      #7                  // Field metadata:Ljava/util/Map;
      11: areturn
      12: new           #5                  // class java/util/HashMap
      15: dup
      16: aload_0
      17: getfield      #7                  // Field metadata:Ljava/util/Map;
      20: invokeinterface #55,  1           // InterfaceMethod java/util/Map.size:()I
      25: aload_0
      26: getfield      #19                 // Field extendParams:Ljava/util/Map;
      29: invokeinterface #55,  1           // InterfaceMethod java/util/Map.size:()I
      34: iadd
      35: i2f
      36: ldc           #56                 // float 0.75f
      38: fdiv
      39: fconst_1
      40: fadd
      41: f2i
      42: invokespecial #57                 // Method java/util/HashMap."<init>":(I)V
      45: astore_1
      46: aload_1
      47: aload_0
      48: getfield      #7                  // Field metadata:Ljava/util/Map;
      51: invokeinterface #58,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      56: aload_1
      57: aload_0
      58: getfield      #19                 // Field extendParams:Ljava/util/Map;
      61: invokeinterface #58,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      66: aload_1
      67: areturn

  public void setApplicationModel(org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
       5: return

  public org.apache.dubbo.rpc.model.ApplicationModel getApplicationModel();
    Code:
       0: aload_0
       1: getfield      #18                 // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
       4: areturn

  public void setMetadata(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field metadata:Ljava/util/Map;
       5: return

  public org.apache.dubbo.metadata.MetadataInfo getServiceMetadata();
    Code:
       0: aload_0
       1: getfield      #14                 // Field serviceMetadata:Lorg/apache/dubbo/metadata/MetadataInfo;
       4: areturn

  public void setServiceMetadata(org.apache.dubbo.metadata.MetadataInfo);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field serviceMetadata:Lorg/apache/dubbo/metadata/MetadataInfo;
       5: aload_0
       6: getfield      #10                 // Field instanceAddressURL:Ljava/util/Map;
       9: invokeinterface #59,  1           // InterfaceMethod java/util/Map.clear:()V
      14: return

  public org.apache.dubbo.registry.client.InstanceAddressURL toURL(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field instanceAddressURL:Ljava/util/Map;
       4: aload_1
       5: aload_0
       6: aload_1
       7: invokedynamic #60,  0             // InvokeDynamic #0:apply:(Lorg/apache/dubbo/registry/client/DefaultServiceInstance;Ljava/lang/String;)Ljava/util/function/Function;
      12: invokeinterface #61,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      17: checkcast     #62                 // class org/apache/dubbo/registry/client/InstanceAddressURL
      20: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #51                 // class org/apache/dubbo/registry/client/DefaultServiceInstance
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #51                 // class org/apache/dubbo/registry/client/DefaultServiceInstance
      20: astore_2
      21: aload_0
      22: invokevirtual #63                 // Method getServiceName:()Ljava/lang/String;
      25: aload_2
      26: invokevirtual #63                 // Method getServiceName:()Ljava/lang/String;
      29: invokestatic  #64                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifeq          73
      35: aload_0
      36: invokevirtual #65                 // Method getHost:()Ljava/lang/String;
      39: aload_2
      40: invokevirtual #65                 // Method getHost:()Ljava/lang/String;
      43: invokestatic  #64                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      46: ifeq          73
      49: aload_0
      50: invokevirtual #66                 // Method getPort:()I
      53: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: aload_2
      57: invokevirtual #66                 // Method getPort:()I
      60: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      63: invokestatic  #64                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      66: ifeq          73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: istore_3
      75: aload_0
      76: invokevirtual #38                 // Method getMetadata:()Ljava/util/Map;
      79: invokeinterface #67,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      84: invokeinterface #68,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      89: astore        4
      91: aload         4
      93: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      98: ifeq          228
     101: aload         4
     103: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     108: checkcast     #71                 // class java/util/Map$Entry
     111: astore        5
     113: aload         5
     115: invokeinterface #72,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     120: checkcast     #42                 // class java/lang/String
     123: ldc           #73                 // String dubbo.metadata.revision
     125: invokevirtual #74                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     128: ifeq          134
     131: goto          91
     134: aload         5
     136: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     141: ifnonnull     183
     144: iload_3
     145: ifeq          178
     148: aload         5
     150: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     155: aload_2
     156: invokevirtual #38                 // Method getMetadata:()Ljava/util/Map;
     159: aload         5
     161: invokeinterface #72,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     166: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     171: if_acmpne     178
     174: iconst_1
     175: goto          179
     178: iconst_0
     179: istore_3
     180: goto          225
     183: iload_3
     184: ifeq          223
     187: aload         5
     189: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     194: checkcast     #42                 // class java/lang/String
     197: aload_2
     198: invokevirtual #38                 // Method getMetadata:()Ljava/util/Map;
     201: aload         5
     203: invokeinterface #72,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     208: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     213: invokevirtual #74                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     216: ifeq          223
     219: iconst_1
     220: goto          224
     223: iconst_0
     224: istore_3
     225: goto          91
     228: iload_3
     229: ireturn

  public int hashCode();
    Code:
       0: iconst_3
       1: anewarray     #76                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: invokevirtual #63                 // Method getServiceName:()Ljava/lang/String;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: invokevirtual #65                 // Method getHost:()Ljava/lang/String;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: invokevirtual #66                 // Method getPort:()I
      24: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: invokestatic  #77                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      31: istore_1
      32: aload_0
      33: invokevirtual #38                 // Method getMetadata:()Ljava/util/Map;
      36: invokeinterface #67,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      41: invokeinterface #68,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      46: astore_2
      47: aload_2
      48: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      53: ifeq          120
      56: aload_2
      57: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #71                 // class java/util/Map$Entry
      65: astore_3
      66: aload_3
      67: invokeinterface #72,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      72: checkcast     #42                 // class java/lang/String
      75: ldc           #73                 // String dubbo.metadata.revision
      77: invokevirtual #74                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      80: ifeq          86
      83: goto          47
      86: bipush        31
      88: iload_1
      89: imul
      90: aload_3
      91: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      96: ifnonnull     103
      99: iconst_0
     100: goto          115
     103: aload_3
     104: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     109: checkcast     #42                 // class java/lang/String
     112: invokevirtual #78                 // Method java/lang/String.hashCode:()I
     115: iadd
     116: istore_1
     117: goto          47
     120: iload_1
     121: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #33                 // Field rawAddress:Ljava/lang/String;
       4: ifnonnull     14
       7: aload_0
       8: invokevirtual #79                 // Method toFullString:()Ljava/lang/String;
      11: goto          18
      14: aload_0
      15: getfield      #33                 // Field rawAddress:Ljava/lang/String;
      18: areturn

  public java.lang.String toFullString();
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #80                 // String DefaultServiceInstance{serviceName=\'
       9: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #11                 // Field serviceName:Ljava/lang/String;
      16: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: bipush        39
      21: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: ldc           #81                 // String , host=\'
      26: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #12                 // Field host:Ljava/lang/String;
      33: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: bipush        39
      38: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      41: ldc           #82                 // String , port=
      43: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #13                 // Field port:I
      50: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: ldc           #84                 // String , enabled=
      55: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: getfield      #3                  // Field enabled:Z
      62: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      65: ldc           #86                 // String , healthy=
      67: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_0
      71: getfield      #4                  // Field healthy:Z
      74: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      77: ldc           #87                 // String , metadata=
      79: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_0
      83: getfield      #7                  // Field metadata:Ljava/util/Map;
      86: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      89: bipush        125
      91: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      94: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: areturn

  private org.apache.dubbo.registry.client.InstanceAddressURL lambda$toURL$0(java.lang.String, java.lang.String);
    Code:
       0: new           #62                 // class org/apache/dubbo/registry/client/InstanceAddressURL
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #14                 // Field serviceMetadata:Lorg/apache/dubbo/metadata/MetadataInfo;
       9: aload_1
      10: invokespecial #88                 // Method org/apache/dubbo/registry/client/InstanceAddressURL."<init>":(Lorg/apache/dubbo/registry/client/ServiceInstance;Lorg/apache/dubbo/metadata/MetadataInfo;Ljava/lang/String;)V
      13: areturn
}
