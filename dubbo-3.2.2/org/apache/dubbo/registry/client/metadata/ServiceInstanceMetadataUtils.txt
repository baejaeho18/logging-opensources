Compiled from "ServiceInstanceMetadataUtils.java"
public class org.apache.dubbo.registry.client.metadata.ServiceInstanceMetadataUtils {
  private static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger LOGGER;

  public static final java.lang.String METADATA_SERVICE_PREFIX;

  public static final java.lang.String ENDPOINTS;

  public static final java.lang.String METADATA_SERVICE_URL_PARAMS_PROPERTY_NAME;

  public static final java.lang.String METADATA_SERVICE_URLS_PROPERTY_NAME;

  public static final java.lang.String EXPORTED_SERVICES_REVISION_PROPERTY_NAME;

  public static final java.lang.String METADATA_STORAGE_TYPE_PROPERTY_NAME;

  public static final java.lang.String METADATA_CLUSTER_PROPERTY_NAME;

  public org.apache.dubbo.registry.client.metadata.ServiceInstanceMetadataUtils();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String getMetadataServiceParameter(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: ifnonnull     7
       4: ldc           #5                  // String
       6: areturn
       7: aload_0
       8: iconst_4
       9: anewarray     #6                  // class java/lang/String
      12: dup
      13: iconst_0
      14: ldc           #7                  // String application
      16: aastore
      17: dup
      18: iconst_1
      19: ldc           #8                  // String group
      21: aastore
      22: dup
      23: iconst_2
      24: ldc           #9                  // String deprecated
      26: aastore
      27: dup
      28: iconst_3
      29: ldc           #10                 // String timestamp
      31: aastore
      32: invokevirtual #11                 // Method org/apache/dubbo/common/URL.removeParameters:([Ljava/lang/String;)Lorg/apache/dubbo/common/URL;
      35: astore_0
      36: aload_0
      37: invokestatic  #12                 // Method getParams:(Lorg/apache/dubbo/common/URL;)Ljava/util/Map;
      40: astore_1
      41: aload_1
      42: invokeinterface #13,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      47: ifeq          52
      50: aconst_null
      51: areturn
      52: aload_1
      53: invokestatic  #14                 // Method org/apache/dubbo/common/utils/JsonUtils.toJson:(Ljava/lang/Object;)Ljava/lang/String;
      56: areturn

  private static java.util.Map<java.lang.String, java.lang.String> getParams(org.apache.dubbo.common.URL);
    Code:
       0: new           #15                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #16                 // Method java/util/LinkedHashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokestatic  #17                 // Method setDefaultParams:(Ljava/util/Map;Lorg/apache/dubbo/common/URL;)V
      13: aload_1
      14: ldc           #18                 // String port
      16: aload_0
      17: invokevirtual #19                 // Method org/apache/dubbo/common/URL.getPort:()I
      20: invokestatic  #20                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      23: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: aload_1
      30: ldc           #22                 // String protocol
      32: aload_0
      33: invokevirtual #23                 // Method org/apache/dubbo/common/URL.getProtocol:()Ljava/lang/String;
      36: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload_1
      43: areturn

  public static java.lang.String getExportedServicesRevision(org.apache.dubbo.registry.client.ServiceInstance);
    Code:
       0: aload_0
       1: invokeinterface #24,  1           // InterfaceMethod org/apache/dubbo/registry/client/ServiceInstance.getServiceMetadata:()Lorg/apache/dubbo/metadata/MetadataInfo;
       6: invokestatic  #25                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       9: invokedynamic #26,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      14: invokevirtual #27                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      17: invokedynamic #28,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      22: invokevirtual #29                 // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      25: aload_0
      26: ldc           #30                 // String dubbo.metadata.revision
      28: invokeinterface #31,  2           // InterfaceMethod org/apache/dubbo/registry/client/ServiceInstance.getMetadata:(Ljava/lang/String;)Ljava/lang/String;
      33: invokevirtual #32                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #6                  // class java/lang/String
      39: areturn

  public static java.lang.String getMetadataStorageType(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: ldc           #33                 // String dubbo.metadata.storage-type
       3: ldc           #34                 // String local
       5: invokevirtual #35                 // Method org/apache/dubbo/common/URL.getParameter:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public static java.lang.String getMetadataStorageType(org.apache.dubbo.registry.client.ServiceInstance);
    Code:
       0: aload_0
       1: invokeinterface #36,  1           // InterfaceMethod org/apache/dubbo/registry/client/ServiceInstance.getMetadata:()Ljava/util/Map;
       6: astore_1
       7: aload_1
       8: ldc           #33                 // String dubbo.metadata.storage-type
      10: ldc           #34                 // String local
      12: invokeinterface #37,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #6                  // class java/lang/String
      20: areturn

  public static void setMetadataStorageType(org.apache.dubbo.registry.client.ServiceInstance, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #36,  1           // InterfaceMethod org/apache/dubbo/registry/client/ServiceInstance.getMetadata:()Ljava/util/Map;
       6: astore_2
       7: aload_2
       8: ldc           #33                 // String dubbo.metadata.storage-type
      10: aload_1
      11: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public static java.lang.String getRemoteCluster(org.apache.dubbo.registry.client.ServiceInstance);
    Code:
       0: aload_0
       1: invokeinterface #36,  1           // InterfaceMethod org/apache/dubbo/registry/client/ServiceInstance.getMetadata:()Ljava/util/Map;
       6: astore_1
       7: aload_1
       8: ldc           #38                 // String dubbo.metadata.cluster
      10: invokeinterface #39,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #6                  // class java/lang/String
      18: areturn

  public static boolean hasEndpoints(org.apache.dubbo.registry.client.ServiceInstance);
    Code:
       0: aload_0
       1: invokeinterface #36,  1           // InterfaceMethod org/apache/dubbo/registry/client/ServiceInstance.getMetadata:()Ljava/util/Map;
       6: ldc           #40                 // String dubbo.endpoints
       8: invokeinterface #39,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #6                  // class java/lang/String
      16: invokestatic  #41                 // Method org/apache/dubbo/common/utils/StringUtils.isNotEmpty:(Ljava/lang/String;)Z
      19: ireturn

  public static void setEndpoints(org.apache.dubbo.registry.client.ServiceInstance, java.util.Map<java.lang.String, java.lang.Integer>);
    Code:
       0: aload_0
       1: invokeinterface #36,  1           // InterfaceMethod org/apache/dubbo/registry/client/ServiceInstance.getMetadata:()Ljava/util/Map;
       6: astore_2
       7: new           #42                 // class java/util/ArrayList
      10: dup
      11: invokespecial #43                 // Method java/util/ArrayList."<init>":()V
      14: astore_3
      15: aload_1
      16: aload_3
      17: invokedynamic #44,  0             // InvokeDynamic #2:accept:(Ljava/util/List;)Ljava/util/function/BiConsumer;
      22: invokeinterface #45,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      27: aload_2
      28: ldc           #40                 // String dubbo.endpoints
      30: aload_3
      31: invokestatic  #14                 // Method org/apache/dubbo/common/utils/JsonUtils.toJson:(Ljava/lang/Object;)Ljava/lang/String;
      34: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: return

  public static org.apache.dubbo.registry.client.DefaultServiceInstance$Endpoint getEndpoint(org.apache.dubbo.registry.client.ServiceInstance, java.lang.String);
    Code:
       0: aload_0
       1: checkcast     #46                 // class org/apache/dubbo/registry/client/DefaultServiceInstance
       4: invokevirtual #47                 // Method org/apache/dubbo/registry/client/DefaultServiceInstance.getEndpoints:()Ljava/util/List;
       7: astore_2
       8: aload_2
       9: ifnull        57
      12: aload_2
      13: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          57
      28: aload_3
      29: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #51                 // class org/apache/dubbo/registry/client/DefaultServiceInstance$Endpoint
      37: astore        4
      39: aload         4
      41: invokevirtual #52                 // Method org/apache/dubbo/registry/client/DefaultServiceInstance$Endpoint.getProtocol:()Ljava/lang/String;
      44: aload_1
      45: invokevirtual #53                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifeq          54
      51: aload         4
      53: areturn
      54: goto          19
      57: aconst_null
      58: areturn

  public static void registerMetadataAndInstance(org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: getstatic     #54                 // Field LOGGER:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       3: ldc           #55                 // String Start registering instance address to registry.
       5: invokeinterface #56,  2           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.info:(Ljava/lang/String;)V
      10: aload_0
      11: invokevirtual #57                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getBeanFactory:()Lorg/apache/dubbo/common/beans/factory/ScopeBeanFactory;
      14: ldc           #58                 // class org/apache/dubbo/registry/support/RegistryManager
      16: invokevirtual #59                 // Method org/apache/dubbo/common/beans/factory/ScopeBeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      19: checkcast     #58                 // class org/apache/dubbo/registry/support/RegistryManager
      22: astore_1
      23: aload_1
      24: invokevirtual #60                 // Method org/apache/dubbo/registry/support/RegistryManager.getServiceDiscoveries:()Ljava/util/List;
      27: invokedynamic #61,  0             // InvokeDynamic #3:accept:()Ljava/util/function/Consumer;
      32: invokeinterface #62,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      37: return

  public static void refreshMetadataAndInstance(org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getBeanFactory:()Lorg/apache/dubbo/common/beans/factory/ScopeBeanFactory;
       4: ldc           #58                 // class org/apache/dubbo/registry/support/RegistryManager
       6: invokevirtual #59                 // Method org/apache/dubbo/common/beans/factory/ScopeBeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
       9: checkcast     #58                 // class org/apache/dubbo/registry/support/RegistryManager
      12: astore_1
      13: aload_1
      14: invokevirtual #60                 // Method org/apache/dubbo/registry/support/RegistryManager.getServiceDiscoveries:()Ljava/util/List;
      17: invokedynamic #63,  0             // InvokeDynamic #4:accept:()Ljava/util/function/Consumer;
      22: invokeinterface #62,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      27: return

  public static void unregisterMetadataAndInstance(org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getBeanFactory:()Lorg/apache/dubbo/common/beans/factory/ScopeBeanFactory;
       4: ldc           #58                 // class org/apache/dubbo/registry/support/RegistryManager
       6: invokevirtual #59                 // Method org/apache/dubbo/common/beans/factory/ScopeBeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
       9: checkcast     #58                 // class org/apache/dubbo/registry/support/RegistryManager
      12: astore_1
      13: aload_1
      14: invokevirtual #60                 // Method org/apache/dubbo/registry/support/RegistryManager.getServiceDiscoveries:()Ljava/util/List;
      17: invokedynamic #64,  0             // InvokeDynamic #5:accept:()Ljava/util/function/Consumer;
      22: invokeinterface #62,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      27: return

  public static void customizeInstance(org.apache.dubbo.registry.client.ServiceInstance, org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: aload_0
       1: invokeinterface #65,  1           // InterfaceMethod org/apache/dubbo/registry/client/ServiceInstance.getOrDefaultApplicationModel:()Lorg/apache/dubbo/rpc/model/ApplicationModel;
       6: ldc           #66                 // class org/apache/dubbo/registry/client/ServiceInstanceCustomizer
       8: invokevirtual #67                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getExtensionLoader:(Ljava/lang/Class;)Lorg/apache/dubbo/common/extension/ExtensionLoader;
      11: astore_2
      12: aload_2
      13: invokevirtual #68                 // Method org/apache/dubbo/common/extension/ExtensionLoader.getSupportedExtensionInstances:()Ljava/util/Set;
      16: aload_0
      17: aload_1
      18: invokedynamic #69,  0             // InvokeDynamic #6:accept:(Lorg/apache/dubbo/registry/client/ServiceInstance;Lorg/apache/dubbo/rpc/model/ApplicationModel;)Ljava/util/function/Consumer;
      23: invokeinterface #70,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      28: return

  public static boolean isValidInstance(org.apache.dubbo.registry.client.ServiceInstance);
    Code:
       0: aload_0
       1: ifnull        26
       4: aload_0
       5: invokeinterface #71,  1           // InterfaceMethod org/apache/dubbo/registry/client/ServiceInstance.getHost:()Ljava/lang/String;
      10: ifnull        26
      13: aload_0
      14: invokeinterface #72,  1           // InterfaceMethod org/apache/dubbo/registry/client/ServiceInstance.getPort:()I
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  private static void setDefaultParams(java.util.Map<java.lang.String, java.lang.String>, org.apache.dubbo.common.URL);
    Code:
       0: getstatic     #73                 // Field org/apache/dubbo/registry/integration/InterfaceCompatibleRegistryProtocol.DEFAULT_REGISTER_PROVIDER_KEYS:[Ljava/lang/String;
       3: astore_2
       4: aload_2
       5: arraylength
       6: istore_3
       7: iconst_0
       8: istore        4
      10: iload         4
      12: iload_3
      13: if_icmpge     55
      16: aload_2
      17: iload         4
      19: aaload
      20: astore        5
      22: aload_1
      23: aload         5
      25: invokevirtual #74                 // Method org/apache/dubbo/common/URL.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      28: astore        6
      30: aload         6
      32: invokestatic  #75                 // Method org/apache/dubbo/common/utils/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
      35: ifne          49
      38: aload_0
      39: aload         5
      41: aload         6
      43: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: iinc          4, 1
      52: goto          10
      55: return

  private static void lambda$customizeInstance$2(org.apache.dubbo.registry.client.ServiceInstance, org.apache.dubbo.rpc.model.ApplicationModel, org.apache.dubbo.registry.client.ServiceInstanceCustomizer);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokeinterface #76,  3           // InterfaceMethod org/apache/dubbo/registry/client/ServiceInstanceCustomizer.customize:(Lorg/apache/dubbo/registry/client/ServiceInstance;Lorg/apache/dubbo/rpc/model/ApplicationModel;)V
       8: return

  private static void lambda$unregisterMetadataAndInstance$1(org.apache.dubbo.registry.client.ServiceDiscovery);
    Code:
       0: aload_0
       1: invokeinterface #77,  1           // InterfaceMethod org/apache/dubbo/registry/client/ServiceDiscovery.unregister:()V
       6: goto          10
       9: astore_1
      10: return
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Exception

  private static void lambda$setEndpoints$0(java.util.List, java.lang.String, java.lang.Integer);
    Code:
       0: new           #51                 // class org/apache/dubbo/registry/client/DefaultServiceInstance$Endpoint
       3: dup
       4: aload_2
       5: invokevirtual #79                 // Method java/lang/Integer.intValue:()I
       8: aload_1
       9: invokespecial #80                 // Method org/apache/dubbo/registry/client/DefaultServiceInstance$Endpoint."<init>":(ILjava/lang/String;)V
      12: astore_3
      13: aload_0
      14: aload_3
      15: invokeinterface #81,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      20: pop
      21: return

  static {};
    Code:
       0: ldc           #1                  // class org/apache/dubbo/registry/client/metadata/ServiceInstanceMetadataUtils
       2: invokestatic  #82                 // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #54                 // Field LOGGER:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: return
}
