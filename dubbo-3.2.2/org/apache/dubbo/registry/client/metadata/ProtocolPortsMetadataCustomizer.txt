Compiled from "ProtocolPortsMetadataCustomizer.java"
public class org.apache.dubbo.registry.client.metadata.ProtocolPortsMetadataCustomizer implements org.apache.dubbo.registry.client.ServiceInstanceCustomizer {
  private static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger LOGGER;

  public org.apache.dubbo.registry.client.metadata.ProtocolPortsMetadataCustomizer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void customize(org.apache.dubbo.registry.client.ServiceInstance, org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod org/apache/dubbo/registry/client/ServiceInstance.getServiceMetadata:()Lorg/apache/dubbo/metadata/MetadataInfo;
       6: astore_3
       7: aload_3
       8: ifnull        21
      11: aload_3
      12: invokevirtual #3                  // Method org/apache/dubbo/metadata/MetadataInfo.getExportedServiceURLs:()Ljava/util/concurrent/ConcurrentNavigableMap;
      15: invokestatic  #4                  // Method org/apache/dubbo/common/utils/CollectionUtils.isEmptyMap:(Ljava/util/Map;)Z
      18: ifeq          22
      21: return
      22: new           #5                  // class java/util/HashMap
      25: dup
      26: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      29: astore        4
      31: aload_3
      32: invokevirtual #7                  // Method org/apache/dubbo/metadata/MetadataInfo.collectExportedURLSet:()Ljava/util/Set;
      35: astore        5
      37: aload         5
      39: aload         4
      41: invokedynamic #8,  0              // InvokeDynamic #0:accept:(Ljava/util/Map;)Ljava/util/function/Consumer;
      46: invokeinterface #9,  2            // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      51: aload         4
      53: invokeinterface #10,  1           // InterfaceMethod java/util/Map.size:()I
      58: ifle          67
      61: aload_1
      62: aload         4
      64: invokestatic  #11                 // Method org/apache/dubbo/registry/client/metadata/ServiceInstanceMetadataUtils.setEndpoints:(Lorg/apache/dubbo/registry/client/ServiceInstance;Ljava/util/Map;)V
      67: return

  private static void lambda$customize$0(java.util.Map, org.apache.dubbo.common.URL);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/apache/dubbo/common/URL.getProtocol:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #14                 // class java/lang/Integer
      15: astore_3
      16: aload_1
      17: invokevirtual #15                 // Method org/apache/dubbo/common/URL.getPort:()I
      20: istore        4
      22: aload_3
      23: ifnull        111
      26: aload_3
      27: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
      30: iload         4
      32: if_icmpeq     111
      35: getstatic     #17                 // Field LOGGER:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      38: ldc           #19                 // String 4-19
      40: ldc           #20                 // String the protocol is listening multiple ports
      42: ldc           #21                 // String
      44: new           #22                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #24                 // String Same protocol [
      53: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_2
      57: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #26                 // String ] listens on different ports [
      62: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_3
      66: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: ldc           #28                 // String ,
      71: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: iload         4
      76: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: ldc           #30                 // String ] will override with each other. The port [
      81: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_3
      85: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      88: ldc           #31                 // String ] is overridden with port [
      90: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: iload         4
      95: invokevirtual #29                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      98: ldc           #32                 // String ].
     100: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokeinterface #34,  5           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.warn:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     111: aload_0
     112: aload_2
     113: iload         4
     115: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     118: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     123: pop
     124: return

  static {};
    Code:
       0: ldc           #37                 // class org/apache/dubbo/registry/client/metadata/ProtocolPortsMetadataCustomizer
       2: invokestatic  #38                 // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #17                 // Field LOGGER:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: return
}
