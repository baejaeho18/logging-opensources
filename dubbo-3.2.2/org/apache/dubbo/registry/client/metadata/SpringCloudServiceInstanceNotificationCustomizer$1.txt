Compiled from "SpringCloudServiceInstanceNotificationCustomizer.java"
class org.apache.dubbo.registry.client.metadata.SpringCloudServiceInstanceNotificationCustomizer$1 extends org.apache.dubbo.metadata.MetadataInfo {
  final org.apache.dubbo.registry.client.ServiceInstance val$instance;

  final org.apache.dubbo.registry.client.metadata.SpringCloudServiceInstanceNotificationCustomizer this$0;

  org.apache.dubbo.registry.client.metadata.SpringCloudServiceInstanceNotificationCustomizer$1(org.apache.dubbo.registry.client.metadata.SpringCloudServiceInstanceNotificationCustomizer, java.lang.String, java.lang.String, java.util.Map, org.apache.dubbo.registry.client.ServiceInstance);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/dubbo/registry/client/metadata/SpringCloudServiceInstanceNotificationCustomizer;
       5: aload_0
       6: aload         5
       8: putfield      #2                  // Field val$instance:Lorg/apache/dubbo/registry/client/ServiceInstance;
      11: aload_0
      12: aload_2
      13: aload_3
      14: aload         4
      16: invokespecial #3                  // Method org/apache/dubbo/metadata/MetadataInfo."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
      19: return

  public java.util.List<org.apache.dubbo.metadata.MetadataInfo$ServiceInfo> getMatchedServiceInfos(org.apache.dubbo.common.ProtocolServiceKey);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getServices:()Ljava/util/Map;
       4: aload_1
       5: invokevirtual #5                  // Method org/apache/dubbo/common/ProtocolServiceKey.getServiceKeyString:()Ljava/lang/String;
       8: new           #6                  // class org/apache/dubbo/metadata/MetadataInfo$ServiceInfo
      11: dup
      12: aload_1
      13: invokevirtual #7                  // Method org/apache/dubbo/common/ProtocolServiceKey.getInterfaceName:()Ljava/lang/String;
      16: aload_1
      17: invokevirtual #8                  // Method org/apache/dubbo/common/ProtocolServiceKey.getGroup:()Ljava/lang/String;
      20: aload_1
      21: invokevirtual #9                  // Method org/apache/dubbo/common/ProtocolServiceKey.getVersion:()Ljava/lang/String;
      24: aload_1
      25: invokevirtual #10                 // Method org/apache/dubbo/common/ProtocolServiceKey.getProtocol:()Ljava/lang/String;
      28: aload_0
      29: getfield      #2                  // Field val$instance:Lorg/apache/dubbo/registry/client/ServiceInstance;
      32: invokeinterface #11,  1           // InterfaceMethod org/apache/dubbo/registry/client/ServiceInstance.getPort:()I
      37: aload_1
      38: invokevirtual #7                  // Method org/apache/dubbo/common/ProtocolServiceKey.getInterfaceName:()Ljava/lang/String;
      41: new           #12                 // class java/util/HashMap
      44: dup
      45: invokespecial #13                 // Method java/util/HashMap."<init>":()V
      48: invokespecial #14                 // Method org/apache/dubbo/metadata/MetadataInfo$ServiceInfo."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V
      51: invokeinterface #15,  3           // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: aload_0
      58: aload_1
      59: invokespecial #16                 // Method org/apache/dubbo/metadata/MetadataInfo.getMatchedServiceInfos:(Lorg/apache/dubbo/common/ProtocolServiceKey;)Ljava/util/List;
      62: areturn
}
