Compiled from "MultipleServiceDiscovery.java"
public class org.apache.dubbo.registry.multiple.MultipleServiceDiscovery implements org.apache.dubbo.registry.client.ServiceDiscovery {
  public static final java.lang.String REGISTRY_PREFIX_KEY;

  private static final java.lang.String REGISTRY_TYPE;

  private static final java.lang.String SERVICE;

  private final java.util.Map<java.lang.String, org.apache.dubbo.registry.client.ServiceDiscovery> serviceDiscoveries;

  private org.apache.dubbo.common.URL registryURL;

  private java.lang.String applicationName;

  private volatile boolean isDestroy;

  public org.apache.dubbo.registry.multiple.MultipleServiceDiscovery(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field serviceDiscoveries:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field registryURL:Lorg/apache/dubbo/common/URL;
      20: aload_0
      21: aload_1
      22: invokevirtual #6                  // Method org/apache/dubbo/common/URL.getApplication:()Ljava/lang/String;
      25: putfield      #7                  // Field applicationName:Ljava/lang/String;
      28: aload_1
      29: invokevirtual #8                  // Method org/apache/dubbo/common/URL.getParameters:()Ljava/util/Map;
      32: astore_2
      33: aload_2
      34: invokeinterface #9,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      39: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      44: astore_3
      45: aload_3
      46: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          133
      54: aload_3
      55: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #13                 // class java/lang/String
      63: astore        4
      65: aload         4
      67: ldc           #15                 // String child.
      69: invokevirtual #16                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      72: ifeq          130
      75: aload_1
      76: aload         4
      78: invokevirtual #17                 // Method org/apache/dubbo/common/URL.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      81: invokestatic  #18                 // Method org/apache/dubbo/common/URL.valueOf:(Ljava/lang/String;)Lorg/apache/dubbo/common/URL;
      84: ldc           #20                 // String application
      86: aload_0
      87: getfield      #7                  // Field applicationName:Ljava/lang/String;
      90: invokevirtual #21                 // Method org/apache/dubbo/common/URL.addParameter:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/dubbo/common/URL;
      93: ldc           #22                 // String registry-type
      95: ldc           #23                 // String service
      97: invokevirtual #21                 // Method org/apache/dubbo/common/URL.addParameter:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/dubbo/common/URL;
     100: astore        5
     102: aload         5
     104: invokestatic  #24                 // InterfaceMethod org/apache/dubbo/registry/client/ServiceDiscoveryFactory.getExtension:(Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/registry/client/ServiceDiscoveryFactory;
     107: aload         5
     109: invokeinterface #25,  2           // InterfaceMethod org/apache/dubbo/registry/client/ServiceDiscoveryFactory.getServiceDiscovery:(Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/registry/client/ServiceDiscovery;
     114: astore        6
     116: aload_0
     117: getfield      #4                  // Field serviceDiscoveries:Ljava/util/Map;
     120: aload         4
     122: aload         6
     124: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: goto          45
     133: return

  public org.apache.dubbo.common.URL getUrl();
    Code:
       0: aload_0
       1: getfield      #5                  // Field registryURL:Lorg/apache/dubbo/common/URL;
       4: areturn

  public void destroy() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #27                 // Field isDestroy:Z
       5: aload_0
       6: getfield      #4                  // Field serviceDiscoveries:Ljava/util/Map;
       9: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      14: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      19: astore_1
      20: aload_1
      21: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          48
      29: aload_1
      30: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #30                 // class org/apache/dubbo/registry/client/ServiceDiscovery
      38: astore_2
      39: aload_2
      40: invokeinterface #31,  1           // InterfaceMethod org/apache/dubbo/registry/client/ServiceDiscovery.destroy:()V
      45: goto          20
      48: return

  public boolean isDestroy();
    Code:
       0: aload_0
       1: getfield      #27                 // Field isDestroy:Z
       4: ireturn

  public void register() throws java.lang.RuntimeException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field serviceDiscoveries:Ljava/util/Map;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokedynamic #32,  0             // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      14: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      19: return

  public void update() throws java.lang.RuntimeException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field serviceDiscoveries:Ljava/util/Map;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokedynamic #34,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
      14: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      19: return

  public void unregister() throws java.lang.RuntimeException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field serviceDiscoveries:Ljava/util/Map;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokedynamic #35,  0             // InvokeDynamic #2:accept:()Ljava/util/function/Consumer;
      14: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      19: return

  public void addServiceInstancesChangedListener(org.apache.dubbo.registry.client.event.listener.ServiceInstancesChangedListener) throws java.lang.NullPointerException, java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: checkcast     #36                 // class org/apache/dubbo/registry/multiple/MultipleServiceDiscovery$MultiServiceInstancesChangedListener
       4: astore_2
       5: aload_0
       6: getfield      #4                  // Field serviceDiscoveries:Ljava/util/Map;
       9: invokeinterface #9,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      14: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          85
      29: aload_3
      30: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #13                 // class java/lang/String
      38: astore        4
      40: aload_0
      41: getfield      #4                  // Field serviceDiscoveries:Ljava/util/Map;
      44: aload         4
      46: invokeinterface #37,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      51: checkcast     #30                 // class org/apache/dubbo/registry/client/ServiceDiscovery
      54: astore        5
      56: aload_2
      57: aload         4
      59: aload_1
      60: aload         5
      62: aload_2
      63: invokedynamic #38,  0             // InvokeDynamic #3:apply:(Lorg/apache/dubbo/registry/client/event/listener/ServiceInstancesChangedListener;Lorg/apache/dubbo/registry/client/ServiceDiscovery;Lorg/apache/dubbo/registry/multiple/MultipleServiceDiscovery$MultiServiceInstancesChangedListener;)Ljava/util/function/Function;
      68: invokevirtual #39                 // Method org/apache/dubbo/registry/multiple/MultipleServiceDiscovery$MultiServiceInstancesChangedListener.getAndComputeIfAbsent:(Ljava/lang/String;Ljava/util/function/Function;)Lorg/apache/dubbo/registry/multiple/MultipleServiceDiscovery$SingleServiceInstancesChangedListener;
      71: astore        6
      73: aload         5
      75: aload         6
      77: invokeinterface #40,  2           // InterfaceMethod org/apache/dubbo/registry/client/ServiceDiscovery.addServiceInstancesChangedListener:(Lorg/apache/dubbo/registry/client/event/listener/ServiceInstancesChangedListener;)V
      82: goto          20
      85: return

  public org.apache.dubbo.registry.client.event.listener.ServiceInstancesChangedListener createListener(java.util.Set<java.lang.String>);
    Code:
       0: new           #36                 // class org/apache/dubbo/registry/multiple/MultipleServiceDiscovery$MultiServiceInstancesChangedListener
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #41                 // Method org/apache/dubbo/registry/multiple/MultipleServiceDiscovery$MultiServiceInstancesChangedListener."<init>":(Ljava/util/Set;Lorg/apache/dubbo/registry/client/ServiceDiscovery;)V
       9: areturn

  public java.util.List<org.apache.dubbo.registry.client.ServiceInstance> getInstances(java.lang.String);
    Code:
       0: new           #42                 // class java/util/ArrayList
       3: dup
       4: invokespecial #43                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #4                  // Field serviceDiscoveries:Ljava/util/Map;
      12: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      17: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          61
      32: aload_3
      33: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #30                 // class org/apache/dubbo/registry/client/ServiceDiscovery
      41: astore        4
      43: aload_2
      44: aload         4
      46: aload_1
      47: invokeinterface #44,  2           // InterfaceMethod org/apache/dubbo/registry/client/ServiceDiscovery.getInstances:(Ljava/lang/String;)Ljava/util/List;
      52: invokeinterface #45,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      57: pop
      58: goto          23
      61: aload_2
      62: areturn

  public java.util.Set<java.lang.String> getServices();
    Code:
       0: new           #46                 // class java/util/HashSet
       3: dup
       4: invokespecial #47                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field serviceDiscoveries:Ljava/util/Map;
      12: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      17: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          58
      32: aload_2
      33: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #30                 // class org/apache/dubbo/registry/client/ServiceDiscovery
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokeinterface #48,  1           // InterfaceMethod org/apache/dubbo/registry/client/ServiceDiscovery.getServices:()Ljava/util/Set;
      49: invokeinterface #49,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      54: pop
      55: goto          23
      58: aload_1
      59: areturn

  public org.apache.dubbo.registry.client.ServiceInstance getLocalInstance();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.dubbo.metadata.MetadataInfo getLocalMetadata();
    Code:
       0: new           #50                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #51                 // String Multiple registry implementation does not support getMetadata() method.
       6: invokespecial #52                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.apache.dubbo.metadata.MetadataInfo getLocalMetadata(java.lang.String);
    Code:
       0: new           #50                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #53                 // String Multiple registry implementation does not support getLocalMetadata() method.
       6: invokespecial #52                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.apache.dubbo.metadata.MetadataInfo getRemoteMetadata(java.lang.String);
    Code:
       0: new           #50                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #51                 // String Multiple registry implementation does not support getMetadata() method.
       6: invokespecial #52                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.apache.dubbo.metadata.MetadataInfo getRemoteMetadata(java.lang.String, java.util.List<org.apache.dubbo.registry.client.ServiceInstance>);
    Code:
       0: new           #50                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #51                 // String Multiple registry implementation does not support getMetadata() method.
       6: invokespecial #52                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void register(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: getfield      #4                  // Field serviceDiscoveries:Ljava/util/Map;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: aload_1
      10: invokedynamic #54,  0             // InvokeDynamic #4:accept:(Lorg/apache/dubbo/common/URL;)Ljava/util/function/Consumer;
      15: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      20: return

  public void unregister(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: getfield      #4                  // Field serviceDiscoveries:Ljava/util/Map;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: aload_1
      10: invokedynamic #55,  0             // InvokeDynamic #5:accept:(Lorg/apache/dubbo/common/URL;)Ljava/util/function/Consumer;
      15: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      20: return

  public void subscribe(org.apache.dubbo.common.URL, org.apache.dubbo.registry.NotifyListener);
    Code:
       0: aload_0
       1: getfield      #4                  // Field serviceDiscoveries:Ljava/util/Map;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: aload_1
      10: aload_2
      11: invokedynamic #56,  0             // InvokeDynamic #6:accept:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/NotifyListener;)Ljava/util/function/Consumer;
      16: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      21: return

  public void unsubscribe(org.apache.dubbo.common.URL, org.apache.dubbo.registry.NotifyListener);
    Code:
       0: aload_0
       1: getfield      #4                  // Field serviceDiscoveries:Ljava/util/Map;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: aload_1
      10: aload_2
      11: invokedynamic #57,  0             // InvokeDynamic #7:accept:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/NotifyListener;)Ljava/util/function/Consumer;
      16: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      21: return

  public java.util.List<org.apache.dubbo.common.URL> lookup(org.apache.dubbo.common.URL);
    Code:
       0: new           #50                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #58                 // String Multiple registry implementation does not support lookup() method.
       6: invokespecial #52                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  private static void lambda$unsubscribe$7(org.apache.dubbo.common.URL, org.apache.dubbo.registry.NotifyListener, org.apache.dubbo.registry.client.ServiceDiscovery);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokeinterface #59,  3           // InterfaceMethod org/apache/dubbo/registry/client/ServiceDiscovery.unsubscribe:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/NotifyListener;)V
       8: return

  private static void lambda$subscribe$6(org.apache.dubbo.common.URL, org.apache.dubbo.registry.NotifyListener, org.apache.dubbo.registry.client.ServiceDiscovery);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokeinterface #60,  3           // InterfaceMethod org/apache/dubbo/registry/client/ServiceDiscovery.subscribe:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/NotifyListener;)V
       8: return

  private static void lambda$unregister$5(org.apache.dubbo.common.URL, org.apache.dubbo.registry.client.ServiceDiscovery);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #61,  2           // InterfaceMethod org/apache/dubbo/registry/client/ServiceDiscovery.unregister:(Lorg/apache/dubbo/common/URL;)V
       7: return

  private static void lambda$register$4(org.apache.dubbo.common.URL, org.apache.dubbo.registry.client.ServiceDiscovery);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #62,  2           // InterfaceMethod org/apache/dubbo/registry/client/ServiceDiscovery.register:(Lorg/apache/dubbo/common/URL;)V
       7: return

  private static org.apache.dubbo.registry.multiple.MultipleServiceDiscovery$SingleServiceInstancesChangedListener lambda$addServiceInstancesChangedListener$3(org.apache.dubbo.registry.client.event.listener.ServiceInstancesChangedListener, org.apache.dubbo.registry.client.ServiceDiscovery, org.apache.dubbo.registry.multiple.MultipleServiceDiscovery$MultiServiceInstancesChangedListener, java.lang.String);
    Code:
       0: new           #63                 // class org/apache/dubbo/registry/multiple/MultipleServiceDiscovery$SingleServiceInstancesChangedListener
       3: dup
       4: aload_0
       5: invokevirtual #64                 // Method org/apache/dubbo/registry/client/event/listener/ServiceInstancesChangedListener.getServiceNames:()Ljava/util/Set;
       8: aload_1
       9: aload_2
      10: invokespecial #65                 // Method org/apache/dubbo/registry/multiple/MultipleServiceDiscovery$SingleServiceInstancesChangedListener."<init>":(Ljava/util/Set;Lorg/apache/dubbo/registry/client/ServiceDiscovery;Lorg/apache/dubbo/registry/multiple/MultipleServiceDiscovery$MultiServiceInstancesChangedListener;)V
      13: areturn

  private static void lambda$unregister$2(org.apache.dubbo.registry.client.ServiceDiscovery);
    Code:
       0: aload_0
       1: invokeinterface #66,  1           // InterfaceMethod org/apache/dubbo/registry/client/ServiceDiscovery.unregister:()V
       6: return

  private static void lambda$update$1(org.apache.dubbo.registry.client.ServiceDiscovery);
    Code:
       0: aload_0
       1: invokeinterface #67,  1           // InterfaceMethod org/apache/dubbo/registry/client/ServiceDiscovery.update:()V
       6: return

  private static void lambda$register$0(org.apache.dubbo.registry.client.ServiceDiscovery);
    Code:
       0: aload_0
       1: invokeinterface #68,  1           // InterfaceMethod org/apache/dubbo/registry/client/ServiceDiscovery.register:()V
       6: return
}
