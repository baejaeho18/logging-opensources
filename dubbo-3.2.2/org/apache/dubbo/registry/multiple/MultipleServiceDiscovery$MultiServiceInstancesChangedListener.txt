Compiled from "MultipleServiceDiscovery.java"
public class org.apache.dubbo.registry.multiple.MultipleServiceDiscovery$MultiServiceInstancesChangedListener extends org.apache.dubbo.registry.client.event.listener.ServiceInstancesChangedListener {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.dubbo.registry.multiple.MultipleServiceDiscovery$SingleServiceInstancesChangedListener> singleListenerMap;

  public org.apache.dubbo.registry.multiple.MultipleServiceDiscovery$MultiServiceInstancesChangedListener(java.util.Set<java.lang.String>, org.apache.dubbo.registry.client.ServiceDiscovery);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/dubbo/registry/client/event/listener/ServiceInstancesChangedListener."<init>":(Ljava/util/Set;Lorg/apache/dubbo/registry/client/ServiceDiscovery;)V
       6: aload_0
       7: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      10: dup
      11: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      14: putfield      #4                  // Field singleListenerMap:Ljava/util/concurrent/ConcurrentMap;
      17: return

  public void onEvent(org.apache.dubbo.registry.client.event.ServiceInstancesChangedEvent);
    Code:
       0: new           #5                  // class java/util/ArrayList
       3: dup
       4: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #4                  // Field singleListenerMap:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #7,  1            // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      17: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          127
      32: aload_3
      33: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #11                 // class org/apache/dubbo/registry/multiple/MultipleServiceDiscovery$SingleServiceInstancesChangedListener
      41: astore        4
      43: aconst_null
      44: aload         4
      46: getfield      #12                 // Field org/apache/dubbo/registry/multiple/MultipleServiceDiscovery$SingleServiceInstancesChangedListener.event:Lorg/apache/dubbo/registry/client/event/ServiceInstancesChangedEvent;
      49: if_acmpeq     124
      52: aconst_null
      53: aload         4
      55: getfield      #12                 // Field org/apache/dubbo/registry/multiple/MultipleServiceDiscovery$SingleServiceInstancesChangedListener.event:Lorg/apache/dubbo/registry/client/event/ServiceInstancesChangedEvent;
      58: invokevirtual #13                 // Method org/apache/dubbo/registry/client/event/ServiceInstancesChangedEvent.getServiceInstances:()Ljava/util/List;
      61: if_acmpeq     124
      64: aload         4
      66: getfield      #12                 // Field org/apache/dubbo/registry/multiple/MultipleServiceDiscovery$SingleServiceInstancesChangedListener.event:Lorg/apache/dubbo/registry/client/event/ServiceInstancesChangedEvent;
      69: invokevirtual #13                 // Method org/apache/dubbo/registry/client/event/ServiceInstancesChangedEvent.getServiceInstances:()Ljava/util/List;
      72: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      77: astore        5
      79: aload         5
      81: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      86: ifeq          124
      89: aload         5
      91: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      96: checkcast     #15                 // class org/apache/dubbo/registry/client/ServiceInstance
      99: astore        6
     101: aload_2
     102: aload         6
     104: invokeinterface #16,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     109: ifne          121
     112: aload_2
     113: aload         6
     115: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     120: pop
     121: goto          79
     124: goto          23
     127: aload_0
     128: new           #18                 // class org/apache/dubbo/registry/client/event/ServiceInstancesChangedEvent
     131: dup
     132: aload_1
     133: invokevirtual #19                 // Method org/apache/dubbo/registry/client/event/ServiceInstancesChangedEvent.getServiceName:()Ljava/lang/String;
     136: aload_2
     137: invokespecial #20                 // Method org/apache/dubbo/registry/client/event/ServiceInstancesChangedEvent."<init>":(Ljava/lang/String;Ljava/util/List;)V
     140: invokespecial #21                 // Method org/apache/dubbo/registry/client/event/listener/ServiceInstancesChangedListener.onEvent:(Lorg/apache/dubbo/registry/client/event/ServiceInstancesChangedEvent;)V
     143: return

  public void putSingleListener(java.lang.String, org.apache.dubbo.registry.multiple.MultipleServiceDiscovery$SingleServiceInstancesChangedListener);
    Code:
       0: aload_0
       1: getfield      #4                  // Field singleListenerMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #22,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public org.apache.dubbo.registry.multiple.MultipleServiceDiscovery$SingleServiceInstancesChangedListener getAndComputeIfAbsent(java.lang.String, java.util.function.Function<java.lang.String, org.apache.dubbo.registry.multiple.MultipleServiceDiscovery$SingleServiceInstancesChangedListener>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field singleListenerMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokestatic  #23                 // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
       9: checkcast     #11                 // class org/apache/dubbo/registry/multiple/MultipleServiceDiscovery$SingleServiceInstancesChangedListener
      12: areturn
}
