Compiled from "MultipleRegistry.java"
public class org.apache.dubbo.registry.multiple.MultipleRegistry extends org.apache.dubbo.registry.support.AbstractRegistry {
  public static final org.apache.dubbo.common.logger.Logger LOGGER;

  public static final java.lang.String REGISTRY_FOR_SERVICE;

  public static final java.lang.String REGISTRY_FOR_REFERENCE;

  public static final java.lang.String REGISTRY_SEPARATOR;

  private final java.util.Map<java.lang.String, org.apache.dubbo.registry.Registry> serviceRegistries;

  private final java.util.Map<java.lang.String, org.apache.dubbo.registry.Registry> referenceRegistries;

  private final java.util.Map<org.apache.dubbo.registry.NotifyListener, org.apache.dubbo.registry.multiple.MultipleRegistry$MultipleNotifyListenerWrapper> multipleNotifyListenerMap;

  private final org.apache.dubbo.common.URL registryUrl;

  private final java.lang.String applicationName;

  protected org.apache.dubbo.registry.RegistryFactory registryFactory;

  protected java.util.List<java.lang.String> origServiceRegistryURLs;

  protected java.util.List<java.lang.String> origReferenceRegistryURLs;

  protected java.util.List<java.lang.String> effectServiceRegistryURLs;

  protected java.util.List<java.lang.String> effectReferenceRegistryURLs;

  public org.apache.dubbo.registry.multiple.MultipleRegistry(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iconst_1
       4: invokespecial #2                  // Method "<init>":(Lorg/apache/dubbo/common/URL;ZZ)V
       7: aload_0
       8: aload_1
       9: invokevirtual #3                  // Method org/apache/dubbo/common/URL.getOrDefaultApplicationModel:()Lorg/apache/dubbo/rpc/model/ApplicationModel;
      12: ldc           #4                  // class org/apache/dubbo/registry/RegistryFactory
      14: invokevirtual #5                  // Method org/apache/dubbo/rpc/model/ApplicationModel.getExtensionLoader:(Ljava/lang/Class;)Lorg/apache/dubbo/common/extension/ExtensionLoader;
      17: invokevirtual #6                  // Method org/apache/dubbo/common/extension/ExtensionLoader.getAdaptiveExtension:()Ljava/lang/Object;
      20: checkcast     #4                  // class org/apache/dubbo/registry/RegistryFactory
      23: putfield      #7                  // Field registryFactory:Lorg/apache/dubbo/registry/RegistryFactory;
      26: aload_1
      27: ldc           #8                  // String default
      29: iconst_1
      30: invokevirtual #9                  // Method org/apache/dubbo/common/URL.getParameter:(Ljava/lang/String;Z)Z
      33: istore_2
      34: iload_2
      35: ifeq          72
      38: aload_0
      39: getfield      #10                 // Field effectServiceRegistryURLs:Ljava/util/List;
      42: invokeinterface #11,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      47: ifeq          72
      50: aload_0
      51: getfield      #12                 // Field effectReferenceRegistryURLs:Ljava/util/List;
      54: invokeinterface #11,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      59: ifeq          72
      62: new           #13                 // class java/lang/IllegalArgumentException
      65: dup
      66: ldc           #15                 // String Illegal registry url. You need to configure parameter service-registry or reference-registry
      68: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: return

  public org.apache.dubbo.registry.multiple.MultipleRegistry(org.apache.dubbo.common.URL, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #17                 // Method org/apache/dubbo/registry/support/AbstractRegistry."<init>":(Lorg/apache/dubbo/common/URL;)V
       5: aload_0
       6: new           #18                 // class java/util/concurrent/ConcurrentHashMap
       9: dup
      10: iconst_4
      11: invokespecial #19                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      14: putfield      #20                 // Field serviceRegistries:Ljava/util/Map;
      17: aload_0
      18: new           #18                 // class java/util/concurrent/ConcurrentHashMap
      21: dup
      22: iconst_4
      23: invokespecial #19                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      26: putfield      #21                 // Field referenceRegistries:Ljava/util/Map;
      29: aload_0
      30: new           #18                 // class java/util/concurrent/ConcurrentHashMap
      33: dup
      34: bipush        32
      36: invokespecial #19                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      39: putfield      #22                 // Field multipleNotifyListenerMap:Ljava/util/Map;
      42: aload_0
      43: aload_1
      44: putfield      #23                 // Field registryUrl:Lorg/apache/dubbo/common/URL;
      47: aload_0
      48: aload_1
      49: invokevirtual #24                 // Method org/apache/dubbo/common/URL.getApplication:()Ljava/lang/String;
      52: putfield      #25                 // Field applicationName:Ljava/lang/String;
      55: aload_0
      56: aload_1
      57: invokevirtual #3                  // Method org/apache/dubbo/common/URL.getOrDefaultApplicationModel:()Lorg/apache/dubbo/rpc/model/ApplicationModel;
      60: ldc           #4                  // class org/apache/dubbo/registry/RegistryFactory
      62: invokevirtual #5                  // Method org/apache/dubbo/rpc/model/ApplicationModel.getExtensionLoader:(Ljava/lang/Class;)Lorg/apache/dubbo/common/extension/ExtensionLoader;
      65: invokevirtual #6                  // Method org/apache/dubbo/common/extension/ExtensionLoader.getAdaptiveExtension:()Ljava/lang/Object;
      68: checkcast     #4                  // class org/apache/dubbo/registry/RegistryFactory
      71: putfield      #7                  // Field registryFactory:Lorg/apache/dubbo/registry/RegistryFactory;
      74: aload_0
      75: invokevirtual #26                 // Method init:()V
      78: aload_0
      79: aload_0
      80: getfield      #25                 // Field applicationName:Ljava/lang/String;
      83: invokevirtual #27                 // Method checkApplicationName:(Ljava/lang/String;)V
      86: new           #28                 // class java/util/HashMap
      89: dup
      90: invokespecial #29                 // Method java/util/HashMap."<init>":()V
      93: astore        4
      95: iload_2
      96: ifeq          106
      99: aload_0
     100: aload_1
     101: aload         4
     103: invokevirtual #30                 // Method initServiceRegistry:(Lorg/apache/dubbo/common/URL;Ljava/util/Map;)V
     106: iload_3
     107: ifeq          117
     110: aload_0
     111: aload_1
     112: aload         4
     114: invokevirtual #31                 // Method initReferenceRegistry:(Lorg/apache/dubbo/common/URL;Ljava/util/Map;)V
     117: return

  protected void initServiceRegistry(org.apache.dubbo.common.URL, java.util.Map<java.lang.String, org.apache.dubbo.registry.Registry>);
    Code:
       0: aload_1
       1: ldc           #32                 // String service-registry
       3: invokevirtual #33                 // Method org/apache/dubbo/common/URL.getParameter:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_3
       7: aload_1
       8: ldc           #34                 // String separator
      10: ldc           #35                 // String ,
      12: invokevirtual #36                 // Method org/apache/dubbo/common/URL.getParameter:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      15: iconst_0
      16: invokevirtual #37                 // Method java/lang/String.charAt:(I)C
      19: istore        4
      21: aload_0
      22: aload_3
      23: iload         4
      25: invokestatic  #38                 // Method org/apache/dubbo/common/utils/StringUtils.splitToList:(Ljava/lang/String;C)Ljava/util/List;
      28: putfield      #39                 // Field origServiceRegistryURLs:Ljava/util/List;
      31: aload_0
      32: aload_0
      33: aload_0
      34: getfield      #39                 // Field origServiceRegistryURLs:Ljava/util/List;
      37: invokevirtual #40                 // Method filterServiceRegistry:(Ljava/util/List;)Ljava/util/List;
      40: putfield      #10                 // Field effectServiceRegistryURLs:Ljava/util/List;
      43: aload_0
      44: getfield      #10                 // Field effectServiceRegistryURLs:Ljava/util/List;
      47: invokeinterface #41,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      52: astore        5
      54: aload         5
      56: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          178
      64: aload         5
      66: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #44                 // class java/lang/String
      74: astore        6
      76: aload_2
      77: aload         6
      79: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      84: ifnull        110
      87: aload_0
      88: getfield      #20                 // Field serviceRegistries:Ljava/util/Map;
      91: aload         6
      93: aload_2
      94: aload         6
      96: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     101: invokeinterface #46,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     106: pop
     107: goto          54
     110: aload         6
     112: invokestatic  #47                 // Method org/apache/dubbo/common/URL.valueOf:(Ljava/lang/String;)Lorg/apache/dubbo/common/URL;
     115: aload_1
     116: invokevirtual #48                 // Method org/apache/dubbo/common/URL.getParameters:()Ljava/util/Map;
     119: invokevirtual #49                 // Method org/apache/dubbo/common/URL.addParametersIfAbsent:(Ljava/util/Map;)Lorg/apache/dubbo/common/URL;
     122: ldc           #50                 // String check
     124: aload_1
     125: ldc           #50                 // String check
     127: ldc           #51                 // String true
     129: invokevirtual #36                 // Method org/apache/dubbo/common/URL.getParameter:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     132: invokevirtual #52                 // Method org/apache/dubbo/common/URL.addParameterIfAbsent:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/dubbo/common/URL;
     135: astore        7
     137: aload_0
     138: getfield      #7                  // Field registryFactory:Lorg/apache/dubbo/registry/RegistryFactory;
     141: aload         7
     143: invokeinterface #53,  2           // InterfaceMethod org/apache/dubbo/registry/RegistryFactory.getRegistry:(Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/registry/Registry;
     148: astore        8
     150: aload_2
     151: aload         6
     153: aload         8
     155: invokeinterface #46,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     160: pop
     161: aload_0
     162: getfield      #20                 // Field serviceRegistries:Ljava/util/Map;
     165: aload         6
     167: aload         8
     169: invokeinterface #46,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     174: pop
     175: goto          54
     178: return

  protected void initReferenceRegistry(org.apache.dubbo.common.URL, java.util.Map<java.lang.String, org.apache.dubbo.registry.Registry>);
    Code:
       0: aload_1
       1: ldc           #54                 // String reference-registry
       3: invokevirtual #33                 // Method org/apache/dubbo/common/URL.getParameter:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_3
       7: aload_1
       8: ldc           #34                 // String separator
      10: ldc           #35                 // String ,
      12: invokevirtual #36                 // Method org/apache/dubbo/common/URL.getParameter:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      15: iconst_0
      16: invokevirtual #37                 // Method java/lang/String.charAt:(I)C
      19: istore        4
      21: aload_0
      22: aload_3
      23: iload         4
      25: invokestatic  #38                 // Method org/apache/dubbo/common/utils/StringUtils.splitToList:(Ljava/lang/String;C)Ljava/util/List;
      28: putfield      #55                 // Field origReferenceRegistryURLs:Ljava/util/List;
      31: aload_0
      32: aload_0
      33: aload_0
      34: getfield      #55                 // Field origReferenceRegistryURLs:Ljava/util/List;
      37: invokevirtual #56                 // Method filterReferenceRegistry:(Ljava/util/List;)Ljava/util/List;
      40: putfield      #12                 // Field effectReferenceRegistryURLs:Ljava/util/List;
      43: aload_0
      44: getfield      #12                 // Field effectReferenceRegistryURLs:Ljava/util/List;
      47: invokeinterface #41,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      52: astore        5
      54: aload         5
      56: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          171
      64: aload         5
      66: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #44                 // class java/lang/String
      74: astore        6
      76: aload_2
      77: aload         6
      79: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      84: ifnull        110
      87: aload_0
      88: getfield      #21                 // Field referenceRegistries:Ljava/util/Map;
      91: aload         6
      93: aload_2
      94: aload         6
      96: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     101: invokeinterface #46,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     106: pop
     107: goto          54
     110: aload         6
     112: invokestatic  #47                 // Method org/apache/dubbo/common/URL.valueOf:(Ljava/lang/String;)Lorg/apache/dubbo/common/URL;
     115: ldc           #50                 // String check
     117: aload_1
     118: ldc           #50                 // String check
     120: ldc           #51                 // String true
     122: invokevirtual #36                 // Method org/apache/dubbo/common/URL.getParameter:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     125: invokevirtual #52                 // Method org/apache/dubbo/common/URL.addParameterIfAbsent:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/dubbo/common/URL;
     128: astore        7
     130: aload_0
     131: getfield      #7                  // Field registryFactory:Lorg/apache/dubbo/registry/RegistryFactory;
     134: aload         7
     136: invokeinterface #53,  2           // InterfaceMethod org/apache/dubbo/registry/RegistryFactory.getRegistry:(Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/registry/Registry;
     141: astore        8
     143: aload_2
     144: aload         6
     146: aload         8
     148: invokeinterface #46,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     153: pop
     154: aload_0
     155: getfield      #21                 // Field referenceRegistries:Ljava/util/Map;
     158: aload         6
     160: aload         8
     162: invokeinterface #46,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     167: pop
     168: goto          54
     171: return

  public org.apache.dubbo.common.URL getUrl();
    Code:
       0: aload_0
       1: getfield      #23                 // Field registryUrl:Lorg/apache/dubbo/common/URL;
       4: areturn

  public boolean isAvailable();
    Code:
       0: aload_0
       1: getfield      #20                 // Field serviceRegistries:Ljava/util/Map;
       4: invokeinterface #57,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: istore_1
      10: aload_0
      11: getfield      #20                 // Field serviceRegistries:Ljava/util/Map;
      14: invokeinterface #58,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      19: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          58
      34: aload_2
      35: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #60                 // class org/apache/dubbo/registry/Registry
      43: astore_3
      44: aload_3
      45: invokeinterface #61,  1           // InterfaceMethod org/apache/dubbo/registry/Registry.isAvailable:()Z
      50: ifeq          55
      53: iconst_1
      54: istore_1
      55: goto          25
      58: iload_1
      59: ifne          64
      62: iconst_0
      63: ireturn
      64: aload_0
      65: getfield      #21                 // Field referenceRegistries:Ljava/util/Map;
      68: invokeinterface #57,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      73: istore_1
      74: aload_0
      75: getfield      #21                 // Field referenceRegistries:Ljava/util/Map;
      78: invokeinterface #58,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      83: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      88: astore_2
      89: aload_2
      90: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      95: ifeq          122
      98: aload_2
      99: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     104: checkcast     #60                 // class org/apache/dubbo/registry/Registry
     107: astore_3
     108: aload_3
     109: invokeinterface #61,  1           // InterfaceMethod org/apache/dubbo/registry/Registry.isAvailable:()Z
     114: ifeq          119
     117: iconst_1
     118: istore_1
     119: goto          89
     122: iload_1
     123: ifne          128
     126: iconst_0
     127: ireturn
     128: iconst_1
     129: ireturn

  public void destroy();
    Code:
       0: new           #62                 // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #20                 // Field serviceRegistries:Ljava/util/Map;
       8: invokeinterface #58,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: invokespecial #63                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      16: astore_1
      17: aload_1
      18: aload_0
      19: getfield      #21                 // Field referenceRegistries:Ljava/util/Map;
      22: invokeinterface #58,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      27: invokeinterface #64,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      32: pop
      33: aload_1
      34: invokeinterface #65,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      39: astore_2
      40: aload_2
      41: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          68
      49: aload_2
      50: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #60                 // class org/apache/dubbo/registry/Registry
      58: astore_3
      59: aload_3
      60: invokeinterface #66,  1           // InterfaceMethod org/apache/dubbo/registry/Registry.destroy:()V
      65: goto          40
      68: return

  public void register(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #67                 // Method org/apache/dubbo/registry/support/AbstractRegistry.register:(Lorg/apache/dubbo/common/URL;)V
       5: aload_0
       6: getfield      #20                 // Field serviceRegistries:Ljava/util/Map;
       9: invokeinterface #58,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      14: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          49
      29: aload_2
      30: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #60                 // class org/apache/dubbo/registry/Registry
      38: astore_3
      39: aload_3
      40: aload_1
      41: invokeinterface #68,  2           // InterfaceMethod org/apache/dubbo/registry/Registry.register:(Lorg/apache/dubbo/common/URL;)V
      46: goto          20
      49: return

  public void unregister(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #69                 // Method org/apache/dubbo/registry/support/AbstractRegistry.unregister:(Lorg/apache/dubbo/common/URL;)V
       5: aload_0
       6: getfield      #20                 // Field serviceRegistries:Ljava/util/Map;
       9: invokeinterface #58,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      14: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          49
      29: aload_2
      30: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #60                 // class org/apache/dubbo/registry/Registry
      38: astore_3
      39: aload_3
      40: aload_1
      41: invokeinterface #70,  2           // InterfaceMethod org/apache/dubbo/registry/Registry.unregister:(Lorg/apache/dubbo/common/URL;)V
      46: goto          20
      49: return

  public void subscribe(org.apache.dubbo.common.URL, org.apache.dubbo.registry.NotifyListener);
    Code:
       0: new           #71                 // class org/apache/dubbo/registry/multiple/MultipleRegistry$MultipleNotifyListenerWrapper
       3: dup
       4: aload_2
       5: invokespecial #72                 // Method org/apache/dubbo/registry/multiple/MultipleRegistry$MultipleNotifyListenerWrapper."<init>":(Lorg/apache/dubbo/registry/NotifyListener;)V
       8: astore_3
       9: aload_0
      10: getfield      #22                 // Field multipleNotifyListenerMap:Ljava/util/Map;
      13: aload_2
      14: aload_3
      15: invokeinterface #46,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: aload_0
      22: getfield      #21                 // Field referenceRegistries:Ljava/util/Map;
      25: invokeinterface #58,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      30: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      35: astore        4
      37: aload         4
      39: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          97
      47: aload         4
      49: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #60                 // class org/apache/dubbo/registry/Registry
      57: astore        5
      59: new           #73                 // class org/apache/dubbo/registry/multiple/MultipleRegistry$SingleNotifyListener
      62: dup
      63: aload_3
      64: aload         5
      66: invokespecial #74                 // Method org/apache/dubbo/registry/multiple/MultipleRegistry$SingleNotifyListener."<init>":(Lorg/apache/dubbo/registry/multiple/MultipleRegistry$MultipleNotifyListenerWrapper;Lorg/apache/dubbo/registry/Registry;)V
      69: astore        6
      71: aload_3
      72: aload         5
      74: invokeinterface #75,  1           // InterfaceMethod org/apache/dubbo/registry/Registry.getUrl:()Lorg/apache/dubbo/common/URL;
      79: aload         6
      81: invokevirtual #76                 // Method org/apache/dubbo/registry/multiple/MultipleRegistry$MultipleNotifyListenerWrapper.putRegistryMap:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/multiple/MultipleRegistry$SingleNotifyListener;)V
      84: aload         5
      86: aload_1
      87: aload         6
      89: invokeinterface #77,  3           // InterfaceMethod org/apache/dubbo/registry/Registry.subscribe:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/NotifyListener;)V
      94: goto          37
      97: aload_0
      98: aload_1
      99: aload_3
     100: invokespecial #78                 // Method org/apache/dubbo/registry/support/AbstractRegistry.subscribe:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/NotifyListener;)V
     103: return

  public void unsubscribe(org.apache.dubbo.common.URL, org.apache.dubbo.registry.NotifyListener);
    Code:
       0: aload_0
       1: getfield      #22                 // Field multipleNotifyListenerMap:Ljava/util/Map;
       4: aload_2
       5: invokeinterface #79,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #71                 // class org/apache/dubbo/registry/multiple/MultipleRegistry$MultipleNotifyListenerWrapper
      13: astore_3
      14: aload_0
      15: getfield      #21                 // Field referenceRegistries:Ljava/util/Map;
      18: invokeinterface #58,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      23: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      28: astore        4
      30: aload         4
      32: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          86
      40: aload         4
      42: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #60                 // class org/apache/dubbo/registry/Registry
      50: astore        5
      52: aload_3
      53: getfield      #80                 // Field org/apache/dubbo/registry/multiple/MultipleRegistry$MultipleNotifyListenerWrapper.registryMap:Ljava/util/Map;
      56: aload         5
      58: invokeinterface #75,  1           // InterfaceMethod org/apache/dubbo/registry/Registry.getUrl:()Lorg/apache/dubbo/common/URL;
      63: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #73                 // class org/apache/dubbo/registry/multiple/MultipleRegistry$SingleNotifyListener
      71: astore        6
      73: aload         5
      75: aload_1
      76: aload         6
      78: invokeinterface #81,  3           // InterfaceMethod org/apache/dubbo/registry/Registry.unsubscribe:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/NotifyListener;)V
      83: goto          30
      86: aload_3
      87: ifnull        100
      90: aload_0
      91: aload_1
      92: aload_3
      93: invokespecial #82                 // Method org/apache/dubbo/registry/support/AbstractRegistry.unsubscribe:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/registry/NotifyListener;)V
      96: aload_3
      97: invokevirtual #83                 // Method org/apache/dubbo/registry/multiple/MultipleRegistry$MultipleNotifyListenerWrapper.destroy:()V
     100: return

  public java.util.List<org.apache.dubbo.common.URL> lookup(org.apache.dubbo.common.URL);
    Code:
       0: new           #84                 // class java/util/ArrayList
       3: dup
       4: invokespecial #85                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #21                 // Field referenceRegistries:Ljava/util/Map;
      12: invokeinterface #58,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      17: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          73
      32: aload_3
      33: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #60                 // class org/apache/dubbo/registry/Registry
      41: astore        4
      43: aload         4
      45: aload_1
      46: invokeinterface #86,  2           // InterfaceMethod org/apache/dubbo/registry/Registry.lookup:(Lorg/apache/dubbo/common/URL;)Ljava/util/List;
      51: astore        5
      53: aload         5
      55: invokestatic  #87                 // Method org/apache/dubbo/common/utils/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      58: ifne          70
      61: aload_2
      62: aload         5
      64: invokeinterface #88,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      69: pop
      70: goto          23
      73: aload_2
      74: invokeinterface #89,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      79: invokeinterface #90,  1           // InterfaceMethod java/util/stream/Stream.distinct:()Ljava/util/stream/Stream;
      84: invokestatic  #91                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      87: invokeinterface #92,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      92: checkcast     #93                 // class java/util/List
      95: areturn

  protected void init();
    Code:
       0: return

  protected java.util.List<java.lang.String> filterServiceRegistry(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: areturn

  protected java.util.List<java.lang.String> filterReferenceRegistry(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: areturn

  protected void checkApplicationName(java.lang.String);
    Code:
       0: return

  protected java.lang.String getApplicationName();
    Code:
       0: aload_0
       1: getfield      #25                 // Field applicationName:Ljava/lang/String;
       4: areturn

  public java.util.Map<java.lang.String, org.apache.dubbo.registry.Registry> getServiceRegistries();
    Code:
       0: aload_0
       1: getfield      #20                 // Field serviceRegistries:Ljava/util/Map;
       4: areturn

  public java.util.Map<java.lang.String, org.apache.dubbo.registry.Registry> getReferenceRegistries();
    Code:
       0: aload_0
       1: getfield      #21                 // Field referenceRegistries:Ljava/util/Map;
       4: areturn

  public java.util.List<java.lang.String> getOrigServiceRegistryURLs();
    Code:
       0: aload_0
       1: getfield      #39                 // Field origServiceRegistryURLs:Ljava/util/List;
       4: areturn

  public java.util.List<java.lang.String> getOrigReferenceRegistryURLs();
    Code:
       0: aload_0
       1: getfield      #55                 // Field origReferenceRegistryURLs:Ljava/util/List;
       4: areturn

  public java.util.List<java.lang.String> getEffectServiceRegistryURLs();
    Code:
       0: aload_0
       1: getfield      #10                 // Field effectServiceRegistryURLs:Ljava/util/List;
       4: areturn

  public java.util.List<java.lang.String> getEffectReferenceRegistryURLs();
    Code:
       0: aload_0
       1: getfield      #12                 // Field effectReferenceRegistryURLs:Ljava/util/List;
       4: areturn

  static {};
    Code:
       0: ldc           #14                 // class org/apache/dubbo/registry/multiple/MultipleRegistry
       2: invokestatic  #94                 // Method org/apache/dubbo/common/logger/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/Logger;
       5: putstatic     #95                 // Field LOGGER:Lorg/apache/dubbo/common/logger/Logger;
       8: return
}
