Compiled from "NacosAggregateListener.java"
public class org.apache.dubbo.registry.nacos.NacosAggregateListener {
  private static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  private final org.apache.dubbo.registry.NotifyListener notifyListener;

  private final java.util.Set<java.lang.String> serviceNames;

  private final java.util.Map<java.lang.String, java.util.List<com.alibaba.nacos.api.naming.pojo.Instance>> serviceInstances;

  private final java.util.concurrent.atomic.AtomicBoolean warned;

  private static final java.util.regex.Pattern SPLITTED_PATTERN;

  public org.apache.dubbo.registry.nacos.NacosAggregateListener(org.apache.dubbo.registry.NotifyListener);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/apache/dubbo/common/utils/ConcurrentHashSet
       8: dup
       9: invokespecial #4                  // Method org/apache/dubbo/common/utils/ConcurrentHashSet."<init>":()V
      12: putfield      #5                  // Field serviceNames:Ljava/util/Set;
      15: aload_0
      16: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #8                  // Field serviceInstances:Ljava/util/Map;
      26: aload_0
      27: new           #9                  // class java/util/concurrent/atomic/AtomicBoolean
      30: dup
      31: iconst_0
      32: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      35: putfield      #11                 // Field warned:Ljava/util/concurrent/atomic/AtomicBoolean;
      38: aload_0
      39: aload_1
      40: putfield      #12                 // Field notifyListener:Lorg/apache/dubbo/registry/NotifyListener;
      43: return

  public java.util.List<com.alibaba.nacos.api.naming.pojo.Instance> saveAndAggregateAllInstances(java.lang.String, java.util.List<com.alibaba.nacos.api.naming.pojo.Instance>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field serviceNames:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_2
      12: ifnonnull     29
      15: aload_0
      16: getfield      #8                  // Field serviceInstances:Ljava/util/Map;
      19: aload_1
      20: invokeinterface #14,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: goto          41
      29: aload_0
      30: getfield      #8                  // Field serviceInstances:Ljava/util/Map;
      33: aload_1
      34: aload_2
      35: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_1
      42: invokestatic  #16                 // Method isLegacyName:(Ljava/lang/String;)Z
      45: ifeq          148
      48: aload_2
      49: ifnull        148
      52: aload_2
      53: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      58: ifne          148
      61: aload_0
      62: getfield      #11                 // Field warned:Ljava/util/concurrent/atomic/AtomicBoolean;
      65: iconst_0
      66: iconst_1
      67: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      70: ifeq          148
      73: getstatic     #19                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      76: ldc           #20                 // String 1-42
      78: ldc           #21                 // String
      80: ldc           #21                 // String
      82: new           #22                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #24                 // String Received not empty notification for legacy service name:
      91: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_1
      95: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: ldc           #26                 // String , instances: [
     100: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_2
     104: invokeinterface #27,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     109: invokedynamic #28,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
     114: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     119: ldc           #30                 // String  ,
     121: invokestatic  #31                 // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
     124: invokeinterface #32,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     129: checkcast     #33                 // class java/lang/String
     132: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: ldc           #34                 // String ]. Please upgrade these Dubbo client(lower than 2.7.3) to the latest version. Dubbo will remove the support for legacy service name in the future.
     137: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: invokeinterface #36,  5           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     148: aload_0
     149: getfield      #8                  // Field serviceInstances:Ljava/util/Map;
     152: invokeinterface #37,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     157: invokeinterface #38,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
     162: invokedynamic #39,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
     167: invokeinterface #40,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     172: invokestatic  #41                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     175: invokeinterface #32,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     180: checkcast     #42                 // class java/util/List
     183: areturn

  private static boolean isLegacyName(java.lang.String);
    Code:
       0: getstatic     #43                 // Field SPLITTED_PATTERN:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #44                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: invokevirtual #45                 // Method java/util/regex/Matcher.matches:()Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public org.apache.dubbo.registry.NotifyListener getNotifyListener();
    Code:
       0: aload_0
       1: getfield      #12                 // Field notifyListener:Lorg/apache/dubbo/registry/NotifyListener;
       4: areturn

  public java.util.Set<java.lang.String> getServiceNames();
    Code:
       0: aload_0
       1: getfield      #5                  // Field serviceNames:Ljava/util/Set;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #46                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #46                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #47                 // class org/apache/dubbo/registry/nacos/NacosAggregateListener
      28: astore_2
      29: aload_0
      30: getfield      #12                 // Field notifyListener:Lorg/apache/dubbo/registry/NotifyListener;
      33: aload_2
      34: getfield      #12                 // Field notifyListener:Lorg/apache/dubbo/registry/NotifyListener;
      37: invokestatic  #48                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      40: ifeq          75
      43: aload_0
      44: getfield      #5                  // Field serviceNames:Ljava/util/Set;
      47: aload_2
      48: getfield      #5                  // Field serviceNames:Ljava/util/Set;
      51: invokestatic  #48                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      54: ifeq          75
      57: aload_0
      58: getfield      #8                  // Field serviceInstances:Ljava/util/Map;
      61: aload_2
      62: getfield      #8                  // Field serviceInstances:Ljava/util/Map;
      65: invokestatic  #48                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      68: ifeq          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: ireturn

  public int hashCode();
    Code:
       0: iconst_3
       1: anewarray     #49                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #12                 // Field notifyListener:Lorg/apache/dubbo/registry/NotifyListener;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #5                  // Field serviceNames:Ljava/util/Set;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #8                  // Field serviceInstances:Ljava/util/Map;
      24: aastore
      25: invokestatic  #50                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      28: ireturn

  static {};
    Code:
       0: ldc           #47                 // class org/apache/dubbo/registry/nacos/NacosAggregateListener
       2: invokestatic  #51                 // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #19                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: ldc           #52                 // String .*:.*:.*:.*
      10: invokestatic  #53                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #43                 // Field SPLITTED_PATTERN:Ljava/util/regex/Pattern;
      16: return
}
