Compiled from "RegistryProtocol.java"
class org.apache.dubbo.registry.integration.RegistryProtocol$ProviderConfigurationListener extends org.apache.dubbo.registry.integration.AbstractConfiguratorListener {
  private final java.util.Map<org.apache.dubbo.common.URL, java.util.Set<org.apache.dubbo.registry.NotifyListener>> overrideListeners;

  private final org.apache.dubbo.rpc.model.ModuleModel moduleModel;

  final org.apache.dubbo.registry.integration.RegistryProtocol this$0;

  public org.apache.dubbo.registry.integration.RegistryProtocol$ProviderConfigurationListener(org.apache.dubbo.registry.integration.RegistryProtocol, org.apache.dubbo.rpc.model.ModuleModel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/apache/dubbo/registry/integration/RegistryProtocol;
       5: aload_0
       6: aload_2
       7: invokespecial #4                  // Method org/apache/dubbo/registry/integration/AbstractConfiguratorListener."<init>":(Lorg/apache/dubbo/rpc/model/ModuleModel;)V
      10: aload_0
      11: new           #5                  // class java/util/concurrent/ConcurrentHashMap
      14: dup
      15: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      18: putfield      #7                  // Field overrideListeners:Ljava/util/Map;
      21: aload_0
      22: aload_2
      23: putfield      #8                  // Field moduleModel:Lorg/apache/dubbo/rpc/model/ModuleModel;
      26: aload_2
      27: invokevirtual #9                  // Method org/apache/dubbo/rpc/model/ModuleModel.getModelEnvironment:()Lorg/apache/dubbo/common/config/ModuleEnvironment;
      30: invokevirtual #10                 // Method org/apache/dubbo/common/config/ModuleEnvironment.getConfiguration:()Lorg/apache/dubbo/common/config/CompositeConfiguration;
      33: ldc           #11                 // class java/lang/Boolean
      35: ldc           #12                 // String enable-configuration-listen
      37: iconst_1
      38: invokestatic  #13                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: invokevirtual #14                 // Method org/apache/dubbo/common/config/CompositeConfiguration.convert:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #11                 // class java/lang/Boolean
      47: invokevirtual #15                 // Method java/lang/Boolean.booleanValue:()Z
      50: ifeq          82
      53: aload_0
      54: new           #16                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      61: aload_2
      62: invokevirtual #18                 // Method org/apache/dubbo/rpc/model/ModuleModel.getApplicationModel:()Lorg/apache/dubbo/rpc/model/ApplicationModel;
      65: invokevirtual #19                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getApplicationName:()Ljava/lang/String;
      68: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: ldc           #21                 // String .configurators
      73: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokevirtual #23                 // Method initWith:(Ljava/lang/String;)V
      82: return

  private <T> org.apache.dubbo.common.URL overrideUrl(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: getfield      #24                 // Field configurators:Ljava/util/List;
       4: aload_1
       5: invokestatic  #25                 // Method org/apache/dubbo/registry/integration/RegistryProtocol.access$600:(Ljava/util/List;Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/common/URL;
       8: areturn

  protected void notifyOverrides();
    Code:
       0: aload_0
       1: getfield      #8                  // Field moduleModel:Lorg/apache/dubbo/rpc/model/ModuleModel;
       4: invokevirtual #18                 // Method org/apache/dubbo/rpc/model/ModuleModel.getApplicationModel:()Lorg/apache/dubbo/rpc/model/ApplicationModel;
       7: invokevirtual #26                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getDeployer:()Lorg/apache/dubbo/common/deploy/ApplicationDeployer;
      10: astore_1
      11: aload_1
      12: invokeinterface #27,  1           // InterfaceMethod org/apache/dubbo/common/deploy/ApplicationDeployer.increaseServiceRefreshCount:()V
      17: aload_0
      18: getfield      #7                  // Field overrideListeners:Ljava/util/Map;
      21: invokeinterface #28,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      26: invokedynamic #29,  0             // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      31: invokeinterface #30,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      36: aload_1
      37: invokeinterface #31,  1           // InterfaceMethod org/apache/dubbo/common/deploy/ApplicationDeployer.decreaseServiceRefreshCount:()V
      42: goto          54
      45: astore_2
      46: aload_1
      47: invokeinterface #31,  1           // InterfaceMethod org/apache/dubbo/common/deploy/ApplicationDeployer.decreaseServiceRefreshCount:()V
      52: aload_2
      53: athrow
      54: return
    Exception table:
       from    to  target type
          11    36    45   any

  public java.util.Map<org.apache.dubbo.common.URL, java.util.Set<org.apache.dubbo.registry.NotifyListener>> getOverrideListeners();
    Code:
       0: aload_0
       1: getfield      #7                  // Field overrideListeners:Ljava/util/Map;
       4: areturn

  private static void lambda$notifyOverrides$0(java.util.Set);
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       6: astore_1
       7: aload_1
       8: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          36
      16: aload_1
      17: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #35                 // class org/apache/dubbo/registry/NotifyListener
      25: astore_2
      26: aload_2
      27: checkcast     #36                 // class org/apache/dubbo/registry/integration/RegistryProtocol$OverrideListener
      30: invokevirtual #37                 // Method org/apache/dubbo/registry/integration/RegistryProtocol$OverrideListener.doOverrideIfNecessary:()V
      33: goto          7
      36: return

  static org.apache.dubbo.common.URL access$000(org.apache.dubbo.registry.integration.RegistryProtocol$ProviderConfigurationListener, org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method overrideUrl:(Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/common/URL;
       5: areturn
}
