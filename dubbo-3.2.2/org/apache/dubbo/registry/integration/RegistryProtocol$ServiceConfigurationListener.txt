Compiled from "RegistryProtocol.java"
class org.apache.dubbo.registry.integration.RegistryProtocol$ServiceConfigurationListener extends org.apache.dubbo.registry.integration.AbstractConfiguratorListener {
  private org.apache.dubbo.common.URL providerUrl;

  private org.apache.dubbo.registry.integration.RegistryProtocol$OverrideListener notifyListener;

  private final org.apache.dubbo.rpc.model.ModuleModel moduleModel;

  final org.apache.dubbo.registry.integration.RegistryProtocol this$0;

  public org.apache.dubbo.registry.integration.RegistryProtocol$ServiceConfigurationListener(org.apache.dubbo.registry.integration.RegistryProtocol, org.apache.dubbo.rpc.model.ModuleModel, org.apache.dubbo.common.URL, org.apache.dubbo.registry.integration.RegistryProtocol$OverrideListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/apache/dubbo/registry/integration/RegistryProtocol;
       5: aload_0
       6: aload_2
       7: invokespecial #4                  // Method org/apache/dubbo/registry/integration/AbstractConfiguratorListener."<init>":(Lorg/apache/dubbo/rpc/model/ModuleModel;)V
      10: aload_0
      11: aload_3
      12: putfield      #5                  // Field providerUrl:Lorg/apache/dubbo/common/URL;
      15: aload_0
      16: aload         4
      18: putfield      #6                  // Field notifyListener:Lorg/apache/dubbo/registry/integration/RegistryProtocol$OverrideListener;
      21: aload_0
      22: aload_2
      23: putfield      #7                  // Field moduleModel:Lorg/apache/dubbo/rpc/model/ModuleModel;
      26: aload_2
      27: invokevirtual #8                  // Method org/apache/dubbo/rpc/model/ModuleModel.getModelEnvironment:()Lorg/apache/dubbo/common/config/ModuleEnvironment;
      30: invokevirtual #9                  // Method org/apache/dubbo/common/config/ModuleEnvironment.getConfiguration:()Lorg/apache/dubbo/common/config/CompositeConfiguration;
      33: ldc           #10                 // class java/lang/Boolean
      35: ldc           #11                 // String enable-configuration-listen
      37: iconst_1
      38: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: invokevirtual #13                 // Method org/apache/dubbo/common/config/CompositeConfiguration.convert:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #10                 // class java/lang/Boolean
      47: invokevirtual #14                 // Method java/lang/Boolean.booleanValue:()Z
      50: ifeq          79
      53: aload_0
      54: new           #15                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      61: aload_3
      62: invokestatic  #17                 // InterfaceMethod org/apache/dubbo/common/config/configcenter/DynamicConfiguration.getRuleKey:(Lorg/apache/dubbo/common/URL;)Ljava/lang/String;
      65: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: ldc           #19                 // String .configurators
      70: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokevirtual #21                 // Method initWith:(Ljava/lang/String;)V
      79: return

  private <T> org.apache.dubbo.common.URL overrideUrl(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: getfield      #22                 // Field configurators:Ljava/util/List;
       4: aload_1
       5: invokestatic  #23                 // Method org/apache/dubbo/registry/integration/RegistryProtocol.access$600:(Ljava/util/List;Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/common/URL;
       8: areturn

  protected void notifyOverrides();
    Code:
       0: aload_0
       1: getfield      #7                  // Field moduleModel:Lorg/apache/dubbo/rpc/model/ModuleModel;
       4: invokevirtual #24                 // Method org/apache/dubbo/rpc/model/ModuleModel.getApplicationModel:()Lorg/apache/dubbo/rpc/model/ApplicationModel;
       7: invokevirtual #25                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getDeployer:()Lorg/apache/dubbo/common/deploy/ApplicationDeployer;
      10: astore_1
      11: aload_1
      12: invokeinterface #26,  1           // InterfaceMethod org/apache/dubbo/common/deploy/ApplicationDeployer.increaseServiceRefreshCount:()V
      17: aload_0
      18: getfield      #6                  // Field notifyListener:Lorg/apache/dubbo/registry/integration/RegistryProtocol$OverrideListener;
      21: invokevirtual #27                 // Method org/apache/dubbo/registry/integration/RegistryProtocol$OverrideListener.doOverrideIfNecessary:()V
      24: aload_1
      25: invokeinterface #28,  1           // InterfaceMethod org/apache/dubbo/common/deploy/ApplicationDeployer.decreaseServiceRefreshCount:()V
      30: goto          42
      33: astore_2
      34: aload_1
      35: invokeinterface #28,  1           // InterfaceMethod org/apache/dubbo/common/deploy/ApplicationDeployer.decreaseServiceRefreshCount:()V
      40: aload_2
      41: athrow
      42: return
    Exception table:
       from    to  target type
          11    24    33   any

  static org.apache.dubbo.common.URL access$100(org.apache.dubbo.registry.integration.RegistryProtocol$ServiceConfigurationListener, org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method overrideUrl:(Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/common/URL;
       5: areturn
}
