Compiled from "AbstractMethodConfig.java"
public abstract class org.apache.dubbo.config.AbstractMethodConfig extends org.apache.dubbo.config.AbstractConfig {
  private static final long serialVersionUID;

  protected java.lang.Integer timeout;

  protected java.lang.Integer retries;

  protected java.lang.Integer actives;

  protected java.lang.String loadbalance;

  protected java.lang.Boolean async;

  protected java.lang.Boolean sent;

  protected java.lang.String mock;

  protected java.lang.String merger;

  protected java.lang.String cache;

  protected java.lang.String validation;

  protected java.util.Map<java.lang.String, java.lang.String> parameters;

  protected java.lang.Integer forks;

  public org.apache.dubbo.config.AbstractMethodConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/dubbo/config/AbstractConfig."<init>":()V
       4: return

  public org.apache.dubbo.config.AbstractMethodConfig(org.apache.dubbo.rpc.model.ModuleModel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/apache/dubbo/config/AbstractConfig."<init>":(Lorg/apache/dubbo/rpc/model/ScopeModel;)V
       5: return

  public org.apache.dubbo.rpc.model.ModuleModel getScopeModel();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/dubbo/config/AbstractConfig.getScopeModel:()Lorg/apache/dubbo/rpc/model/ScopeModel;
       4: checkcast     #4                  // class org/apache/dubbo/rpc/model/ModuleModel
       7: areturn

  protected org.apache.dubbo.rpc.model.ScopeModel getDefaultModel();
    Code:
       0: invokestatic  #5                  // Method org/apache/dubbo/rpc/model/ApplicationModel.defaultModel:()Lorg/apache/dubbo/rpc/model/ApplicationModel;
       3: invokevirtual #6                  // Method org/apache/dubbo/rpc/model/ApplicationModel.getDefaultModule:()Lorg/apache/dubbo/rpc/model/ModuleModel;
       6: areturn

  protected void checkScopeModel(org.apache.dubbo.rpc.model.ScopeModel);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #7                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #8                  // String scopeModel cannot be null
      10: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: instanceof    #4                  // class org/apache/dubbo/rpc/model/ModuleModel
      18: ifne          48
      21: new           #7                  // class java/lang/IllegalArgumentException
      24: dup
      25: new           #10                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #12                 // String Invalid scope model, expect to be a ModuleModel but got:
      34: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_1
      38: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: return

  protected org.apache.dubbo.config.context.ModuleConfigManager getModuleConfigManager();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getScopeModel:()Lorg/apache/dubbo/rpc/model/ModuleModel;
       4: invokevirtual #17                 // Method org/apache/dubbo/rpc/model/ModuleModel.getConfigManager:()Lorg/apache/dubbo/config/context/ModuleConfigManager;
       7: areturn

  public java.lang.Integer getForks();
    Code:
       0: aload_0
       1: getfield      #18                 // Field forks:Ljava/lang/Integer;
       4: areturn

  public void setForks(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field forks:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getTimeout();
    Code:
       0: aload_0
       1: getfield      #19                 // Field timeout:Ljava/lang/Integer;
       4: areturn

  public void setTimeout(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field timeout:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getRetries();
    Code:
       0: aload_0
       1: getfield      #20                 // Field retries:Ljava/lang/Integer;
       4: areturn

  public void setRetries(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field retries:Ljava/lang/Integer;
       5: return

  public java.lang.String getLoadbalance();
    Code:
       0: aload_0
       1: getfield      #21                 // Field loadbalance:Ljava/lang/String;
       4: areturn

  public void setLoadbalance(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field loadbalance:Ljava/lang/String;
       5: return

  public java.lang.Boolean isAsync();
    Code:
       0: aload_0
       1: getfield      #22                 // Field async:Ljava/lang/Boolean;
       4: areturn

  public void setAsync(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field async:Ljava/lang/Boolean;
       5: return

  public java.lang.Integer getActives();
    Code:
       0: aload_0
       1: getfield      #23                 // Field actives:Ljava/lang/Integer;
       4: areturn

  public void setActives(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field actives:Ljava/lang/Integer;
       5: return

  public java.lang.Boolean getSent();
    Code:
       0: aload_0
       1: getfield      #24                 // Field sent:Ljava/lang/Boolean;
       4: areturn

  public void setSent(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field sent:Ljava/lang/Boolean;
       5: return

  public java.lang.String getMock();
    Code:
       0: aload_0
       1: getfield      #25                 // Field mock:Ljava/lang/String;
       4: areturn

  public void setMock(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field mock:Ljava/lang/String;
       5: return

  public void setMock(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: invokestatic  #26                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      10: invokevirtual #27                 // Method setMock:(Ljava/lang/String;)V
      13: return

  public java.lang.String getMerger();
    Code:
       0: aload_0
       1: getfield      #28                 // Field merger:Ljava/lang/String;
       4: areturn

  public void setMerger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field merger:Ljava/lang/String;
       5: return

  public java.lang.String getCache();
    Code:
       0: aload_0
       1: getfield      #29                 // Field cache:Ljava/lang/String;
       4: areturn

  public void setCache(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field cache:Ljava/lang/String;
       5: return

  public java.lang.String getValidation();
    Code:
       0: aload_0
       1: getfield      #30                 // Field validation:Ljava/lang/String;
       4: areturn

  public void setValidation(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field validation:Ljava/lang/String;
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getParameters();
    Code:
       0: aload_0
       1: getfield      #31                 // Field parameters:Ljava/util/Map;
       4: areturn

  public void setParameters(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field parameters:Ljava/util/Map;
       5: return

  public org.apache.dubbo.rpc.model.ScopeModel getScopeModel();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getScopeModel:()Lorg/apache/dubbo/rpc/model/ModuleModel;
       4: areturn
}
