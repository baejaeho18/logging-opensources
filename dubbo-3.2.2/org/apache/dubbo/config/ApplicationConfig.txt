Compiled from "ApplicationConfig.java"
public class org.apache.dubbo.config.ApplicationConfig extends org.apache.dubbo.config.AbstractConfig {
  private static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger LOGGER;

  private static final long serialVersionUID;

  private java.lang.String name;

  private java.lang.String version;

  private java.lang.String owner;

  private java.lang.String organization;

  private java.lang.String architecture;

  private java.lang.String environment;

  private java.lang.String compiler;

  private java.lang.String logger;

  private java.util.List<org.apache.dubbo.config.RegistryConfig> registries;

  private java.lang.String registryIds;

  private org.apache.dubbo.config.MonitorConfig monitor;

  private java.lang.String dumpDirectory;

  private java.lang.Boolean dumpEnable;

  private java.lang.Boolean qosEnable;

  private java.lang.String qosHost;

  private java.lang.Integer qosPort;

  private java.lang.Boolean qosAcceptForeignIp;

  private java.lang.String qosAcceptForeignIpWhitelist;

  private java.lang.String qosAnonymousAccessPermissionLevel;

  private java.lang.String qosAnonymousAllowCommands;

  private java.util.Map<java.lang.String, java.lang.String> parameters;

  private java.lang.String shutwait;

  private java.lang.String hostname;

  private java.lang.String metadataType;

  private java.lang.Boolean registerConsumer;

  private java.lang.String repository;

  private java.lang.Boolean enableFileCache;

  private java.lang.String protocol;

  private java.lang.String metadataServiceProtocol;

  private java.lang.Integer metadataServicePort;

  private java.lang.Integer mappingRetryInterval;

  private java.lang.String livenessProbe;

  private java.lang.String readinessProbe;

  private java.lang.String startupProbe;

  private java.lang.String registerMode;

  private java.lang.Boolean enableEmptyProtection;

  private java.lang.String serializeCheckStatus;

  private java.lang.Boolean autoTrustSerializeClass;

  private java.lang.Integer trustSerializeClassLevel;

  private java.lang.Boolean checkSerializable;

  private java.lang.String executorManagementMode;

  public org.apache.dubbo.config.ApplicationConfig();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/apache/dubbo/config/AbstractConfig."<init>":()V
       4: return

  public org.apache.dubbo.config.ApplicationConfig(org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/dubbo/config/AbstractConfig."<init>":(Lorg/apache/dubbo/rpc/model/ScopeModel;)V
       5: return

  public org.apache.dubbo.config.ApplicationConfig(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/apache/dubbo/config/AbstractConfig."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #6                  // Method setName:(Ljava/lang/String;)V
       9: return

  public org.apache.dubbo.config.ApplicationConfig(org.apache.dubbo.rpc.model.ApplicationModel, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/dubbo/config/AbstractConfig."<init>":(Lorg/apache/dubbo/rpc/model/ScopeModel;)V
       5: aload_0
       6: aload_2
       7: invokevirtual #6                  // Method setName:(Ljava/lang/String;)V
      10: return

  protected void checkDefault();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method org/apache/dubbo/config/AbstractConfig.checkDefault:()V
       4: aload_0
       5: getfield      #8                  // Field protocol:Ljava/lang/String;
       8: ifnonnull     17
      11: aload_0
      12: ldc           #9                  // String dubbo
      14: putfield      #8                  // Field protocol:Ljava/lang/String;
      17: aload_0
      18: getfield      #10                 // Field hostname:Ljava/lang/String;
      21: ifnonnull     61
      24: aload_0
      25: invokestatic  #11                 // Method java/net/InetAddress.getLocalHost:()Ljava/net/InetAddress;
      28: invokevirtual #12                 // Method java/net/InetAddress.getHostName:()Ljava/lang/String;
      31: putfield      #10                 // Field hostname:Ljava/lang/String;
      34: goto          61
      37: astore_1
      38: getstatic     #14                 // Field LOGGER:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      41: ldc           #15                 // String 0-12
      43: ldc           #16                 // String
      45: ldc           #16                 // String
      47: ldc           #17                 // String Failed to get the hostname of current instance.
      49: aload_1
      50: invokeinterface #18,  6           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.warn:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      55: aload_0
      56: ldc           #19                 // String UNKNOWN
      58: putfield      #10                 // Field hostname:Ljava/lang/String;
      61: aload_0
      62: getfield      #20                 // Field executorManagementMode:Ljava/lang/String;
      65: ifnonnull     74
      68: aload_0
      69: ldc           #21                 // String isolation
      71: putfield      #20                 // Field executorManagementMode:Ljava/lang/String;
      74: aload_0
      75: getfield      #22                 // Field enableFileCache:Ljava/lang/Boolean;
      78: ifnonnull     88
      81: aload_0
      82: getstatic     #23                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      85: putfield      #22                 // Field enableFileCache:Ljava/lang/Boolean;
      88: return
    Exception table:
       from    to  target type
          24    34    37   Class java/net/UnknownHostException

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #24                 // Field name:Ljava/lang/String;
       4: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field name:Ljava/lang/String;
       5: return

  public java.lang.String getVersion();
    Code:
       0: aload_0
       1: getfield      #25                 // Field version:Ljava/lang/String;
       4: areturn

  public void setVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field version:Ljava/lang/String;
       5: return

  public java.lang.String getOwner();
    Code:
       0: aload_0
       1: getfield      #26                 // Field owner:Ljava/lang/String;
       4: areturn

  public void setOwner(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field owner:Ljava/lang/String;
       5: return

  public java.lang.String getOrganization();
    Code:
       0: aload_0
       1: getfield      #27                 // Field organization:Ljava/lang/String;
       4: areturn

  public void setOrganization(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field organization:Ljava/lang/String;
       5: return

  public java.lang.String getArchitecture();
    Code:
       0: aload_0
       1: getfield      #28                 // Field architecture:Ljava/lang/String;
       4: areturn

  public void setArchitecture(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field architecture:Ljava/lang/String;
       5: return

  public java.lang.String getEnvironment();
    Code:
       0: aload_0
       1: getfield      #29                 // Field environment:Ljava/lang/String;
       4: areturn

  public void setEnvironment(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        72
       4: ldc           #30                 // String develop
       6: aload_1
       7: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifne          72
      13: ldc           #32                 // String test
      15: aload_1
      16: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifne          72
      22: ldc           #33                 // String product
      24: aload_1
      25: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifne          72
      31: new           #34                 // class java/lang/IllegalStateException
      34: dup
      35: ldc           #35                 // String Unsupported environment: %s, only support %s/%s/%s, default is %s.
      37: iconst_5
      38: anewarray     #36                 // class java/lang/Object
      41: dup
      42: iconst_0
      43: aload_1
      44: aastore
      45: dup
      46: iconst_1
      47: ldc           #30                 // String develop
      49: aastore
      50: dup
      51: iconst_2
      52: ldc           #32                 // String test
      54: aastore
      55: dup
      56: iconst_3
      57: ldc           #33                 // String product
      59: aastore
      60: dup
      61: iconst_4
      62: ldc           #33                 // String product
      64: aastore
      65: invokestatic  #37                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      68: invokespecial #38                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_0
      73: aload_1
      74: putfield      #29                 // Field environment:Ljava/lang/String;
      77: return

  public org.apache.dubbo.config.RegistryConfig getRegistry();
    Code:
       0: aload_0
       1: getfield      #39                 // Field registries:Ljava/util/List;
       4: invokestatic  #40                 // Method org/apache/dubbo/common/utils/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          14
      10: aconst_null
      11: goto          27
      14: aload_0
      15: getfield      #39                 // Field registries:Ljava/util/List;
      18: iconst_0
      19: invokeinterface #41,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      24: checkcast     #42                 // class org/apache/dubbo/config/RegistryConfig
      27: areturn

  public void setRegistry(org.apache.dubbo.config.RegistryConfig);
    Code:
       0: new           #43                 // class java/util/ArrayList
       3: dup
       4: iconst_1
       5: invokespecial #44                 // Method java/util/ArrayList."<init>":(I)V
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokeinterface #45,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: aload_2
      19: putfield      #39                 // Field registries:Ljava/util/List;
      22: return

  public java.util.List<org.apache.dubbo.config.RegistryConfig> getRegistries();
    Code:
       0: aload_0
       1: getfield      #39                 // Field registries:Ljava/util/List;
       4: areturn

  public void setRegistries(java.util.List<? extends org.apache.dubbo.config.RegistryConfig>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field registries:Ljava/util/List;
       5: return

  public java.lang.String getRegistryIds();
    Code:
       0: aload_0
       1: getfield      #46                 // Field registryIds:Ljava/lang/String;
       4: areturn

  public void setRegistryIds(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field registryIds:Ljava/lang/String;
       5: return

  public org.apache.dubbo.config.MonitorConfig getMonitor();
    Code:
       0: aload_0
       1: getfield      #47                 // Field monitor:Lorg/apache/dubbo/config/MonitorConfig;
       4: areturn

  public void setMonitor(java.lang.String);
    Code:
       0: aload_0
       1: new           #48                 // class org/apache/dubbo/config/MonitorConfig
       4: dup
       5: aload_1
       6: invokespecial #49                 // Method org/apache/dubbo/config/MonitorConfig."<init>":(Ljava/lang/String;)V
       9: putfield      #47                 // Field monitor:Lorg/apache/dubbo/config/MonitorConfig;
      12: return

  public void setMonitor(org.apache.dubbo.config.MonitorConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field monitor:Lorg/apache/dubbo/config/MonitorConfig;
       5: return

  public java.lang.String getCompiler();
    Code:
       0: aload_0
       1: getfield      #50                 // Field compiler:Ljava/lang/String;
       4: areturn

  public void setCompiler(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #50                 // Field compiler:Ljava/lang/String;
       5: aload_1
       6: invokestatic  #51                 // Method org/apache/dubbo/common/compiler/support/AdaptiveCompiler.setDefaultCompiler:(Ljava/lang/String;)V
       9: return

  public java.lang.String getLogger();
    Code:
       0: aload_0
       1: getfield      #52                 // Field logger:Ljava/lang/String;
       4: areturn

  public void setLogger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field logger:Ljava/lang/String;
       5: aload_0
       6: invokevirtual #53                 // Method getApplicationModel:()Lorg/apache/dubbo/rpc/model/ApplicationModel;
       9: invokevirtual #54                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getFrameworkModel:()Lorg/apache/dubbo/rpc/model/FrameworkModel;
      12: aload_1
      13: invokestatic  #55                 // Method org/apache/dubbo/common/logger/LoggerFactory.setLoggerAdapter:(Lorg/apache/dubbo/rpc/model/FrameworkModel;Ljava/lang/String;)V
      16: return

  public java.lang.String getDumpDirectory();
    Code:
       0: aload_0
       1: getfield      #56                 // Field dumpDirectory:Ljava/lang/String;
       4: areturn

  public void setDumpDirectory(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #56                 // Field dumpDirectory:Ljava/lang/String;
       5: return

  public java.lang.Boolean getDumpEnable();
    Code:
       0: aload_0
       1: getfield      #57                 // Field dumpEnable:Ljava/lang/Boolean;
       4: areturn

  public void setDumpEnable(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field dumpEnable:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getQosEnable();
    Code:
       0: aload_0
       1: getfield      #58                 // Field qosEnable:Ljava/lang/Boolean;
       4: areturn

  public void setQosEnable(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field qosEnable:Ljava/lang/Boolean;
       5: return

  public java.lang.String getQosHost();
    Code:
       0: aload_0
       1: getfield      #59                 // Field qosHost:Ljava/lang/String;
       4: areturn

  public void setQosHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field qosHost:Ljava/lang/String;
       5: return

  public java.lang.Integer getQosPort();
    Code:
       0: aload_0
       1: getfield      #60                 // Field qosPort:Ljava/lang/Integer;
       4: areturn

  public void setQosPort(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field qosPort:Ljava/lang/Integer;
       5: return

  public java.lang.Boolean getQosAcceptForeignIp();
    Code:
       0: aload_0
       1: getfield      #61                 // Field qosAcceptForeignIp:Ljava/lang/Boolean;
       4: areturn

  public void setQosAcceptForeignIp(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field qosAcceptForeignIp:Ljava/lang/Boolean;
       5: return

  public java.lang.String getQosAcceptForeignIpWhitelist();
    Code:
       0: aload_0
       1: getfield      #62                 // Field qosAcceptForeignIpWhitelist:Ljava/lang/String;
       4: areturn

  public void setQosAcceptForeignIpWhitelist(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #62                 // Field qosAcceptForeignIpWhitelist:Ljava/lang/String;
       5: return

  public java.lang.String getQosAnonymousAccessPermissionLevel();
    Code:
       0: aload_0
       1: getfield      #63                 // Field qosAnonymousAccessPermissionLevel:Ljava/lang/String;
       4: areturn

  public void setQosAnonymousAccessPermissionLevel(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field qosAnonymousAccessPermissionLevel:Ljava/lang/String;
       5: return

  public java.lang.String getQosAnonymousAllowCommands();
    Code:
       0: aload_0
       1: getfield      #64                 // Field qosAnonymousAllowCommands:Ljava/lang/String;
       4: areturn

  public void setQosAnonymousAllowCommands(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field qosAnonymousAllowCommands:Ljava/lang/String;
       5: return

  public java.lang.Boolean getQosEnableCompatible();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method getQosEnable:()Ljava/lang/Boolean;
       4: areturn

  public void setQosEnableCompatible(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #66                 // Method setQosEnable:(Ljava/lang/Boolean;)V
       5: return

  public java.lang.String getQosHostCompatible();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method getQosHost:()Ljava/lang/String;
       4: areturn

  public void setQosHostCompatible(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #68                 // Method setQosHost:(Ljava/lang/String;)V
       5: return

  public java.lang.Integer getQosPortCompatible();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method getQosPort:()Ljava/lang/Integer;
       4: areturn

  public void setQosPortCompatible(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #70                 // Method setQosPort:(Ljava/lang/Integer;)V
       5: return

  public java.lang.Boolean getQosAcceptForeignIpCompatible();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method getQosAcceptForeignIp:()Ljava/lang/Boolean;
       4: areturn

  public void setQosAcceptForeignIpCompatible(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #72                 // Method setQosAcceptForeignIp:(Ljava/lang/Boolean;)V
       5: return

  public java.lang.String getQosAcceptForeignIpWhitelistCompatible();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method getQosAcceptForeignIpWhitelist:()Ljava/lang/String;
       4: areturn

  public void setQosAcceptForeignIpWhitelistCompatible(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #74                 // Method setQosAcceptForeignIpWhitelist:(Ljava/lang/String;)V
       5: return

  public java.lang.String getQosAnonymousAccessPermissionLevelCompatible();
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method getQosAnonymousAccessPermissionLevel:()Ljava/lang/String;
       4: areturn

  public void setQosAnonymousAccessPermissionLevelCompatible(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #76                 // Method setQosAnonymousAccessPermissionLevel:(Ljava/lang/String;)V
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getParameters();
    Code:
       0: aload_0
       1: getfield      #77                 // Field parameters:Ljava/util/Map;
       4: areturn

  public void setParameters(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #77                 // Field parameters:Ljava/util/Map;
       5: return

  public java.lang.String getShutwait();
    Code:
       0: aload_0
       1: getfield      #78                 // Field shutwait:Ljava/lang/String;
       4: areturn

  public void setShutwait(java.lang.String);
    Code:
       0: ldc           #79                 // String dubbo.service.shutdown.wait
       2: aload_1
       3: invokestatic  #80                 // Method java/lang/System.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: pop
       7: aload_0
       8: aload_1
       9: putfield      #78                 // Field shutwait:Ljava/lang/String;
      12: return

  public java.lang.String getHostname();
    Code:
       0: aload_0
       1: getfield      #10                 // Field hostname:Ljava/lang/String;
       4: areturn

  public boolean isValid();
    Code:
       0: aload_0
       1: getfield      #24                 // Field name:Ljava/lang/String;
       4: invokestatic  #81                 // Method org/apache/dubbo/common/utils/StringUtils.isEmpty:(Ljava/lang/String;)Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public java.lang.String getMetadataType();
    Code:
       0: aload_0
       1: getfield      #82                 // Field metadataType:Ljava/lang/String;
       4: areturn

  public void setMetadataType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #82                 // Field metadataType:Ljava/lang/String;
       5: return

  public java.lang.Boolean getRegisterConsumer();
    Code:
       0: aload_0
       1: getfield      #83                 // Field registerConsumer:Ljava/lang/Boolean;
       4: areturn

  public void setRegisterConsumer(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field registerConsumer:Ljava/lang/Boolean;
       5: return

  public java.lang.String getRepository();
    Code:
       0: aload_0
       1: getfield      #84                 // Field repository:Ljava/lang/String;
       4: areturn

  public void setRepository(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #84                 // Field repository:Ljava/lang/String;
       5: return

  public java.lang.Boolean getEnableFileCache();
    Code:
       0: aload_0
       1: getfield      #22                 // Field enableFileCache:Ljava/lang/Boolean;
       4: areturn

  public void setEnableFileCache(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field enableFileCache:Ljava/lang/Boolean;
       5: return

  public java.lang.String getRegisterMode();
    Code:
       0: aload_0
       1: getfield      #85                 // Field registerMode:Ljava/lang/String;
       4: areturn

  public void setRegisterMode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #85                 // Field registerMode:Ljava/lang/String;
       5: return

  public java.lang.Boolean getEnableEmptyProtection();
    Code:
       0: aload_0
       1: getfield      #86                 // Field enableEmptyProtection:Ljava/lang/Boolean;
       4: areturn

  public void setEnableEmptyProtection(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field enableEmptyProtection:Ljava/lang/Boolean;
       5: return

  public java.lang.String getProtocol();
    Code:
       0: aload_0
       1: getfield      #8                  // Field protocol:Ljava/lang/String;
       4: areturn

  public void setProtocol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field protocol:Ljava/lang/String;
       5: return

  public java.lang.Integer getMetadataServicePort();
    Code:
       0: aload_0
       1: getfield      #87                 // Field metadataServicePort:Ljava/lang/Integer;
       4: areturn

  public void setMetadataServicePort(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #87                 // Field metadataServicePort:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getMappingRetryInterval();
    Code:
       0: aload_0
       1: getfield      #88                 // Field mappingRetryInterval:Ljava/lang/Integer;
       4: areturn

  public void setMappingRetryInterval(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #88                 // Field mappingRetryInterval:Ljava/lang/Integer;
       5: return

  public java.lang.String getMetadataServiceProtocol();
    Code:
       0: aload_0
       1: getfield      #89                 // Field metadataServiceProtocol:Ljava/lang/String;
       4: areturn

  public void setMetadataServiceProtocol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #89                 // Field metadataServiceProtocol:Ljava/lang/String;
       5: return

  public java.lang.String getLivenessProbe();
    Code:
       0: aload_0
       1: getfield      #90                 // Field livenessProbe:Ljava/lang/String;
       4: areturn

  public void setLivenessProbe(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #90                 // Field livenessProbe:Ljava/lang/String;
       5: return

  public java.lang.String getReadinessProbe();
    Code:
       0: aload_0
       1: getfield      #91                 // Field readinessProbe:Ljava/lang/String;
       4: areturn

  public void setReadinessProbe(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #91                 // Field readinessProbe:Ljava/lang/String;
       5: return

  public java.lang.String getStartupProbe();
    Code:
       0: aload_0
       1: getfield      #92                 // Field startupProbe:Ljava/lang/String;
       4: areturn

  public void setStartupProbe(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #92                 // Field startupProbe:Ljava/lang/String;
       5: return

  public java.lang.String getSerializeCheckStatus();
    Code:
       0: aload_0
       1: getfield      #93                 // Field serializeCheckStatus:Ljava/lang/String;
       4: areturn

  public void setSerializeCheckStatus(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #93                 // Field serializeCheckStatus:Ljava/lang/String;
       5: return

  public java.lang.Boolean getAutoTrustSerializeClass();
    Code:
       0: aload_0
       1: getfield      #94                 // Field autoTrustSerializeClass:Ljava/lang/Boolean;
       4: areturn

  public void setAutoTrustSerializeClass(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #94                 // Field autoTrustSerializeClass:Ljava/lang/Boolean;
       5: return

  public java.lang.Integer getTrustSerializeClassLevel();
    Code:
       0: aload_0
       1: getfield      #95                 // Field trustSerializeClassLevel:Ljava/lang/Integer;
       4: areturn

  public void setTrustSerializeClassLevel(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #95                 // Field trustSerializeClassLevel:Ljava/lang/Integer;
       5: return

  public java.lang.Boolean getCheckSerializable();
    Code:
       0: aload_0
       1: getfield      #96                 // Field checkSerializable:Ljava/lang/Boolean;
       4: areturn

  public void setCheckSerializable(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #96                 // Field checkSerializable:Ljava/lang/Boolean;
       5: return

  public void setExecutorManagementMode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field executorManagementMode:Ljava/lang/String;
       5: return

  public java.lang.String getExecutorManagementMode();
    Code:
       0: aload_0
       1: getfield      #20                 // Field executorManagementMode:Ljava/lang/String;
       4: areturn

  public void refresh();
    Code:
       0: aload_0
       1: invokespecial #97                 // Method org/apache/dubbo/config/AbstractConfig.refresh:()V
       4: aload_0
       5: invokespecial #98                 // Method appendEnvironmentProperties:()V
       8: return

  private void appendEnvironmentProperties();
    Code:
       0: aload_0
       1: getfield      #77                 // Field parameters:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #99                 // class java/util/HashMap
      11: dup
      12: invokespecial #100                // Method java/util/HashMap."<init>":()V
      15: putfield      #77                 // Field parameters:Ljava/util/Map;
      18: aload_0
      19: ldc           #101                // class org/apache/dubbo/common/infra/InfraAdapter
      21: invokevirtual #102                // Method getExtensionLoader:(Ljava/lang/Class;)Lorg/apache/dubbo/common/extension/ExtensionLoader;
      24: invokevirtual #103                // Method org/apache/dubbo/common/extension/ExtensionLoader.getSupportedExtensionInstances:()Ljava/util/Set;
      27: astore_1
      28: aload_1
      29: invokestatic  #104                // Method org/apache/dubbo/common/utils/CollectionUtils.isNotEmpty:(Ljava/util/Collection;)Z
      32: ifeq          130
      35: new           #99                 // class java/util/HashMap
      38: dup
      39: invokespecial #100                // Method java/util/HashMap."<init>":()V
      42: astore_2
      43: aload_2
      44: ldc           #105                // String application
      46: aload_0
      47: invokevirtual #106                // Method getName:()Ljava/lang/String;
      50: invokeinterface #107,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload_2
      57: ldc           #108                // String host
      59: aload_0
      60: invokevirtual #109                // Method getHostname:()Ljava/lang/String;
      63: invokeinterface #107,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: aload_1
      70: invokeinterface #110,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      75: astore_3
      76: aload_3
      77: invokeinterface #111,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      82: ifeq          130
      85: aload_3
      86: invokeinterface #112,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #101                // class org/apache/dubbo/common/infra/InfraAdapter
      94: astore        4
      96: aload         4
      98: aload_2
      99: invokeinterface #113,  2          // InterfaceMethod org/apache/dubbo/common/infra/InfraAdapter.getExtraAttributes:(Ljava/util/Map;)Ljava/util/Map;
     104: astore        5
     106: aload         5
     108: invokestatic  #114                // Method org/apache/dubbo/common/utils/CollectionUtils.isNotEmptyMap:(Ljava/util/Map;)Z
     111: ifeq          127
     114: aload         5
     116: aload_0
     117: invokedynamic #115,  0            // InvokeDynamic #0:accept:(Lorg/apache/dubbo/config/ApplicationConfig;)Ljava/util/function/BiConsumer;
     122: invokeinterface #116,  2          // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
     127: goto          76
     130: return

  private void lambda$appendEnvironmentProperties$0(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #117                // Method getPrefixes:()Ljava/util/List;
       4: invokeinterface #118,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #111,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          86
      19: aload_3
      20: invokeinterface #112,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #119                // class java/lang/String
      28: astore        4
      30: new           #120                // class java/lang/StringBuilder
      33: dup
      34: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
      37: aload         4
      39: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #123                // String .
      44: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #124                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: astore        4
      52: aload_1
      53: aload         4
      55: invokevirtual #125                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      58: ifeq          71
      61: aload_1
      62: aload         4
      64: invokevirtual #126                // Method java/lang/String.length:()I
      67: invokevirtual #127                // Method java/lang/String.substring:(I)Ljava/lang/String;
      70: astore_1
      71: aload_0
      72: getfield      #77                 // Field parameters:Ljava/util/Map;
      75: aload_1
      76: aload_2
      77: invokeinterface #107,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: goto          86
      86: return

  static {};
    Code:
       0: ldc           #128                // class org/apache/dubbo/config/ApplicationConfig
       2: invokestatic  #129                // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #14                 // Field LOGGER:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: return
}
