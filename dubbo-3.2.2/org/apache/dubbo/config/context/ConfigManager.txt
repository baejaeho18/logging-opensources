Compiled from "ConfigManager.java"
public class org.apache.dubbo.config.context.ConfigManager extends org.apache.dubbo.config.context.AbstractConfigManager implements org.apache.dubbo.common.context.ApplicationExt {
  private static final org.apache.dubbo.common.logger.Logger logger;

  public static final java.lang.String NAME;

  public static final java.lang.String BEAN_NAME;

  public static final java.lang.String DUBBO_CONFIG_MODE;

  public org.apache.dubbo.config.context.ConfigManager(org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        9
       4: anewarray     #2                  // class java/lang/Class
       7: dup
       8: iconst_0
       9: ldc           #3                  // class org/apache/dubbo/config/ApplicationConfig
      11: aastore
      12: dup
      13: iconst_1
      14: ldc           #4                  // class org/apache/dubbo/config/MonitorConfig
      16: aastore
      17: dup
      18: iconst_2
      19: ldc           #5                  // class org/apache/dubbo/config/MetricsConfig
      21: aastore
      22: dup
      23: iconst_3
      24: ldc           #6                  // class org/apache/dubbo/config/SslConfig
      26: aastore
      27: dup
      28: iconst_4
      29: ldc           #7                  // class org/apache/dubbo/config/ProtocolConfig
      31: aastore
      32: dup
      33: iconst_5
      34: ldc           #8                  // class org/apache/dubbo/config/RegistryConfig
      36: aastore
      37: dup
      38: bipush        6
      40: ldc           #9                  // class org/apache/dubbo/config/ConfigCenterConfig
      42: aastore
      43: dup
      44: bipush        7
      46: ldc           #10                 // class org/apache/dubbo/config/MetadataReportConfig
      48: aastore
      49: dup
      50: bipush        8
      52: ldc           #11                 // class org/apache/dubbo/config/TracingConfig
      54: aastore
      55: invokestatic  #12                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      58: invokespecial #13                 // Method org/apache/dubbo/config/context/AbstractConfigManager."<init>":(Lorg/apache/dubbo/rpc/model/ScopeModel;Ljava/util/Collection;)V
      61: return

  public void setApplication(org.apache.dubbo.config.ApplicationConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method addConfig:(Lorg/apache/dubbo/config/AbstractConfig;)Lorg/apache/dubbo/config/AbstractConfig;
       5: pop
       6: return

  public java.util.Optional<org.apache.dubbo.config.ApplicationConfig> getApplication();
    Code:
       0: aload_0
       1: ldc           #3                  // class org/apache/dubbo/config/ApplicationConfig
       3: invokestatic  #15                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #16                 // Method getSingleConfig:(Ljava/lang/String;)Lorg/apache/dubbo/config/AbstractConfig;
       9: invokestatic  #17                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      12: areturn

  public org.apache.dubbo.config.ApplicationConfig getApplicationOrElseThrow();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getApplication:()Ljava/util/Optional;
       4: invokedynamic #19,  0             // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
       9: invokevirtual #20                 // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      12: checkcast     #3                  // class org/apache/dubbo/config/ApplicationConfig
      15: areturn

  public void setMonitor(org.apache.dubbo.config.MonitorConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method addConfig:(Lorg/apache/dubbo/config/AbstractConfig;)Lorg/apache/dubbo/config/AbstractConfig;
       5: pop
       6: return

  public java.util.Optional<org.apache.dubbo.config.MonitorConfig> getMonitor();
    Code:
       0: aload_0
       1: ldc           #4                  // class org/apache/dubbo/config/MonitorConfig
       3: invokestatic  #15                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #16                 // Method getSingleConfig:(Ljava/lang/String;)Lorg/apache/dubbo/config/AbstractConfig;
       9: invokestatic  #17                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      12: areturn

  public void setMetrics(org.apache.dubbo.config.MetricsConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method addConfig:(Lorg/apache/dubbo/config/AbstractConfig;)Lorg/apache/dubbo/config/AbstractConfig;
       5: pop
       6: return

  public java.util.Optional<org.apache.dubbo.config.MetricsConfig> getMetrics();
    Code:
       0: aload_0
       1: ldc           #5                  // class org/apache/dubbo/config/MetricsConfig
       3: invokestatic  #15                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #16                 // Method getSingleConfig:(Ljava/lang/String;)Lorg/apache/dubbo/config/AbstractConfig;
       9: invokestatic  #17                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      12: areturn

  public void setTracing(org.apache.dubbo.config.TracingConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method addConfig:(Lorg/apache/dubbo/config/AbstractConfig;)Lorg/apache/dubbo/config/AbstractConfig;
       5: pop
       6: return

  public java.util.Optional<org.apache.dubbo.config.TracingConfig> getTracing();
    Code:
       0: aload_0
       1: ldc           #11                 // class org/apache/dubbo/config/TracingConfig
       3: invokestatic  #15                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #16                 // Method getSingleConfig:(Ljava/lang/String;)Lorg/apache/dubbo/config/AbstractConfig;
       9: invokestatic  #17                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      12: areturn

  public void setSsl(org.apache.dubbo.config.SslConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method addConfig:(Lorg/apache/dubbo/config/AbstractConfig;)Lorg/apache/dubbo/config/AbstractConfig;
       5: pop
       6: return

  public java.util.Optional<org.apache.dubbo.config.SslConfig> getSsl();
    Code:
       0: aload_0
       1: ldc           #6                  // class org/apache/dubbo/config/SslConfig
       3: invokestatic  #15                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #16                 // Method getSingleConfig:(Ljava/lang/String;)Lorg/apache/dubbo/config/AbstractConfig;
       9: invokestatic  #17                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      12: areturn

  public void addConfigCenter(org.apache.dubbo.config.ConfigCenterConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method addConfig:(Lorg/apache/dubbo/config/AbstractConfig;)Lorg/apache/dubbo/config/AbstractConfig;
       5: pop
       6: return

  public void addConfigCenters(java.lang.Iterable<org.apache.dubbo.config.ConfigCenterConfig>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #21,  0             // InvokeDynamic #1:accept:(Lorg/apache/dubbo/config/context/ConfigManager;)Ljava/util/function/Consumer;
       7: invokeinterface #22,  2           // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V
      12: return

  public java.util.Optional<java.util.Collection<org.apache.dubbo.config.ConfigCenterConfig>> getDefaultConfigCenter();
    Code:
       0: aload_0
       1: ldc           #9                  // class org/apache/dubbo/config/ConfigCenterConfig
       3: invokestatic  #15                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #23                 // Method getConfigsMap:(Ljava/lang/String;)Ljava/util/Map;
       9: invokestatic  #24                 // Method getDefaultConfigs:(Ljava/util/Map;)Ljava/util/List;
      12: astore_1
      13: aload_1
      14: invokestatic  #25                 // Method org/apache/dubbo/common/utils/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      17: ifeq          25
      20: aload_0
      21: invokevirtual #26                 // Method getConfigCenters:()Ljava/util/Collection;
      24: astore_1
      25: aload_1
      26: invokestatic  #17                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      29: areturn

  public java.util.Optional<org.apache.dubbo.config.ConfigCenterConfig> getConfigCenter(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #9                  // class org/apache/dubbo/config/ConfigCenterConfig
       3: aload_1
       4: invokevirtual #27                 // Method getConfig:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Optional;
       7: areturn

  public java.util.Collection<org.apache.dubbo.config.ConfigCenterConfig> getConfigCenters();
    Code:
       0: aload_0
       1: ldc           #9                  // class org/apache/dubbo/config/ConfigCenterConfig
       3: invokestatic  #15                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #28                 // Method getConfigs:(Ljava/lang/String;)Ljava/util/Collection;
       9: areturn

  public void addMetadataReport(org.apache.dubbo.config.MetadataReportConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method addConfig:(Lorg/apache/dubbo/config/AbstractConfig;)Lorg/apache/dubbo/config/AbstractConfig;
       5: pop
       6: return

  public void addMetadataReports(java.lang.Iterable<org.apache.dubbo.config.MetadataReportConfig>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #29,  0             // InvokeDynamic #2:accept:(Lorg/apache/dubbo/config/context/ConfigManager;)Ljava/util/function/Consumer;
       7: invokeinterface #22,  2           // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V
      12: return

  public java.util.Collection<org.apache.dubbo.config.MetadataReportConfig> getMetadataConfigs();
    Code:
       0: aload_0
       1: ldc           #10                 // class org/apache/dubbo/config/MetadataReportConfig
       3: invokestatic  #15                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #28                 // Method getConfigs:(Ljava/lang/String;)Ljava/util/Collection;
       9: areturn

  public java.util.Collection<org.apache.dubbo.config.MetadataReportConfig> getDefaultMetadataConfigs();
    Code:
       0: aload_0
       1: ldc           #10                 // class org/apache/dubbo/config/MetadataReportConfig
       3: invokestatic  #15                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #23                 // Method getConfigsMap:(Ljava/lang/String;)Ljava/util/Map;
       9: invokestatic  #24                 // Method getDefaultConfigs:(Ljava/util/Map;)Ljava/util/List;
      12: astore_1
      13: aload_1
      14: invokestatic  #25                 // Method org/apache/dubbo/common/utils/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      17: ifeq          25
      20: aload_0
      21: invokevirtual #30                 // Method getMetadataConfigs:()Ljava/util/Collection;
      24: areturn
      25: aload_1
      26: areturn

  public void addProtocol(org.apache.dubbo.config.ProtocolConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method addConfig:(Lorg/apache/dubbo/config/AbstractConfig;)Lorg/apache/dubbo/config/AbstractConfig;
       5: pop
       6: return

  public void addProtocols(java.lang.Iterable<org.apache.dubbo.config.ProtocolConfig>);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_1
       5: aload_0
       6: invokedynamic #31,  0             // InvokeDynamic #3:accept:(Lorg/apache/dubbo/config/context/ConfigManager;)Ljava/util/function/Consumer;
      11: invokeinterface #22,  2           // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V
      16: return

  public java.util.Optional<org.apache.dubbo.config.ProtocolConfig> getProtocol(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #7                  // class org/apache/dubbo/config/ProtocolConfig
       3: aload_1
       4: invokevirtual #27                 // Method getConfig:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Optional;
       7: areturn

  public java.util.List<org.apache.dubbo.config.ProtocolConfig> getDefaultProtocols();
    Code:
       0: aload_0
       1: ldc           #7                  // class org/apache/dubbo/config/ProtocolConfig
       3: invokevirtual #32                 // Method getDefaultConfigs:(Ljava/lang/Class;)Ljava/util/List;
       6: areturn

  public <C extends org.apache.dubbo.config.AbstractConfig> java.util.List<C> getDefaultConfigs(java.lang.Class<C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #15                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       5: invokevirtual #23                 // Method getConfigsMap:(Ljava/lang/String;)Ljava/util/Map;
       8: invokestatic  #24                 // Method getDefaultConfigs:(Ljava/util/Map;)Ljava/util/List;
      11: areturn

  public java.util.Collection<org.apache.dubbo.config.ProtocolConfig> getProtocols();
    Code:
       0: aload_0
       1: ldc           #7                  // class org/apache/dubbo/config/ProtocolConfig
       3: invokestatic  #15                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #28                 // Method getConfigs:(Ljava/lang/String;)Ljava/util/Collection;
       9: areturn

  public void addRegistry(org.apache.dubbo.config.RegistryConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method addConfig:(Lorg/apache/dubbo/config/AbstractConfig;)Lorg/apache/dubbo/config/AbstractConfig;
       5: pop
       6: return

  public void addRegistries(java.lang.Iterable<org.apache.dubbo.config.RegistryConfig>);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_1
       5: aload_0
       6: invokedynamic #33,  0             // InvokeDynamic #4:accept:(Lorg/apache/dubbo/config/context/ConfigManager;)Ljava/util/function/Consumer;
      11: invokeinterface #22,  2           // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V
      16: return

  public java.util.Optional<org.apache.dubbo.config.RegistryConfig> getRegistry(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #8                  // class org/apache/dubbo/config/RegistryConfig
       3: aload_1
       4: invokevirtual #27                 // Method getConfig:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Optional;
       7: areturn

  public java.util.List<org.apache.dubbo.config.RegistryConfig> getDefaultRegistries();
    Code:
       0: aload_0
       1: ldc           #8                  // class org/apache/dubbo/config/RegistryConfig
       3: invokestatic  #15                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #23                 // Method getConfigsMap:(Ljava/lang/String;)Ljava/util/Map;
       9: invokestatic  #24                 // Method getDefaultConfigs:(Ljava/util/Map;)Ljava/util/List;
      12: areturn

  public java.util.Collection<org.apache.dubbo.config.RegistryConfig> getRegistries();
    Code:
       0: aload_0
       1: ldc           #8                  // class org/apache/dubbo/config/RegistryConfig
       3: invokestatic  #15                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #28                 // Method getConfigs:(Ljava/lang/String;)Ljava/util/Collection;
       9: areturn

  public void refreshAll();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getApplication:()Ljava/util/Optional;
       4: invokedynamic #34,  0             // InvokeDynamic #5:accept:()Ljava/util/function/Consumer;
       9: invokevirtual #35                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      12: aload_0
      13: invokevirtual #36                 // Method getMonitor:()Ljava/util/Optional;
      16: invokedynamic #37,  0             // InvokeDynamic #6:accept:()Ljava/util/function/Consumer;
      21: invokevirtual #35                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      24: aload_0
      25: invokevirtual #38                 // Method getMetrics:()Ljava/util/Optional;
      28: invokedynamic #39,  0             // InvokeDynamic #7:accept:()Ljava/util/function/Consumer;
      33: invokevirtual #35                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      36: aload_0
      37: invokevirtual #40                 // Method getTracing:()Ljava/util/Optional;
      40: invokedynamic #41,  0             // InvokeDynamic #8:accept:()Ljava/util/function/Consumer;
      45: invokevirtual #35                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      48: aload_0
      49: invokevirtual #42                 // Method getSsl:()Ljava/util/Optional;
      52: invokedynamic #43,  0             // InvokeDynamic #9:accept:()Ljava/util/function/Consumer;
      57: invokevirtual #35                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      60: aload_0
      61: invokevirtual #44                 // Method getProtocols:()Ljava/util/Collection;
      64: invokedynamic #45,  0             // InvokeDynamic #10:accept:()Ljava/util/function/Consumer;
      69: invokeinterface #46,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      74: aload_0
      75: invokevirtual #47                 // Method getRegistries:()Ljava/util/Collection;
      78: invokedynamic #48,  0             // InvokeDynamic #11:accept:()Ljava/util/function/Consumer;
      83: invokeinterface #46,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      88: aload_0
      89: invokevirtual #26                 // Method getConfigCenters:()Ljava/util/Collection;
      92: invokedynamic #49,  0             // InvokeDynamic #12:accept:()Ljava/util/function/Consumer;
      97: invokeinterface #46,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
     102: aload_0
     103: invokevirtual #30                 // Method getMetadataConfigs:()Ljava/util/Collection;
     106: invokedynamic #50,  0             // InvokeDynamic #13:accept:()Ljava/util/function/Consumer;
     111: invokeinterface #46,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
     116: return

  public void loadConfigs();
    Code:
       0: aload_0
       1: ldc           #3                  // class org/apache/dubbo/config/ApplicationConfig
       3: invokevirtual #51                 // Method loadConfigsOfTypeFromProps:(Ljava/lang/Class;)Ljava/util/List;
       6: pop
       7: aload_0
       8: ldc           #4                  // class org/apache/dubbo/config/MonitorConfig
      10: invokevirtual #51                 // Method loadConfigsOfTypeFromProps:(Ljava/lang/Class;)Ljava/util/List;
      13: pop
      14: aload_0
      15: ldc           #5                  // class org/apache/dubbo/config/MetricsConfig
      17: invokevirtual #51                 // Method loadConfigsOfTypeFromProps:(Ljava/lang/Class;)Ljava/util/List;
      20: pop
      21: aload_0
      22: ldc           #11                 // class org/apache/dubbo/config/TracingConfig
      24: invokevirtual #51                 // Method loadConfigsOfTypeFromProps:(Ljava/lang/Class;)Ljava/util/List;
      27: pop
      28: aload_0
      29: ldc           #7                  // class org/apache/dubbo/config/ProtocolConfig
      31: invokevirtual #51                 // Method loadConfigsOfTypeFromProps:(Ljava/lang/Class;)Ljava/util/List;
      34: pop
      35: aload_0
      36: ldc           #8                  // class org/apache/dubbo/config/RegistryConfig
      38: invokevirtual #51                 // Method loadConfigsOfTypeFromProps:(Ljava/lang/Class;)Ljava/util/List;
      41: pop
      42: aload_0
      43: ldc           #10                 // class org/apache/dubbo/config/MetadataReportConfig
      45: invokevirtual #51                 // Method loadConfigsOfTypeFromProps:(Ljava/lang/Class;)Ljava/util/List;
      48: pop
      49: aload_0
      50: invokevirtual #52                 // Method refreshAll:()V
      53: aload_0
      54: invokespecial #53                 // Method checkConfigs:()V
      57: aload_0
      58: getfield      #54                 // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
      61: invokevirtual #55                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getModelName:()Ljava/lang/String;
      64: invokestatic  #56                 // Method org/apache/dubbo/common/utils/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
      67: ifeq          84
      70: aload_0
      71: getfield      #54                 // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
      74: aload_0
      75: getfield      #54                 // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
      78: invokevirtual #57                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getApplicationName:()Ljava/lang/String;
      81: invokevirtual #58                 // Method org/apache/dubbo/rpc/model/ApplicationModel.setModelName:(Ljava/lang/String;)V
      84: return

  private void checkConfigs();
    Code:
       0: bipush        7
       2: anewarray     #2                  // class java/lang/Class
       5: dup
       6: iconst_0
       7: ldc           #3                  // class org/apache/dubbo/config/ApplicationConfig
       9: aastore
      10: dup
      11: iconst_1
      12: ldc           #7                  // class org/apache/dubbo/config/ProtocolConfig
      14: aastore
      15: dup
      16: iconst_2
      17: ldc           #8                  // class org/apache/dubbo/config/RegistryConfig
      19: aastore
      20: dup
      21: iconst_3
      22: ldc           #4                  // class org/apache/dubbo/config/MonitorConfig
      24: aastore
      25: dup
      26: iconst_4
      27: ldc           #5                  // class org/apache/dubbo/config/MetricsConfig
      29: aastore
      30: dup
      31: iconst_5
      32: ldc           #11                 // class org/apache/dubbo/config/TracingConfig
      34: aastore
      35: dup
      36: bipush        6
      38: ldc           #6                  // class org/apache/dubbo/config/SslConfig
      40: aastore
      41: invokestatic  #12                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      44: astore_1
      45: aload_1
      46: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore_2
      52: aload_2
      53: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          79
      61: aload_2
      62: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #2                  // class java/lang/Class
      70: astore_3
      71: aload_0
      72: aload_3
      73: invokevirtual #62                 // Method checkDefaultAndValidateConfigs:(Ljava/lang/Class;)V
      76: goto          52
      79: new           #63                 // class java/util/LinkedHashMap
      82: dup
      83: invokespecial #64                 // Method java/util/LinkedHashMap."<init>":()V
      86: astore_2
      87: aload_0
      88: invokevirtual #44                 // Method getProtocols:()Ljava/util/Collection;
      91: invokeinterface #65,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      96: astore_3
      97: aload_3
      98: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     103: ifeq          226
     106: aload_3
     107: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     112: checkcast     #7                  // class org/apache/dubbo/config/ProtocolConfig
     115: astore        4
     117: aload         4
     119: invokevirtual #66                 // Method org/apache/dubbo/config/ProtocolConfig.getPort:()Ljava/lang/Integer;
     122: astore        5
     124: aload         5
     126: ifnull        97
     129: aload         5
     131: invokevirtual #67                 // Method java/lang/Integer.intValue:()I
     134: iconst_m1
     135: if_icmpne     141
     138: goto          97
     141: aload_2
     142: aload         5
     144: invokeinterface #68,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     149: checkcast     #7                  // class org/apache/dubbo/config/ProtocolConfig
     152: astore        6
     154: aload         6
     156: ifnull        212
     159: new           #69                 // class java/lang/IllegalStateException
     162: dup
     163: new           #70                 // class java/lang/StringBuilder
     166: dup
     167: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     170: ldc           #72                 // String Duplicated port used by protocol configs, port:
     172: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     175: aload         5
     177: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     180: ldc           #75                 // String , configs:
     182: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: iconst_2
     186: anewarray     #7                  // class org/apache/dubbo/config/ProtocolConfig
     189: dup
     190: iconst_0
     191: aload         6
     193: aastore
     194: dup
     195: iconst_1
     196: aload         4
     198: aastore
     199: invokestatic  #12                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     202: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     205: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     208: invokespecial #77                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     211: athrow
     212: aload_2
     213: aload         5
     215: aload         4
     217: invokeinterface #78,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     222: pop
     223: goto          97
     226: getstatic     #79                 // Field logger:Lorg/apache/dubbo/common/logger/Logger;
     229: ldc           #80                 // String The current configurations or effective configurations are as follows:
     231: invokeinterface #81,  2           // InterfaceMethod org/apache/dubbo/common/logger/Logger.info:(Ljava/lang/String;)V
     236: aload_1
     237: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     242: astore_3
     243: aload_3
     244: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     249: ifeq          282
     252: aload_3
     253: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     258: checkcast     #2                  // class java/lang/Class
     261: astore        4
     263: aload_0
     264: aload         4
     266: invokevirtual #82                 // Method getConfigs:(Ljava/lang/Class;)Ljava/util/Collection;
     269: invokedynamic #83,  0             // InvokeDynamic #14:accept:()Ljava/util/function/Consumer;
     274: invokeinterface #46,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
     279: goto          243
     282: return

  public org.apache.dubbo.config.context.ConfigMode getConfigMode();
    Code:
       0: aload_0
       1: getfield      #84                 // Field configMode:Lorg/apache/dubbo/config/context/ConfigMode;
       4: areturn

  private static void lambda$checkConfigs$1(org.apache.dubbo.config.AbstractConfig);
    Code:
       0: getstatic     #79                 // Field logger:Lorg/apache/dubbo/common/logger/Logger;
       3: aload_0
       4: invokevirtual #85                 // Method org/apache/dubbo/config/AbstractConfig.toString:()Ljava/lang/String;
       7: invokeinterface #81,  2           // InterfaceMethod org/apache/dubbo/common/logger/Logger.info:(Ljava/lang/String;)V
      12: return

  private static java.lang.IllegalStateException lambda$getApplicationOrElseThrow$0();
    Code:
       0: new           #69                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #86                 // String There\'s no ApplicationConfig specified.
       6: invokespecial #77                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: areturn

  static {};
    Code:
       0: ldc           #87                 // class org/apache/dubbo/config/context/ConfigManager
       2: invokestatic  #88                 // Method org/apache/dubbo/common/logger/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/Logger;
       5: putstatic     #79                 // Field logger:Lorg/apache/dubbo/common/logger/Logger;
       8: return
}
