Compiled from "ModuleConfigManager.java"
public class org.apache.dubbo.config.context.ModuleConfigManager extends org.apache.dubbo.config.context.AbstractConfigManager implements org.apache.dubbo.common.context.ModuleExt {
  private static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  public static final java.lang.String NAME;

  private final java.util.Map<java.lang.String, org.apache.dubbo.config.AbstractInterfaceConfig> serviceConfigCache;

  private final org.apache.dubbo.config.context.ConfigManager applicationConfigManager;

  public org.apache.dubbo.config.context.ModuleConfigManager(org.apache.dubbo.rpc.model.ModuleModel);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_5
       3: anewarray     #2                  // class java/lang/Class
       6: dup
       7: iconst_0
       8: ldc           #3                  // class org/apache/dubbo/config/ModuleConfig
      10: aastore
      11: dup
      12: iconst_1
      13: ldc           #4                  // class org/apache/dubbo/config/ServiceConfigBase
      15: aastore
      16: dup
      17: iconst_2
      18: ldc           #5                  // class org/apache/dubbo/config/ReferenceConfigBase
      20: aastore
      21: dup
      22: iconst_3
      23: ldc           #6                  // class org/apache/dubbo/config/ProviderConfig
      25: aastore
      26: dup
      27: iconst_4
      28: ldc           #7                  // class org/apache/dubbo/config/ConsumerConfig
      30: aastore
      31: invokestatic  #8                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      34: invokespecial #9                  // Method org/apache/dubbo/config/context/AbstractConfigManager."<init>":(Lorg/apache/dubbo/rpc/model/ScopeModel;Ljava/util/Collection;)V
      37: aload_0
      38: new           #10                 // class java/util/concurrent/ConcurrentHashMap
      41: dup
      42: invokespecial #11                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      45: putfield      #12                 // Field serviceConfigCache:Ljava/util/Map;
      48: aload_0
      49: aload_1
      50: invokevirtual #13                 // Method org/apache/dubbo/rpc/model/ModuleModel.getApplicationModel:()Lorg/apache/dubbo/rpc/model/ApplicationModel;
      53: invokevirtual #14                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getApplicationConfigManager:()Lorg/apache/dubbo/config/context/ConfigManager;
      56: putfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
      59: return

  public void setModule(org.apache.dubbo.config.ModuleConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method addConfig:(Lorg/apache/dubbo/config/AbstractConfig;)Lorg/apache/dubbo/config/AbstractConfig;
       5: pop
       6: return

  public java.util.Optional<org.apache.dubbo.config.ModuleConfig> getModule();
    Code:
       0: aload_0
       1: ldc           #3                  // class org/apache/dubbo/config/ModuleConfig
       3: invokestatic  #17                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #18                 // Method getSingleConfig:(Ljava/lang/String;)Lorg/apache/dubbo/config/AbstractConfig;
       9: invokestatic  #19                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      12: areturn

  public void addService(org.apache.dubbo.config.ServiceConfigBase<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method addConfig:(Lorg/apache/dubbo/config/AbstractConfig;)Lorg/apache/dubbo/config/AbstractConfig;
       5: pop
       6: return

  public void addServices(java.lang.Iterable<org.apache.dubbo.config.ServiceConfigBase<?>>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #20,  0             // InvokeDynamic #0:accept:(Lorg/apache/dubbo/config/context/ModuleConfigManager;)Ljava/util/function/Consumer;
       7: invokeinterface #21,  2           // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V
      12: return

  public java.util.Collection<org.apache.dubbo.config.ServiceConfigBase> getServices();
    Code:
       0: aload_0
       1: ldc           #4                  // class org/apache/dubbo/config/ServiceConfigBase
       3: invokestatic  #17                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #22                 // Method getConfigs:(Ljava/lang/String;)Ljava/util/Collection;
       9: areturn

  public <T> org.apache.dubbo.config.ServiceConfigBase<T> getService(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #4                  // class org/apache/dubbo/config/ServiceConfigBase
       3: aload_1
       4: invokevirtual #23                 // Method getConfig:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Optional;
       7: aconst_null
       8: invokevirtual #24                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #4                  // class org/apache/dubbo/config/ServiceConfigBase
      14: areturn

  public void addReference(org.apache.dubbo.config.ReferenceConfigBase<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method addConfig:(Lorg/apache/dubbo/config/AbstractConfig;)Lorg/apache/dubbo/config/AbstractConfig;
       5: pop
       6: return

  public void addReferences(java.lang.Iterable<org.apache.dubbo.config.ReferenceConfigBase<?>>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #25,  0             // InvokeDynamic #1:accept:(Lorg/apache/dubbo/config/context/ModuleConfigManager;)Ljava/util/function/Consumer;
       7: invokeinterface #21,  2           // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V
      12: return

  public java.util.Collection<org.apache.dubbo.config.ReferenceConfigBase<?>> getReferences();
    Code:
       0: aload_0
       1: ldc           #5                  // class org/apache/dubbo/config/ReferenceConfigBase
       3: invokestatic  #17                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #22                 // Method getConfigs:(Ljava/lang/String;)Ljava/util/Collection;
       9: areturn

  public <T> org.apache.dubbo.config.ReferenceConfigBase<T> getReference(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #5                  // class org/apache/dubbo/config/ReferenceConfigBase
       3: aload_1
       4: invokevirtual #23                 // Method getConfig:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Optional;
       7: aconst_null
       8: invokevirtual #24                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #5                  // class org/apache/dubbo/config/ReferenceConfigBase
      14: areturn

  public void addProvider(org.apache.dubbo.config.ProviderConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method addConfig:(Lorg/apache/dubbo/config/AbstractConfig;)Lorg/apache/dubbo/config/AbstractConfig;
       5: pop
       6: return

  public void addProviders(java.lang.Iterable<org.apache.dubbo.config.ProviderConfig>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #26,  0             // InvokeDynamic #2:accept:(Lorg/apache/dubbo/config/context/ModuleConfigManager;)Ljava/util/function/Consumer;
       7: invokeinterface #21,  2           // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V
      12: return

  public java.util.Optional<org.apache.dubbo.config.ProviderConfig> getProvider(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #6                  // class org/apache/dubbo/config/ProviderConfig
       3: aload_1
       4: invokevirtual #23                 // Method getConfig:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Optional;
       7: areturn

  public java.util.Optional<org.apache.dubbo.config.ProviderConfig> getDefaultProvider();
    Code:
       0: aload_0
       1: ldc           #6                  // class org/apache/dubbo/config/ProviderConfig
       3: invokestatic  #17                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #27                 // Method getConfigsMap:(Ljava/lang/String;)Ljava/util/Map;
       9: invokestatic  #28                 // Method getDefaultConfigs:(Ljava/util/Map;)Ljava/util/List;
      12: astore_1
      13: aload_1
      14: invokestatic  #29                 // Method org/apache/dubbo/common/utils/CollectionUtils.isNotEmpty:(Ljava/util/Collection;)Z
      17: ifeq          31
      20: aload_1
      21: iconst_0
      22: invokeinterface #30,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      27: invokestatic  #31                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      30: areturn
      31: invokestatic  #32                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      34: areturn

  public java.util.Collection<org.apache.dubbo.config.ProviderConfig> getProviders();
    Code:
       0: aload_0
       1: ldc           #6                  // class org/apache/dubbo/config/ProviderConfig
       3: invokestatic  #17                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #22                 // Method getConfigs:(Ljava/lang/String;)Ljava/util/Collection;
       9: areturn

  public void addConsumer(org.apache.dubbo.config.ConsumerConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method addConfig:(Lorg/apache/dubbo/config/AbstractConfig;)Lorg/apache/dubbo/config/AbstractConfig;
       5: pop
       6: return

  public void addConsumers(java.lang.Iterable<org.apache.dubbo.config.ConsumerConfig>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #33,  0             // InvokeDynamic #3:accept:(Lorg/apache/dubbo/config/context/ModuleConfigManager;)Ljava/util/function/Consumer;
       7: invokeinterface #21,  2           // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V
      12: return

  public java.util.Optional<org.apache.dubbo.config.ConsumerConfig> getConsumer(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #7                  // class org/apache/dubbo/config/ConsumerConfig
       3: aload_1
       4: invokevirtual #23                 // Method getConfig:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Optional;
       7: areturn

  public java.util.Optional<org.apache.dubbo.config.ConsumerConfig> getDefaultConsumer();
    Code:
       0: aload_0
       1: ldc           #7                  // class org/apache/dubbo/config/ConsumerConfig
       3: invokestatic  #17                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #27                 // Method getConfigsMap:(Ljava/lang/String;)Ljava/util/Map;
       9: invokestatic  #28                 // Method getDefaultConfigs:(Ljava/util/Map;)Ljava/util/List;
      12: astore_1
      13: aload_1
      14: invokestatic  #29                 // Method org/apache/dubbo/common/utils/CollectionUtils.isNotEmpty:(Ljava/util/Collection;)Z
      17: ifeq          31
      20: aload_1
      21: iconst_0
      22: invokeinterface #30,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      27: invokestatic  #31                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      30: areturn
      31: invokestatic  #32                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      34: areturn

  public java.util.Collection<org.apache.dubbo.config.ConsumerConfig> getConsumers();
    Code:
       0: aload_0
       1: ldc           #7                  // class org/apache/dubbo/config/ConsumerConfig
       3: invokestatic  #17                 // Method org/apache/dubbo/config/AbstractConfig.getTagName:(Ljava/lang/Class;)Ljava/lang/String;
       6: invokevirtual #22                 // Method getConfigs:(Ljava/lang/String;)Ljava/util/Collection;
       9: areturn

  public void refreshAll();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method getModule:()Ljava/util/Optional;
       4: invokedynamic #35,  0             // InvokeDynamic #4:accept:()Ljava/util/function/Consumer;
       9: invokevirtual #36                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      12: aload_0
      13: invokevirtual #37                 // Method getProviders:()Ljava/util/Collection;
      16: invokedynamic #38,  0             // InvokeDynamic #5:accept:()Ljava/util/function/Consumer;
      21: invokeinterface #39,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      26: aload_0
      27: invokevirtual #40                 // Method getConsumers:()Ljava/util/Collection;
      30: invokedynamic #41,  0             // InvokeDynamic #6:accept:()Ljava/util/function/Consumer;
      35: invokeinterface #39,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      40: aload_0
      41: invokevirtual #42                 // Method getReferences:()Ljava/util/Collection;
      44: invokedynamic #43,  0             // InvokeDynamic #7:accept:()Ljava/util/function/Consumer;
      49: invokeinterface #39,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      54: aload_0
      55: invokevirtual #44                 // Method getServices:()Ljava/util/Collection;
      58: invokedynamic #45,  0             // InvokeDynamic #8:accept:()Ljava/util/function/Consumer;
      63: invokeinterface #39,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      68: return

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method org/apache/dubbo/config/context/AbstractConfigManager.clear:()V
       4: aload_0
       5: getfield      #12                 // Field serviceConfigCache:Ljava/util/Map;
       8: invokeinterface #47,  1           // InterfaceMethod java/util/Map.clear:()V
      13: return

  protected <C extends org.apache.dubbo.config.AbstractConfig> java.util.Optional<C> findDuplicatedConfig(java.util.Map<java.lang.String, C>, C);
    Code:
       0: aload_2
       1: instanceof    #5                  // class org/apache/dubbo/config/ReferenceConfigBase
       4: ifne          14
       7: aload_2
       8: instanceof    #4                  // class org/apache/dubbo/config/ServiceConfigBase
      11: ifeq          35
      14: aload_0
      15: aload_2
      16: checkcast     #48                 // class org/apache/dubbo/config/AbstractInterfaceConfig
      19: invokespecial #49                 // Method findDuplicatedInterfaceConfig:(Lorg/apache/dubbo/config/AbstractInterfaceConfig;)Lorg/apache/dubbo/config/AbstractInterfaceConfig;
      22: astore_3
      23: aload_3
      24: ifnull        32
      27: aload_3
      28: invokestatic  #31                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      31: areturn
      32: goto          42
      35: aload_0
      36: aload_1
      37: aload_2
      38: invokespecial #50                 // Method org/apache/dubbo/config/context/AbstractConfigManager.findDuplicatedConfig:(Ljava/util/Map;Lorg/apache/dubbo/config/AbstractConfig;)Ljava/util/Optional;
      41: areturn
      42: invokestatic  #32                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      45: areturn

  protected <C extends org.apache.dubbo.config.AbstractConfig> boolean removeIfAbsent(C, java.util.Map<java.lang.String, C>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #51                 // Method org/apache/dubbo/config/context/AbstractConfigManager.removeIfAbsent:(Lorg/apache/dubbo/config/AbstractConfig;Ljava/util/Map;)Z
       6: ifeq          33
       9: aload_1
      10: instanceof    #5                  // class org/apache/dubbo/config/ReferenceConfigBase
      13: ifne          23
      16: aload_1
      17: instanceof    #4                  // class org/apache/dubbo/config/ServiceConfigBase
      20: ifeq          31
      23: aload_0
      24: aload_1
      25: checkcast     #48                 // class org/apache/dubbo/config/AbstractInterfaceConfig
      28: invokespecial #52                 // Method removeInterfaceConfig:(Lorg/apache/dubbo/config/AbstractInterfaceConfig;)V
      31: iconst_1
      32: ireturn
      33: iconst_0
      34: ireturn

  private org.apache.dubbo.config.AbstractInterfaceConfig findDuplicatedInterfaceConfig(org.apache.dubbo.config.AbstractInterfaceConfig);
    Code:
       0: aload_1
       1: instanceof    #5                  // class org/apache/dubbo/config/ReferenceConfigBase
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_1
      10: instanceof    #4                  // class org/apache/dubbo/config/ServiceConfigBase
      13: ifeq          36
      16: aload_1
      17: checkcast     #4                  // class org/apache/dubbo/config/ServiceConfigBase
      20: astore        4
      22: aload         4
      24: invokevirtual #53                 // Method org/apache/dubbo/config/ServiceConfigBase.getUniqueServiceName:()Ljava/lang/String;
      27: astore_2
      28: aload_0
      29: getfield      #12                 // Field serviceConfigCache:Ljava/util/Map;
      32: astore_3
      33: goto          69
      36: new           #54                 // class java/lang/IllegalArgumentException
      39: dup
      40: new           #55                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #57                 // String Illegal type of parameter \'config\' :
      49: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_1
      53: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      56: invokevirtual #60                 // Method java/lang/Class.getName:()Ljava/lang/String;
      59: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #62                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload_3
      70: aload_2
      71: aload_1
      72: invokeinterface #63,  3           // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #48                 // class org/apache/dubbo/config/AbstractInterfaceConfig
      80: astore        4
      82: aload         4
      84: ifnull        296
      87: aload         4
      89: aload_1
      90: if_acmpne     96
      93: aload         4
      95: areturn
      96: aload         4
      98: aload_1
      99: invokevirtual #64                 // Method org/apache/dubbo/config/AbstractInterfaceConfig.equals:(Ljava/lang/Object;)Z
     102: ifeq          165
     105: getstatic     #65                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
     108: invokeinterface #66,  1           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.isWarnEnabled:()Z
     113: ifeq          162
     116: aload_0
     117: getfield      #67                 // Field duplicatedConfigs:Ljava/util/Set;
     120: aload_1
     121: invokeinterface #68,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     126: ifeq          162
     129: getstatic     #65                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
     132: ldc           #69                 // String 0-12
     134: ldc           #70                 // String
     136: ldc           #70                 // String
     138: new           #55                 // class java/lang/StringBuilder
     141: dup
     142: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     145: ldc           #71                 // String Ignore duplicated and equal config:
     147: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: aload_1
     151: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     154: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: invokeinterface #73,  5           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.warn:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     162: aload         4
     164: areturn
     165: aload_1
     166: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     169: invokevirtual #74                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     172: astore        5
     174: new           #55                 // class java/lang/StringBuilder
     177: dup
     178: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
     181: ldc           #75                 // String Found multiple
     183: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: aload         5
     188: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: ldc           #76                 // String s with unique service name [
     193: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: aload_2
     197: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: ldc           #77                 // String ], previous:
     202: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: aload         4
     207: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     210: ldc           #78                 // String , later:
     212: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: aload_1
     216: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     219: ldc           #79                 // String . There can only be one instance of
     221: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     224: aload         5
     226: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     229: ldc           #80                 // String  with the same triple (group, interface, version). If multiple instances are required for the same interface, please use a different group or version.
     231: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     234: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     237: astore        6
     239: getstatic     #65                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
     242: invokeinterface #66,  1           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.isWarnEnabled:()Z
     247: ifeq          279
     250: aload_0
     251: getfield      #67                 // Field duplicatedConfigs:Ljava/util/Set;
     254: aload_1
     255: invokeinterface #68,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     260: ifeq          279
     263: getstatic     #65                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
     266: ldc           #69                 // String 0-12
     268: ldc           #70                 // String
     270: ldc           #70                 // String
     272: aload         6
     274: invokeinterface #73,  5           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.warn:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     279: aload_0
     280: getfield      #81                 // Field ignoreDuplicatedInterface:Z
     283: ifne          296
     286: new           #82                 // class java/lang/IllegalStateException
     289: dup
     290: aload         6
     292: invokespecial #83                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     295: athrow
     296: aload         4
     298: areturn

  private void removeInterfaceConfig(org.apache.dubbo.config.AbstractInterfaceConfig);
    Code:
       0: aload_1
       1: instanceof    #5                  // class org/apache/dubbo/config/ReferenceConfigBase
       4: ifeq          8
       7: return
       8: aload_1
       9: instanceof    #4                  // class org/apache/dubbo/config/ServiceConfigBase
      12: ifeq          35
      15: aload_1
      16: checkcast     #4                  // class org/apache/dubbo/config/ServiceConfigBase
      19: astore        4
      21: aload         4
      23: invokevirtual #53                 // Method org/apache/dubbo/config/ServiceConfigBase.getUniqueServiceName:()Ljava/lang/String;
      26: astore_2
      27: aload_0
      28: getfield      #12                 // Field serviceConfigCache:Ljava/util/Map;
      31: astore_3
      32: goto          68
      35: new           #54                 // class java/lang/IllegalArgumentException
      38: dup
      39: new           #55                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #57                 // String Illegal type of parameter \'config\' :
      48: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_1
      52: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      55: invokevirtual #60                 // Method java/lang/Class.getName:()Ljava/lang/String;
      58: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #62                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_3
      69: aload_2
      70: aload_1
      71: invokeinterface #84,  3           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      76: pop
      77: return

  public void loadConfigs();
    Code:
       0: aload_0
       1: ldc           #6                  // class org/apache/dubbo/config/ProviderConfig
       3: invokevirtual #85                 // Method loadConfigsOfTypeFromProps:(Ljava/lang/Class;)Ljava/util/List;
       6: pop
       7: aload_0
       8: ldc           #7                  // class org/apache/dubbo/config/ConsumerConfig
      10: invokevirtual #85                 // Method loadConfigsOfTypeFromProps:(Ljava/lang/Class;)Ljava/util/List;
      13: pop
      14: aload_0
      15: ldc           #3                  // class org/apache/dubbo/config/ModuleConfig
      17: invokevirtual #85                 // Method loadConfigsOfTypeFromProps:(Ljava/lang/Class;)Ljava/util/List;
      20: pop
      21: aload_0
      22: ldc           #6                  // class org/apache/dubbo/config/ProviderConfig
      24: invokevirtual #86                 // Method checkDefaultAndValidateConfigs:(Ljava/lang/Class;)V
      27: aload_0
      28: ldc           #7                  // class org/apache/dubbo/config/ConsumerConfig
      30: invokevirtual #86                 // Method checkDefaultAndValidateConfigs:(Ljava/lang/Class;)V
      33: aload_0
      34: ldc           #3                  // class org/apache/dubbo/config/ModuleConfig
      36: invokevirtual #86                 // Method checkDefaultAndValidateConfigs:(Ljava/lang/Class;)V
      39: return

  public org.apache.dubbo.config.context.ConfigManager getApplicationConfigManager();
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: areturn

  public <C extends org.apache.dubbo.config.AbstractConfig> java.util.Map<java.lang.String, C> getConfigsMap(java.lang.Class<C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #87                 // Method isSupportConfigType:(Ljava/lang/Class;)Z
       5: ifeq          14
       8: aload_0
       9: aload_1
      10: invokespecial #88                 // Method org/apache/dubbo/config/context/AbstractConfigManager.getConfigsMap:(Ljava/lang/Class;)Ljava/util/Map;
      13: areturn
      14: aload_0
      15: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
      18: aload_1
      19: invokevirtual #89                 // Method org/apache/dubbo/config/context/ConfigManager.getConfigsMap:(Ljava/lang/Class;)Ljava/util/Map;
      22: areturn

  public <C extends org.apache.dubbo.config.AbstractConfig> java.util.Collection<C> getConfigs(java.lang.Class<C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #87                 // Method isSupportConfigType:(Ljava/lang/Class;)Z
       5: ifeq          14
       8: aload_0
       9: aload_1
      10: invokespecial #90                 // Method org/apache/dubbo/config/context/AbstractConfigManager.getConfigs:(Ljava/lang/Class;)Ljava/util/Collection;
      13: areturn
      14: aload_0
      15: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
      18: aload_1
      19: invokevirtual #91                 // Method org/apache/dubbo/config/context/ConfigManager.getConfigs:(Ljava/lang/Class;)Ljava/util/Collection;
      22: areturn

  public <T extends org.apache.dubbo.config.AbstractConfig> java.util.Optional<T> getConfig(java.lang.Class<T>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #87                 // Method isSupportConfigType:(Ljava/lang/Class;)Z
       5: ifeq          15
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #92                 // Method org/apache/dubbo/config/context/AbstractConfigManager.getConfig:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Optional;
      14: areturn
      15: aload_0
      16: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
      19: aload_1
      20: aload_2
      21: invokevirtual #93                 // Method org/apache/dubbo/config/context/ConfigManager.getConfig:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Optional;
      24: areturn

  public <C extends org.apache.dubbo.config.AbstractConfig> java.util.List<C> getDefaultConfigs(java.lang.Class<C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #87                 // Method isSupportConfigType:(Ljava/lang/Class;)Z
       5: ifeq          14
       8: aload_0
       9: aload_1
      10: invokespecial #94                 // Method org/apache/dubbo/config/context/AbstractConfigManager.getDefaultConfigs:(Ljava/lang/Class;)Ljava/util/List;
      13: areturn
      14: aload_0
      15: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
      18: aload_1
      19: invokevirtual #95                 // Method org/apache/dubbo/config/context/ConfigManager.getDefaultConfigs:(Ljava/lang/Class;)Ljava/util/List;
      22: areturn

  public java.util.Optional<org.apache.dubbo.config.ApplicationConfig> getApplication();
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: invokevirtual #96                 // Method org/apache/dubbo/config/context/ConfigManager.getApplication:()Ljava/util/Optional;
       7: areturn

  public java.util.Optional<org.apache.dubbo.config.MonitorConfig> getMonitor();
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: invokevirtual #97                 // Method org/apache/dubbo/config/context/ConfigManager.getMonitor:()Ljava/util/Optional;
       7: areturn

  public java.util.Optional<org.apache.dubbo.config.MetricsConfig> getMetrics();
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: invokevirtual #98                 // Method org/apache/dubbo/config/context/ConfigManager.getMetrics:()Ljava/util/Optional;
       7: areturn

  public java.util.Optional<org.apache.dubbo.config.TracingConfig> getTracing();
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: invokevirtual #99                 // Method org/apache/dubbo/config/context/ConfigManager.getTracing:()Ljava/util/Optional;
       7: areturn

  public java.util.Optional<org.apache.dubbo.config.SslConfig> getSsl();
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: invokevirtual #100                // Method org/apache/dubbo/config/context/ConfigManager.getSsl:()Ljava/util/Optional;
       7: areturn

  public java.util.Optional<java.util.Collection<org.apache.dubbo.config.ConfigCenterConfig>> getDefaultConfigCenter();
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: invokevirtual #101                // Method org/apache/dubbo/config/context/ConfigManager.getDefaultConfigCenter:()Ljava/util/Optional;
       7: areturn

  public java.util.Optional<org.apache.dubbo.config.ConfigCenterConfig> getConfigCenter(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: aload_1
       5: invokevirtual #102                // Method org/apache/dubbo/config/context/ConfigManager.getConfigCenter:(Ljava/lang/String;)Ljava/util/Optional;
       8: areturn

  public java.util.Collection<org.apache.dubbo.config.ConfigCenterConfig> getConfigCenters();
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: invokevirtual #103                // Method org/apache/dubbo/config/context/ConfigManager.getConfigCenters:()Ljava/util/Collection;
       7: areturn

  public java.util.Collection<org.apache.dubbo.config.MetadataReportConfig> getMetadataConfigs();
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: invokevirtual #104                // Method org/apache/dubbo/config/context/ConfigManager.getMetadataConfigs:()Ljava/util/Collection;
       7: areturn

  public java.util.Collection<org.apache.dubbo.config.MetadataReportConfig> getDefaultMetadataConfigs();
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: invokevirtual #105                // Method org/apache/dubbo/config/context/ConfigManager.getDefaultMetadataConfigs:()Ljava/util/Collection;
       7: areturn

  public java.util.Optional<org.apache.dubbo.config.ProtocolConfig> getProtocol(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: aload_1
       5: invokevirtual #106                // Method org/apache/dubbo/config/context/ConfigManager.getProtocol:(Ljava/lang/String;)Ljava/util/Optional;
       8: areturn

  public java.util.List<org.apache.dubbo.config.ProtocolConfig> getDefaultProtocols();
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: invokevirtual #107                // Method org/apache/dubbo/config/context/ConfigManager.getDefaultProtocols:()Ljava/util/List;
       7: areturn

  public java.util.Collection<org.apache.dubbo.config.ProtocolConfig> getProtocols();
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: invokevirtual #108                // Method org/apache/dubbo/config/context/ConfigManager.getProtocols:()Ljava/util/Collection;
       7: areturn

  public java.util.Optional<org.apache.dubbo.config.RegistryConfig> getRegistry(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: aload_1
       5: invokevirtual #109                // Method org/apache/dubbo/config/context/ConfigManager.getRegistry:(Ljava/lang/String;)Ljava/util/Optional;
       8: areturn

  public java.util.List<org.apache.dubbo.config.RegistryConfig> getDefaultRegistries();
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: invokevirtual #110                // Method org/apache/dubbo/config/context/ConfigManager.getDefaultRegistries:()Ljava/util/List;
       7: areturn

  public java.util.Collection<org.apache.dubbo.config.RegistryConfig> getRegistries();
    Code:
       0: aload_0
       1: getfield      #15                 // Field applicationConfigManager:Lorg/apache/dubbo/config/context/ConfigManager;
       4: invokevirtual #111                // Method org/apache/dubbo/config/context/ConfigManager.getRegistries:()Ljava/util/Collection;
       7: areturn

  static {};
    Code:
       0: ldc           #112                // class org/apache/dubbo/config/context/ModuleConfigManager
       2: invokestatic  #113                // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #65                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: return
}
