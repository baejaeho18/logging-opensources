Compiled from "ServiceBean.java"
public class org.apache.dubbo.config.spring.ServiceBean<T> extends org.apache.dubbo.config.ServiceConfig<T> implements org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean, org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.BeanNameAware, org.springframework.context.ApplicationEventPublisherAware {
  private static final long serialVersionUID;

  private final transient org.apache.dubbo.config.annotation.Service service;

  private transient org.springframework.context.ApplicationContext applicationContext;

  private transient java.lang.String beanName;

  private org.springframework.context.ApplicationEventPublisher applicationEventPublisher;

  public org.apache.dubbo.config.spring.ServiceBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/dubbo/config/ServiceConfig."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field service:Lorg/apache/dubbo/config/annotation/Service;
       9: return

  public org.apache.dubbo.config.spring.ServiceBean(org.apache.dubbo.rpc.model.ModuleModel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method org/apache/dubbo/config/ServiceConfig."<init>":(Lorg/apache/dubbo/rpc/model/ModuleModel;)V
       5: aload_0
       6: aconst_null
       7: putfield      #2                  // Field service:Lorg/apache/dubbo/config/annotation/Service;
      10: return

  public org.apache.dubbo.config.spring.ServiceBean(org.apache.dubbo.config.annotation.Service);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/apache/dubbo/config/ServiceConfig."<init>":(Lorg/apache/dubbo/config/annotation/Service;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field service:Lorg/apache/dubbo/config/annotation/Service;
      10: return

  public org.apache.dubbo.config.spring.ServiceBean(org.apache.dubbo.rpc.model.ModuleModel, org.apache.dubbo.config.annotation.Service);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #5                  // Method org/apache/dubbo/config/ServiceConfig."<init>":(Lorg/apache/dubbo/rpc/model/ModuleModel;Lorg/apache/dubbo/config/annotation/Service;)V
       6: aload_0
       7: aload_2
       8: putfield      #2                  // Field service:Lorg/apache/dubbo/config/annotation/Service;
      11: return

  public void setApplicationContext(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       5: return

  public void setBeanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field beanName:Ljava/lang/String;
       5: return

  public org.apache.dubbo.config.annotation.Service getService();
    Code:
       0: aload_0
       1: getfield      #2                  // Field service:Lorg/apache/dubbo/config/annotation/Service;
       4: areturn

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getPath:()Ljava/lang/String;
       4: invokestatic  #9                  // Method org/apache/dubbo/common/utils/StringUtils.isEmpty:(Ljava/lang/String;)Z
       7: ifeq          28
      10: aload_0
      11: invokevirtual #10                 // Method getInterface:()Ljava/lang/String;
      14: invokestatic  #11                 // Method org/apache/dubbo/common/utils/StringUtils.isNotEmpty:(Ljava/lang/String;)Z
      17: ifeq          28
      20: aload_0
      21: aload_0
      22: invokevirtual #10                 // Method getInterface:()Ljava/lang/String;
      25: invokevirtual #12                 // Method setPath:(Ljava/lang/String;)V
      28: aload_0
      29: getfield      #6                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      32: invokestatic  #13                 // InterfaceMethod org/apache/dubbo/config/spring/util/DubboBeanUtils.getModuleModel:(Lorg/springframework/beans/factory/BeanFactory;)Lorg/apache/dubbo/rpc/model/ModuleModel;
      35: astore_1
      36: aload_1
      37: invokevirtual #14                 // Method org/apache/dubbo/rpc/model/ModuleModel.getConfigManager:()Lorg/apache/dubbo/config/context/ModuleConfigManager;
      40: aload_0
      41: invokevirtual #15                 // Method org/apache/dubbo/config/context/ModuleConfigManager.addService:(Lorg/apache/dubbo/config/ServiceConfigBase;)V
      44: aload_1
      45: invokevirtual #16                 // Method org/apache/dubbo/rpc/model/ModuleModel.getDeployer:()Lorg/apache/dubbo/common/deploy/ModuleDeployer;
      48: invokeinterface #17,  1           // InterfaceMethod org/apache/dubbo/common/deploy/ModuleDeployer.setPending:()V
      53: return

  public java.lang.String getBeanName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field beanName:Ljava/lang/String;
       4: areturn

  protected void exported();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method org/apache/dubbo/config/ServiceConfig.exported:()V
       4: aload_0
       5: invokespecial #19                 // Method publishExportEvent:()V
       8: return

  private void publishExportEvent();
    Code:
       0: new           #20                 // class org/apache/dubbo/config/spring/context/event/ServiceBeanExportedEvent
       3: dup
       4: aload_0
       5: invokespecial #21                 // Method org/apache/dubbo/config/spring/context/event/ServiceBeanExportedEvent."<init>":(Lorg/apache/dubbo/config/spring/ServiceBean;)V
       8: astore_1
       9: aload_0
      10: getfield      #22                 // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
      13: aload_1
      14: invokeinterface #23,  2           // InterfaceMethod org/springframework/context/ApplicationEventPublisher.publishEvent:(Lorg/springframework/context/ApplicationEvent;)V
      19: return

  public void destroy() throws java.lang.Exception;
    Code:
       0: return

  protected java.lang.Class getServiceClass(T);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method org/springframework/aop/support/AopUtils.isAopProxy:(Ljava/lang/Object;)Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #25                 // Method org/springframework/aop/support/AopUtils.getTargetClass:(Ljava/lang/Object;)Ljava/lang/Class;
      11: areturn
      12: aload_0
      13: aload_1
      14: invokespecial #26                 // Method org/apache/dubbo/config/ServiceConfig.getServiceClass:(Ljava/lang/Object;)Ljava/lang/Class;
      17: areturn

  public void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
       5: return
}
