Compiled from "ReferenceBean.java"
public class org.apache.dubbo.config.spring.ReferenceBean<T> implements org.springframework.beans.factory.FactoryBean<T>, org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean {
  private transient org.springframework.context.ApplicationContext applicationContext;

  private java.lang.ClassLoader beanClassLoader;

  private java.lang.Object lazyProxy;

  protected java.lang.String id;

  private java.lang.String key;

  private java.lang.Class<?> interfaceClass;

  private java.lang.String interfaceName;

  private java.util.Map<java.lang.String, java.lang.Object> referenceProps;

  private org.springframework.beans.MutablePropertyValues propertyValues;

  private org.apache.dubbo.config.ReferenceConfig referenceConfig;

  private java.util.List<java.util.Map<java.lang.String, java.lang.Object>> sources;

  public org.apache.dubbo.config.spring.ReferenceBean();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/ArrayList
       8: dup
       9: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #5                  // Field sources:Ljava/util/List;
      15: return

  public org.apache.dubbo.config.spring.ReferenceBean(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/ArrayList
       8: dup
       9: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #5                  // Field sources:Ljava/util/List;
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field referenceProps:Ljava/util/Map;
      20: return

  public void setApplicationContext(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       5: return

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field beanClassLoader:Ljava/lang/ClassLoader;
       5: return

  public void setBeanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setId:(Ljava/lang/String;)V
       5: return

  public T getObject();
    Code:
       0: aload_0
       1: getfield      #10                 // Field lazyProxy:Ljava/lang/Object;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #11                 // Method createLazyProxy:()V
      11: aload_0
      12: getfield      #10                 // Field lazyProxy:Ljava/lang/Object;
      15: areturn

  public java.lang.Class<?> getObjectType();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getInterfaceClass:()Ljava/lang/Class;
       4: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #13                 // Method getBeanFactory:()Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;
       4: astore_1
       5: aload_0
       6: invokevirtual #14                 // Method getId:()Ljava/lang/String;
       9: ldc           #15                 // String The id of ReferenceBean cannot be empty
      11: invokestatic  #16                 // Method org/apache/dubbo/common/utils/Assert.notEmptyString:(Ljava/lang/String;Ljava/lang/String;)V
      14: aload_1
      15: aload_0
      16: invokevirtual #14                 // Method getId:()Ljava/lang/String;
      19: invokeinterface #17,  2           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.getBeanDefinition:(Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;
      24: astore_2
      25: aload_0
      26: aload_2
      27: ldc           #19                 // String interfaceClass
      29: invokeinterface #20,  2           // InterfaceMethod org/springframework/beans/factory/config/BeanDefinition.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      34: checkcast     #21                 // class java/lang/Class
      37: putfield      #22                 // Field interfaceClass:Ljava/lang/Class;
      40: aload_0
      41: aload_2
      42: ldc           #23                 // String interfaceName
      44: invokeinterface #20,  2           // InterfaceMethod org/springframework/beans/factory/config/BeanDefinition.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      49: checkcast     #24                 // class java/lang/String
      52: putfield      #25                 // Field interfaceName:Ljava/lang/String;
      55: aload_0
      56: getfield      #22                 // Field interfaceClass:Ljava/lang/Class;
      59: ldc           #26                 // String The interface class of ReferenceBean is not initialized
      61: invokestatic  #27                 // Method org/apache/dubbo/common/utils/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      64: aload_2
      65: ldc           #29                 // String referenceProps
      67: invokeinterface #30,  2           // InterfaceMethod org/springframework/beans/factory/config/BeanDefinition.hasAttribute:(Ljava/lang/String;)Z
      72: ifeq          93
      75: aload_0
      76: aload_2
      77: ldc           #29                 // String referenceProps
      79: invokeinterface #20,  2           // InterfaceMethod org/springframework/beans/factory/config/BeanDefinition.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      84: checkcast     #31                 // class java/util/Map
      87: putfield      #6                  // Field referenceProps:Ljava/util/Map;
      90: goto          167
      93: aload_2
      94: instanceof    #32                 // class org/springframework/beans/factory/annotation/AnnotatedBeanDefinition
      97: ifeq          157
     100: aload_0
     101: getfield      #6                  // Field referenceProps:Ljava/util/Map;
     104: ifnonnull     118
     107: aload_0
     108: new           #33                 // class java/util/LinkedHashMap
     111: dup
     112: invokespecial #34                 // Method java/util/LinkedHashMap."<init>":()V
     115: putfield      #6                  // Field referenceProps:Ljava/util/Map;
     118: aload_0
     119: getfield      #6                  // Field referenceProps:Ljava/util/Map;
     122: aload_0
     123: getfield      #22                 // Field interfaceClass:Ljava/lang/Class;
     126: invokestatic  #35                 // Method org/apache/dubbo/config/spring/reference/ReferenceBeanSupport.convertReferenceProps:(Ljava/util/Map;Ljava/lang/Class;)V
     129: aload_0
     130: getfield      #25                 // Field interfaceName:Ljava/lang/String;
     133: ifnonnull     167
     136: aload_0
     137: aload_0
     138: getfield      #6                  // Field referenceProps:Ljava/util/Map;
     141: ldc           #36                 // String interface
     143: invokeinterface #37,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     148: checkcast     #24                 // class java/lang/String
     151: putfield      #25                 // Field interfaceName:Ljava/lang/String;
     154: goto          167
     157: aload_0
     158: aload_2
     159: invokeinterface #38,  1           // InterfaceMethod org/springframework/beans/factory/config/BeanDefinition.getPropertyValues:()Lorg/springframework/beans/MutablePropertyValues;
     164: putfield      #39                 // Field propertyValues:Lorg/springframework/beans/MutablePropertyValues;
     167: aload_0
     168: getfield      #25                 // Field interfaceName:Ljava/lang/String;
     171: ldc           #40                 // String The interface name of ReferenceBean is not initialized
     173: invokestatic  #27                 // Method org/apache/dubbo/common/utils/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
     176: aload_1
     177: ldc           #42                 // String dubboReferenceBeanManager
     179: ldc           #41                 // class org/apache/dubbo/config/spring/reference/ReferenceBeanManager
     181: invokeinterface #43,  3           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.getBean:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
     186: checkcast     #41                 // class org/apache/dubbo/config/spring/reference/ReferenceBeanManager
     189: astore_3
     190: aload_3
     191: aload_0
     192: invokevirtual #44                 // Method org/apache/dubbo/config/spring/reference/ReferenceBeanManager.addReference:(Lorg/apache/dubbo/config/spring/ReferenceBean;)V
     195: return

  private org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory();
    Code:
       0: aload_0
       1: getfield      #7                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       4: invokeinterface #45,  1           // InterfaceMethod org/springframework/context/ApplicationContext.getAutowireCapableBeanFactory:()Lorg/springframework/beans/factory/config/AutowireCapableBeanFactory;
       9: checkcast     #46                 // class org/springframework/beans/factory/config/ConfigurableListableBeanFactory
      12: areturn

  public void destroy();
    Code:
       0: return

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #47                 // Field id:Ljava/lang/String;
       4: areturn

  public void setId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field id:Ljava/lang/String;
       5: return

  public java.lang.Class<?> getInterfaceClass();
    Code:
       0: aload_0
       1: getfield      #22                 // Field interfaceClass:Ljava/lang/Class;
       4: areturn

  public java.lang.String getServiceInterface();
    Code:
       0: aload_0
       1: getfield      #25                 // Field interfaceName:Ljava/lang/String;
       4: areturn

  public java.lang.String getGroup();
    Code:
       0: aload_0
       1: getfield      #48                 // Field referenceConfig:Lorg/apache/dubbo/config/ReferenceConfig;
       4: invokevirtual #49                 // Method org/apache/dubbo/config/ReferenceConfig.getGroup:()Ljava/lang/String;
       7: areturn

  public java.lang.String getVersion();
    Code:
       0: aload_0
       1: getfield      #48                 // Field referenceConfig:Lorg/apache/dubbo/config/ReferenceConfig;
       4: invokevirtual #50                 // Method org/apache/dubbo/config/ReferenceConfig.getVersion:()Ljava/lang/String;
       7: areturn

  public java.lang.String getKey();
    Code:
       0: aload_0
       1: getfield      #51                 // Field key:Ljava/lang/String;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getReferenceProps();
    Code:
       0: aload_0
       1: getfield      #6                  // Field referenceProps:Ljava/util/Map;
       4: areturn

  public org.springframework.beans.MutablePropertyValues getPropertyValues();
    Code:
       0: aload_0
       1: getfield      #39                 // Field propertyValues:Lorg/springframework/beans/MutablePropertyValues;
       4: areturn

  public org.apache.dubbo.config.ReferenceConfig getReferenceConfig();
    Code:
       0: aload_0
       1: getfield      #48                 // Field referenceConfig:Lorg/apache/dubbo/config/ReferenceConfig;
       4: areturn

  public void setKeyAndReferenceConfig(java.lang.String, org.apache.dubbo.config.ReferenceConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field key:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #48                 // Field referenceConfig:Lorg/apache/dubbo/config/ReferenceConfig;
      10: return

  private void createLazyProxy();
    Code:
       0: new           #52                 // class org/springframework/aop/framework/ProxyFactory
       3: dup
       4: invokespecial #53                 // Method org/springframework/aop/framework/ProxyFactory."<init>":()V
       7: astore_1
       8: aload_1
       9: new           #54                 // class org/apache/dubbo/config/spring/ReferenceBean$DubboReferenceLazyInitTargetSource
      12: dup
      13: aload_0
      14: aconst_null
      15: invokespecial #55                 // Method org/apache/dubbo/config/spring/ReferenceBean$DubboReferenceLazyInitTargetSource."<init>":(Lorg/apache/dubbo/config/spring/ReferenceBean;Lorg/apache/dubbo/config/spring/ReferenceBean$1;)V
      18: invokevirtual #56                 // Method org/springframework/aop/framework/ProxyFactory.setTargetSource:(Lorg/springframework/aop/TargetSource;)V
      21: aload_1
      22: aload_0
      23: getfield      #22                 // Field interfaceClass:Ljava/lang/Class;
      26: invokevirtual #57                 // Method org/springframework/aop/framework/ProxyFactory.addInterface:(Ljava/lang/Class;)V
      29: invokestatic  #58                 // Method org/apache/dubbo/rpc/proxy/AbstractProxyFactory.getInternalInterfaces:()[Ljava/lang/Class;
      32: astore_2
      33: aload_2
      34: astore_3
      35: aload_3
      36: arraylength
      37: istore        4
      39: iconst_0
      40: istore        5
      42: iload         5
      44: iload         4
      46: if_icmpge     67
      49: aload_3
      50: iload         5
      52: aaload
      53: astore        6
      55: aload_1
      56: aload         6
      58: invokevirtual #57                 // Method org/springframework/aop/framework/ProxyFactory.addInterface:(Ljava/lang/Class;)V
      61: iinc          5, 1
      64: goto          42
      67: aload_0
      68: getfield      #22                 // Field interfaceClass:Ljava/lang/Class;
      71: invokevirtual #59                 // Method java/lang/Class.getName:()Ljava/lang/String;
      74: aload_0
      75: getfield      #25                 // Field interfaceName:Ljava/lang/String;
      78: invokestatic  #60                 // Method org/apache/dubbo/common/utils/StringUtils.isEquals:(Ljava/lang/String;Ljava/lang/String;)Z
      81: ifne          105
      84: aload_0
      85: getfield      #25                 // Field interfaceName:Ljava/lang/String;
      88: aload_0
      89: getfield      #8                  // Field beanClassLoader:Ljava/lang/ClassLoader;
      92: invokestatic  #61                 // Method org/apache/dubbo/common/utils/ClassUtils.forName:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      95: astore_3
      96: aload_1
      97: aload_3
      98: invokevirtual #57                 // Method org/springframework/aop/framework/ProxyFactory.addInterface:(Ljava/lang/Class;)V
     101: goto          105
     104: astore_3
     105: aload_0
     106: aload_1
     107: aload_0
     108: getfield      #8                  // Field beanClassLoader:Ljava/lang/ClassLoader;
     111: invokevirtual #63                 // Method org/springframework/aop/framework/ProxyFactory.getProxy:(Ljava/lang/ClassLoader;)Ljava/lang/Object;
     114: putfield      #10                 // Field lazyProxy:Ljava/lang/Object;
     117: return
    Exception table:
       from    to  target type
          84   101   104   Class java/lang/ClassNotFoundException

  private java.lang.Object getCallProxy() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #48                 // Field referenceConfig:Lorg/apache/dubbo/config/ReferenceConfig;
       4: ifnonnull     17
       7: new           #64                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #65                 // String ReferenceBean is not ready yet, please make sure to call reference interface method after dubbo is started.
      13: invokespecial #66                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokespecial #13                 // Method getBeanFactory:()Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;
      21: checkcast     #67                 // class org/springframework/beans/factory/support/DefaultSingletonBeanRegistry
      24: invokevirtual #68                 // Method org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.getSingletonMutex:()Ljava/lang/Object;
      27: dup
      28: astore_1
      29: monitorenter
      30: aload_0
      31: getfield      #48                 // Field referenceConfig:Lorg/apache/dubbo/config/ReferenceConfig;
      34: invokevirtual #69                 // Method org/apache/dubbo/config/ReferenceConfig.get:()Ljava/lang/Object;
      37: aload_1
      38: monitorexit
      39: areturn
      40: astore_2
      41: aload_1
      42: monitorexit
      43: aload_2
      44: athrow
    Exception table:
       from    to  target type
          30    39    40   any
          40    43    40   any

  static java.lang.Object access$100(org.apache.dubbo.config.spring.ReferenceBean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getCallProxy:()Ljava/lang/Object;
       4: areturn
}
