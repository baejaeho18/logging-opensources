Compiled from "DubboSpringInitContext.java"
public class org.apache.dubbo.config.spring.context.DubboSpringInitContext {
  private org.springframework.beans.factory.support.BeanDefinitionRegistry registry;

  private org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory;

  private org.springframework.context.ApplicationContext applicationContext;

  private org.apache.dubbo.rpc.model.ModuleModel moduleModel;

  private final java.util.Map<java.lang.String, java.lang.Object> moduleAttributes;

  private volatile boolean bound;

  public org.apache.dubbo.config.spring.context.DubboSpringInitContext();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field moduleAttributes:Ljava/util/Map;
      15: return

  public void markAsBound();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field bound:Z
       5: return

  public org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry();
    Code:
       0: aload_0
       1: getfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
       4: areturn

  void setRegistry(org.springframework.beans.factory.support.BeanDefinitionRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field registry:Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;
       5: return

  public org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory();
    Code:
       0: aload_0
       1: getfield      #7                  // Field beanFactory:Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;
       4: areturn

  void setBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field beanFactory:Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;
       5: return

  public org.springframework.context.ApplicationContext getApplicationContext();
    Code:
       0: aload_0
       1: getfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       4: areturn

  void setApplicationContext(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       5: return

  public org.apache.dubbo.rpc.model.ApplicationModel getApplicationModel();
    Code:
       0: aload_0
       1: getfield      #9                  // Field moduleModel:Lorg/apache/dubbo/rpc/model/ModuleModel;
       4: ifnonnull     11
       7: aconst_null
       8: goto          18
      11: aload_0
      12: getfield      #9                  // Field moduleModel:Lorg/apache/dubbo/rpc/model/ModuleModel;
      15: invokevirtual #10                 // Method org/apache/dubbo/rpc/model/ModuleModel.getApplicationModel:()Lorg/apache/dubbo/rpc/model/ApplicationModel;
      18: areturn

  public org.apache.dubbo.rpc.model.ModuleModel getModuleModel();
    Code:
       0: aload_0
       1: getfield      #9                  // Field moduleModel:Lorg/apache/dubbo/rpc/model/ModuleModel;
       4: areturn

  public void setModuleModel(org.apache.dubbo.rpc.model.ModuleModel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field bound:Z
       4: ifeq          17
       7: new           #11                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #12                 // String Cannot change ModuleModel after bound context
      13: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #9                  // Field moduleModel:Lorg/apache/dubbo/rpc/model/ModuleModel;
      22: return

  public boolean isKeepRunningOnSpringClosed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field moduleAttributes:Ljava/util/Map;
       4: ldc           #15                 // String keepRunningOnSpringClosed
       6: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #17                 // class java/lang/Boolean
      14: invokevirtual #18                 // Method java/lang/Boolean.booleanValue:()Z
      17: ireturn

  public void setKeepRunningOnSpringClosed(boolean);
    Code:
       0: aload_0
       1: ldc           #15                 // String keepRunningOnSpringClosed
       3: iload_1
       4: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokevirtual #20                 // Method setModuleAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public java.util.Map<java.lang.String, java.lang.Object> getModuleAttributes();
    Code:
       0: aload_0
       1: getfield      #4                  // Field moduleAttributes:Ljava/util/Map;
       4: areturn

  public void setModuleAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field moduleAttributes:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return
}
