Compiled from "ReferenceBeanManager.java"
public class org.apache.dubbo.config.spring.reference.ReferenceBeanManager implements org.springframework.context.ApplicationContextAware {
  public static final java.lang.String BEAN_NAME;

  private final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  private java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.lang.String>> referenceKeyMap;

  private java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.String> referenceAliasMap;

  private java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.dubbo.config.spring.ReferenceBean> referenceBeanMap;

  private java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.dubbo.config.ReferenceConfig> referenceConfigMap;

  private org.springframework.context.ApplicationContext applicationContext;

  private volatile boolean initialized;

  private org.apache.dubbo.rpc.model.ModuleModel moduleModel;

  public org.apache.dubbo.config.spring.reference.ReferenceBeanManager();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #4                  // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      12: putfield      #5                  // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      15: aload_0
      16: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #8                  // Field referenceKeyMap:Ljava/util/concurrent/ConcurrentMap;
      26: aload_0
      27: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      30: dup
      31: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      34: putfield      #9                  // Field referenceAliasMap:Ljava/util/concurrent/ConcurrentMap;
      37: aload_0
      38: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      41: dup
      42: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      45: putfield      #10                 // Field referenceBeanMap:Ljava/util/concurrent/ConcurrentMap;
      48: aload_0
      49: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      52: dup
      53: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      56: putfield      #11                 // Field referenceConfigMap:Ljava/util/concurrent/ConcurrentMap;
      59: aload_0
      60: iconst_0
      61: putfield      #12                 // Field initialized:Z
      64: return

  public void addReference(org.apache.dubbo.config.spring.ReferenceBean) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method org/apache/dubbo/config/spring/ReferenceBean.getId:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ldc           #14                 // String The id of ReferenceBean cannot be empty
       8: invokestatic  #15                 // Method org/apache/dubbo/common/utils/Assert.notEmptyString:(Ljava/lang/String;Ljava/lang/String;)V
      11: aload_0
      12: getfield      #12                 // Field initialized:Z
      15: ifne          68
      18: aload_0
      19: getfield      #5                  // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      22: ldc           #16                 // String 5-39
      24: ldc           #17                 // String
      26: ldc           #17                 // String
      28: new           #18                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #20                 // String Early initialize reference bean before DubboConfigBeanInitializer, the BeanPostProcessor has not been loaded at this time, which may cause abnormalities in some components (such as seata):
      37: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_2
      41: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #22                 // String  =
      46: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: aload_0
      51: getfield      #23                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      54: invokestatic  #24                 // Method org/apache/dubbo/config/spring/reference/ReferenceBeanSupport.generateReferenceKey:(Lorg/apache/dubbo/config/spring/ReferenceBean;Lorg/springframework/context/ApplicationContext;)Ljava/lang/String;
      57: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokeinterface #26,  5           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.warn:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      68: aload_0
      69: aload_2
      70: invokespecial #27                 // Method getReferenceKeyByBeanName:(Ljava/lang/String;)Ljava/lang/String;
      73: astore_3
      74: aload_3
      75: invokestatic  #28                 // Method org/apache/dubbo/common/utils/StringUtils.isEmpty:(Ljava/lang/String;)Z
      78: ifeq          90
      81: aload_1
      82: aload_0
      83: getfield      #23                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      86: invokestatic  #24                 // Method org/apache/dubbo/config/spring/reference/ReferenceBeanSupport.generateReferenceKey:(Lorg/apache/dubbo/config/spring/ReferenceBean;Lorg/springframework/context/ApplicationContext;)Ljava/lang/String;
      89: astore_3
      90: aload_0
      91: getfield      #10                 // Field referenceBeanMap:Ljava/util/concurrent/ConcurrentMap;
      94: aload_2
      95: invokeinterface #29,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     100: checkcast     #30                 // class org/apache/dubbo/config/spring/ReferenceBean
     103: astore        4
     105: aload         4
     107: ifnull        174
     110: aload_1
     111: aload         4
     113: if_acmpeq     173
     116: aload         4
     118: aload_0
     119: getfield      #23                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
     122: invokestatic  #24                 // Method org/apache/dubbo/config/spring/reference/ReferenceBeanSupport.generateReferenceKey:(Lorg/apache/dubbo/config/spring/ReferenceBean;Lorg/springframework/context/ApplicationContext;)Ljava/lang/String;
     125: astore        5
     127: new           #31                 // class java/lang/IllegalStateException
     130: dup
     131: new           #18                 // class java/lang/StringBuilder
     134: dup
     135: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     138: ldc           #32                 // String Found duplicated ReferenceBean with id:
     140: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: aload_2
     144: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: ldc           #33                 // String , old:
     149: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload         5
     154: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: ldc           #34                 // String , new:
     159: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: aload_3
     163: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     169: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     172: athrow
     173: return
     174: aload_0
     175: getfield      #10                 // Field referenceBeanMap:Ljava/util/concurrent/ConcurrentMap;
     178: aload_2
     179: aload_1
     180: invokeinterface #36,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     185: pop
     186: aload_0
     187: aload_3
     188: aload_2
     189: invokevirtual #37                 // Method registerReferenceKeyAndBeanName:(Ljava/lang/String;Ljava/lang/String;)V
     192: aload_0
     193: getfield      #12                 // Field initialized:Z
     196: ifeq          204
     199: aload_0
     200: aload_1
     201: invokespecial #38                 // Method initReferenceBean:(Lorg/apache/dubbo/config/spring/ReferenceBean;)V
     204: return

  private java.lang.String getReferenceKeyByBeanName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field referenceKeyMap:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
       9: astore_2
      10: aload_2
      11: invokeinterface #40,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          70
      26: aload_3
      27: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #43                 // class java/util/Map$Entry
      35: astore        4
      37: aload         4
      39: invokeinterface #44,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      44: checkcast     #45                 // class java/util/List
      47: aload_1
      48: invokeinterface #46,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      53: ifeq          67
      56: aload         4
      58: invokeinterface #47,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      63: checkcast     #48                 // class java/lang/String
      66: areturn
      67: goto          17
      70: aconst_null
      71: areturn

  public void registerReferenceKeyAndBeanName(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field referenceKeyMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokedynamic #49,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      10: invokestatic  #50                 // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      13: checkcast     #45                 // class java/util/List
      16: astore_3
      17: aload_3
      18: aload_2
      19: invokeinterface #46,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      24: ifne          53
      27: aload_3
      28: aload_2
      29: invokeinterface #51,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      34: pop
      35: aload_0
      36: getfield      #9                  // Field referenceAliasMap:Ljava/util/concurrent/ConcurrentMap;
      39: aload_2
      40: aload_3
      41: iconst_0
      42: invokeinterface #52,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      47: invokeinterface #36,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: return

  public org.apache.dubbo.config.spring.ReferenceBean getById(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #53                 // Method transformName:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: getfield      #10                 // Field referenceBeanMap:Ljava/util/concurrent/ConcurrentMap;
      10: aload_2
      11: invokeinterface #29,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #30                 // class org/apache/dubbo/config/spring/ReferenceBean
      19: areturn

  private java.lang.String transformName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field referenceAliasMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_1
       6: invokeinterface #54,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #48                 // class java/lang/String
      14: areturn

  public java.util.List<java.lang.String> getBeanNamesByKey(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field referenceKeyMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: getstatic     #55                 // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
       8: invokeinterface #54,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #45                 // class java/util/List
      16: invokestatic  #56                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      19: areturn

  public java.util.Collection<org.apache.dubbo.config.spring.ReferenceBean> getReferences();
    Code:
       0: new           #57                 // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #10                 // Field referenceBeanMap:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #58,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      13: invokespecial #59                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      16: areturn

  public void setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       5: aload_0
       6: aload_1
       7: invokestatic  #60                 // InterfaceMethod org/apache/dubbo/config/spring/util/DubboBeanUtils.getModuleModel:(Lorg/springframework/beans/factory/BeanFactory;)Lorg/apache/dubbo/rpc/model/ModuleModel;
      10: putfield      #61                 // Field moduleModel:Lorg/apache/dubbo/rpc/model/ModuleModel;
      13: return

  public void prepareReferenceBeans() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #12                 // Field initialized:Z
       5: aload_0
       6: invokevirtual #62                 // Method getReferences:()Ljava/util/Collection;
       9: invokeinterface #63,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          42
      24: aload_1
      25: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #30                 // class org/apache/dubbo/config/spring/ReferenceBean
      33: astore_2
      34: aload_0
      35: aload_2
      36: invokespecial #38                 // Method initReferenceBean:(Lorg/apache/dubbo/config/spring/ReferenceBean;)V
      39: goto          15
      42: return

  private synchronized void initReferenceBean(org.apache.dubbo.config.spring.ReferenceBean) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #64                 // Method org/apache/dubbo/config/spring/ReferenceBean.getReferenceConfig:()Lorg/apache/dubbo/config/ReferenceConfig;
       4: ifnull        8
       7: return
       8: aload_0
       9: aload_1
      10: invokevirtual #13                 // Method org/apache/dubbo/config/spring/ReferenceBean.getId:()Ljava/lang/String;
      13: invokespecial #27                 // Method getReferenceKeyByBeanName:(Ljava/lang/String;)Ljava/lang/String;
      16: astore_2
      17: aload_2
      18: invokestatic  #28                 // Method org/apache/dubbo/common/utils/StringUtils.isEmpty:(Ljava/lang/String;)Z
      21: ifeq          33
      24: aload_1
      25: aload_0
      26: getfield      #23                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      29: invokestatic  #24                 // Method org/apache/dubbo/config/spring/reference/ReferenceBeanSupport.generateReferenceKey:(Lorg/apache/dubbo/config/spring/ReferenceBean;Lorg/springframework/context/ApplicationContext;)Ljava/lang/String;
      32: astore_2
      33: aload_0
      34: getfield      #11                 // Field referenceConfigMap:Ljava/util/concurrent/ConcurrentMap;
      37: aload_2
      38: invokeinterface #29,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #65                 // class org/apache/dubbo/config/ReferenceConfig
      46: astore_3
      47: aload_3
      48: ifnonnull     127
      51: aload_1
      52: invokestatic  #66                 // Method org/apache/dubbo/config/spring/reference/ReferenceBeanSupport.getReferenceAttributes:(Lorg/apache/dubbo/config/spring/ReferenceBean;)Ljava/util/Map;
      55: astore        4
      57: aload         4
      59: aload_0
      60: getfield      #23                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      63: invokestatic  #67                 // Method org/apache/dubbo/config/spring/reference/ReferenceCreator.create:(Ljava/util/Map;Lorg/springframework/context/ApplicationContext;)Lorg/apache/dubbo/config/spring/reference/ReferenceCreator;
      66: aload_1
      67: invokevirtual #68                 // Method org/apache/dubbo/config/spring/ReferenceBean.getObjectType:()Ljava/lang/Class;
      70: invokevirtual #69                 // Method org/apache/dubbo/config/spring/reference/ReferenceCreator.defaultInterfaceClass:(Ljava/lang/Class;)Lorg/apache/dubbo/config/spring/reference/ReferenceCreator;
      73: invokevirtual #70                 // Method org/apache/dubbo/config/spring/reference/ReferenceCreator.build:()Lorg/apache/dubbo/config/ReferenceConfig;
      76: astore_3
      77: aload_1
      78: invokevirtual #13                 // Method org/apache/dubbo/config/spring/ReferenceBean.getId:()Ljava/lang/String;
      81: ifnull        104
      84: aload_1
      85: invokevirtual #13                 // Method org/apache/dubbo/config/spring/ReferenceBean.getId:()Ljava/lang/String;
      88: ldc           #71                 // String #
      90: invokevirtual #72                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      93: ifne          104
      96: aload_3
      97: aload_1
      98: invokevirtual #13                 // Method org/apache/dubbo/config/spring/ReferenceBean.getId:()Ljava/lang/String;
     101: invokevirtual #73                 // Method org/apache/dubbo/config/ReferenceConfig.setId:(Ljava/lang/String;)V
     104: aload_0
     105: getfield      #11                 // Field referenceConfigMap:Ljava/util/concurrent/ConcurrentMap;
     108: aload_2
     109: aload_3
     110: invokeinterface #36,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     115: pop
     116: aload_0
     117: getfield      #61                 // Field moduleModel:Lorg/apache/dubbo/rpc/model/ModuleModel;
     120: invokevirtual #74                 // Method org/apache/dubbo/rpc/model/ModuleModel.getConfigManager:()Lorg/apache/dubbo/config/context/ModuleConfigManager;
     123: aload_3
     124: invokevirtual #75                 // Method org/apache/dubbo/config/context/ModuleConfigManager.addReference:(Lorg/apache/dubbo/config/ReferenceConfigBase;)V
     127: aload_1
     128: aload_2
     129: aload_3
     130: invokevirtual #76                 // Method org/apache/dubbo/config/spring/ReferenceBean.setKeyAndReferenceConfig:(Ljava/lang/String;Lorg/apache/dubbo/config/ReferenceConfig;)V
     133: return

  private static java.util.List lambda$registerReferenceKeyAndBeanName$0(java.lang.String);
    Code:
       0: new           #77                 // class java/util/ArrayList
       3: dup
       4: invokespecial #78                 // Method java/util/ArrayList."<init>":()V
       7: areturn
}
