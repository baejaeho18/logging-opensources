Compiled from "ProtocolConfig.java"
public class org.apache.dubbo.config.ProtocolConfig extends org.apache.dubbo.config.AbstractConfig {
  private static final long serialVersionUID;

  private java.lang.String name;

  private java.lang.String host;

  private java.lang.Integer port;

  private java.lang.String contextpath;

  private java.lang.String threadpool;

  private java.lang.String threadname;

  private java.lang.Integer corethreads;

  private java.lang.Integer threads;

  private java.lang.Integer iothreads;

  private java.lang.Integer alive;

  private java.lang.Integer queues;

  private java.lang.String threadPoolExhaustedListeners;

  private java.lang.Integer accepts;

  private java.lang.String codec;

  private java.lang.String serialization;

  private java.lang.String preferSerialization;

  private java.lang.String charset;

  private java.lang.Integer payload;

  private java.lang.Integer buffer;

  private java.lang.Integer heartbeat;

  private java.lang.String accesslog;

  private java.lang.String transporter;

  private java.lang.String exchanger;

  private java.lang.String dispatcher;

  private java.lang.String networker;

  private java.lang.String server;

  private java.lang.String client;

  private java.lang.String telnet;

  private java.lang.String prompt;

  private java.lang.String status;

  private java.lang.Boolean register;

  private java.lang.Boolean keepAlive;

  private java.lang.String optimizer;

  private java.lang.String extension;

  private java.util.Map<java.lang.String, java.lang.String> parameters;

  private java.lang.Boolean sslEnabled;

  private java.lang.String extProtocol;

  public org.apache.dubbo.config.ProtocolConfig();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/apache/dubbo/config/AbstractConfig."<init>":()V
       4: return

  public org.apache.dubbo.config.ProtocolConfig(org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/dubbo/config/AbstractConfig."<init>":(Lorg/apache/dubbo/rpc/model/ScopeModel;)V
       5: return

  public org.apache.dubbo.config.ProtocolConfig(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/apache/dubbo/config/AbstractConfig."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #6                  // Method setName:(Ljava/lang/String;)V
       9: return

  public org.apache.dubbo.config.ProtocolConfig(org.apache.dubbo.rpc.model.ApplicationModel, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/dubbo/config/AbstractConfig."<init>":(Lorg/apache/dubbo/rpc/model/ScopeModel;)V
       5: aload_0
       6: aload_2
       7: invokevirtual #6                  // Method setName:(Ljava/lang/String;)V
      10: return

  public org.apache.dubbo.config.ProtocolConfig(java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/apache/dubbo/config/AbstractConfig."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #6                  // Method setName:(Ljava/lang/String;)V
       9: aload_0
      10: iload_2
      11: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: invokevirtual #8                  // Method setPort:(Ljava/lang/Integer;)V
      17: return

  public org.apache.dubbo.config.ProtocolConfig(org.apache.dubbo.rpc.model.ApplicationModel, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/dubbo/config/AbstractConfig."<init>":(Lorg/apache/dubbo/rpc/model/ScopeModel;)V
       5: aload_0
       6: aload_2
       7: invokevirtual #6                  // Method setName:(Ljava/lang/String;)V
      10: aload_0
      11: iload_3
      12: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokevirtual #8                  // Method setPort:(Ljava/lang/Integer;)V
      18: return

  protected void checkDefault();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method org/apache/dubbo/config/AbstractConfig.checkDefault:()V
       4: aload_0
       5: getfield      #10                 // Field name:Ljava/lang/String;
       8: ifnonnull     17
      11: aload_0
      12: ldc           #11                 // String dubbo
      14: putfield      #10                 // Field name:Ljava/lang/String;
      17: aload_0
      18: getfield      #12                 // Field preferSerialization:Ljava/lang/String;
      21: invokestatic  #13                 // Method org/apache/dubbo/common/utils/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
      24: ifeq          47
      27: aload_0
      28: aload_0
      29: getfield      #14                 // Field serialization:Ljava/lang/String;
      32: ifnull        42
      35: aload_0
      36: getfield      #14                 // Field serialization:Ljava/lang/String;
      39: goto          44
      42: ldc           #15                 // String fastjson2,hessian2
      44: putfield      #12                 // Field preferSerialization:Ljava/lang/String;
      47: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field name:Ljava/lang/String;
       4: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field name:Ljava/lang/String;
       5: return

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #16                 // Field host:Ljava/lang/String;
       4: areturn

  public void setHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field host:Ljava/lang/String;
       5: return

  public java.lang.Integer getPort();
    Code:
       0: aload_0
       1: getfield      #17                 // Field port:Ljava/lang/Integer;
       4: areturn

  public void setPort(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field port:Ljava/lang/Integer;
       5: return

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getContextpath:()Ljava/lang/String;
       4: areturn

  public void setPath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method setContextpath:(Ljava/lang/String;)V
       5: return

  public java.lang.String getContextpath();
    Code:
       0: aload_0
       1: getfield      #20                 // Field contextpath:Ljava/lang/String;
       4: areturn

  public void setContextpath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field contextpath:Ljava/lang/String;
       5: return

  public java.lang.String getThreadpool();
    Code:
       0: aload_0
       1: getfield      #21                 // Field threadpool:Ljava/lang/String;
       4: areturn

  public void setThreadpool(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field threadpool:Ljava/lang/String;
       5: return

  public java.lang.String getThreadname();
    Code:
       0: aload_0
       1: getfield      #22                 // Field threadname:Ljava/lang/String;
       4: areturn

  public void setThreadname(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field threadname:Ljava/lang/String;
       5: return

  public java.lang.String getThreadPoolExhaustedListeners();
    Code:
       0: aload_0
       1: getfield      #23                 // Field threadPoolExhaustedListeners:Ljava/lang/String;
       4: areturn

  public void setThreadPoolExhaustedListeners(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field threadPoolExhaustedListeners:Ljava/lang/String;
       5: return

  public java.lang.Integer getCorethreads();
    Code:
       0: aload_0
       1: getfield      #24                 // Field corethreads:Ljava/lang/Integer;
       4: areturn

  public void setCorethreads(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field corethreads:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getThreads();
    Code:
       0: aload_0
       1: getfield      #25                 // Field threads:Ljava/lang/Integer;
       4: areturn

  public void setThreads(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field threads:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getIothreads();
    Code:
       0: aload_0
       1: getfield      #26                 // Field iothreads:Ljava/lang/Integer;
       4: areturn

  public void setIothreads(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field iothreads:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getAlive();
    Code:
       0: aload_0
       1: getfield      #27                 // Field alive:Ljava/lang/Integer;
       4: areturn

  public void setAlive(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field alive:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getQueues();
    Code:
       0: aload_0
       1: getfield      #28                 // Field queues:Ljava/lang/Integer;
       4: areturn

  public void setQueues(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field queues:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getAccepts();
    Code:
       0: aload_0
       1: getfield      #29                 // Field accepts:Ljava/lang/Integer;
       4: areturn

  public void setAccepts(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field accepts:Ljava/lang/Integer;
       5: return

  public java.lang.String getCodec();
    Code:
       0: aload_0
       1: getfield      #30                 // Field codec:Ljava/lang/String;
       4: areturn

  public void setCodec(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field codec:Ljava/lang/String;
       5: return

  public java.lang.String getSerialization();
    Code:
       0: aload_0
       1: getfield      #14                 // Field serialization:Ljava/lang/String;
       4: areturn

  public void setSerialization(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field serialization:Ljava/lang/String;
       5: return

  public java.lang.String getPreferSerialization();
    Code:
       0: aload_0
       1: getfield      #12                 // Field preferSerialization:Ljava/lang/String;
       4: areturn

  public void setPreferSerialization(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field preferSerialization:Ljava/lang/String;
       5: return

  public java.lang.String getCharset();
    Code:
       0: aload_0
       1: getfield      #31                 // Field charset:Ljava/lang/String;
       4: areturn

  public void setCharset(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field charset:Ljava/lang/String;
       5: return

  public java.lang.Integer getPayload();
    Code:
       0: aload_0
       1: getfield      #32                 // Field payload:Ljava/lang/Integer;
       4: areturn

  public void setPayload(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field payload:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getBuffer();
    Code:
       0: aload_0
       1: getfield      #33                 // Field buffer:Ljava/lang/Integer;
       4: areturn

  public void setBuffer(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field buffer:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getHeartbeat();
    Code:
       0: aload_0
       1: getfield      #34                 // Field heartbeat:Ljava/lang/Integer;
       4: areturn

  public void setHeartbeat(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field heartbeat:Ljava/lang/Integer;
       5: return

  public java.lang.String getServer();
    Code:
       0: aload_0
       1: getfield      #35                 // Field server:Ljava/lang/String;
       4: areturn

  public void setServer(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field server:Ljava/lang/String;
       5: return

  public java.lang.String getClient();
    Code:
       0: aload_0
       1: getfield      #36                 // Field client:Ljava/lang/String;
       4: areturn

  public void setClient(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field client:Ljava/lang/String;
       5: return

  public java.lang.String getAccesslog();
    Code:
       0: aload_0
       1: getfield      #37                 // Field accesslog:Ljava/lang/String;
       4: areturn

  public void setAccesslog(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field accesslog:Ljava/lang/String;
       5: return

  public java.lang.String getTelnet();
    Code:
       0: aload_0
       1: getfield      #38                 // Field telnet:Ljava/lang/String;
       4: areturn

  public void setTelnet(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field telnet:Ljava/lang/String;
       5: return

  public java.lang.String getPrompt();
    Code:
       0: aload_0
       1: getfield      #39                 // Field prompt:Ljava/lang/String;
       4: areturn

  public void setPrompt(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field prompt:Ljava/lang/String;
       5: return

  public java.lang.String getStatus();
    Code:
       0: aload_0
       1: getfield      #40                 // Field status:Ljava/lang/String;
       4: areturn

  public void setStatus(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field status:Ljava/lang/String;
       5: return

  public java.lang.Boolean isRegister();
    Code:
       0: aload_0
       1: getfield      #41                 // Field register:Ljava/lang/Boolean;
       4: areturn

  public void setRegister(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field register:Ljava/lang/Boolean;
       5: return

  public java.lang.String getTransporter();
    Code:
       0: aload_0
       1: getfield      #42                 // Field transporter:Ljava/lang/String;
       4: areturn

  public void setTransporter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field transporter:Ljava/lang/String;
       5: return

  public java.lang.String getExchanger();
    Code:
       0: aload_0
       1: getfield      #43                 // Field exchanger:Ljava/lang/String;
       4: areturn

  public void setExchanger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field exchanger:Ljava/lang/String;
       5: return

  public java.lang.String getDispather();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method getDispatcher:()Ljava/lang/String;
       4: areturn

  public void setDispather(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method setDispatcher:(Ljava/lang/String;)V
       5: return

  public java.lang.String getDispatcher();
    Code:
       0: aload_0
       1: getfield      #46                 // Field dispatcher:Ljava/lang/String;
       4: areturn

  public void setDispatcher(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field dispatcher:Ljava/lang/String;
       5: return

  public java.lang.String getNetworker();
    Code:
       0: aload_0
       1: getfield      #47                 // Field networker:Ljava/lang/String;
       4: areturn

  public void setNetworker(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field networker:Ljava/lang/String;
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getParameters();
    Code:
       0: aload_0
       1: getfield      #48                 // Field parameters:Ljava/util/Map;
       4: areturn

  public void setParameters(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field parameters:Ljava/util/Map;
       5: return

  public java.lang.Boolean getSslEnabled();
    Code:
       0: aload_0
       1: getfield      #49                 // Field sslEnabled:Ljava/lang/Boolean;
       4: areturn

  public void setSslEnabled(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field sslEnabled:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getKeepAlive();
    Code:
       0: aload_0
       1: getfield      #50                 // Field keepAlive:Ljava/lang/Boolean;
       4: areturn

  public void setKeepAlive(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #50                 // Field keepAlive:Ljava/lang/Boolean;
       5: return

  public java.lang.String getOptimizer();
    Code:
       0: aload_0
       1: getfield      #51                 // Field optimizer:Ljava/lang/String;
       4: areturn

  public void setOptimizer(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field optimizer:Ljava/lang/String;
       5: return

  public java.lang.String getExtension();
    Code:
       0: aload_0
       1: getfield      #52                 // Field extension:Ljava/lang/String;
       4: areturn

  public void setExtension(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field extension:Ljava/lang/String;
       5: return

  public boolean isValid();
    Code:
       0: aload_0
       1: getfield      #10                 // Field name:Ljava/lang/String;
       4: invokestatic  #53                 // Method org/apache/dubbo/common/utils/StringUtils.isNotEmpty:(Ljava/lang/String;)Z
       7: ireturn

  public java.lang.String getExtProtocol();
    Code:
       0: aload_0
       1: getfield      #54                 // Field extProtocol:Ljava/lang/String;
       4: areturn

  public void setExtProtocol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #54                 // Field extProtocol:Ljava/lang/String;
       5: return

  public void mergeProtocol(org.apache.dubbo.config.ProtocolConfig);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokevirtual #55                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #56                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      12: astore_2
      13: aload_1
      14: invokestatic  #57                 // Method org/apache/dubbo/common/utils/CollectionUtils.objToMap:(Ljava/lang/Object;)Ljava/util/Map;
      17: astore_3
      18: aload_2
      19: astore        4
      21: aload         4
      23: arraylength
      24: istore        5
      26: iconst_0
      27: istore        6
      29: iload         6
      31: iload         5
      33: if_icmpge     74
      36: aload         4
      38: iload         6
      40: aaload
      41: astore        7
      43: aload_3
      44: aload         7
      46: invokevirtual #58                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      49: invokeinterface #59,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      54: invokestatic  #60                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      57: aload_0
      58: aload         7
      60: invokedynamic #61,  0             // InvokeDynamic #0:accept:(Lorg/apache/dubbo/config/ProtocolConfig;Ljava/lang/reflect/Field;)Ljava/util/function/Consumer;
      65: invokevirtual #62                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      68: iinc          6, 1
      71: goto          29
      74: goto          95
      77: astore_3
      78: getstatic     #64                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      81: ldc           #65                 // String 0-12
      83: ldc           #66                 // String
      85: ldc           #66                 // String
      87: ldc           #67                 // String merge protocol config fail, error:
      89: aload_3
      90: invokeinterface #68,  6           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      95: return
    Exception table:
       from    to  target type
          13    74    77   Class java/lang/Exception

  private void lambda$mergeProtocol$0(java.lang.reflect.Field, java.lang.Object);
    Code:
       0: aload_1
       1: iconst_1
       2: invokevirtual #69                 // Method java/lang/reflect/Field.setAccessible:(Z)V
       5: aload_1
       6: aload_0
       7: invokevirtual #70                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ifnonnull     19
      13: aload_1
      14: aload_0
      15: aload_2
      16: invokevirtual #71                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      19: goto          32
      22: astore_3
      23: new           #73                 // class java/lang/RuntimeException
      26: dup
      27: aload_3
      28: invokespecial #74                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      31: athrow
      32: return
    Exception table:
       from    to  target type
           0    19    22   Class java/lang/IllegalAccessException
}
