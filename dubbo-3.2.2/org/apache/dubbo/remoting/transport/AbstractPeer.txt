Compiled from "AbstractPeer.java"
public abstract class org.apache.dubbo.remoting.transport.AbstractPeer implements org.apache.dubbo.remoting.Endpoint,org.apache.dubbo.remoting.ChannelHandler {
  private final org.apache.dubbo.remoting.ChannelHandler handler;

  private volatile org.apache.dubbo.common.URL url;

  private volatile boolean closing;

  private volatile boolean closed;

  public org.apache.dubbo.remoting.transport.AbstractPeer(org.apache.dubbo.common.URL, org.apache.dubbo.remoting.ChannelHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String url == null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: ifnonnull     32
      22: new           #2                  // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #5                  // String handler == null
      28: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: aload_1
      34: putfield      #6                  // Field url:Lorg/apache/dubbo/common/URL;
      37: aload_0
      38: aload_2
      39: putfield      #7                  // Field handler:Lorg/apache/dubbo/remoting/ChannelHandler;
      42: return

  public void send(java.lang.Object) throws org.apache.dubbo.remoting.RemotingException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #6                  // Field url:Lorg/apache/dubbo/common/URL;
       6: ldc           #9                  // String sent
       8: iconst_0
       9: invokevirtual #10                 // Method org/apache/dubbo/common/URL.getParameter:(Ljava/lang/String;Z)Z
      12: invokevirtual #11                 // Method send:(Ljava/lang/Object;Z)V
      15: return

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #12                 // Field closed:Z
       5: return

  public void close(int);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method close:()V
       4: return

  public void startClose();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method isClosed:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #15                 // Field closing:Z
      13: return

  public org.apache.dubbo.common.URL getUrl();
    Code:
       0: aload_0
       1: getfield      #6                  // Field url:Lorg/apache/dubbo/common/URL;
       4: areturn

  protected void setUrl(org.apache.dubbo.common.URL);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String url == null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #6                  // Field url:Lorg/apache/dubbo/common/URL;
      19: return

  public org.apache.dubbo.remoting.ChannelHandler getChannelHandler();
    Code:
       0: aload_0
       1: getfield      #7                  // Field handler:Lorg/apache/dubbo/remoting/ChannelHandler;
       4: instanceof    #16                 // class org/apache/dubbo/remoting/transport/ChannelHandlerDelegate
       7: ifeq          23
      10: aload_0
      11: getfield      #7                  // Field handler:Lorg/apache/dubbo/remoting/ChannelHandler;
      14: checkcast     #16                 // class org/apache/dubbo/remoting/transport/ChannelHandlerDelegate
      17: invokeinterface #17,  1           // InterfaceMethod org/apache/dubbo/remoting/transport/ChannelHandlerDelegate.getHandler:()Lorg/apache/dubbo/remoting/ChannelHandler;
      22: areturn
      23: aload_0
      24: getfield      #7                  // Field handler:Lorg/apache/dubbo/remoting/ChannelHandler;
      27: areturn

  public org.apache.dubbo.remoting.ChannelHandler getHandler();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getDelegateHandler:()Lorg/apache/dubbo/remoting/ChannelHandler;
       4: areturn

  public org.apache.dubbo.remoting.ChannelHandler getDelegateHandler();
    Code:
       0: aload_0
       1: getfield      #7                  // Field handler:Lorg/apache/dubbo/remoting/ChannelHandler;
       4: areturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #12                 // Field closed:Z
       4: ireturn

  public boolean isClosing();
    Code:
       0: aload_0
       1: getfield      #15                 // Field closing:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #12                 // Field closed:Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void connected(org.apache.dubbo.remoting.Channel) throws org.apache.dubbo.remoting.RemotingException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #7                  // Field handler:Lorg/apache/dubbo/remoting/ChannelHandler;
      12: aload_1
      13: invokeinterface #19,  2           // InterfaceMethod org/apache/dubbo/remoting/ChannelHandler.connected:(Lorg/apache/dubbo/remoting/Channel;)V
      18: return

  public void disconnected(org.apache.dubbo.remoting.Channel) throws org.apache.dubbo.remoting.RemotingException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field handler:Lorg/apache/dubbo/remoting/ChannelHandler;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod org/apache/dubbo/remoting/ChannelHandler.disconnected:(Lorg/apache/dubbo/remoting/Channel;)V
      10: return

  public void sent(org.apache.dubbo.remoting.Channel, java.lang.Object) throws org.apache.dubbo.remoting.RemotingException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #7                  // Field handler:Lorg/apache/dubbo/remoting/ChannelHandler;
      12: aload_1
      13: aload_2
      14: invokeinterface #21,  3           // InterfaceMethod org/apache/dubbo/remoting/ChannelHandler.sent:(Lorg/apache/dubbo/remoting/Channel;Ljava/lang/Object;)V
      19: return

  public void received(org.apache.dubbo.remoting.Channel, java.lang.Object) throws org.apache.dubbo.remoting.RemotingException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #7                  // Field handler:Lorg/apache/dubbo/remoting/ChannelHandler;
      12: aload_1
      13: aload_2
      14: invokeinterface #22,  3           // InterfaceMethod org/apache/dubbo/remoting/ChannelHandler.received:(Lorg/apache/dubbo/remoting/Channel;Ljava/lang/Object;)V
      19: return

  public void caught(org.apache.dubbo.remoting.Channel, java.lang.Throwable) throws org.apache.dubbo.remoting.RemotingException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field handler:Lorg/apache/dubbo/remoting/ChannelHandler;
       4: aload_1
       5: aload_2
       6: invokeinterface #23,  3           // InterfaceMethod org/apache/dubbo/remoting/ChannelHandler.caught:(Lorg/apache/dubbo/remoting/Channel;Ljava/lang/Throwable;)V
      11: return
}
