Compiled from "ChannelBuffer.java"
public interface org.apache.dubbo.remoting.buffer.ChannelBuffer extends java.lang.Comparable<org.apache.dubbo.remoting.buffer.ChannelBuffer> {
  public abstract int capacity();

  public abstract void clear();

  public abstract org.apache.dubbo.remoting.buffer.ChannelBuffer copy();

  public abstract org.apache.dubbo.remoting.buffer.ChannelBuffer copy(int, int);

  public abstract void discardReadBytes();

  public abstract void ensureWritableBytes(int);

  public abstract boolean equals(java.lang.Object);

  public abstract org.apache.dubbo.remoting.buffer.ChannelBufferFactory factory();

  public abstract byte getByte(int);

  public abstract void getBytes(int, byte[]);

  public abstract void getBytes(int, byte[], int, int);

  public abstract void getBytes(int, java.nio.ByteBuffer);

  public abstract void getBytes(int, org.apache.dubbo.remoting.buffer.ChannelBuffer);

  public abstract void getBytes(int, org.apache.dubbo.remoting.buffer.ChannelBuffer, int);

  public abstract void getBytes(int, org.apache.dubbo.remoting.buffer.ChannelBuffer, int, int);

  public abstract void getBytes(int, java.io.OutputStream, int) throws java.io.IOException;

  public abstract boolean isDirect();

  public abstract void markReaderIndex();

  public abstract void markWriterIndex();

  public abstract boolean readable();

  public abstract int readableBytes();

  public abstract byte readByte();

  public abstract void readBytes(byte[]);

  public abstract void readBytes(byte[], int, int);

  public abstract void readBytes(java.nio.ByteBuffer);

  public abstract void readBytes(org.apache.dubbo.remoting.buffer.ChannelBuffer);

  public abstract void readBytes(org.apache.dubbo.remoting.buffer.ChannelBuffer, int);

  public abstract void readBytes(org.apache.dubbo.remoting.buffer.ChannelBuffer, int, int);

  public abstract org.apache.dubbo.remoting.buffer.ChannelBuffer readBytes(int);

  public abstract void resetReaderIndex();

  public abstract void resetWriterIndex();

  public abstract int readerIndex();

  public abstract void readerIndex(int);

  public abstract void readBytes(java.io.OutputStream, int) throws java.io.IOException;

  public abstract void setByte(int, int);

  public abstract void setBytes(int, byte[]);

  public abstract void setBytes(int, byte[], int, int);

  public abstract void setBytes(int, java.nio.ByteBuffer);

  public abstract void setBytes(int, org.apache.dubbo.remoting.buffer.ChannelBuffer);

  public abstract void setBytes(int, org.apache.dubbo.remoting.buffer.ChannelBuffer, int);

  public abstract void setBytes(int, org.apache.dubbo.remoting.buffer.ChannelBuffer, int, int);

  public abstract int setBytes(int, java.io.InputStream, int) throws java.io.IOException;

  public abstract void setIndex(int, int);

  public abstract void skipBytes(int);

  public abstract java.nio.ByteBuffer toByteBuffer();

  public abstract java.nio.ByteBuffer toByteBuffer(int, int);

  public abstract boolean writable();

  public abstract int writableBytes();

  public abstract void writeByte(int);

  public abstract void writeBytes(byte[]);

  public abstract void writeBytes(byte[], int, int);

  public abstract void writeBytes(java.nio.ByteBuffer);

  public abstract void writeBytes(org.apache.dubbo.remoting.buffer.ChannelBuffer);

  public abstract void writeBytes(org.apache.dubbo.remoting.buffer.ChannelBuffer, int);

  public abstract void writeBytes(org.apache.dubbo.remoting.buffer.ChannelBuffer, int, int);

  public abstract int writeBytes(java.io.InputStream, int) throws java.io.IOException;

  public abstract int writerIndex();

  public abstract void writerIndex(int);

  public abstract byte[] array();

  public abstract boolean hasArray();

  public abstract int arrayOffset();

  public default void release();
    Code:
       0: return
}
