Compiled from "ByteBufferBackedChannelBuffer.java"
public class org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBuffer extends org.apache.dubbo.remoting.buffer.AbstractChannelBuffer {
  private final java.nio.ByteBuffer buffer;

  private final int capacity;

  public org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/dubbo/remoting/buffer/AbstractChannelBuffer."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/NullPointerException
      11: dup
      12: ldc           #3                  // String buffer
      14: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: invokevirtual #5                  // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      23: putfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      26: aload_0
      27: aload_1
      28: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      31: putfield      #8                  // Field capacity:I
      34: aload_0
      35: aload_0
      36: getfield      #8                  // Field capacity:I
      39: invokevirtual #9                  // Method writerIndex:(I)V
      42: return

  public org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBuffer(org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBuffer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/dubbo/remoting/buffer/AbstractChannelBuffer."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       9: putfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      12: aload_0
      13: aload_1
      14: getfield      #8                  // Field capacity:I
      17: putfield      #8                  // Field capacity:I
      20: aload_0
      21: aload_1
      22: invokevirtual #10                 // Method readerIndex:()I
      25: aload_1
      26: invokevirtual #11                 // Method writerIndex:()I
      29: invokevirtual #12                 // Method setIndex:(II)V
      32: return

  public org.apache.dubbo.remoting.buffer.ChannelBufferFactory factory();
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #13                 // Method java/nio/ByteBuffer.isDirect:()Z
       7: ifeq          14
      10: invokestatic  #14                 // Method org/apache/dubbo/remoting/buffer/DirectChannelBufferFactory.getInstance:()Lorg/apache/dubbo/remoting/buffer/ChannelBufferFactory;
      13: areturn
      14: invokestatic  #15                 // Method org/apache/dubbo/remoting/buffer/HeapChannelBufferFactory.getInstance:()Lorg/apache/dubbo/remoting/buffer/ChannelBufferFactory;
      17: areturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #8                  // Field capacity:I
       4: ireturn

  public org.apache.dubbo.remoting.buffer.ChannelBuffer copy(int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #16                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       7: iload_1
       8: invokevirtual #17                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      11: iload_1
      12: iload_2
      13: iadd
      14: invokevirtual #18                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      17: checkcast     #19                 // class java/nio/ByteBuffer
      20: astore_3
      21: goto          34
      24: astore        4
      26: new           #21                 // class java/lang/IndexOutOfBoundsException
      29: dup
      30: invokespecial #22                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      33: athrow
      34: aload_0
      35: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      38: invokevirtual #13                 // Method java/nio/ByteBuffer.isDirect:()Z
      41: ifeq          51
      44: iload_2
      45: invokestatic  #23                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      48: goto          55
      51: iload_2
      52: invokestatic  #24                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      55: astore        4
      57: aload         4
      59: aload_3
      60: invokevirtual #25                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      63: pop
      64: aload         4
      66: invokevirtual #26                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      69: pop
      70: new           #27                 // class org/apache/dubbo/remoting/buffer/ByteBufferBackedChannelBuffer
      73: dup
      74: aload         4
      76: invokespecial #28                 // Method "<init>":(Ljava/nio/ByteBuffer;)V
      79: areturn
    Exception table:
       from    to  target type
           0    21    24   Class java/lang/IllegalArgumentException

  public byte getByte(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #29                 // Method java/nio/ByteBuffer.get:(I)B
       8: ireturn

  public void getBytes(int, byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #16                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       7: astore        5
       9: aload         5
      11: iload_1
      12: iload         4
      14: iadd
      15: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      18: iload_1
      19: invokevirtual #31                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      22: pop
      23: goto          36
      26: astore        6
      28: new           #21                 // class java/lang/IndexOutOfBoundsException
      31: dup
      32: invokespecial #22                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      35: athrow
      36: aload         5
      38: aload_2
      39: iload_3
      40: iload         4
      42: invokevirtual #32                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      45: pop
      46: return
    Exception table:
       from    to  target type
           9    23    26   Class java/lang/IllegalArgumentException

  public void getBytes(int, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #16                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       7: astore_3
       8: aload_0
       9: invokevirtual #33                 // Method capacity:()I
      12: iload_1
      13: isub
      14: aload_2
      15: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      18: invokestatic  #34                 // Method java/lang/Math.min:(II)I
      21: istore        4
      23: aload_3
      24: iload_1
      25: iload         4
      27: iadd
      28: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      31: iload_1
      32: invokevirtual #31                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      35: pop
      36: goto          49
      39: astore        5
      41: new           #21                 // class java/lang/IndexOutOfBoundsException
      44: dup
      45: invokespecial #22                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      48: athrow
      49: aload_2
      50: aload_3
      51: invokevirtual #25                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      54: pop
      55: return
    Exception table:
       from    to  target type
          23    36    39   Class java/lang/IllegalArgumentException

  public void getBytes(int, org.apache.dubbo.remoting.buffer.ChannelBuffer, int, int);
    Code:
       0: aload_2
       1: instanceof    #27                 // class org/apache/dubbo/remoting/buffer/ByteBufferBackedChannelBuffer
       4: ifeq          47
       7: aload_2
       8: checkcast     #27                 // class org/apache/dubbo/remoting/buffer/ByteBufferBackedChannelBuffer
      11: astore        5
      13: aload         5
      15: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      18: invokevirtual #16                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      21: astore        6
      23: aload         6
      25: iload_3
      26: iload         4
      28: iadd
      29: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      32: iload_3
      33: invokevirtual #31                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      36: pop
      37: aload_0
      38: iload_1
      39: aload         6
      41: invokevirtual #35                 // Method getBytes:(ILjava/nio/ByteBuffer;)V
      44: goto          96
      47: aload_0
      48: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      51: invokevirtual #36                 // Method java/nio/ByteBuffer.hasArray:()Z
      54: ifeq          85
      57: aload_2
      58: iload_3
      59: aload_0
      60: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      63: invokevirtual #37                 // Method java/nio/ByteBuffer.array:()[B
      66: iload_1
      67: aload_0
      68: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      71: invokevirtual #38                 // Method java/nio/ByteBuffer.arrayOffset:()I
      74: iadd
      75: iload         4
      77: invokeinterface #39,  5           // InterfaceMethod org/apache/dubbo/remoting/buffer/ChannelBuffer.setBytes:(I[BII)V
      82: goto          96
      85: aload_2
      86: iload_3
      87: aload_0
      88: iload_1
      89: iload         4
      91: invokeinterface #40,  5           // InterfaceMethod org/apache/dubbo/remoting/buffer/ChannelBuffer.setBytes:(ILorg/apache/dubbo/remoting/buffer/ChannelBuffer;II)V
      96: return

  public void getBytes(int, java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          5
       4: return
       5: aload_0
       6: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       9: invokevirtual #36                 // Method java/nio/ByteBuffer.hasArray:()Z
      12: ifeq          39
      15: aload_2
      16: aload_0
      17: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      20: invokevirtual #37                 // Method java/nio/ByteBuffer.array:()[B
      23: iload_1
      24: aload_0
      25: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      28: invokevirtual #38                 // Method java/nio/ByteBuffer.arrayOffset:()I
      31: iadd
      32: iload_3
      33: invokevirtual #41                 // Method java/io/OutputStream.write:([BII)V
      36: goto          70
      39: iload_3
      40: newarray       byte
      42: astore        4
      44: aload_0
      45: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      48: invokevirtual #16                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      51: iload_1
      52: invokevirtual #17                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      55: checkcast     #19                 // class java/nio/ByteBuffer
      58: aload         4
      60: invokevirtual #42                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      63: pop
      64: aload_2
      65: aload         4
      67: invokevirtual #43                 // Method java/io/OutputStream.write:([B)V
      70: return

  public boolean isDirect();
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #13                 // Method java/nio/ByteBuffer.isDirect:()Z
       7: ireturn

  public void setByte(int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: iload_2
       6: i2b
       7: invokevirtual #44                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      10: pop
      11: return

  public void setBytes(int, byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #16                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       7: astore        5
       9: aload         5
      11: iload_1
      12: iload         4
      14: iadd
      15: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      18: iload_1
      19: invokevirtual #31                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      22: pop
      23: aload         5
      25: aload_2
      26: iload_3
      27: iload         4
      29: invokevirtual #45                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      32: pop
      33: return

  public void setBytes(int, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #16                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       7: astore_3
       8: aload_3
       9: iload_1
      10: aload_2
      11: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      14: iadd
      15: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      18: iload_1
      19: invokevirtual #31                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      22: pop
      23: aload_3
      24: aload_2
      25: invokevirtual #25                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      28: pop
      29: return

  public void setBytes(int, org.apache.dubbo.remoting.buffer.ChannelBuffer, int, int);
    Code:
       0: aload_2
       1: instanceof    #27                 // class org/apache/dubbo/remoting/buffer/ByteBufferBackedChannelBuffer
       4: ifeq          47
       7: aload_2
       8: checkcast     #27                 // class org/apache/dubbo/remoting/buffer/ByteBufferBackedChannelBuffer
      11: astore        5
      13: aload         5
      15: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      18: invokevirtual #16                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      21: astore        6
      23: aload         6
      25: iload_3
      26: iload         4
      28: iadd
      29: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      32: iload_3
      33: invokevirtual #31                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      36: pop
      37: aload_0
      38: iload_1
      39: aload         6
      41: invokevirtual #46                 // Method setBytes:(ILjava/nio/ByteBuffer;)V
      44: goto          96
      47: aload_0
      48: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      51: invokevirtual #36                 // Method java/nio/ByteBuffer.hasArray:()Z
      54: ifeq          85
      57: aload_2
      58: iload_3
      59: aload_0
      60: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      63: invokevirtual #37                 // Method java/nio/ByteBuffer.array:()[B
      66: iload_1
      67: aload_0
      68: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      71: invokevirtual #38                 // Method java/nio/ByteBuffer.arrayOffset:()I
      74: iadd
      75: iload         4
      77: invokeinterface #47,  5           // InterfaceMethod org/apache/dubbo/remoting/buffer/ChannelBuffer.getBytes:(I[BII)V
      82: goto          96
      85: aload_2
      86: iload_3
      87: aload_0
      88: iload_1
      89: iload         4
      91: invokeinterface #48,  5           // InterfaceMethod org/apache/dubbo/remoting/buffer/ChannelBuffer.getBytes:(ILorg/apache/dubbo/remoting/buffer/ChannelBuffer;II)V
      96: return

  public java.nio.ByteBuffer toByteBuffer(int, int);
    Code:
       0: iload_1
       1: ifne          20
       4: iload_2
       5: aload_0
       6: invokevirtual #33                 // Method capacity:()I
       9: if_icmpne     20
      12: aload_0
      13: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      16: invokevirtual #16                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      19: areturn
      20: aload_0
      21: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      24: invokevirtual #16                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      27: iload_1
      28: invokevirtual #17                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      31: iload_1
      32: iload_2
      33: iadd
      34: invokevirtual #18                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      37: checkcast     #19                 // class java/nio/ByteBuffer
      40: invokevirtual #5                  // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      43: areturn

  public int setBytes(int, java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: aload_0
       4: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       7: invokevirtual #36                 // Method java/nio/ByteBuffer.hasArray:()Z
      10: ifeq          74
      13: iload_1
      14: aload_0
      15: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      18: invokevirtual #38                 // Method java/nio/ByteBuffer.arrayOffset:()I
      21: iadd
      22: istore_1
      23: aload_2
      24: aload_0
      25: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      28: invokevirtual #37                 // Method java/nio/ByteBuffer.array:()[B
      31: iload_1
      32: iload_3
      33: invokevirtual #49                 // Method java/io/InputStream.read:([BII)I
      36: istore        5
      38: iload         5
      40: ifge          50
      43: iload         4
      45: ifne          152
      48: iconst_m1
      49: ireturn
      50: iload         4
      52: iload         5
      54: iadd
      55: istore        4
      57: iload_1
      58: iload         5
      60: iadd
      61: istore_1
      62: iload_3
      63: iload         5
      65: isub
      66: istore_3
      67: iload_3
      68: ifgt          23
      71: goto          152
      74: iload_3
      75: newarray       byte
      77: astore        5
      79: iconst_0
      80: istore        6
      82: aload_2
      83: aload         5
      85: iload         6
      87: aload         5
      89: arraylength
      90: iload         6
      92: isub
      93: invokevirtual #49                 // Method java/io/InputStream.read:([BII)I
      96: istore        7
      98: iload         7
     100: ifge          110
     103: iload         4
     105: ifne          132
     108: iconst_m1
     109: ireturn
     110: iload         4
     112: iload         7
     114: iadd
     115: istore        4
     117: iload         6
     119: iload         4
     121: iadd
     122: istore        6
     124: iload         6
     126: aload         5
     128: arraylength
     129: if_icmplt     82
     132: aload_0
     133: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     136: invokevirtual #16                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     139: iload_1
     140: invokevirtual #17                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     143: checkcast     #19                 // class java/nio/ByteBuffer
     146: aload         5
     148: invokevirtual #50                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     151: pop
     152: iload         4
     154: ireturn

  public byte[] array();
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #37                 // Method java/nio/ByteBuffer.array:()[B
       7: areturn

  public boolean hasArray();
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #36                 // Method java/nio/ByteBuffer.hasArray:()Z
       7: ireturn

  public int arrayOffset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #38                 // Method java/nio/ByteBuffer.arrayOffset:()I
       7: ireturn
}
