Compiled from "AbstractZookeeperClient.java"
public abstract class org.apache.dubbo.remoting.zookeeper.AbstractZookeeperClient<TargetDataListener, TargetChildListener> implements org.apache.dubbo.remoting.zookeeper.ZookeeperClient {
  protected static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  protected int DEFAULT_CONNECTION_TIMEOUT_MS;

  protected int DEFAULT_SESSION_TIMEOUT_MS;

  private final org.apache.dubbo.common.URL url;

  private final java.util.Set<org.apache.dubbo.remoting.zookeeper.StateListener> stateListeners;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.ConcurrentMap<org.apache.dubbo.remoting.zookeeper.ChildListener, TargetChildListener>> childListeners;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.ConcurrentMap<org.apache.dubbo.remoting.zookeeper.DataListener, TargetDataListener>> listeners;

  private volatile boolean closed;

  private final java.util.Set<java.lang.String> persistentExistNodePath;

  public org.apache.dubbo.remoting.zookeeper.AbstractZookeeperClient(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        30000
       8: putfield      #3                  // Field DEFAULT_CONNECTION_TIMEOUT_MS:I
      11: aload_0
      12: ldc           #4                  // int 60000
      14: putfield      #5                  // Field DEFAULT_SESSION_TIMEOUT_MS:I
      17: aload_0
      18: new           #6                  // class java/util/concurrent/CopyOnWriteArraySet
      21: dup
      22: invokespecial #7                  // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
      25: putfield      #8                  // Field stateListeners:Ljava/util/Set;
      28: aload_0
      29: new           #9                  // class java/util/concurrent/ConcurrentHashMap
      32: dup
      33: invokespecial #10                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      36: putfield      #11                 // Field childListeners:Ljava/util/concurrent/ConcurrentMap;
      39: aload_0
      40: new           #9                  // class java/util/concurrent/ConcurrentHashMap
      43: dup
      44: invokespecial #10                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      47: putfield      #12                 // Field listeners:Ljava/util/concurrent/ConcurrentMap;
      50: aload_0
      51: iconst_0
      52: putfield      #13                 // Field closed:Z
      55: aload_0
      56: new           #14                 // class org/apache/dubbo/common/utils/ConcurrentHashSet
      59: dup
      60: invokespecial #15                 // Method org/apache/dubbo/common/utils/ConcurrentHashSet."<init>":()V
      63: putfield      #16                 // Field persistentExistNodePath:Ljava/util/Set;
      66: aload_0
      67: aload_1
      68: putfield      #17                 // Field url:Lorg/apache/dubbo/common/URL;
      71: return

  public org.apache.dubbo.common.URL getUrl();
    Code:
       0: aload_0
       1: getfield      #17                 // Field url:Lorg/apache/dubbo/common/URL;
       4: areturn

  public void delete(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field persistentExistNodePath:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: aload_1
      13: invokevirtual #19                 // Method deletePath:(Ljava/lang/String;)V
      16: return

  public void create(java.lang.String, boolean, boolean);
    Code:
       0: iload_2
       1: ifne          38
       4: aload_0
       5: getfield      #16                 // Field persistentExistNodePath:Ljava/util/Set;
       8: aload_1
       9: invokeinterface #20,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      14: ifeq          18
      17: return
      18: aload_0
      19: aload_1
      20: invokevirtual #21                 // Method checkExists:(Ljava/lang/String;)Z
      23: ifeq          38
      26: aload_0
      27: getfield      #16                 // Field persistentExistNodePath:Ljava/util/Set;
      30: aload_1
      31: invokeinterface #22,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      36: pop
      37: return
      38: aload_1
      39: bipush        47
      41: invokevirtual #23                 // Method java/lang/String.lastIndexOf:(I)I
      44: istore        4
      46: iload         4
      48: ifle          64
      51: aload_0
      52: aload_1
      53: iconst_0
      54: iload         4
      56: invokevirtual #24                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      59: iconst_0
      60: iconst_1
      61: invokevirtual #25                 // Method create:(Ljava/lang/String;ZZ)V
      64: iload_2
      65: ifeq          77
      68: aload_0
      69: aload_1
      70: iload_3
      71: invokevirtual #26                 // Method createEphemeral:(Ljava/lang/String;Z)V
      74: goto          94
      77: aload_0
      78: aload_1
      79: iload_3
      80: invokevirtual #27                 // Method createPersistent:(Ljava/lang/String;Z)V
      83: aload_0
      84: getfield      #16                 // Field persistentExistNodePath:Ljava/util/Set;
      87: aload_1
      88: invokeinterface #22,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      93: pop
      94: return

  public void addStateListener(org.apache.dubbo.remoting.zookeeper.StateListener);
    Code:
       0: aload_0
       1: getfield      #8                  // Field stateListeners:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void removeStateListener(org.apache.dubbo.remoting.zookeeper.StateListener);
    Code:
       0: aload_0
       1: getfield      #8                  // Field stateListeners:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.util.Set<org.apache.dubbo.remoting.zookeeper.StateListener> getSessionListeners();
    Code:
       0: aload_0
       1: getfield      #8                  // Field stateListeners:Ljava/util/Set;
       4: areturn

  public java.util.List<java.lang.String> addChildListener(java.lang.String, org.apache.dubbo.remoting.zookeeper.ChildListener);
    Code:
       0: aload_0
       1: getfield      #11                 // Field childListeners:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokedynamic #28,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      10: invokestatic  #29                 // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      13: checkcast     #30                 // class java/util/concurrent/ConcurrentMap
      16: astore_3
      17: aload_3
      18: aload_2
      19: aload_0
      20: aload_1
      21: invokedynamic #31,  0             // InvokeDynamic #1:apply:(Lorg/apache/dubbo/remoting/zookeeper/AbstractZookeeperClient;Ljava/lang/String;)Ljava/util/function/Function;
      26: invokestatic  #29                 // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      29: astore        4
      31: aload_0
      32: aload_1
      33: aload         4
      35: invokevirtual #32                 // Method addTargetChildListener:(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;
      38: areturn

  public void addDataListener(java.lang.String, org.apache.dubbo.remoting.zookeeper.DataListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #33                 // Method addDataListener:(Ljava/lang/String;Lorg/apache/dubbo/remoting/zookeeper/DataListener;Ljava/util/concurrent/Executor;)V
       7: return

  public void addDataListener(java.lang.String, org.apache.dubbo.remoting.zookeeper.DataListener, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: getfield      #12                 // Field listeners:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokedynamic #34,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      10: invokestatic  #29                 // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      13: checkcast     #30                 // class java/util/concurrent/ConcurrentMap
      16: astore        4
      18: aload         4
      20: aload_2
      21: aload_0
      22: aload_1
      23: invokedynamic #35,  0             // InvokeDynamic #3:apply:(Lorg/apache/dubbo/remoting/zookeeper/AbstractZookeeperClient;Ljava/lang/String;)Ljava/util/function/Function;
      28: invokestatic  #29                 // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      31: astore        5
      33: aload_0
      34: aload_1
      35: aload         5
      37: aload_3
      38: invokevirtual #36                 // Method addTargetDataListener:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/concurrent/Executor;)V
      41: return

  public void removeDataListener(java.lang.String, org.apache.dubbo.remoting.zookeeper.DataListener);
    Code:
       0: aload_0
       1: getfield      #12                 // Field listeners:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #37,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #30                 // class java/util/concurrent/ConcurrentMap
      13: astore_3
      14: aload_3
      15: ifnull        39
      18: aload_3
      19: aload_2
      20: invokeinterface #38,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      25: astore        4
      27: aload         4
      29: ifnull        39
      32: aload_0
      33: aload_1
      34: aload         4
      36: invokevirtual #39                 // Method removeTargetDataListener:(Ljava/lang/String;Ljava/lang/Object;)V
      39: return

  public void removeChildListener(java.lang.String, org.apache.dubbo.remoting.zookeeper.ChildListener);
    Code:
       0: aload_0
       1: getfield      #11                 // Field childListeners:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #37,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #30                 // class java/util/concurrent/ConcurrentMap
      13: astore_3
      14: aload_3
      15: ifnull        39
      18: aload_3
      19: aload_2
      20: invokeinterface #38,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      25: astore        4
      27: aload         4
      29: ifnull        39
      32: aload_0
      33: aload_1
      34: aload         4
      36: invokevirtual #40                 // Method removeTargetChildListener:(Ljava/lang/String;Ljava/lang/Object;)V
      39: return

  protected void stateChanged(int);
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method getSessionListeners:()Ljava/util/Set;
       4: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_2
      20: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #45                 // class org/apache/dubbo/remoting/zookeeper/StateListener
      28: astore_3
      29: aload_3
      30: iload_1
      31: invokeinterface #46,  2           // InterfaceMethod org/apache/dubbo/remoting/zookeeper/StateListener.stateChanged:(I)V
      36: goto          10
      39: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #13                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #13                 // Field closed:Z
      13: aload_0
      14: invokevirtual #47                 // Method doClose:()V
      17: goto          40
      20: astore_1
      21: getstatic     #49                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      24: ldc           #50                 // String 1-35
      26: ldc           #51                 // String
      28: ldc           #51                 // String
      30: aload_1
      31: invokevirtual #52                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      34: aload_1
      35: invokeinterface #53,  6           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.warn:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      40: return
    Exception table:
       from    to  target type
          13    17    20   Class java/lang/Exception

  public void createOrUpdate(java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_1
       1: bipush        47
       3: invokevirtual #23                 // Method java/lang/String.lastIndexOf:(I)I
       6: istore        4
       8: iload         4
      10: ifle          26
      13: aload_0
      14: aload_1
      15: iconst_0
      16: iload         4
      18: invokevirtual #24                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      21: iconst_0
      22: iconst_1
      23: invokevirtual #25                 // Method create:(Ljava/lang/String;ZZ)V
      26: iload_3
      27: ifeq          39
      30: aload_0
      31: aload_1
      32: aload_2
      33: invokevirtual #54                 // Method createOrUpdateEphemeral:(Ljava/lang/String;Ljava/lang/String;)V
      36: goto          45
      39: aload_0
      40: aload_1
      41: aload_2
      42: invokevirtual #55                 // Method createOrUpdatePersistent:(Ljava/lang/String;Ljava/lang/String;)V
      45: return

  public void createOrUpdate(java.lang.String, java.lang.String, boolean, java.lang.Integer);
    Code:
       0: aload_1
       1: bipush        47
       3: invokevirtual #23                 // Method java/lang/String.lastIndexOf:(I)I
       6: istore        5
       8: iload         5
      10: ifle          26
      13: aload_0
      14: aload_1
      15: iconst_0
      16: iload         5
      18: invokevirtual #24                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      21: iconst_0
      22: iconst_1
      23: invokevirtual #25                 // Method create:(Ljava/lang/String;ZZ)V
      26: iload_3
      27: ifeq          41
      30: aload_0
      31: aload_1
      32: aload_2
      33: aload         4
      35: invokevirtual #56                 // Method createOrUpdateEphemeral:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)V
      38: goto          49
      41: aload_0
      42: aload_1
      43: aload_2
      44: aload         4
      46: invokevirtual #57                 // Method createOrUpdatePersistent:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)V
      49: return

  public java.lang.String getContent(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method checkExists:(Ljava/lang/String;)Z
       5: ifne          10
       8: aconst_null
       9: areturn
      10: aload_0
      11: aload_1
      12: invokevirtual #58                 // Method doGetContent:(Ljava/lang/String;)Ljava/lang/String;
      15: areturn

  public org.apache.dubbo.common.config.configcenter.ConfigItem getConfigItem(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method doGetConfigItem:(Ljava/lang/String;)Lorg/apache/dubbo/common/config/configcenter/ConfigItem;
       5: areturn

  protected void doClose();
    Code:
       0: aload_0
       1: getfield      #8                  // Field stateListeners:Ljava/util/Set;
       4: invokeinterface #60,  1           // InterfaceMethod java/util/Set.clear:()V
       9: return

  protected abstract void createPersistent(java.lang.String, boolean);

  protected abstract void createEphemeral(java.lang.String, boolean);

  protected abstract void createPersistent(java.lang.String, java.lang.String, boolean);

  protected abstract void createEphemeral(java.lang.String, java.lang.String, boolean);

  protected abstract void update(java.lang.String, java.lang.String, int);

  protected abstract void update(java.lang.String, java.lang.String);

  protected abstract void createOrUpdatePersistent(java.lang.String, java.lang.String);

  protected abstract void createOrUpdateEphemeral(java.lang.String, java.lang.String);

  protected abstract void createOrUpdatePersistent(java.lang.String, java.lang.String, java.lang.Integer);

  protected abstract void createOrUpdateEphemeral(java.lang.String, java.lang.String, java.lang.Integer);

  public abstract boolean checkExists(java.lang.String);

  protected abstract TargetChildListener createTargetChildListener(java.lang.String, org.apache.dubbo.remoting.zookeeper.ChildListener);

  protected abstract java.util.List<java.lang.String> addTargetChildListener(java.lang.String, TargetChildListener);

  protected abstract TargetDataListener createTargetDataListener(java.lang.String, org.apache.dubbo.remoting.zookeeper.DataListener);

  protected abstract void addTargetDataListener(java.lang.String, TargetDataListener);

  protected abstract void addTargetDataListener(java.lang.String, TargetDataListener, java.util.concurrent.Executor);

  protected abstract void removeTargetDataListener(java.lang.String, TargetDataListener);

  protected abstract void removeTargetChildListener(java.lang.String, TargetChildListener);

  protected abstract java.lang.String doGetContent(java.lang.String);

  protected abstract org.apache.dubbo.common.config.configcenter.ConfigItem doGetConfigItem(java.lang.String);

  protected abstract void deletePath(java.lang.String);

  private java.lang.Object lambda$addDataListener$3(java.lang.String, org.apache.dubbo.remoting.zookeeper.DataListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #61                 // Method createTargetDataListener:(Ljava/lang/String;Lorg/apache/dubbo/remoting/zookeeper/DataListener;)Ljava/lang/Object;
       6: areturn

  private static java.util.concurrent.ConcurrentMap lambda$addDataListener$2(java.lang.String);
    Code:
       0: new           #9                  // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #10                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: areturn

  private java.lang.Object lambda$addChildListener$1(java.lang.String, org.apache.dubbo.remoting.zookeeper.ChildListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #62                 // Method createTargetChildListener:(Ljava/lang/String;Lorg/apache/dubbo/remoting/zookeeper/ChildListener;)Ljava/lang/Object;
       6: areturn

  private static java.util.concurrent.ConcurrentMap lambda$addChildListener$0(java.lang.String);
    Code:
       0: new           #9                  // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #10                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: areturn

  static {};
    Code:
       0: ldc           #63                 // class org/apache/dubbo/remoting/zookeeper/AbstractZookeeperClient
       2: invokestatic  #64                 // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #49                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: return
}
