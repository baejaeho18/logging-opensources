Compiled from "RequestTemplate.java"
public class org.apache.dubbo.remoting.http.RequestTemplate implements java.io.Serializable {
  private static final long serialVersionUID;

  public static final java.lang.String CONTENT_ENCODING;

  private static final java.lang.String CONTENT_LENGTH;

  public static final java.lang.String ENCODING_GZIP;

  public static final java.lang.String ENCODING_DEFLATE;

  private static final java.util.List<java.lang.String> EMPTY_ARRAYLIST;

  private final java.util.Map<java.lang.String, java.util.Collection<java.lang.String>> queries;

  private final java.util.Map<java.lang.String, java.util.Collection<java.lang.String>> headers;

  private java.lang.String httpMethod;

  private java.lang.String path;

  private java.lang.String address;

  private java.lang.Object body;

  private byte[] byteBody;

  private java.lang.String protocol;

  private final org.apache.dubbo.rpc.Invocation invocation;

  private java.lang.String contextPath;

  private java.lang.Class<?> bodyType;

  public org.apache.dubbo.remoting.http.RequestTemplate(org.apache.dubbo.rpc.Invocation, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: ldc           #1                  // String
       6: invokespecial #2                  // Method "<init>":(Lorg/apache/dubbo/rpc/Invocation;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       9: return

  public org.apache.dubbo.remoting.http.RequestTemplate(org.apache.dubbo.rpc.Invocation, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #5                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #6                  // Field queries:Ljava/util/Map;
      15: aload_0
      16: new           #4                  // class java/util/LinkedHashMap
      19: dup
      20: invokespecial #5                  // Method java/util/LinkedHashMap."<init>":()V
      23: putfield      #7                  // Field headers:Ljava/util/Map;
      26: aload_0
      27: iconst_0
      28: newarray       byte
      30: putfield      #8                  // Field byteBody:[B
      33: aload_0
      34: ldc           #9                  // String http://
      36: putfield      #10                 // Field protocol:Ljava/lang/String;
      39: aload_0
      40: ldc           #1                  // String
      42: putfield      #11                 // Field contextPath:Ljava/lang/String;
      45: aload_0
      46: aload_2
      47: putfield      #12                 // Field httpMethod:Ljava/lang/String;
      50: aload_0
      51: aload_3
      52: putfield      #13                 // Field address:Ljava/lang/String;
      55: aload_0
      56: aload_1
      57: putfield      #14                 // Field invocation:Lorg/apache/dubbo/rpc/Invocation;
      60: aload_0
      61: aload         4
      63: putfield      #11                 // Field contextPath:Ljava/lang/String;
      66: return

  public java.lang.String getURL();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: new           #15                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #17                 // Method getProtocol:()Ljava/lang/String;
      15: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_0
      19: getfield      #13                 // Field address:Ljava/lang/String;
      22: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #20                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      31: astore_1
      32: aload_1
      33: aload_0
      34: invokevirtual #21                 // Method getUri:()Ljava/lang/String;
      37: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: pop
      41: aload_1
      42: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: areturn

  public java.lang.String getUri();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: new           #15                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #22                 // Method getContextPath:()Ljava/lang/String;
      15: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_0
      19: getfield      #23                 // Field path:Ljava/lang/String;
      22: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #20                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      31: astore_1
      32: aload_1
      33: aload_0
      34: invokevirtual #24                 // Method getQueryString:()Ljava/lang/String;
      37: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: areturn

  public java.lang.String getQueryString();
    Code:
       0: aload_0
       1: getfield      #6                  // Field queries:Ljava/util/Map;
       4: invokeinterface #25,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifeq          15
      12: ldc           #1                  // String
      14: areturn
      15: new           #15                 // class java/lang/StringBuilder
      18: dup
      19: ldc           #26                 // String ?
      21: invokespecial #20                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      24: astore_1
      25: aload_0
      26: getfield      #6                  // Field queries:Ljava/util/Map;
      29: invokeinterface #27,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      34: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      39: astore_2
      40: aload_2
      41: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          164
      49: aload_2
      50: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #31                 // class java/lang/String
      58: astore_3
      59: aload_0
      60: getfield      #6                  // Field queries:Ljava/util/Map;
      63: aload_3
      64: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #33                 // class java/util/Collection
      72: astore        4
      74: aload         4
      76: ifnull        40
      79: aload         4
      81: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      86: ifeq          92
      89: goto          40
      92: aload         4
      94: invokeinterface #35,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      99: astore        5
     101: aload         5
     103: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     108: ifeq          161
     111: aload         5
     113: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     118: checkcast     #31                 // class java/lang/String
     121: astore        6
     123: aload_1
     124: bipush        38
     126: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     129: pop
     130: aload_1
     131: aload_3
     132: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: pop
     136: aload         6
     138: ifnonnull     144
     141: goto          101
     144: aload_1
     145: bipush        61
     147: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     150: pop
     151: aload_1
     152: aload         6
     154: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: pop
     158: goto          101
     161: goto          40
     164: aload_1
     165: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     168: ldc           #37                 // String ?&
     170: ldc           #26                 // String ?
     172: invokevirtual #38                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
     175: areturn

  public org.apache.dubbo.remoting.http.RequestTemplate path(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field path:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getHttpMethod();
    Code:
       0: aload_0
       1: getfield      #12                 // Field httpMethod:Ljava/lang/String;
       4: areturn

  public org.apache.dubbo.remoting.http.RequestTemplate httpMethod(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field httpMethod:Ljava/lang/String;
       5: aload_0
       6: areturn

  public byte[] getSerializedBody();
    Code:
       0: aload_0
       1: getfield      #8                  // Field byteBody:[B
       4: areturn

  public void serializeBody(byte[]);
    Code:
       0: aload_0
       1: ldc           #40                 // String Content-Length
       3: aload_1
       4: arraylength
       5: invokestatic  #41                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #42                 // Method addHeader:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: aload_1
      13: putfield      #8                  // Field byteBody:[B
      16: return

  public boolean isBodyEmpty();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method getUnSerializedBody:()Ljava/lang/Object;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.apache.dubbo.remoting.http.RequestTemplate body(java.lang.Object, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field body:Ljava/lang/Object;
       5: aload_0
       6: aload_2
       7: invokevirtual #45                 // Method setBodyType:(Ljava/lang/Class;)V
      10: aload_0
      11: areturn

  public java.lang.Object getUnSerializedBody();
    Code:
       0: aload_0
       1: getfield      #44                 // Field body:Ljava/lang/Object;
       4: areturn

  public java.util.Map<java.lang.String, java.util.Collection<java.lang.String>> getAllHeaders();
    Code:
       0: aload_0
       1: getfield      #7                  // Field headers:Ljava/util/Map;
       4: areturn

  public java.util.Collection<java.lang.String> getHeaders(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #33                 // class java/util/Collection
      13: areturn

  public java.lang.String getHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          48
      13: aload_0
      14: aload_1
      15: invokevirtual #47                 // Method getHeaders:(Ljava/lang/String;)Ljava/util/Collection;
      18: astore_2
      19: aload_2
      20: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      25: ifeq          30
      28: aconst_null
      29: areturn
      30: aload_2
      31: iconst_0
      32: anewarray     #31                 // class java/lang/String
      35: invokeinterface #48,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      40: checkcast     #49                 // class "[Ljava/lang/String;"
      43: astore_3
      44: aload_3
      45: iconst_0
      46: aaload
      47: areturn
      48: aconst_null
      49: areturn

  public java.util.Collection<java.lang.String> getEncodingValues();
    Code:
       0: aload_0
       1: getfield      #7                  // Field headers:Ljava/util/Map;
       4: ldc           #50                 // String Content-Encoding
       6: invokeinterface #46,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      11: ifeq          29
      14: aload_0
      15: getfield      #7                  // Field headers:Ljava/util/Map;
      18: ldc           #50                 // String Content-Encoding
      20: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #33                 // class java/util/Collection
      28: areturn
      29: getstatic     #51                 // Field EMPTY_ARRAYLIST:Ljava/util/List;
      32: areturn

  public boolean isGzipEncodedRequest();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getEncodingValues:()Ljava/util/Collection;
       4: ldc           #53                 // String gzip
       6: invokeinterface #54,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      11: ireturn

  public boolean isDeflateEncodedRequest();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getEncodingValues:()Ljava/util/Collection;
       4: ldc           #55                 // String deflate
       6: invokeinterface #54,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      11: ireturn

  public void addHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #7                  // Field headers:Ljava/util/Map;
       7: invokevirtual #56                 // Method addValueByKey:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
      10: return

  public void addHeader(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #57                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       6: aload_0
       7: getfield      #7                  // Field headers:Ljava/util/Map;
      10: invokevirtual #56                 // Method addValueByKey:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
      13: return

  public void addKeepAliveHeader(int);
    Code:
       0: aload_0
       1: ldc           #59                 // String Keep-Alive
       3: iload_1
       4: invokestatic  #41                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #42                 // Method addHeader:(Ljava/lang/String;Ljava/lang/Object;)V
      10: aload_0
      11: ldc           #60                 // String Connection
      13: ldc           #61                 // String keep-alive
      15: invokevirtual #62                 // Method addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      18: return

  public void addHeaders(java.lang.String, java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method getHeaders:(Ljava/lang/String;)Ljava/util/Collection;
       5: astore_3
       6: aload_3
       7: ifnonnull     30
      10: new           #63                 // class java/util/HashSet
      13: dup
      14: invokespecial #64                 // Method java/util/HashSet."<init>":()V
      17: astore_3
      18: aload_0
      19: getfield      #7                  // Field headers:Ljava/util/Map;
      22: aload_1
      23: aload_3
      24: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_3
      31: aload_2
      32: invokeinterface #66,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      37: pop
      38: return

  public void addParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #6                  // Field queries:Ljava/util/Map;
       7: invokevirtual #56                 // Method addValueByKey:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
      10: return

  public void addParam(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #57                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       6: invokevirtual #67                 // Method addParam:(Ljava/lang/String;Ljava/lang/String;)V
       9: return

  public java.util.Map<java.lang.String, java.util.Collection<java.lang.String>> getQueries();
    Code:
       0: aload_0
       1: getfield      #6                  // Field queries:Ljava/util/Map;
       4: areturn

  public java.util.Collection<java.lang.String> getParam(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method getQueries:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #33                 // class java/util/Collection
      13: areturn

  public void addParams(java.lang.String, java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method getParam:(Ljava/lang/String;)Ljava/util/Collection;
       5: astore_3
       6: aload_3
       7: ifnonnull     30
      10: new           #63                 // class java/util/HashSet
      13: dup
      14: invokespecial #64                 // Method java/util/HashSet."<init>":()V
      17: astore_3
      18: aload_0
      19: getfield      #6                  // Field queries:Ljava/util/Map;
      22: aload_1
      23: aload_3
      24: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_3
      31: aload_2
      32: invokeinterface #66,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      37: pop
      38: return

  public void addValueByKey(java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.util.Collection<java.lang.String>>);
    Code:
       0: aload_2
       1: ifnonnull     5
       4: return
       5: aconst_null
       6: astore        4
       8: aload_3
       9: aload_1
      10: invokeinterface #46,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ifne          37
      18: new           #63                 // class java/util/HashSet
      21: dup
      22: invokespecial #64                 // Method java/util/HashSet."<init>":()V
      25: astore        4
      27: aload_3
      28: aload_1
      29: aload         4
      31: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: aload_3
      38: aload_1
      39: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #33                 // class java/util/Collection
      47: astore        4
      49: aload         4
      51: aload_2
      52: invokeinterface #70,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      57: pop
      58: return

  public java.lang.Integer getContentLength();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method getAllHeaders:()Ljava/util/Map;
       4: ldc           #40                 // String Content-Length
       6: invokeinterface #46,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      11: ifne          16
      14: aconst_null
      15: areturn
      16: aload_0
      17: invokevirtual #71                 // Method getAllHeaders:()Ljava/util/Map;
      20: ldc           #40                 // String Content-Length
      22: invokeinterface #32,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #63                 // class java/util/HashSet
      30: astore_1
      31: new           #72                 // class java/util/ArrayList
      34: dup
      35: aload_1
      36: invokespecial #73                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      39: iconst_0
      40: invokevirtual #74                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      43: checkcast     #31                 // class java/lang/String
      46: invokestatic  #75                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      49: invokestatic  #41                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: areturn

  public java.lang.String getAddress();
    Code:
       0: aload_0
       1: getfield      #13                 // Field address:Ljava/lang/String;
       4: areturn

  public void setAddress(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #76                 // String Host
       3: aload_1
       4: invokevirtual #62                 // Method addHeader:(Ljava/lang/String;Ljava/lang/String;)V
       7: aload_0
       8: aload_1
       9: putfield      #13                 // Field address:Ljava/lang/String;
      12: return

  public java.lang.String getProtocol();
    Code:
       0: aload_0
       1: getfield      #10                 // Field protocol:Ljava/lang/String;
       4: areturn

  public void setProtocol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field protocol:Ljava/lang/String;
       5: return

  public org.apache.dubbo.rpc.Invocation getInvocation();
    Code:
       0: aload_0
       1: getfield      #14                 // Field invocation:Lorg/apache/dubbo/rpc/Invocation;
       4: areturn

  public java.lang.String getContextPath();
    Code:
       0: aload_0
       1: getfield      #11                 // Field contextPath:Ljava/lang/String;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field contextPath:Ljava/lang/String;
      11: invokevirtual #77                 // Method java/lang/String.length:()I
      14: ifne          20
      17: ldc           #1                  // String
      19: areturn
      20: aload_0
      21: getfield      #11                 // Field contextPath:Ljava/lang/String;
      24: ldc           #78                 // String /
      26: invokevirtual #79                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      29: ifeq          37
      32: aload_0
      33: getfield      #11                 // Field contextPath:Ljava/lang/String;
      36: areturn
      37: new           #15                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #78                 // String /
      46: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_0
      50: getfield      #11                 // Field contextPath:Ljava/lang/String;
      53: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: areturn

  public void setContextPath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field contextPath:Ljava/lang/String;
       5: return

  public java.lang.Class<?> getBodyType();
    Code:
       0: aload_0
       1: getfield      #80                 // Field bodyType:Ljava/lang/Class;
       4: areturn

  public void setBodyType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #80                 // Field bodyType:Ljava/lang/Class;
       5: return

  static {};
    Code:
       0: new           #72                 // class java/util/ArrayList
       3: dup
       4: invokespecial #81                 // Method java/util/ArrayList."<init>":()V
       7: putstatic     #51                 // Field EMPTY_ARRAYLIST:Ljava/util/List;
      10: return
}
