Compiled from "AbstractHttpServer.java"
public abstract class org.apache.dubbo.remoting.http.support.AbstractHttpServer implements org.apache.dubbo.remoting.http.HttpServer {
  private final org.apache.dubbo.common.URL url;

  private final org.apache.dubbo.remoting.http.HttpHandler handler;

  private volatile boolean closed;

  public org.apache.dubbo.remoting.http.support.AbstractHttpServer(org.apache.dubbo.common.URL, org.apache.dubbo.remoting.http.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String url == null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: ifnonnull     32
      22: new           #2                  // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #5                  // String handler == null
      28: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: aload_1
      34: putfield      #6                  // Field url:Lorg/apache/dubbo/common/URL;
      37: aload_0
      38: aload_2
      39: putfield      #7                  // Field handler:Lorg/apache/dubbo/remoting/http/HttpHandler;
      42: return

  public org.apache.dubbo.remoting.http.HttpHandler getHttpHandler();
    Code:
       0: aload_0
       1: getfield      #7                  // Field handler:Lorg/apache/dubbo/remoting/http/HttpHandler;
       4: areturn

  public org.apache.dubbo.common.URL getUrl();
    Code:
       0: aload_0
       1: getfield      #6                  // Field url:Lorg/apache/dubbo/common/URL;
       4: areturn

  public void reset(org.apache.dubbo.common.URL);
    Code:
       0: return

  public boolean isBound();
    Code:
       0: iconst_1
       1: ireturn

  public java.net.InetSocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #6                  // Field url:Lorg/apache/dubbo/common/URL;
       4: invokevirtual #8                  // Method org/apache/dubbo/common/URL.toInetSocketAddress:()Ljava/net/InetSocketAddress;
       7: areturn

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #9                  // Field closed:Z
       5: return

  public void close(int);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method close:()V
       4: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #9                  // Field closed:Z
       4: ireturn

  public boolean canHandleIdle();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.Collection<org.apache.dubbo.remoting.Channel> getChannels();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.dubbo.remoting.Channel getChannel(java.net.InetSocketAddress);
    Code:
       0: aconst_null
       1: areturn

  public void reset(org.apache.dubbo.common.Parameters);
    Code:
       0: return

  public org.apache.dubbo.remoting.ChannelHandler getChannelHandler();
    Code:
       0: aconst_null
       1: areturn

  public void send(java.lang.Object) throws org.apache.dubbo.remoting.RemotingException;
    Code:
       0: return

  public void send(java.lang.Object, boolean) throws org.apache.dubbo.remoting.RemotingException;
    Code:
       0: return

  public void startClose();
    Code:
       0: return
}
