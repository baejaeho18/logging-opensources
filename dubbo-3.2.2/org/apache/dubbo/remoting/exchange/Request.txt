Compiled from "Request.java"
public class org.apache.dubbo.remoting.exchange.Request {
  private static final java.util.concurrent.atomic.AtomicLong INVOKE_ID;

  private final long mId;

  private java.lang.String mVersion;

  private boolean mTwoWay;

  private boolean mEvent;

  private boolean mBroken;

  private int mPayload;

  private java.lang.Object mData;

  public org.apache.dubbo.remoting.exchange.Request();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field mTwoWay:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field mEvent:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field mBroken:Z
      19: aload_0
      20: invokestatic  #5                  // Method newId:()J
      23: putfield      #6                  // Field mId:J
      26: return

  public org.apache.dubbo.remoting.exchange.Request(long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field mTwoWay:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field mEvent:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field mBroken:Z
      19: aload_0
      20: lload_1
      21: putfield      #6                  // Field mId:J
      24: return

  private static long newId();
    Code:
       0: getstatic     #7                  // Field INVOKE_ID:Ljava/util/concurrent/atomic/AtomicLong;
       3: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
       6: lreturn

  private static java.lang.String safeToString(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokevirtual #9                  // Method java/lang/Object.toString:()Ljava/lang/String;
      10: areturn
      11: astore_1
      12: new           #11                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #13                 // String <Fail toString of
      21: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #17                 // String , cause:
      33: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokestatic  #18                 // Method org/apache/dubbo/common/utils/StringUtils.toString:(Ljava/lang/Throwable;)Ljava/lang/String;
      40: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #19                 // String >
      45: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn
    Exception table:
       from    to  target type
           6    10    11   Class java/lang/Exception

  public long getId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field mId:J
       4: lreturn

  public java.lang.String getVersion();
    Code:
       0: aload_0
       1: getfield      #21                 // Field mVersion:Ljava/lang/String;
       4: areturn

  public void setVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field mVersion:Ljava/lang/String;
       5: return

  public boolean isTwoWay();
    Code:
       0: aload_0
       1: getfield      #2                  // Field mTwoWay:Z
       4: ireturn

  public void setTwoWay(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field mTwoWay:Z
       5: return

  public boolean isEvent();
    Code:
       0: aload_0
       1: getfield      #3                  // Field mEvent:Z
       4: ireturn

  public void setEvent(java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field mEvent:Z
       5: aload_0
       6: aload_1
       7: putfield      #22                 // Field mData:Ljava/lang/Object;
      10: return

  public void setEvent(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field mEvent:Z
       5: return

  public boolean isBroken();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBroken:Z
       4: ireturn

  public void setBroken(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field mBroken:Z
       5: return

  public int getPayload();
    Code:
       0: aload_0
       1: getfield      #23                 // Field mPayload:I
       4: ireturn

  public void setPayload(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field mPayload:I
       5: return

  public java.lang.Object getData();
    Code:
       0: aload_0
       1: getfield      #22                 // Field mData:Ljava/lang/Object;
       4: areturn

  public void setData(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field mData:Ljava/lang/Object;
       5: return

  public boolean isHeartbeat();
    Code:
       0: aload_0
       1: getfield      #3                  // Field mEvent:Z
       4: ifeq          21
       7: getstatic     #24                 // Field org/apache/dubbo/common/constants/CommonConstants.HEARTBEAT_EVENT:Ljava/lang/String;
      10: aload_0
      11: getfield      #22                 // Field mData:Ljava/lang/Object;
      14: if_acmpne     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public void setHeartbeat(boolean);
    Code:
       0: iload_1
       1: ifeq          11
       4: aload_0
       5: getstatic     #24                 // Field org/apache/dubbo/common/constants/CommonConstants.HEARTBEAT_EVENT:Ljava/lang/String;
       8: invokevirtual #25                 // Method setEvent:(Ljava/lang/String;)V
      11: return

  public org.apache.dubbo.remoting.exchange.Request copy();
    Code:
       0: new           #26                 // class org/apache/dubbo/remoting/exchange/Request
       3: dup
       4: aload_0
       5: getfield      #6                  // Field mId:J
       8: invokespecial #27                 // Method "<init>":(J)V
      11: astore_1
      12: aload_1
      13: aload_0
      14: getfield      #21                 // Field mVersion:Ljava/lang/String;
      17: putfield      #21                 // Field mVersion:Ljava/lang/String;
      20: aload_1
      21: aload_0
      22: getfield      #2                  // Field mTwoWay:Z
      25: putfield      #2                  // Field mTwoWay:Z
      28: aload_1
      29: aload_0
      30: getfield      #3                  // Field mEvent:Z
      33: putfield      #3                  // Field mEvent:Z
      36: aload_1
      37: aload_0
      38: getfield      #4                  // Field mBroken:Z
      41: putfield      #4                  // Field mBroken:Z
      44: aload_1
      45: aload_0
      46: getfield      #23                 // Field mPayload:I
      49: putfield      #23                 // Field mPayload:I
      52: aload_1
      53: aload_0
      54: getfield      #22                 // Field mData:Ljava/lang/Object;
      57: putfield      #22                 // Field mData:Ljava/lang/Object;
      60: aload_1
      61: areturn

  public org.apache.dubbo.remoting.exchange.Request copyWithoutData();
    Code:
       0: new           #26                 // class org/apache/dubbo/remoting/exchange/Request
       3: dup
       4: aload_0
       5: getfield      #6                  // Field mId:J
       8: invokespecial #27                 // Method "<init>":(J)V
      11: astore_1
      12: aload_1
      13: aload_0
      14: getfield      #21                 // Field mVersion:Ljava/lang/String;
      17: putfield      #21                 // Field mVersion:Ljava/lang/String;
      20: aload_1
      21: aload_0
      22: getfield      #2                  // Field mTwoWay:Z
      25: putfield      #2                  // Field mTwoWay:Z
      28: aload_1
      29: aload_0
      30: getfield      #3                  // Field mEvent:Z
      33: putfield      #3                  // Field mEvent:Z
      36: aload_1
      37: aload_0
      38: getfield      #4                  // Field mBroken:Z
      41: putfield      #4                  // Field mBroken:Z
      44: aload_1
      45: aload_0
      46: getfield      #23                 // Field mPayload:I
      49: putfield      #23                 // Field mPayload:I
      52: aload_1
      53: areturn

  public java.lang.String toString();
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #28                 // String Request [id=
       9: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field mId:J
      16: invokevirtual #29                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #30                 // String , version=
      21: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #21                 // Field mVersion:Ljava/lang/String;
      28: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #31                 // String , twoWay=
      33: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #2                  // Field mTwoWay:Z
      40: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      43: ldc           #33                 // String , event=
      45: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #3                  // Field mEvent:Z
      52: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      55: ldc           #34                 // String , broken=
      57: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #4                  // Field mBroken:Z
      64: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      67: ldc           #35                 // String , mPayload=
      69: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #23                 // Field mPayload:I
      76: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: ldc           #37                 // String , data=
      81: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: getfield      #22                 // Field mData:Ljava/lang/Object;
      88: aload_0
      89: if_acmpne     97
      92: ldc           #38                 // String this
      94: goto          104
      97: aload_0
      98: getfield      #22                 // Field mData:Ljava/lang/Object;
     101: invokestatic  #39                 // Method safeToString:(Ljava/lang/Object;)Ljava/lang/String;
     104: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: ldc           #40                 // String ]
     109: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: areturn

  static {};
    Code:
       0: new           #41                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_0
       5: invokespecial #42                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: putstatic     #7                  // Field INVOKE_ID:Ljava/util/concurrent/atomic/AtomicLong;
      11: return
}
