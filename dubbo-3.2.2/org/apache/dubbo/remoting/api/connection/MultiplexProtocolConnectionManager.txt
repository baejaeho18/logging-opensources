Compiled from "MultiplexProtocolConnectionManager.java"
public class org.apache.dubbo.remoting.api.connection.MultiplexProtocolConnectionManager implements org.apache.dubbo.remoting.api.connection.ConnectionManager {
  public static final java.lang.String NAME;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.dubbo.remoting.api.connection.ConnectionManager> protocols;

  private org.apache.dubbo.rpc.model.FrameworkModel frameworkModel;

  public org.apache.dubbo.remoting.api.connection.MultiplexProtocolConnectionManager(org.apache.dubbo.rpc.model.FrameworkModel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: iconst_1
      10: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      13: putfield      #4                  // Field protocols:Ljava/util/concurrent/ConcurrentMap;
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field frameworkModel:Lorg/apache/dubbo/rpc/model/FrameworkModel;
      21: return

  public org.apache.dubbo.remoting.api.connection.AbstractConnectionClient connect(org.apache.dubbo.common.URL, org.apache.dubbo.remoting.ChannelHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field protocols:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokevirtual #6                  // Method org/apache/dubbo/common/URL.getProtocol:()Ljava/lang/String;
       8: aload_0
       9: invokedynamic #7,  0              // InvokeDynamic #0:apply:(Lorg/apache/dubbo/remoting/api/connection/MultiplexProtocolConnectionManager;)Ljava/util/function/Function;
      14: invokestatic  #8                  // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      17: checkcast     #9                  // class org/apache/dubbo/remoting/api/connection/ConnectionManager
      20: astore_3
      21: aload_3
      22: aload_1
      23: aload_2
      24: invokeinterface #10,  3           // InterfaceMethod org/apache/dubbo/remoting/api/connection/ConnectionManager.connect:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/remoting/ChannelHandler;)Lorg/apache/dubbo/remoting/api/connection/AbstractConnectionClient;
      29: areturn

  public void forEachConnection(java.util.function.Consumer<org.apache.dubbo.remoting.api.connection.AbstractConnectionClient>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field protocols:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: aload_1
      10: invokedynamic #12,  0             // InvokeDynamic #1:accept:(Ljava/util/function/Consumer;)Ljava/util/function/Consumer;
      15: invokeinterface #13,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      20: return

  private org.apache.dubbo.remoting.api.connection.ConnectionManager createSingleProtocolConnectionManager(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field frameworkModel:Lorg/apache/dubbo/rpc/model/FrameworkModel;
       4: ldc           #9                  // class org/apache/dubbo/remoting/api/connection/ConnectionManager
       6: invokevirtual #14                 // Method org/apache/dubbo/rpc/model/FrameworkModel.getExtensionLoader:(Ljava/lang/Class;)Lorg/apache/dubbo/common/extension/ExtensionLoader;
       9: ldc           #16                 // String single
      11: invokevirtual #17                 // Method org/apache/dubbo/common/extension/ExtensionLoader.getExtension:(Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #9                  // class org/apache/dubbo/remoting/api/connection/ConnectionManager
      17: areturn

  private static void lambda$forEachConnection$0(java.util.function.Consumer, org.apache.dubbo.remoting.api.connection.ConnectionManager);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #18,  2           // InterfaceMethod org/apache/dubbo/remoting/api/connection/ConnectionManager.forEachConnection:(Ljava/util/function/Consumer;)V
       7: return
}
