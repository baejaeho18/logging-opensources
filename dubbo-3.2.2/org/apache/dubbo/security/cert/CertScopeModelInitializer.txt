Compiled from "CertScopeModelInitializer.java"
public class org.apache.dubbo.security.cert.CertScopeModelInitializer implements org.apache.dubbo.rpc.model.ScopeModelInitializer {
  public org.apache.dubbo.security.cert.CertScopeModelInitializer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isSupported();
    Code:
       0: ldc           #2                  // String io.grpc.Channel
       2: invokestatic  #3                  // Method org/apache/dubbo/common/utils/ClassUtils.forName:(Ljava/lang/String;)Ljava/lang/Class;
       5: pop
       6: ldc           #4                  // String org.bouncycastle.pkcs.jcajce.JcaPKCS10CertificationRequestBuilder
       8: invokestatic  #3                  // Method org/apache/dubbo/common/utils/ClassUtils.forName:(Ljava/lang/String;)Ljava/lang/Class;
      11: pop
      12: iconst_1
      13: ireturn
      14: astore_0
      15: iconst_0
      16: ireturn
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/Throwable

  public void initializeFrameworkModel(org.apache.dubbo.rpc.model.FrameworkModel);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method org/apache/dubbo/rpc/model/FrameworkModel.getBeanFactory:()Lorg/apache/dubbo/common/beans/factory/ScopeBeanFactory;
       4: astore_2
       5: invokestatic  #7                  // Method isSupported:()Z
       8: ifeq          18
      11: aload_2
      12: ldc           #8                  // class org/apache/dubbo/security/cert/DubboCertManager
      14: invokevirtual #9                  // Method org/apache/dubbo/common/beans/factory/ScopeBeanFactory.registerBean:(Ljava/lang/Class;)Ljava/lang/Object;
      17: pop
      18: return

  public void initializeApplicationModel(org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: return

  public void initializeModuleModel(org.apache.dubbo.rpc.model.ModuleModel);
    Code:
       0: return
}
