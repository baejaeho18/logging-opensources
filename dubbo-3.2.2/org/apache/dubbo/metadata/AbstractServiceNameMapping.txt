Compiled from "AbstractServiceNameMapping.java"
public abstract class org.apache.dubbo.metadata.AbstractServiceNameMapping implements org.apache.dubbo.metadata.ServiceNameMapping {
  protected final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  protected org.apache.dubbo.rpc.model.ApplicationModel applicationModel;

  private final org.apache.dubbo.metadata.MappingCacheManager mappingCacheManager;

  private final java.util.Map<java.lang.String, java.util.Set<org.apache.dubbo.metadata.MappingListener>> mappingListeners;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.locks.ReentrantLock> mappingLocks;

  public org.apache.dubbo.metadata.AbstractServiceNameMapping(org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #5                  // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      12: putfield      #6                  // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      15: aload_0
      16: new           #7                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #2                  // Field mappingListeners:Ljava/util/Map;
      26: aload_0
      27: new           #7                  // class java/util/concurrent/ConcurrentHashMap
      30: dup
      31: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      34: putfield      #9                  // Field mappingLocks:Ljava/util/concurrent/ConcurrentMap;
      37: aload_0
      38: aload_1
      39: putfield      #10                 // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
      42: iconst_1
      43: istore_2
      44: aload_1
      45: invokevirtual #11                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getApplicationConfigManager:()Lorg/apache/dubbo/config/context/ConfigManager;
      48: invokevirtual #12                 // Method org/apache/dubbo/config/context/ConfigManager.getApplication:()Ljava/util/Optional;
      51: astore_3
      52: aload_3
      53: invokevirtual #13                 // Method java/util/Optional.isPresent:()Z
      56: ifeq          84
      59: getstatic     #14                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      62: aload_3
      63: invokevirtual #15                 // Method java/util/Optional.get:()Ljava/lang/Object;
      66: checkcast     #16                 // class org/apache/dubbo/config/ApplicationConfig
      69: invokevirtual #17                 // Method org/apache/dubbo/config/ApplicationConfig.getEnableFileCache:()Ljava/lang/Boolean;
      72: invokevirtual #18                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      75: ifeq          82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: istore_2
      84: aload_0
      85: new           #19                 // class org/apache/dubbo/metadata/MappingCacheManager
      88: dup
      89: iload_2
      90: aload_1
      91: invokevirtual #20                 // Method org/apache/dubbo/rpc/model/ApplicationModel.tryGetApplicationName:()Ljava/lang/String;
      94: aload_1
      95: invokevirtual #21                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getFrameworkModel:()Lorg/apache/dubbo/rpc/model/FrameworkModel;
      98: invokevirtual #22                 // Method org/apache/dubbo/rpc/model/FrameworkModel.getBeanFactory:()Lorg/apache/dubbo/common/beans/factory/ScopeBeanFactory;
     101: ldc           #23                 // class org/apache/dubbo/common/threadpool/manager/FrameworkExecutorRepository
     103: invokevirtual #24                 // Method org/apache/dubbo/common/beans/factory/ScopeBeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
     106: checkcast     #23                 // class org/apache/dubbo/common/threadpool/manager/FrameworkExecutorRepository
     109: invokevirtual #25                 // Method org/apache/dubbo/common/threadpool/manager/FrameworkExecutorRepository.getCacheRefreshingScheduledExecutor:()Ljava/util/concurrent/ScheduledExecutorService;
     112: invokespecial #26                 // Method org/apache/dubbo/metadata/MappingCacheManager."<init>":(ZLjava/lang/String;Ljava/util/concurrent/ScheduledExecutorService;)V
     115: putfield      #27                 // Field mappingCacheManager:Lorg/apache/dubbo/metadata/MappingCacheManager;
     118: return

  public void setApplicationModel(org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
       5: return

  public abstract java.util.Set<java.lang.String> get(org.apache.dubbo.common.URL);

  public abstract java.util.Set<java.lang.String> getAndListen(org.apache.dubbo.common.URL, org.apache.dubbo.metadata.MappingListener);

  protected abstract void removeListener(org.apache.dubbo.common.URL, org.apache.dubbo.metadata.MappingListener);

  public java.util.Set<java.lang.String> getAndListen(org.apache.dubbo.common.URL, org.apache.dubbo.common.URL, org.apache.dubbo.metadata.MappingListener);
    Code:
       0: aload_2
       1: invokestatic  #28                 // InterfaceMethod org/apache/dubbo/metadata/ServiceNameMapping.buildMappingKey:(Lorg/apache/dubbo/common/URL;)Ljava/lang/String;
       4: astore        4
       6: aload_0
       7: getfield      #27                 // Field mappingCacheManager:Lorg/apache/dubbo/metadata/MappingCacheManager;
      10: aload         4
      12: invokevirtual #29                 // Method org/apache/dubbo/metadata/MappingCacheManager.get:(Ljava/lang/String;)Ljava/lang/Object;
      15: checkcast     #30                 // class java/util/Set
      18: astore        5
      20: aload         5
      22: invokestatic  #31                 // Method org/apache/dubbo/common/utils/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      25: ifeq          153
      28: aload_0
      29: getfield      #6                  // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      32: ldc           #32                 // String Local cache mapping is empty
      34: invokeinterface #33,  2           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.info:(Ljava/lang/String;)V
      39: new           #34                 // class org/apache/dubbo/metadata/AbstractServiceNameMapping$AsyncMappingTask
      42: dup
      43: aload_0
      44: aload_3
      45: aload_2
      46: iconst_0
      47: invokespecial #35                 // Method org/apache/dubbo/metadata/AbstractServiceNameMapping$AsyncMappingTask."<init>":(Lorg/apache/dubbo/metadata/AbstractServiceNameMapping;Lorg/apache/dubbo/metadata/MappingListener;Lorg/apache/dubbo/common/URL;Z)V
      50: invokevirtual #36                 // Method org/apache/dubbo/metadata/AbstractServiceNameMapping$AsyncMappingTask.call:()Ljava/util/Set;
      53: astore        5
      55: goto          60
      58: astore        6
      60: aload         5
      62: invokestatic  #31                 // Method org/apache/dubbo/common/utils/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      65: ifeq          132
      68: aload_1
      69: ldc           #38                 // String subscribed-services
      71: invokevirtual #39                 // Method org/apache/dubbo/common/URL.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      74: astore        6
      76: aload         6
      78: invokestatic  #40                 // Method org/apache/dubbo/common/utils/StringUtils.isNotEmpty:(Ljava/lang/String;)Z
      81: ifeq          132
      84: aload_0
      85: getfield      #6                  // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      88: new           #41                 // class java/lang/StringBuilder
      91: dup
      92: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      95: aload_2
      96: invokevirtual #43                 // Method org/apache/dubbo/common/URL.getServiceInterface:()Ljava/lang/String;
      99: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: ldc           #45                 // String  mapping to
     104: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload         6
     109: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: ldc           #46                 // String  instructed by registry subscribed-services.
     114: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: invokeinterface #33,  2           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.info:(Ljava/lang/String;)V
     125: aload         6
     127: invokestatic  #48                 // Method parseServices:(Ljava/lang/String;)Ljava/util/Set;
     130: astore        5
     132: aload         5
     134: invokestatic  #49                 // Method org/apache/dubbo/common/utils/CollectionUtils.isNotEmpty:(Ljava/util/Collection;)Z
     137: ifeq          195
     140: aload_0
     141: aload_2
     142: invokestatic  #28                 // InterfaceMethod org/apache/dubbo/metadata/ServiceNameMapping.buildMappingKey:(Lorg/apache/dubbo/common/URL;)Ljava/lang/String;
     145: aload         5
     147: invokevirtual #50                 // Method putCachedMapping:(Ljava/lang/String;Ljava/util/Set;)V
     150: goto          195
     153: aload_0
     154: getfield      #10                 // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
     157: invokevirtual #21                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getFrameworkModel:()Lorg/apache/dubbo/rpc/model/FrameworkModel;
     160: invokevirtual #22                 // Method org/apache/dubbo/rpc/model/FrameworkModel.getBeanFactory:()Lorg/apache/dubbo/common/beans/factory/ScopeBeanFactory;
     163: ldc           #23                 // class org/apache/dubbo/common/threadpool/manager/FrameworkExecutorRepository
     165: invokevirtual #24                 // Method org/apache/dubbo/common/beans/factory/ScopeBeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
     168: checkcast     #23                 // class org/apache/dubbo/common/threadpool/manager/FrameworkExecutorRepository
     171: invokevirtual #51                 // Method org/apache/dubbo/common/threadpool/manager/FrameworkExecutorRepository.getMappingRefreshingExecutor:()Ljava/util/concurrent/ExecutorService;
     174: astore        6
     176: aload         6
     178: new           #34                 // class org/apache/dubbo/metadata/AbstractServiceNameMapping$AsyncMappingTask
     181: dup
     182: aload_0
     183: aload_3
     184: aload_2
     185: iconst_1
     186: invokespecial #35                 // Method org/apache/dubbo/metadata/AbstractServiceNameMapping$AsyncMappingTask."<init>":(Lorg/apache/dubbo/metadata/AbstractServiceNameMapping;Lorg/apache/dubbo/metadata/MappingListener;Lorg/apache/dubbo/common/URL;Z)V
     189: invokeinterface #52,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
     194: pop
     195: aload         5
     197: areturn
    Exception table:
       from    to  target type
          28    55    58   Class java/lang/Exception

  public org.apache.dubbo.metadata.MappingListener stopListen(org.apache.dubbo.common.URL, org.apache.dubbo.metadata.MappingListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field mappingListeners:Ljava/util/Map;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_1
       8: invokestatic  #28                 // InterfaceMethod org/apache/dubbo/metadata/ServiceNameMapping.buildMappingKey:(Lorg/apache/dubbo/common/URL;)Ljava/lang/String;
      11: astore        4
      13: aload_0
      14: getfield      #2                  // Field mappingListeners:Ljava/util/Map;
      17: aload         4
      19: invokeinterface #53,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #30                 // class java/util/Set
      27: astore        5
      29: aload         5
      31: invokestatic  #49                 // Method org/apache/dubbo/common/utils/CollectionUtils.isNotEmpty:(Ljava/util/Collection;)Z
      34: ifeq          58
      37: aload         5
      39: aload_2
      40: invokeinterface #54,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      45: pop
      46: aload_2
      47: invokeinterface #55,  1           // InterfaceMethod org/apache/dubbo/metadata/MappingListener.stop:()V
      52: aload_0
      53: aload_1
      54: aload_2
      55: invokevirtual #56                 // Method removeListener:(Lorg/apache/dubbo/common/URL;Lorg/apache/dubbo/metadata/MappingListener;)V
      58: aload         5
      60: invokestatic  #31                 // Method org/apache/dubbo/common/utils/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      63: ifeq          91
      66: aload_0
      67: getfield      #2                  // Field mappingListeners:Ljava/util/Map;
      70: aload         4
      72: invokeinterface #57,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: aload_0
      79: aload         4
      81: invokevirtual #58                 // Method removeCachedMapping:(Ljava/lang/String;)Ljava/util/Set;
      84: pop
      85: aload_0
      86: aload         4
      88: invokevirtual #59                 // Method removeMappingLock:(Ljava/lang/String;)V
      91: aload_2
      92: aload_3
      93: monitorexit
      94: areturn
      95: astore        6
      97: aload_3
      98: monitorexit
      99: aload         6
     101: athrow
    Exception table:
       from    to  target type
           7    94    95   any
          95    99    95   any

  static java.util.Set<java.lang.String> parseServices(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #60                 // Method org/apache/dubbo/common/utils/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
       4: ifeq          13
       7: invokestatic  #61                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      10: goto          63
      13: new           #62                 // class java/util/TreeSet
      16: dup
      17: aload_0
      18: ldc           #63                 // String ,
      20: invokevirtual #64                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      23: invokestatic  #65                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      26: invokedynamic #66,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      31: invokeinterface #67,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      36: invokedynamic #68,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      41: invokeinterface #69,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      46: invokestatic  #70                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      49: invokeinterface #71,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      54: checkcast     #72                 // class java/util/Collection
      57: invokespecial #73                 // Method java/util/TreeSet."<init>":(Ljava/util/Collection;)V
      60: invokestatic  #74                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      63: areturn

  public void putCachedMapping(java.lang.String, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #27                 // Field mappingCacheManager:Lorg/apache/dubbo/metadata/MappingCacheManager;
       4: aload_1
       5: aload_2
       6: invokestatic  #75                 // Method org/apache/dubbo/common/utils/CollectionUtils.toTreeSet:(Ljava/util/Set;)Ljava/util/Set;
       9: invokevirtual #76                 // Method org/apache/dubbo/metadata/MappingCacheManager.put:(Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  protected void putCachedMappingIfAbsent(java.lang.String, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #77                 // Method getMappingLock:(Ljava/lang/String;)Ljava/util/concurrent/locks/Lock;
       5: astore_3
       6: aload_3
       7: invokeinterface #78,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      12: aload_0
      13: getfield      #27                 // Field mappingCacheManager:Lorg/apache/dubbo/metadata/MappingCacheManager;
      16: aload_1
      17: invokevirtual #29                 // Method org/apache/dubbo/metadata/MappingCacheManager.get:(Ljava/lang/String;)Ljava/lang/Object;
      20: checkcast     #72                 // class java/util/Collection
      23: invokestatic  #31                 // Method org/apache/dubbo/common/utils/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      26: ifeq          41
      29: aload_0
      30: getfield      #27                 // Field mappingCacheManager:Lorg/apache/dubbo/metadata/MappingCacheManager;
      33: aload_1
      34: aload_2
      35: invokestatic  #75                 // Method org/apache/dubbo/common/utils/CollectionUtils.toTreeSet:(Ljava/util/Set;)Ljava/util/Set;
      38: invokevirtual #76                 // Method org/apache/dubbo/metadata/MappingCacheManager.put:(Ljava/lang/String;Ljava/lang/Object;)V
      41: aload_3
      42: invokeinterface #79,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      47: goto          61
      50: astore        4
      52: aload_3
      53: invokeinterface #79,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      58: aload         4
      60: athrow
      61: return
    Exception table:
       from    to  target type
           6    41    50   any
          50    52    50   any

  public java.util.Set<java.lang.String> getMapping(org.apache.dubbo.common.URL);
    Code:
       0: aload_1
       1: invokestatic  #80                 // InterfaceMethod org/apache/dubbo/metadata/ServiceNameMapping.getMappingByUrl:(Lorg/apache/dubbo/common/URL;)Ljava/util/Set;
       4: astore_2
       5: aload_2
       6: ifnull        11
       9: aload_2
      10: areturn
      11: aload_0
      12: getfield      #27                 // Field mappingCacheManager:Lorg/apache/dubbo/metadata/MappingCacheManager;
      15: aload_1
      16: invokestatic  #28                 // InterfaceMethod org/apache/dubbo/metadata/ServiceNameMapping.buildMappingKey:(Lorg/apache/dubbo/common/URL;)Ljava/lang/String;
      19: invokevirtual #29                 // Method org/apache/dubbo/metadata/MappingCacheManager.get:(Ljava/lang/String;)Ljava/lang/Object;
      22: checkcast     #30                 // class java/util/Set
      25: areturn

  public java.util.Set<java.lang.String> getRemoteMapping(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #81                 // Method get:(Lorg/apache/dubbo/common/URL;)Ljava/util/Set;
       5: areturn

  public java.util.Set<java.lang.String> removeCachedMapping(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #27                 // Field mappingCacheManager:Lorg/apache/dubbo/metadata/MappingCacheManager;
       4: aload_1
       5: invokevirtual #82                 // Method org/apache/dubbo/metadata/MappingCacheManager.remove:(Ljava/lang/String;)Ljava/lang/Object;
       8: checkcast     #30                 // class java/util/Set
      11: areturn

  public java.util.concurrent.locks.Lock getMappingLock(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field mappingLocks:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokedynamic #83,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      10: invokeinterface #84,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #85                 // class java/util/concurrent/locks/Lock
      18: areturn

  protected void removeMappingLock(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field mappingLocks:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #86,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #85                 // class java/util/concurrent/locks/Lock
      13: astore_2
      14: aload_2
      15: ifnull        53
      18: aload_2
      19: invokeinterface #78,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      24: aload_0
      25: getfield      #9                  // Field mappingLocks:Ljava/util/concurrent/ConcurrentMap;
      28: aload_1
      29: invokeinterface #87,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_2
      36: invokeinterface #79,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      41: goto          53
      44: astore_3
      45: aload_2
      46: invokeinterface #79,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      51: aload_3
      52: athrow
      53: return
    Exception table:
       from    to  target type
          18    35    44   any

  public void $destroy();
    Code:
       0: aload_0
       1: getfield      #27                 // Field mappingCacheManager:Lorg/apache/dubbo/metadata/MappingCacheManager;
       4: invokevirtual #88                 // Method org/apache/dubbo/metadata/MappingCacheManager.destroy:()V
       7: aload_0
       8: getfield      #2                  // Field mappingListeners:Ljava/util/Map;
      11: invokeinterface #89,  1           // InterfaceMethod java/util/Map.clear:()V
      16: aload_0
      17: getfield      #9                  // Field mappingLocks:Ljava/util/concurrent/ConcurrentMap;
      20: invokeinterface #90,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      25: return

  private static java.util.concurrent.locks.ReentrantLock lambda$getMappingLock$0(java.lang.String);
    Code:
       0: new           #91                 // class java/util/concurrent/locks/ReentrantLock
       3: dup
       4: invokespecial #92                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
       7: areturn

  static java.util.Map access$000(org.apache.dubbo.metadata.AbstractServiceNameMapping);
    Code:
       0: aload_0
       1: getfield      #2                  // Field mappingListeners:Ljava/util/Map;
       4: areturn
}
