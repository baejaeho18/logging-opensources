Compiled from "AbstractMetadataReport.java"
class org.apache.dubbo.metadata.report.support.AbstractMetadataReport$MetadataReportRetry {
  protected final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  final java.util.concurrent.ScheduledExecutorService retryExecutor;

  volatile java.util.concurrent.ScheduledFuture retryScheduledFuture;

  final java.util.concurrent.atomic.AtomicInteger retryCounter;

  long retryPeriod;

  int retryTimesIfNonFail;

  int retryLimit;

  final org.apache.dubbo.metadata.report.support.AbstractMetadataReport this$0;

  public org.apache.dubbo.metadata.report.support.AbstractMetadataReport$MetadataReportRetry(org.apache.dubbo.metadata.report.support.AbstractMetadataReport, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/dubbo/metadata/report/support/AbstractMetadataReport;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_0
      11: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokestatic  #5                  // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      17: putfield      #6                  // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      20: aload_0
      21: iconst_0
      22: new           #7                  // class org/apache/dubbo/common/utils/NamedThreadFactory
      25: dup
      26: ldc           #8                  // String DubboMetadataReportRetryTimer
      28: iconst_1
      29: invokespecial #9                  // Method org/apache/dubbo/common/utils/NamedThreadFactory."<init>":(Ljava/lang/String;Z)V
      32: invokestatic  #10                 // Method java/util/concurrent/Executors.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
      35: putfield      #11                 // Field retryExecutor:Ljava/util/concurrent/ScheduledExecutorService;
      38: aload_0
      39: new           #12                 // class java/util/concurrent/atomic/AtomicInteger
      42: dup
      43: iconst_0
      44: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      47: putfield      #14                 // Field retryCounter:Ljava/util/concurrent/atomic/AtomicInteger;
      50: aload_0
      51: sipush        600
      54: putfield      #15                 // Field retryTimesIfNonFail:I
      57: aload_0
      58: iload_3
      59: i2l
      60: putfield      #16                 // Field retryPeriod:J
      63: aload_0
      64: iload_2
      65: putfield      #17                 // Field retryLimit:I
      68: return

  void startRetryTask();
    Code:
       0: aload_0
       1: getfield      #18                 // Field retryScheduledFuture:Ljava/util/concurrent/ScheduledFuture;
       4: ifnonnull     60
       7: aload_0
       8: getfield      #14                 // Field retryCounter:Ljava/util/concurrent/atomic/AtomicInteger;
      11: dup
      12: astore_1
      13: monitorenter
      14: aload_0
      15: getfield      #18                 // Field retryScheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      18: ifnonnull     50
      21: aload_0
      22: aload_0
      23: getfield      #11                 // Field retryExecutor:Ljava/util/concurrent/ScheduledExecutorService;
      26: aload_0
      27: invokedynamic #19,  0             // InvokeDynamic #0:run:(Lorg/apache/dubbo/metadata/report/support/AbstractMetadataReport$MetadataReportRetry;)Ljava/lang/Runnable;
      32: ldc2_w        #20                 // long 500l
      35: aload_0
      36: getfield      #16                 // Field retryPeriod:J
      39: getstatic     #22                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      42: invokeinterface #23,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      47: putfield      #18                 // Field retryScheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      50: aload_1
      51: monitorexit
      52: goto          60
      55: astore_2
      56: aload_1
      57: monitorexit
      58: aload_2
      59: athrow
      60: return
    Exception table:
       from    to  target type
          14    52    55   any
          55    58    55   any

  void cancelRetryTask();
    Code:
       0: aload_0
       1: getfield      #18                 // Field retryScheduledFuture:Ljava/util/concurrent/ScheduledFuture;
       4: ifnull        18
       7: aload_0
       8: getfield      #18                 // Field retryScheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      11: iconst_0
      12: invokeinterface #24,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      17: pop
      18: aload_0
      19: getfield      #11                 // Field retryExecutor:Ljava/util/concurrent/ScheduledExecutorService;
      22: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      27: return

  void destroy();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method cancelRetryTask:()V
       4: return

  java.util.concurrent.ScheduledExecutorService getRetryExecutor();
    Code:
       0: aload_0
       1: getfield      #11                 // Field retryExecutor:Ljava/util/concurrent/ScheduledExecutorService;
       4: areturn

  private void lambda$startRetryTask$0();
    Code:
       0: aload_0
       1: getfield      #14                 // Field retryCounter:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: istore_1
       8: aload_0
       9: getfield      #6                  // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      12: new           #28                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #30                 // String start to retry task for metadata report. retry times:
      21: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_1
      25: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokeinterface #34,  2           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.info:(Ljava/lang/String;)V
      36: aload_0
      37: getfield      #2                  // Field this$0:Lorg/apache/dubbo/metadata/report/support/AbstractMetadataReport;
      40: invokevirtual #35                 // Method org/apache/dubbo/metadata/report/support/AbstractMetadataReport.retry:()Z
      43: ifeq          58
      46: iload_1
      47: aload_0
      48: getfield      #15                 // Field retryTimesIfNonFail:I
      51: if_icmple     58
      54: aload_0
      55: invokevirtual #26                 // Method cancelRetryTask:()V
      58: iload_1
      59: aload_0
      60: getfield      #17                 // Field retryLimit:I
      63: if_icmple     70
      66: aload_0
      67: invokevirtual #26                 // Method cancelRetryTask:()V
      70: goto          112
      73: astore_1
      74: aload_0
      75: getfield      #6                  // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      78: ldc           #37                 // String 0-12
      80: ldc           #38                 // String
      82: ldc           #38                 // String
      84: new           #28                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #39                 // String Unexpected error occur at failed retry, cause:
      93: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_1
      97: invokevirtual #40                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     100: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: aload_1
     107: invokeinterface #41,  6           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
     112: return
    Exception table:
       from    to  target type
           0    70    73   Class java/lang/Throwable
}
