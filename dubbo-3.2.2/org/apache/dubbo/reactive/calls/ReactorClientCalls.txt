Compiled from "ReactorClientCalls.java"
public final class org.apache.dubbo.reactive.calls.ReactorClientCalls {
  private org.apache.dubbo.reactive.calls.ReactorClientCalls();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <TRequest, TResponse, TInvoker> reactor.core.publisher.Mono<TResponse> oneToOne(org.apache.dubbo.rpc.Invoker<TInvoker>, reactor.core.publisher.Mono<TRequest>, org.apache.dubbo.rpc.model.StubMethodDescriptor);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokedynamic #2,  0              // InvokeDynamic #0:accept:(Lreactor/core/publisher/Mono;Lorg/apache/dubbo/rpc/Invoker;Lorg/apache/dubbo/rpc/model/StubMethodDescriptor;)Ljava/util/function/Consumer;
       8: invokestatic  #3                  // Method reactor/core/publisher/Mono.create:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      11: areturn
      12: astore_3
      13: aload_3
      14: invokestatic  #5                  // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      17: areturn
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/Throwable

  public static <TRequest, TResponse, TInvoker> reactor.core.publisher.Flux<TResponse> oneToMany(org.apache.dubbo.rpc.Invoker<TInvoker>, reactor.core.publisher.Mono<TRequest>, org.apache.dubbo.rpc.model.StubMethodDescriptor);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokedynamic #6,  0              // InvokeDynamic #1:apply:(Lorg/apache/dubbo/rpc/Invoker;Lorg/apache/dubbo/rpc/model/StubMethodDescriptor;)Ljava/util/function/Function;
       8: invokevirtual #7                  // Method reactor/core/publisher/Mono.flatMapMany:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      11: areturn
      12: astore_3
      13: aload_3
      14: invokestatic  #8                  // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      17: areturn
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/Throwable

  public static <TRequest, TResponse, TInvoker> reactor.core.publisher.Mono<TResponse> manyToOne(org.apache.dubbo.rpc.Invoker<TInvoker>, reactor.core.publisher.Flux<TRequest>, org.apache.dubbo.rpc.model.StubMethodDescriptor);
    Code:
       0: aload_1
       1: new           #9                  // class org/apache/dubbo/reactive/ClientTripleReactorSubscriber
       4: dup
       5: invokespecial #10                 // Method org/apache/dubbo/reactive/ClientTripleReactorSubscriber."<init>":()V
       8: invokevirtual #11                 // Method reactor/core/publisher/Flux.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;
      11: checkcast     #9                  // class org/apache/dubbo/reactive/ClientTripleReactorSubscriber
      14: astore_3
      15: new           #12                 // class org/apache/dubbo/reactive/ClientTripleReactorPublisher
      18: dup
      19: aload_3
      20: invokedynamic #13,  0             // InvokeDynamic #2:accept:(Lorg/apache/dubbo/reactive/ClientTripleReactorSubscriber;)Ljava/util/function/Consumer;
      25: aload_3
      26: dup
      27: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      30: pop
      31: invokedynamic #15,  0             // InvokeDynamic #3:run:(Lorg/apache/dubbo/reactive/ClientTripleReactorSubscriber;)Ljava/lang/Runnable;
      36: invokespecial #16                 // Method org/apache/dubbo/reactive/ClientTripleReactorPublisher."<init>":(Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
      39: astore        4
      41: aload         4
      43: invokestatic  #17                 // Method reactor/core/publisher/Mono.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
      46: aload_0
      47: aload_2
      48: aload         4
      50: invokedynamic #18,  0             // InvokeDynamic #4:accept:(Lorg/apache/dubbo/rpc/Invoker;Lorg/apache/dubbo/rpc/model/StubMethodDescriptor;Lorg/apache/dubbo/reactive/ClientTripleReactorPublisher;)Ljava/util/function/Consumer;
      55: invokevirtual #19                 // Method reactor/core/publisher/Mono.doOnSubscribe:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      58: areturn
      59: astore_3
      60: aload_3
      61: invokestatic  #5                  // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      64: areturn
    Exception table:
       from    to  target type
           0    58    59   Class java/lang/Throwable

  public static <TRequest, TResponse, TInvoker> reactor.core.publisher.Flux<TResponse> manyToMany(org.apache.dubbo.rpc.Invoker<TInvoker>, reactor.core.publisher.Flux<TRequest>, org.apache.dubbo.rpc.model.StubMethodDescriptor);
    Code:
       0: aload_1
       1: new           #9                  // class org/apache/dubbo/reactive/ClientTripleReactorSubscriber
       4: dup
       5: invokespecial #10                 // Method org/apache/dubbo/reactive/ClientTripleReactorSubscriber."<init>":()V
       8: invokevirtual #11                 // Method reactor/core/publisher/Flux.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;
      11: checkcast     #9                  // class org/apache/dubbo/reactive/ClientTripleReactorSubscriber
      14: astore_3
      15: new           #12                 // class org/apache/dubbo/reactive/ClientTripleReactorPublisher
      18: dup
      19: aload_3
      20: invokedynamic #20,  0             // InvokeDynamic #5:accept:(Lorg/apache/dubbo/reactive/ClientTripleReactorSubscriber;)Ljava/util/function/Consumer;
      25: aload_3
      26: dup
      27: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      30: pop
      31: invokedynamic #15,  0             // InvokeDynamic #3:run:(Lorg/apache/dubbo/reactive/ClientTripleReactorSubscriber;)Ljava/lang/Runnable;
      36: invokespecial #16                 // Method org/apache/dubbo/reactive/ClientTripleReactorPublisher."<init>":(Ljava/util/function/Consumer;Ljava/lang/Runnable;)V
      39: astore        4
      41: aload         4
      43: invokestatic  #21                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      46: aload_0
      47: aload_2
      48: aload         4
      50: invokedynamic #22,  0             // InvokeDynamic #6:accept:(Lorg/apache/dubbo/rpc/Invoker;Lorg/apache/dubbo/rpc/model/StubMethodDescriptor;Lorg/apache/dubbo/reactive/ClientTripleReactorPublisher;)Ljava/util/function/Consumer;
      55: invokevirtual #23                 // Method reactor/core/publisher/Flux.doOnSubscribe:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
      58: areturn
      59: astore_3
      60: aload_3
      61: invokestatic  #8                  // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      64: areturn
    Exception table:
       from    to  target type
           0    58    59   Class java/lang/Throwable

  private static void lambda$manyToMany$6(org.apache.dubbo.rpc.Invoker, org.apache.dubbo.rpc.model.StubMethodDescriptor, org.apache.dubbo.reactive.ClientTripleReactorPublisher, org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #24                 // Method org/apache/dubbo/rpc/stub/StubInvocationUtil.biOrClientStreamCall:(Lorg/apache/dubbo/rpc/Invoker;Lorg/apache/dubbo/rpc/model/MethodDescriptor;Lorg/apache/dubbo/common/stream/StreamObserver;)Lorg/apache/dubbo/common/stream/StreamObserver;
       6: pop
       7: return

  private static void lambda$manyToMany$5(org.apache.dubbo.reactive.ClientTripleReactorSubscriber, org.apache.dubbo.rpc.protocol.tri.observer.CallStreamObserver);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method org/apache/dubbo/reactive/ClientTripleReactorSubscriber.subscribe:(Lorg/apache/dubbo/rpc/protocol/tri/observer/CallStreamObserver;)V
       5: return

  private static void lambda$manyToOne$4(org.apache.dubbo.rpc.Invoker, org.apache.dubbo.rpc.model.StubMethodDescriptor, org.apache.dubbo.reactive.ClientTripleReactorPublisher, org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #24                 // Method org/apache/dubbo/rpc/stub/StubInvocationUtil.biOrClientStreamCall:(Lorg/apache/dubbo/rpc/Invoker;Lorg/apache/dubbo/rpc/model/MethodDescriptor;Lorg/apache/dubbo/common/stream/StreamObserver;)Lorg/apache/dubbo/common/stream/StreamObserver;
       6: pop
       7: return

  private static void lambda$manyToOne$3(org.apache.dubbo.reactive.ClientTripleReactorSubscriber, org.apache.dubbo.rpc.protocol.tri.observer.CallStreamObserver);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method org/apache/dubbo/reactive/ClientTripleReactorSubscriber.subscribe:(Lorg/apache/dubbo/rpc/protocol/tri/observer/CallStreamObserver;)V
       5: return

  private static org.reactivestreams.Publisher lambda$oneToMany$2(org.apache.dubbo.rpc.Invoker, org.apache.dubbo.rpc.model.StubMethodDescriptor, java.lang.Object);
    Code:
       0: new           #12                 // class org/apache/dubbo/reactive/ClientTripleReactorPublisher
       3: dup
       4: invokespecial #26                 // Method org/apache/dubbo/reactive/ClientTripleReactorPublisher."<init>":()V
       7: astore_3
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokestatic  #27                 // Method org/apache/dubbo/rpc/stub/StubInvocationUtil.serverStreamCall:(Lorg/apache/dubbo/rpc/Invoker;Lorg/apache/dubbo/rpc/model/MethodDescriptor;Ljava/lang/Object;Lorg/apache/dubbo/common/stream/StreamObserver;)V
      15: aload_3
      16: areturn

  private static void lambda$oneToOne$1(reactor.core.publisher.Mono, org.apache.dubbo.rpc.Invoker, org.apache.dubbo.rpc.model.StubMethodDescriptor, reactor.core.publisher.MonoSink);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokedynamic #28,  0             // InvokeDynamic #7:accept:(Lorg/apache/dubbo/rpc/Invoker;Lorg/apache/dubbo/rpc/model/StubMethodDescriptor;Lreactor/core/publisher/MonoSink;)Ljava/util/function/Consumer;
       9: aload_3
      10: dup
      11: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: pop
      15: invokedynamic #29,  0             // InvokeDynamic #8:accept:(Lreactor/core/publisher/MonoSink;)Ljava/util/function/Consumer;
      20: invokevirtual #30                 // Method reactor/core/publisher/Mono.subscribe:(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lreactor/core/Disposable;
      23: pop
      24: return

  private static void lambda$null$0(org.apache.dubbo.rpc.Invoker, org.apache.dubbo.rpc.model.StubMethodDescriptor, reactor.core.publisher.MonoSink, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: new           #31                 // class org/apache/dubbo/reactive/calls/ReactorClientCalls$1
       6: dup
       7: aload_2
       8: invokespecial #32                 // Method org/apache/dubbo/reactive/calls/ReactorClientCalls$1."<init>":(Lreactor/core/publisher/MonoSink;)V
      11: invokestatic  #33                 // Method org/apache/dubbo/rpc/stub/StubInvocationUtil.unaryCall:(Lorg/apache/dubbo/rpc/Invoker;Lorg/apache/dubbo/rpc/model/MethodDescriptor;Ljava/lang/Object;Lorg/apache/dubbo/common/stream/StreamObserver;)V
      14: return
}
