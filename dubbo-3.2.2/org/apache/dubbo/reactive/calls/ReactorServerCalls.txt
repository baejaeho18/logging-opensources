Compiled from "ReactorServerCalls.java"
public final class org.apache.dubbo.reactive.calls.ReactorServerCalls {
  private org.apache.dubbo.reactive.calls.ReactorServerCalls();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T, R> void oneToOne(T, org.apache.dubbo.common.stream.StreamObserver<R>, java.util.function.Function<reactor.core.publisher.Mono<T>, reactor.core.publisher.Mono<R>>);
    Code:
       0: aload_2
       1: aload_0
       2: invokestatic  #2                  // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
       5: invokeinterface #3,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #4                  // class reactor/core/publisher/Mono
      13: aload_1
      14: invokedynamic #5,  0              // InvokeDynamic #0:accept:(Lorg/apache/dubbo/common/stream/StreamObserver;)Ljava/util/function/Consumer;
      19: invokevirtual #6                  // Method reactor/core/publisher/Mono.subscribe:(Ljava/util/function/Consumer;)Lreactor/core/Disposable;
      22: pop
      23: return

  public static <T, R> void oneToMany(T, org.apache.dubbo.common.stream.StreamObserver<R>, java.util.function.Function<reactor.core.publisher.Mono<T>, reactor.core.publisher.Flux<R>>);
    Code:
       0: aload_2
       1: aload_0
       2: invokestatic  #2                  // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
       5: invokeinterface #3,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class reactor/core/publisher/Flux
      13: astore_3
      14: aload_3
      15: new           #8                  // class org/apache/dubbo/reactive/ServerTripleReactorSubscriber
      18: dup
      19: invokespecial #9                  // Method org/apache/dubbo/reactive/ServerTripleReactorSubscriber."<init>":()V
      22: invokevirtual #10                 // Method reactor/core/publisher/Flux.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;
      25: checkcast     #8                  // class org/apache/dubbo/reactive/ServerTripleReactorSubscriber
      28: astore        4
      30: aload         4
      32: aload_1
      33: checkcast     #11                 // class org/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter
      36: invokevirtual #12                 // Method org/apache/dubbo/reactive/ServerTripleReactorSubscriber.subscribe:(Lorg/apache/dubbo/rpc/protocol/tri/observer/CallStreamObserver;)V
      39: goto          50
      42: astore_3
      43: aload_1
      44: aload_3
      45: invokeinterface #14,  2           // InterfaceMethod org/apache/dubbo/common/stream/StreamObserver.onError:(Ljava/lang/Throwable;)V
      50: return
    Exception table:
       from    to  target type
           0    39    42   Class java/lang/Throwable

  public static <T, R> org.apache.dubbo.common.stream.StreamObserver<T> manyToOne(org.apache.dubbo.common.stream.StreamObserver<R>, java.util.function.Function<reactor.core.publisher.Flux<T>, reactor.core.publisher.Mono<R>>);
    Code:
       0: new           #15                 // class org/apache/dubbo/reactive/ServerTripleReactorPublisher
       3: dup
       4: aload_0
       5: checkcast     #16                 // class org/apache/dubbo/rpc/protocol/tri/observer/CallStreamObserver
       8: invokespecial #17                 // Method org/apache/dubbo/reactive/ServerTripleReactorPublisher."<init>":(Lorg/apache/dubbo/rpc/protocol/tri/observer/CallStreamObserver;)V
      11: astore_2
      12: aload_1
      13: aload_2
      14: invokestatic  #18                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      17: invokeinterface #3,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #4                  // class reactor/core/publisher/Mono
      25: astore_3
      26: aload_3
      27: aload_2
      28: aload_0
      29: invokedynamic #19,  0             // InvokeDynamic #1:accept:(Lorg/apache/dubbo/reactive/ServerTripleReactorPublisher;Lorg/apache/dubbo/common/stream/StreamObserver;)Ljava/util/function/Consumer;
      34: aload_2
      35: aload_0
      36: invokedynamic #20,  0             // InvokeDynamic #2:accept:(Lorg/apache/dubbo/reactive/ServerTripleReactorPublisher;Lorg/apache/dubbo/common/stream/StreamObserver;)Ljava/util/function/Consumer;
      41: aload_0
      42: dup
      43: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      46: pop
      47: invokedynamic #22,  0             // InvokeDynamic #3:run:(Lorg/apache/dubbo/common/stream/StreamObserver;)Ljava/lang/Runnable;
      52: invokevirtual #23                 // Method reactor/core/publisher/Mono.subscribe:(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/Disposable;
      55: pop
      56: aload_2
      57: invokevirtual #24                 // Method org/apache/dubbo/reactive/ServerTripleReactorPublisher.startRequest:()V
      60: goto          71
      63: astore_3
      64: aload_0
      65: aload_3
      66: invokeinterface #14,  2           // InterfaceMethod org/apache/dubbo/common/stream/StreamObserver.onError:(Ljava/lang/Throwable;)V
      71: aload_2
      72: areturn
    Exception table:
       from    to  target type
          12    60    63   Class java/lang/Throwable

  public static <T, R> org.apache.dubbo.common.stream.StreamObserver<T> manyToMany(org.apache.dubbo.common.stream.StreamObserver<R>, java.util.function.Function<reactor.core.publisher.Flux<T>, reactor.core.publisher.Flux<R>>);
    Code:
       0: new           #15                 // class org/apache/dubbo/reactive/ServerTripleReactorPublisher
       3: dup
       4: aload_0
       5: checkcast     #16                 // class org/apache/dubbo/rpc/protocol/tri/observer/CallStreamObserver
       8: invokespecial #17                 // Method org/apache/dubbo/reactive/ServerTripleReactorPublisher."<init>":(Lorg/apache/dubbo/rpc/protocol/tri/observer/CallStreamObserver;)V
      11: astore_2
      12: aload_1
      13: aload_2
      14: invokestatic  #18                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      17: invokeinterface #3,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #7                  // class reactor/core/publisher/Flux
      25: astore_3
      26: aload_3
      27: new           #8                  // class org/apache/dubbo/reactive/ServerTripleReactorSubscriber
      30: dup
      31: invokespecial #9                  // Method org/apache/dubbo/reactive/ServerTripleReactorSubscriber."<init>":()V
      34: invokevirtual #10                 // Method reactor/core/publisher/Flux.subscribeWith:(Lorg/reactivestreams/Subscriber;)Lorg/reactivestreams/Subscriber;
      37: checkcast     #8                  // class org/apache/dubbo/reactive/ServerTripleReactorSubscriber
      40: astore        4
      42: aload         4
      44: aload_0
      45: checkcast     #16                 // class org/apache/dubbo/rpc/protocol/tri/observer/CallStreamObserver
      48: invokevirtual #12                 // Method org/apache/dubbo/reactive/ServerTripleReactorSubscriber.subscribe:(Lorg/apache/dubbo/rpc/protocol/tri/observer/CallStreamObserver;)V
      51: aload_2
      52: invokevirtual #24                 // Method org/apache/dubbo/reactive/ServerTripleReactorPublisher.startRequest:()V
      55: goto          66
      58: astore_3
      59: aload_0
      60: aload_3
      61: invokeinterface #14,  2           // InterfaceMethod org/apache/dubbo/common/stream/StreamObserver.onError:(Ljava/lang/Throwable;)V
      66: aload_2
      67: areturn
    Exception table:
       from    to  target type
          12    55    58   Class java/lang/Throwable

  private static void lambda$manyToOne$3(org.apache.dubbo.reactive.ServerTripleReactorPublisher, org.apache.dubbo.common.stream.StreamObserver, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method org/apache/dubbo/reactive/ServerTripleReactorPublisher.isCancelled:()Z
       4: ifne          14
       7: aload_1
       8: aload_2
       9: invokeinterface #14,  2           // InterfaceMethod org/apache/dubbo/common/stream/StreamObserver.onError:(Ljava/lang/Throwable;)V
      14: return

  private static void lambda$manyToOne$2(org.apache.dubbo.reactive.ServerTripleReactorPublisher, org.apache.dubbo.common.stream.StreamObserver, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method org/apache/dubbo/reactive/ServerTripleReactorPublisher.isCancelled:()Z
       4: ifne          14
       7: aload_1
       8: aload_2
       9: invokeinterface #26,  2           // InterfaceMethod org/apache/dubbo/common/stream/StreamObserver.onNext:(Ljava/lang/Object;)V
      14: return

  private static void lambda$oneToOne$1(org.apache.dubbo.common.stream.StreamObserver, java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #27                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
       4: aload_0
       5: invokedynamic #28,  0             // InvokeDynamic #4:accept:(Lorg/apache/dubbo/common/stream/StreamObserver;)Ljava/util/function/BiConsumer;
      10: invokevirtual #29                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      13: pop
      14: return

  private static void lambda$null$0(org.apache.dubbo.common.stream.StreamObserver, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_2
       1: ifnull        14
       4: aload_0
       5: aload_2
       6: invokeinterface #14,  2           // InterfaceMethod org/apache/dubbo/common/stream/StreamObserver.onError:(Ljava/lang/Throwable;)V
      11: goto          27
      14: aload_0
      15: aload_1
      16: invokeinterface #26,  2           // InterfaceMethod org/apache/dubbo/common/stream/StreamObserver.onNext:(Ljava/lang/Object;)V
      21: aload_0
      22: invokeinterface #30,  1           // InterfaceMethod org/apache/dubbo/common/stream/StreamObserver.onCompleted:()V
      27: return
}
