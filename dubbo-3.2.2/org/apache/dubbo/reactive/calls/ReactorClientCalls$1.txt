Compiled from "ReactorClientCalls.java"
final class org.apache.dubbo.reactive.calls.ReactorClientCalls$1 implements org.apache.dubbo.common.stream.StreamObserver<TResponse> {
  final reactor.core.publisher.MonoSink val$emitter;

  org.apache.dubbo.reactive.calls.ReactorClientCalls$1(reactor.core.publisher.MonoSink);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$emitter:Lreactor/core/publisher/MonoSink;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void onNext(TResponse);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$emitter:Lreactor/core/publisher/MonoSink;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod reactor/core/publisher/MonoSink.success:(Ljava/lang/Object;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$emitter:Lreactor/core/publisher/MonoSink;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod reactor/core/publisher/MonoSink.error:(Ljava/lang/Throwable;)V
      10: return

  public void onCompleted();
    Code:
       0: return
}
