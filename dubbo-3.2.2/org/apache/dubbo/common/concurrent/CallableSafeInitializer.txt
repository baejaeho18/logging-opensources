Compiled from "CallableSafeInitializer.java"
public class org.apache.dubbo.common.concurrent.CallableSafeInitializer<T> {
  private final java.util.concurrent.atomic.AtomicReference<org.apache.dubbo.common.concurrent.CallableSafeInitializer<T>> factory;

  private final java.util.concurrent.atomic.AtomicReference<T> reference;

  private final java.util.concurrent.Callable<T> callable;

  public org.apache.dubbo.common.concurrent.CallableSafeInitializer(java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #4                  // Field factory:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/atomic/AtomicReference
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      23: putfield      #5                  // Field reference:Ljava/util/concurrent/atomic/AtomicReference;
      26: aload_0
      27: aload_1
      28: putfield      #6                  // Field callable:Ljava/util/concurrent/Callable;
      31: return

  public final T get();
    Code:
       0: aload_0
       1: getfield      #5                  // Field reference:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: dup
       8: astore_1
       9: ifnonnull     38
      12: aload_0
      13: getfield      #4                  // Field factory:Ljava/util/concurrent/atomic/AtomicReference;
      16: aconst_null
      17: aload_0
      18: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      21: ifeq          0
      24: aload_0
      25: getfield      #5                  // Field reference:Ljava/util/concurrent/atomic/AtomicReference;
      28: aload_0
      29: invokevirtual #9                  // Method initialize:()Ljava/lang/Object;
      32: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      35: goto          0
      38: aload_1
      39: areturn

  protected T initialize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field callable:Ljava/util/concurrent/Callable;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
       9: areturn
      10: astore_1
      11: new           #13                 // class java/lang/RuntimeException
      14: dup
      15: aload_1
      16: invokevirtual #14                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      19: aload_1
      20: invokespecial #15                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/Exception

  public T remove();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #16                 // Method remove:(Ljava/util/function/Consumer;)Ljava/lang/Object;
       5: areturn

  public T remove(java.util.function.Consumer<? super T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field reference:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_2
       9: aload_2
      10: ifnull        40
      13: aload_1
      14: ifnull        24
      17: aload_1
      18: aload_2
      19: invokeinterface #18,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      24: aload_2
      25: instanceof    #19                 // class org/apache/dubbo/common/resource/Disposable
      28: ifeq          40
      31: aload_2
      32: checkcast     #19                 // class org/apache/dubbo/common/resource/Disposable
      35: invokeinterface #20,  1           // InterfaceMethod org/apache/dubbo/common/resource/Disposable.destroy:()V
      40: aload_0
      41: getfield      #4                  // Field factory:Ljava/util/concurrent/atomic/AtomicReference;
      44: aconst_null
      45: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      48: aload_2
      49: areturn
}
