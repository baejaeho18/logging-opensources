Compiled from "JavaBeanDescriptor.java"
public final class org.apache.dubbo.common.beanutil.JavaBeanDescriptor implements java.io.Serializable, java.lang.Iterable<java.util.Map$Entry<java.lang.Object, java.lang.Object>> {
  private static final long serialVersionUID;

  public static final int TYPE_CLASS;

  public static final int TYPE_ENUM;

  public static final int TYPE_COLLECTION;

  public static final int TYPE_MAP;

  public static final int TYPE_ARRAY;

  public static final int TYPE_PRIMITIVE;

  public static final int TYPE_BEAN;

  private static final java.lang.String ENUM_PROPERTY_NAME;

  private static final java.lang.String CLASS_PROPERTY_NAME;

  private static final java.lang.String PRIMITIVE_PROPERTY_VALUE;

  private static final int TYPE_MAX;

  private static final int TYPE_MIN;

  private java.lang.String className;

  private int type;

  private final java.util.Map<java.lang.Object, java.lang.Object> properties;

  public org.apache.dubbo.common.beanutil.JavaBeanDescriptor();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #5                  // Field properties:Ljava/util/Map;
      15: return

  public org.apache.dubbo.common.beanutil.JavaBeanDescriptor(java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #5                  // Field properties:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: ldc           #6                  // String class name is empty
      19: invokespecial #7                  // Method notEmpty:(Ljava/lang/String;Ljava/lang/String;)V
      22: aload_0
      23: iload_2
      24: invokespecial #8                  // Method isValidType:(I)Z
      27: ifne          62
      30: new           #9                  // class java/lang/IllegalArgumentException
      33: dup
      34: new           #10                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #12                 // String type [
      43: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: iload_2
      47: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      50: ldc           #15                 // String  ] is unsupported
      52: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_0
      63: aload_1
      64: putfield      #18                 // Field className:Ljava/lang/String;
      67: aload_0
      68: iload_2
      69: putfield      #19                 // Field type:I
      72: return

  public boolean isClassType();
    Code:
       0: iconst_1
       1: aload_0
       2: getfield      #19                 // Field type:I
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isEnumType();
    Code:
       0: iconst_2
       1: aload_0
       2: getfield      #19                 // Field type:I
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isCollectionType();
    Code:
       0: iconst_3
       1: aload_0
       2: getfield      #19                 // Field type:I
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isMapType();
    Code:
       0: iconst_4
       1: aload_0
       2: getfield      #19                 // Field type:I
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isArrayType();
    Code:
       0: iconst_5
       1: aload_0
       2: getfield      #19                 // Field type:I
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isPrimitiveType();
    Code:
       0: bipush        6
       2: aload_0
       3: getfield      #19                 // Field type:I
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isBeanType();
    Code:
       0: bipush        7
       2: aload_0
       3: getfield      #19                 // Field type:I
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public int getType();
    Code:
       0: aload_0
       1: getfield      #19                 // Field type:I
       4: ireturn

  public void setType(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field type:I
       5: return

  public java.lang.String getClassName();
    Code:
       0: aload_0
       1: getfield      #18                 // Field className:Ljava/lang/String;
       4: areturn

  public void setClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field className:Ljava/lang/String;
       5: return

  public java.lang.Object setProperty(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #20                 // String Property name is null
       4: invokespecial #21                 // Method notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: getfield      #5                  // Field properties:Ljava/util/Map;
      11: aload_1
      12: aload_2
      13: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn

  public java.lang.String setEnumNameProperty(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method isEnumType:()Z
       4: ifeq          28
       7: aload_0
       8: ldc           #24                 // String name
      10: aload_1
      11: invokevirtual #25                 // Method setProperty:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: aload_2
      16: ifnonnull     23
      19: aconst_null
      20: goto          27
      23: aload_2
      24: invokevirtual #26                 // Method java/lang/Object.toString:()Ljava/lang/String;
      27: areturn
      28: new           #27                 // class java/lang/IllegalStateException
      31: dup
      32: ldc           #28                 // String The instance is not a enum wrapper
      34: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow

  public java.lang.String getEnumPropertyName();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method isEnumType:()Z
       4: ifeq          27
       7: aload_0
       8: ldc           #24                 // String name
      10: invokevirtual #30                 // Method getProperty:(Ljava/lang/Object;)Ljava/lang/Object;
      13: astore_1
      14: aload_1
      15: ifnonnull     22
      18: aconst_null
      19: goto          26
      22: aload_1
      23: invokevirtual #26                 // Method java/lang/Object.toString:()Ljava/lang/String;
      26: areturn
      27: new           #27                 // class java/lang/IllegalStateException
      30: dup
      31: ldc           #28                 // String The instance is not a enum wrapper
      33: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow

  public java.lang.String setClassNameProperty(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method isClassType:()Z
       4: ifeq          28
       7: aload_0
       8: ldc           #24                 // String name
      10: aload_1
      11: invokevirtual #25                 // Method setProperty:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: aload_2
      16: ifnonnull     23
      19: aconst_null
      20: goto          27
      23: aload_2
      24: invokevirtual #26                 // Method java/lang/Object.toString:()Ljava/lang/String;
      27: areturn
      28: new           #27                 // class java/lang/IllegalStateException
      31: dup
      32: ldc           #32                 // String The instance is not a class wrapper
      34: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow

  public java.lang.String getClassNameProperty();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method isClassType:()Z
       4: ifeq          27
       7: aload_0
       8: ldc           #24                 // String name
      10: invokevirtual #30                 // Method getProperty:(Ljava/lang/Object;)Ljava/lang/Object;
      13: astore_1
      14: aload_1
      15: ifnonnull     22
      18: aconst_null
      19: goto          26
      22: aload_1
      23: invokevirtual #26                 // Method java/lang/Object.toString:()Ljava/lang/String;
      26: areturn
      27: new           #27                 // class java/lang/IllegalStateException
      30: dup
      31: ldc           #32                 // String The instance is not a class wrapper
      33: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow

  public java.lang.Object setPrimitiveProperty(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method isPrimitiveType:()Z
       4: ifeq          15
       7: aload_0
       8: ldc           #34                 // String value
      10: aload_1
      11: invokevirtual #25                 // Method setProperty:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn
      15: new           #27                 // class java/lang/IllegalStateException
      18: dup
      19: ldc           #35                 // String The instance is not a primitive type wrapper
      21: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      24: athrow

  public java.lang.Object getPrimitiveProperty();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method isPrimitiveType:()Z
       4: ifeq          14
       7: aload_0
       8: ldc           #34                 // String value
      10: invokevirtual #30                 // Method getProperty:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn
      14: new           #27                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #35                 // String The instance is not a primitive type wrapper
      20: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow

  public java.lang.Object getProperty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #20                 // String Property name is null
       4: invokespecial #21                 // Method notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: getfield      #5                  // Field properties:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: areturn

  public boolean containsProperty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #20                 // String Property name is null
       4: invokespecial #21                 // Method notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: getfield      #5                  // Field properties:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #37,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      17: ireturn

  public java.util.Iterator<java.util.Map$Entry<java.lang.Object, java.lang.Object>> iterator();
    Code:
       0: aload_0
       1: getfield      #5                  // Field properties:Ljava/util/Map;
       4: invokeinterface #38,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #39,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: areturn

  public int propertySize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field properties:Ljava/util/Map;
       4: invokeinterface #40,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  private boolean isValidType(int);
    Code:
       0: iconst_1
       1: iload_1
       2: if_icmpgt     15
       5: iload_1
       6: bipush        7
       8: if_icmpgt     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private void notNull(java.lang.Object, java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: aload_2
       9: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      12: athrow
      13: return

  private void notEmpty(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #41                 // Method isEmpty:(Ljava/lang/String;)Z
       5: ifeq          17
       8: new           #9                  // class java/lang/IllegalArgumentException
      11: dup
      12: aload_2
      13: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  private boolean isEmpty(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        16
       4: ldc           #42                 // String
       6: aload_1
       7: invokevirtual #43                 // Method java/lang/String.trim:()Ljava/lang/String;
      10: invokevirtual #44                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn
}
