Compiled from "ClassLoaderResourceLoader.java"
public class org.apache.dubbo.common.utils.ClassLoaderResourceLoader {
  private static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  private static java.lang.ref.SoftReference<java.util.Map<java.lang.ClassLoader, java.util.Map<java.lang.String, java.util.Set<java.net.URL>>>> classLoaderResourcesCache;

  public org.apache.dubbo.common.utils.ClassLoaderResourceLoader();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.Map<java.lang.ClassLoader, java.util.Set<java.net.URL>> loadResources(java.lang.String, java.util.Collection<java.lang.ClassLoader>) throws java.lang.InterruptedException;
    Code:
       0: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: astore_2
       8: new           #5                  // class java/util/concurrent/CountDownLatch
      11: dup
      12: aload_1
      13: invokeinterface #6,  1            // InterfaceMethod java/util/Collection.size:()I
      18: invokespecial #7                  // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      21: astore_3
      22: aload_1
      23: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      28: astore        4
      30: aload         4
      32: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          74
      40: aload         4
      42: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #11                 // class java/lang/ClassLoader
      50: astore        5
      52: invokestatic  #12                 // Method org/apache/dubbo/common/resource/GlobalResourcesRepository.getGlobalExecutorService:()Ljava/util/concurrent/ExecutorService;
      55: aload_2
      56: aload         5
      58: aload_0
      59: aload_3
      60: invokedynamic #13,  0             // InvokeDynamic #0:run:(Ljava/util/Map;Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;)Ljava/lang/Runnable;
      65: invokeinterface #14,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      70: pop
      71: goto          30
      74: aload_3
      75: invokevirtual #15                 // Method java/util/concurrent/CountDownLatch.await:()V
      78: new           #16                 // class java/util/LinkedHashMap
      81: dup
      82: aload_2
      83: invokespecial #17                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      86: invokestatic  #18                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      89: areturn

  public static java.util.Set<java.net.URL> loadResources(java.lang.String, java.lang.ClassLoader);
    Code:
       0: getstatic     #19                 // Field classLoaderResourcesCache:Ljava/lang/ref/SoftReference;
       3: ifnull        20
       6: getstatic     #19                 // Field classLoaderResourcesCache:Ljava/lang/ref/SoftReference;
       9: invokevirtual #20                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      12: checkcast     #21                 // class java/util/Map
      15: dup
      16: astore_2
      17: ifnonnull     76
      20: ldc           #22                 // class org/apache/dubbo/common/utils/ClassLoaderResourceLoader
      22: dup
      23: astore_3
      24: monitorenter
      25: getstatic     #19                 // Field classLoaderResourcesCache:Ljava/lang/ref/SoftReference;
      28: ifnull        45
      31: getstatic     #19                 // Field classLoaderResourcesCache:Ljava/lang/ref/SoftReference;
      34: invokevirtual #20                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      37: checkcast     #21                 // class java/util/Map
      40: dup
      41: astore_2
      42: ifnonnull     64
      45: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      48: dup
      49: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      52: astore_2
      53: new           #23                 // class java/lang/ref/SoftReference
      56: dup
      57: aload_2
      58: invokespecial #24                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      61: putstatic     #19                 // Field classLoaderResourcesCache:Ljava/lang/ref/SoftReference;
      64: aload_3
      65: monitorexit
      66: goto          76
      69: astore        4
      71: aload_3
      72: monitorexit
      73: aload         4
      75: athrow
      76: aload_2
      77: aload_1
      78: invokeinterface #25,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      83: ifne          101
      86: aload_2
      87: aload_1
      88: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      91: dup
      92: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      95: invokeinterface #26,  3           // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     100: pop
     101: aload_2
     102: aload_1
     103: invokeinterface #27,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     108: checkcast     #21                 // class java/util/Map
     111: astore_3
     112: aload_3
     113: aload_0
     114: invokeinterface #25,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     119: ifne          252
     122: new           #28                 // class java/util/LinkedHashSet
     125: dup
     126: invokespecial #29                 // Method java/util/LinkedHashSet."<init>":()V
     129: astore        4
     131: aload_1
     132: aload_0
     133: invokevirtual #30                 // Method java/lang/ClassLoader.getResources:(Ljava/lang/String;)Ljava/util/Enumeration;
     136: astore        5
     138: invokestatic  #31                 // Method org/apache/dubbo/common/utils/NativeUtils.isNative:()Z
     141: istore        6
     143: aload         5
     145: ifnull        193
     148: aload         5
     150: invokeinterface #32,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
     155: ifeq          193
     158: aload         5
     160: invokeinterface #33,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
     165: checkcast     #34                 // class java/net/URL
     168: astore        7
     170: iload         6
     172: ifeq          180
     175: aload         7
     177: invokestatic  #35                 // Method setRef:(Ljava/net/URL;)V
     180: aload         4
     182: aload         7
     184: invokeinterface #36,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     189: pop
     190: goto          148
     193: goto          242
     196: astore        6
     198: getstatic     #38                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
     201: ldc           #39                 // String 0-22
     203: ldc           #40                 // String
     205: ldc           #40                 // String
     207: new           #41                 // class java/lang/StringBuilder
     210: dup
     211: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     214: ldc           #43                 // String Exception occurred when reading SPI definitions. SPI path:
     216: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     219: aload_0
     220: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     223: ldc           #45                 // String  ClassLoader name:
     225: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     228: aload_1
     229: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     232: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     235: aload         6
     237: invokeinterface #48,  6           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
     242: aload_3
     243: aload_0
     244: aload         4
     246: invokeinterface #49,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     251: pop
     252: aload_3
     253: aload_0
     254: invokeinterface #27,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     259: checkcast     #50                 // class java/util/Set
     262: areturn
    Exception table:
       from    to  target type
          25    66    69   any
          69    73    69   any
         131   193   196   Class java/io/IOException

  public static void destroy();
    Code:
       0: ldc           #22                 // class org/apache/dubbo/common/utils/ClassLoaderResourceLoader
       2: dup
       3: astore_0
       4: monitorenter
       5: aconst_null
       6: putstatic     #19                 // Field classLoaderResourcesCache:Ljava/lang/ref/SoftReference;
       9: aload_0
      10: monitorexit
      11: goto          19
      14: astore_1
      15: aload_0
      16: monitorexit
      17: aload_1
      18: athrow
      19: return
    Exception table:
       from    to  target type
           5    11    14   any
          14    17    14   any

  private static void setRef(java.net.URL);
    Code:
       0: ldc           #34                 // class java/net/URL
       2: ldc           #51                 // String ref
       4: invokevirtual #52                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
       7: astore_1
       8: aload_1
       9: iconst_1
      10: invokevirtual #53                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      13: aload_1
      14: aload_0
      15: invokestatic  #54                 // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
      18: invokevirtual #55                 // Method java/util/UUID.toString:()Ljava/lang/String;
      21: invokevirtual #56                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      24: goto          28
      27: astore_1
      28: return
    Exception table:
       from    to  target type
           0    24    27   Class java/lang/Throwable

  protected static java.lang.ref.SoftReference<java.util.Map<java.lang.ClassLoader, java.util.Map<java.lang.String, java.util.Set<java.net.URL>>>> getClassLoaderResourcesCache();
    Code:
       0: getstatic     #19                 // Field classLoaderResourcesCache:Ljava/lang/ref/SoftReference;
       3: areturn

  private static void lambda$loadResources$0(java.util.Map, java.lang.ClassLoader, java.lang.String, java.util.concurrent.CountDownLatch);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_1
       4: invokestatic  #58                 // Method loadResources:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/util/Set;
       7: invokeinterface #49,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: aload_3
      14: invokevirtual #59                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      17: return

  static {};
    Code:
       0: ldc           #22                 // class org/apache/dubbo/common/utils/ClassLoaderResourceLoader
       2: invokestatic  #60                 // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #38                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: aconst_null
       9: putstatic     #19                 // Field classLoaderResourcesCache:Ljava/lang/ref/SoftReference;
      12: invokedynamic #61,  0             // InvokeDynamic #1:destroy:()Lorg/apache/dubbo/common/resource/Disposable;
      17: invokestatic  #62                 // Method org/apache/dubbo/common/resource/GlobalResourcesRepository.registerGlobalDisposable:(Lorg/apache/dubbo/common/resource/Disposable;)V
      20: return
}
