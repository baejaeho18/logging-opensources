Compiled from "CacheableSupplier.java"
public class org.apache.dubbo.common.utils.CacheableSupplier<T> implements java.util.function.Supplier<T> {
  private volatile T object;

  private final java.util.function.Supplier<T> supplier;

  public org.apache.dubbo.common.utils.CacheableSupplier(java.util.function.Supplier<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field supplier:Ljava/util/function/Supplier;
       9: return

  public static <T> org.apache.dubbo.common.utils.CacheableSupplier<T> newSupplier(java.util.function.Supplier<T>);
    Code:
       0: new           #3                  // class org/apache/dubbo/common/utils/CacheableSupplier
       3: dup
       4: aload_0
       5: invokespecial #4                  // Method "<init>":(Ljava/util/function/Supplier;)V
       8: areturn

  public T get();
    Code:
       0: aload_0
       1: getfield      #5                  // Field object:Ljava/lang/Object;
       4: ifnonnull     20
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field supplier:Ljava/util/function/Supplier;
      12: invokeinterface #6,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      17: putfield      #5                  // Field object:Ljava/lang/Object;
      20: aload_0
      21: getfield      #5                  // Field object:Ljava/lang/Object;
      24: areturn
}
