Compiled from "CollectionUtils.java"
public class org.apache.dubbo.common.utils.CollectionUtils {
  private static final java.util.Comparator<java.lang.String> SIMPLE_NAME_COMPARATOR;

  private org.apache.dubbo.common.utils.CollectionUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> java.util.List<T> sort(java.util.List<T>);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method isNotEmpty:(Ljava/util/Collection;)Z
       4: ifeq          11
       7: aload_0
       8: invokestatic  #3                  // Method java/util/Collections.sort:(Ljava/util/List;)V
      11: aload_0
      12: areturn

  public static java.util.List<java.lang.String> sortSimpleName(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ifnull        20
       4: aload_0
       5: invokeinterface #4,  1            // InterfaceMethod java/util/List.size:()I
      10: ifle          20
      13: aload_0
      14: getstatic     #5                  // Field SIMPLE_NAME_COMPARATOR:Ljava/util/Comparator;
      17: invokestatic  #6                  // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      20: aload_0
      21: areturn

  public static <K, V> java.util.Map<V, K> flip(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method isEmptyMap:(Ljava/util/Map;)Z
       4: ifeq          9
       7: aload_0
       8: areturn
       9: new           #8                  // class java/util/HashSet
      12: dup
      13: aload_0
      14: invokeinterface #9,  1            // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      19: invokespecial #10                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      22: astore_1
      23: aload_1
      24: invokeinterface #11,  1           // InterfaceMethod java/util/Set.size:()I
      29: aload_0
      30: invokeinterface #12,  1           // InterfaceMethod java/util/Map.size:()I
      35: if_icmpeq     48
      38: new           #13                 // class java/lang/IllegalArgumentException
      41: dup
      42: ldc           #14                 // String The map value must be unique.
      44: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      54: invokeinterface #17,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      59: invokedynamic #18,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      64: invokedynamic #19,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      69: invokestatic  #20                 // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      72: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      77: checkcast     #22                 // class java/util/Map
      80: areturn

  public static java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>> splitAll(java.util.Map<java.lang.String, java.util.List<java.lang.String>>, java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #23                 // class java/util/HashMap
       9: dup
      10: invokespecial #24                 // Method java/util/HashMap."<init>":()V
      13: astore_2
      14: aload_0
      15: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      20: invokeinterface #25,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          77
      35: aload_3
      36: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #28                 // class java/util/Map$Entry
      44: astore        4
      46: aload_2
      47: aload         4
      49: invokeinterface #29,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      54: aload         4
      56: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      61: checkcast     #31                 // class java/util/List
      64: aload_1
      65: invokestatic  #32                 // Method split:(Ljava/util/List;Ljava/lang/String;)Ljava/util/Map;
      68: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: goto          26
      77: aload_2
      78: areturn

  public static java.util.Map<java.lang.String, java.util.List<java.lang.String>> joinAll(java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>, java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #23                 // class java/util/HashMap
       9: dup
      10: invokespecial #24                 // Method java/util/HashMap."<init>":()V
      13: astore_2
      14: aload_0
      15: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      20: invokeinterface #25,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          77
      35: aload_3
      36: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #28                 // class java/util/Map$Entry
      44: astore        4
      46: aload_2
      47: aload         4
      49: invokeinterface #29,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      54: aload         4
      56: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      61: checkcast     #22                 // class java/util/Map
      64: aload_1
      65: invokestatic  #34                 // Method join:(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;
      68: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: goto          26
      77: aload_2
      78: areturn

  public static java.util.Map<java.lang.String, java.lang.String> split(java.util.List<java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #23                 // class java/util/HashMap
       9: dup
      10: invokespecial #24                 // Method java/util/HashMap."<init>":()V
      13: astore_2
      14: aload_0
      15: invokeinterface #35,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      20: ifeq          25
      23: aload_2
      24: areturn
      25: aload_0
      26: invokeinterface #36,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      31: astore_3
      32: aload_3
      33: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          107
      41: aload_3
      42: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #37                 // class java/lang/String
      50: astore        4
      52: aload         4
      54: aload_1
      55: invokevirtual #38                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      58: istore        5
      60: iload         5
      62: iconst_m1
      63: if_icmpne     80
      66: aload_2
      67: aload         4
      69: ldc           #39                 // String
      71: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: goto          104
      80: aload_2
      81: aload         4
      83: iconst_0
      84: iload         5
      86: invokevirtual #40                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      89: aload         4
      91: iload         5
      93: iconst_1
      94: iadd
      95: invokevirtual #41                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      98: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: goto          32
     107: aload_2
     108: areturn

  public static java.util.List<java.lang.String> join(java.util.Map<java.lang.String, java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #42                 // class java/util/ArrayList
       9: dup
      10: invokespecial #43                 // Method java/util/ArrayList."<init>":()V
      13: astore_2
      14: aload_0
      15: invokeinterface #12,  1           // InterfaceMethod java/util/Map.size:()I
      20: ifne          25
      23: aload_2
      24: areturn
      25: aload_0
      26: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      31: invokeinterface #25,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      36: astore_3
      37: aload_3
      38: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          135
      46: aload_3
      47: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #28                 // class java/util/Map$Entry
      55: astore        4
      57: aload         4
      59: invokeinterface #29,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      64: checkcast     #37                 // class java/lang/String
      67: astore        5
      69: aload         4
      71: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      76: checkcast     #37                 // class java/lang/String
      79: astore        6
      81: aload         6
      83: invokestatic  #44                 // Method org/apache/dubbo/common/utils/StringUtils.isEmpty:(Ljava/lang/String;)Z
      86: ifeq          101
      89: aload_2
      90: aload         5
      92: invokeinterface #45,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      97: pop
      98: goto          132
     101: aload_2
     102: new           #46                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     109: aload         5
     111: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_1
     115: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload         6
     120: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     126: invokeinterface #45,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     131: pop
     132: goto          37
     135: aload_2
     136: areturn

  public static java.lang.String join(java.util.List<java.lang.String>, java.lang.String);
    Code:
       0: new           #46                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_0
       9: invokeinterface #36,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          58
      24: aload_3
      25: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #37                 // class java/lang/String
      33: astore        4
      35: aload_2
      36: invokevirtual #50                 // Method java/lang/StringBuilder.length:()I
      39: ifle          48
      42: aload_2
      43: aload_1
      44: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: pop
      48: aload_2
      49: aload         4
      51: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: pop
      55: goto          15
      58: aload_2
      59: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: areturn

  public static boolean mapEquals(java.util.Map<?, ?>, java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: ifnonnull     10
       4: aload_1
       5: ifnonnull     10
       8: iconst_1
       9: ireturn
      10: aload_0
      11: ifnull        18
      14: aload_1
      15: ifnonnull     20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: invokeinterface #12,  1           // InterfaceMethod java/util/Map.size:()I
      26: aload_1
      27: invokeinterface #12,  1           // InterfaceMethod java/util/Map.size:()I
      32: if_icmpeq     37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      43: invokeinterface #25,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      48: astore_2
      49: aload_2
      50: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          109
      58: aload_2
      59: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #28                 // class java/util/Map$Entry
      67: astore_3
      68: aload_3
      69: invokeinterface #29,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      74: astore        4
      76: aload_3
      77: invokeinterface #30,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      82: astore        5
      84: aload_1
      85: aload         4
      87: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      92: astore        6
      94: aload         5
      96: aload         6
      98: invokestatic  #52                 // Method objectEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     101: ifne          106
     104: iconst_0
     105: ireturn
     106: goto          49
     109: iconst_1
     110: ireturn

  private static boolean objectEquals(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     10
       4: aload_1
       5: ifnonnull     10
       8: iconst_1
       9: ireturn
      10: aload_0
      11: ifnull        18
      14: aload_1
      15: ifnonnull     20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: aload_1
      22: invokevirtual #53                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ireturn

  public static java.util.Map<java.lang.String, java.lang.String> toStringMap(java.lang.String...);
    Code:
       0: new           #23                 // class java/util/HashMap
       3: dup
       4: invokespecial #24                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokestatic  #54                 // Method org/apache/dubbo/common/utils/ArrayUtils.isEmpty:([Ljava/lang/Object;)Z
      12: ifeq          17
      15: aload_1
      16: areturn
      17: aload_0
      18: arraylength
      19: ifle          69
      22: aload_0
      23: arraylength
      24: iconst_2
      25: irem
      26: ifeq          39
      29: new           #13                 // class java/lang/IllegalArgumentException
      32: dup
      33: ldc           #55                 // String pairs must be even.
      35: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: iconst_0
      40: istore_2
      41: iload_2
      42: aload_0
      43: arraylength
      44: if_icmpge     69
      47: aload_1
      48: aload_0
      49: iload_2
      50: aaload
      51: aload_0
      52: iload_2
      53: iconst_1
      54: iadd
      55: aaload
      56: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: iload_2
      63: iconst_2
      64: iadd
      65: istore_2
      66: goto          41
      69: aload_1
      70: areturn

  public static <K, V> java.util.Map<K, V> toMap(java.lang.Object...);
    Code:
       0: new           #23                 // class java/util/HashMap
       3: dup
       4: invokespecial #24                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: ifnull        17
      12: aload_0
      13: arraylength
      14: ifne          19
      17: aload_1
      18: areturn
      19: aload_0
      20: arraylength
      21: iconst_2
      22: irem
      23: ifeq          36
      26: new           #13                 // class java/lang/IllegalArgumentException
      29: dup
      30: ldc           #56                 // String Map pairs can not be odd number.
      32: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: arraylength
      38: iconst_2
      39: idiv
      40: istore_2
      41: iconst_0
      42: istore_3
      43: iload_3
      44: iload_2
      45: if_icmpge     73
      48: aload_1
      49: aload_0
      50: iconst_2
      51: iload_3
      52: imul
      53: aaload
      54: aload_0
      55: iconst_2
      56: iload_3
      57: imul
      58: iconst_1
      59: iadd
      60: aaload
      61: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: iinc          3, 1
      70: goto          43
      73: aload_1
      74: areturn

  public static <K, V> java.util.Map<K, V> objToMap(java.lang.Object) throws java.lang.IllegalAccessException;
    Code:
       0: new           #23                 // class java/util/HashMap
       3: dup
       4: invokespecial #24                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: ifnull        81
      12: aload_0
      13: invokevirtual #57                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokevirtual #58                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      19: astore_2
      20: aload_2
      21: astore_3
      22: aload_3
      23: arraylength
      24: istore        4
      26: iconst_0
      27: istore        5
      29: iload         5
      31: iload         4
      33: if_icmpge     81
      36: aload_3
      37: iload         5
      39: aaload
      40: astore        6
      42: aload         6
      44: iconst_1
      45: invokevirtual #59                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      48: aload         6
      50: aload_0
      51: invokevirtual #60                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      54: astore        7
      56: aload         7
      58: ifnull        75
      61: aload_1
      62: aload         6
      64: invokevirtual #61                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      67: aload         7
      69: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: iinc          5, 1
      78: goto          29
      81: aload_1
      82: areturn

  public static boolean isEmpty(java.util.Collection<?>);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #62,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public static boolean isNotEmpty(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokestatic  #63                 // Method isEmpty:(Ljava/util/Collection;)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static boolean isEmptyMap(java.util.Map);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #12,  1           // InterfaceMethod java/util/Map.size:()I
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public static boolean isNotEmptyMap(java.util.Map);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method isEmptyMap:(Ljava/util/Map;)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static <T> java.util.Set<T> ofSet(T...);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: iconst_0
       5: goto          10
       8: aload_0
       9: arraylength
      10: istore_1
      11: iload_1
      12: iconst_1
      13: if_icmpge     20
      16: invokestatic  #64                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      19: areturn
      20: fconst_1
      21: iload_1
      22: iconst_1
      23: iadd
      24: i2f
      25: fconst_1
      26: fmul
      27: fdiv
      28: fstore_2
      29: fload_2
      30: ldc           #65                 // float 0.75f
      32: fcmpl
      33: ifle          39
      36: ldc           #65                 // float 0.75f
      38: fstore_2
      39: new           #66                 // class java/util/LinkedHashSet
      42: dup
      43: iload_1
      44: fload_2
      45: invokespecial #67                 // Method java/util/LinkedHashSet."<init>":(IF)V
      48: astore_3
      49: iconst_0
      50: istore        4
      52: iload         4
      54: iload_1
      55: if_icmpge     75
      58: aload_3
      59: aload_0
      60: iload         4
      62: aaload
      63: invokeinterface #68,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      68: pop
      69: iinc          4, 1
      72: goto          52
      75: aload_3
      76: invokestatic  #69                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      79: areturn

  public static int size(java.util.Collection<?>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: iconst_0
       5: goto          14
       8: aload_0
       9: invokeinterface #70,  1           // InterfaceMethod java/util/Collection.size:()I
      14: ireturn

  public static boolean equals(java.util.Collection<?>, java.util.Collection<?>);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: invokestatic  #63                 // Method isEmpty:(Ljava/util/Collection;)Z
      11: ifeq          23
      14: aload_1
      15: invokestatic  #63                 // Method isEmpty:(Ljava/util/Collection;)Z
      18: ifeq          23
      21: iconst_1
      22: ireturn
      23: aload_0
      24: invokestatic  #71                 // Method size:(Ljava/util/Collection;)I
      27: aload_1
      28: invokestatic  #71                 // Method size:(Ljava/util/Collection;)I
      31: if_icmpeq     36
      34: iconst_0
      35: ireturn
      36: aload_0
      37: aload_1
      38: invokeinterface #72,  2           // InterfaceMethod java/util/Collection.containsAll:(Ljava/util/Collection;)Z
      43: ireturn
      44: astore_2
      45: iconst_0
      46: ireturn
    Exception table:
       from    to  target type
          36    43    44   Class java/lang/ClassCastException
          36    43    44   Class java/lang/NullPointerException

  public static <T> int addAll(java.util.Collection<T>, T...);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: iconst_0
       5: goto          10
       8: aload_1
       9: arraylength
      10: istore_2
      11: aload_0
      12: ifnull        20
      15: iload_2
      16: iconst_1
      17: if_icmpge     22
      20: iconst_0
      21: ireturn
      22: iconst_0
      23: istore_3
      24: iconst_0
      25: istore        4
      27: iload         4
      29: iload_2
      30: if_icmpge     55
      33: aload_0
      34: aload_1
      35: iload         4
      37: aaload
      38: invokeinterface #75,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      43: ifeq          49
      46: iinc          3, 1
      49: iinc          4, 1
      52: goto          27
      55: iload_3
      56: ireturn

  public static <T> T first(java.util.Collection<T>);
    Code:
       0: aload_0
       1: invokestatic  #63                 // Method isEmpty:(Ljava/util/Collection;)Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: instanceof    #31                 // class java/util/List
      13: ifeq          29
      16: aload_0
      17: checkcast     #31                 // class java/util/List
      20: astore_1
      21: aload_1
      22: iconst_0
      23: invokeinterface #76,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: areturn
      29: aload_0
      30: invokeinterface #77,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      35: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: areturn

  public static <T> java.util.Set<T> toTreeSet(java.util.Set<T>);
    Code:
       0: aload_0
       1: invokestatic  #63                 // Method isEmpty:(Ljava/util/Collection;)Z
       4: ifeq          9
       7: aload_0
       8: areturn
       9: aload_0
      10: instanceof    #78                 // class java/util/TreeSet
      13: ifne          25
      16: new           #78                 // class java/util/TreeSet
      19: dup
      20: aload_0
      21: invokespecial #79                 // Method java/util/TreeSet."<init>":(Ljava/util/Collection;)V
      24: astore_0
      25: aload_0
      26: areturn

  private static int lambda$static$0(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     10
       4: aload_1
       5: ifnonnull     10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: ifnonnull     16
      14: iconst_m1
      15: ireturn
      16: aload_1
      17: ifnonnull     22
      20: iconst_1
      21: ireturn
      22: aload_0
      23: bipush        46
      25: invokevirtual #80                 // Method java/lang/String.lastIndexOf:(I)I
      28: istore_2
      29: iload_2
      30: iflt          41
      33: aload_0
      34: iload_2
      35: iconst_1
      36: iadd
      37: invokevirtual #41                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      40: astore_0
      41: aload_1
      42: bipush        46
      44: invokevirtual #80                 // Method java/lang/String.lastIndexOf:(I)I
      47: istore_3
      48: iload_3
      49: iflt          60
      52: aload_1
      53: iload_3
      54: iconst_1
      55: iadd
      56: invokevirtual #41                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      59: astore_1
      60: aload_0
      61: aload_1
      62: invokevirtual #81                 // Method java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I
      65: ireturn

  static {};
    Code:
       0: invokedynamic #82,  0             // InvokeDynamic #2:compare:()Ljava/util/Comparator;
       5: putstatic     #5                  // Field SIMPLE_NAME_COMPARATOR:Ljava/util/Comparator;
       8: return
}
