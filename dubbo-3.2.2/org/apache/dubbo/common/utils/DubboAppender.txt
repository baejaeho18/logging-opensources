Compiled from "DubboAppender.java"
public class org.apache.dubbo.common.utils.DubboAppender extends org.apache.log4j.FileAppender {
  private static final java.lang.String DEFAULT_FILE_NAME;

  public static boolean available;

  public static java.util.List<org.apache.dubbo.common.utils.Log> logList;

  public org.apache.dubbo.common.utils.DubboAppender();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/log4j/FileAppender."<init>":()V
       4: aload_0
       5: ldc           #3                  // String dubbo.log
       7: invokevirtual #4                  // Method setFile:(Ljava/lang/String;)V
      10: return

  public static void doStart();
    Code:
       0: iconst_1
       1: putstatic     #5                  // Field available:Z
       4: return

  public static void doStop();
    Code:
       0: iconst_0
       1: putstatic     #5                  // Field available:Z
       4: return

  public static void clear();
    Code:
       0: getstatic     #6                  // Field logList:Ljava/util/List;
       3: invokeinterface #7,  1            // InterfaceMethod java/util/List.clear:()V
       8: return

  public void append(org.apache.log4j.spi.LoggingEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/apache/log4j/FileAppender.append:(Lorg/apache/log4j/spi/LoggingEvent;)V
       5: getstatic     #5                  // Field available:Z
       8: ifeq          27
      11: aload_0
      12: aload_1
      13: invokespecial #9                  // Method parseLog:(Lorg/apache/log4j/spi/LoggingEvent;)Lorg/apache/dubbo/common/utils/Log;
      16: astore_2
      17: getstatic     #6                  // Field logList:Ljava/util/List;
      20: aload_2
      21: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      26: pop
      27: return

  private org.apache.dubbo.common.utils.Log parseLog(org.apache.log4j.spi.LoggingEvent);
    Code:
       0: new           #11                 // class org/apache/dubbo/common/utils/Log
       3: dup
       4: invokespecial #12                 // Method org/apache/dubbo/common/utils/Log."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #13                 // Method org/apache/log4j/spi/LoggingEvent.getLogger:()Lorg/apache/log4j/Category;
      13: invokevirtual #14                 // Method org/apache/log4j/Category.getName:()Ljava/lang/String;
      16: invokevirtual #15                 // Method org/apache/dubbo/common/utils/Log.setLogName:(Ljava/lang/String;)V
      19: aload_2
      20: aload_1
      21: invokevirtual #16                 // Method org/apache/log4j/spi/LoggingEvent.getLevel:()Lorg/apache/log4j/Level;
      24: invokevirtual #17                 // Method org/apache/dubbo/common/utils/Log.setLogLevel:(Lorg/apache/log4j/Level;)V
      27: aload_2
      28: aload_1
      29: invokevirtual #18                 // Method org/apache/log4j/spi/LoggingEvent.getThreadName:()Ljava/lang/String;
      32: invokevirtual #19                 // Method org/apache/dubbo/common/utils/Log.setLogThread:(Ljava/lang/String;)V
      35: aload_2
      36: aload_1
      37: invokevirtual #20                 // Method org/apache/log4j/spi/LoggingEvent.getMessage:()Ljava/lang/Object;
      40: invokevirtual #21                 // Method java/lang/Object.toString:()Ljava/lang/String;
      43: invokevirtual #22                 // Method org/apache/dubbo/common/utils/Log.setLogMessage:(Ljava/lang/String;)V
      46: aload_2
      47: areturn

  static {};
    Code:
       0: iconst_0
       1: putstatic     #5                  // Field available:Z
       4: new           #23                 // class java/util/ArrayList
       7: dup
       8: invokespecial #24                 // Method java/util/ArrayList."<init>":()V
      11: putstatic     #6                  // Field logList:Ljava/util/List;
      14: return
}
