Compiled from "AtomicPositiveInteger.java"
public class org.apache.dubbo.common.utils.AtomicPositiveInteger extends java.lang.Number {
  private static final long serialVersionUID;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<org.apache.dubbo.common.utils.AtomicPositiveInteger> INDEX_UPDATER;

  private volatile int index;

  public org.apache.dubbo.common.utils.AtomicPositiveInteger();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Number."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field index:I
       9: return

  public org.apache.dubbo.common.utils.AtomicPositiveInteger(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Number."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field index:I
       9: getstatic     #3                  // Field INDEX_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      12: aload_0
      13: iload_1
      14: invokevirtual #4                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
      17: return

  public final int getAndIncrement();
    Code:
       0: getstatic     #3                  // Field INDEX_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ldc           #7                  // int 2147483647
       9: iand
      10: ireturn

  public final int getAndDecrement();
    Code:
       0: getstatic     #3                  // Field INDEX_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndDecrement:(Ljava/lang/Object;)I
       7: ldc           #7                  // int 2147483647
       9: iand
      10: ireturn

  public final int incrementAndGet();
    Code:
       0: getstatic     #3                  // Field INDEX_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.incrementAndGet:(Ljava/lang/Object;)I
       7: ldc           #7                  // int 2147483647
       9: iand
      10: ireturn

  public final int decrementAndGet();
    Code:
       0: getstatic     #3                  // Field INDEX_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
       7: ldc           #7                  // int 2147483647
       9: iand
      10: ireturn

  public final int get();
    Code:
       0: getstatic     #3                  // Field INDEX_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
       7: ldc           #7                  // int 2147483647
       9: iand
      10: ireturn

  public final void set(int);
    Code:
       0: iload_1
       1: ifge          36
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #13                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #15                 // String new value
      17: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #18                 // String  < 0
      26: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: getstatic     #3                  // Field INDEX_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      39: aload_0
      40: iload_1
      41: invokevirtual #4                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
      44: return

  public final int getAndSet(int);
    Code:
       0: iload_1
       1: ifge          36
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #13                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #15                 // String new value
      17: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #18                 // String  < 0
      26: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: getstatic     #3                  // Field INDEX_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      39: aload_0
      40: iload_1
      41: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      44: ldc           #7                  // int 2147483647
      46: iand
      47: ireturn

  public final int getAndAdd(int);
    Code:
       0: iload_1
       1: ifge          36
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #13                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #22                 // String delta
      17: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #18                 // String  < 0
      26: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: getstatic     #3                  // Field INDEX_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      39: aload_0
      40: iload_1
      41: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndAdd:(Ljava/lang/Object;I)I
      44: ldc           #7                  // int 2147483647
      46: iand
      47: ireturn

  public final int addAndGet(int);
    Code:
       0: iload_1
       1: ifge          36
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #13                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #22                 // String delta
      17: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #18                 // String  < 0
      26: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: getstatic     #3                  // Field INDEX_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      39: aload_0
      40: iload_1
      41: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
      44: ldc           #7                  // int 2147483647
      46: iand
      47: ireturn

  public final boolean compareAndSet(int, int);
    Code:
       0: iload_2
       1: ifge          36
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #13                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #25                 // String update value
      17: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_2
      21: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #18                 // String  < 0
      26: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: getstatic     #3                  // Field INDEX_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      39: aload_0
      40: iload_1
      41: iload_2
      42: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      45: ireturn

  public final boolean weakCompareAndSet(int, int);
    Code:
       0: iload_2
       1: ifge          36
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #13                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #25                 // String update value
      17: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_2
      21: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #18                 // String  < 0
      26: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: getstatic     #3                  // Field INDEX_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      39: aload_0
      40: iload_1
      41: iload_2
      42: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.weakCompareAndSet:(Ljava/lang/Object;II)Z
      45: ireturn

  public byte byteValue();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method get:()I
       4: i2b
       5: ireturn

  public short shortValue();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method get:()I
       4: i2s
       5: ireturn

  public int intValue();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method get:()I
       4: ireturn

  public long longValue();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method get:()I
       4: i2l
       5: lreturn

  public float floatValue();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method get:()I
       4: i2f
       5: freturn

  public double doubleValue();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method get:()I
       4: i2d
       5: dreturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method get:()I
       4: invokestatic  #29                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       7: areturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: invokevirtual #28                 // Method get:()I
      13: iadd
      14: istore_2
      15: iload_2
      16: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #30                 // class org/apache/dubbo/common/utils/AtomicPositiveInteger
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #30                 // class org/apache/dubbo/common/utils/AtomicPositiveInteger
      20: astore_2
      21: aload_0
      22: invokevirtual #31                 // Method intValue:()I
      25: aload_2
      26: invokevirtual #31                 // Method intValue:()I
      29: if_icmpne     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  static {};
    Code:
       0: ldc           #30                 // class org/apache/dubbo/common/utils/AtomicPositiveInteger
       2: ldc           #32                 // String index
       4: invokestatic  #33                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #3                  // Field INDEX_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
