Compiled from "SerializeSecurityManager.java"
public class org.apache.dubbo.common.utils.SerializeSecurityManager {
  private static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  private final java.util.Set<java.lang.String> allowedPrefix;

  private final java.util.Set<java.lang.String> alwaysAllowedPrefix;

  private final java.util.Set<java.lang.String> disAllowedPrefix;

  private final java.util.Set<org.apache.dubbo.common.utils.AllowClassNotifyListener> listeners;

  private final java.util.Set<java.lang.String> warnedClasses;

  private volatile org.apache.dubbo.common.utils.SerializeCheckStatus checkStatus;

  private volatile org.apache.dubbo.common.utils.SerializeCheckStatus defaultCheckStatus;

  private volatile java.lang.Boolean checkSerializable;

  public org.apache.dubbo.common.utils.SerializeSecurityManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/apache/dubbo/common/utils/ConcurrentHashSet
       8: dup
       9: invokespecial #3                  // Method org/apache/dubbo/common/utils/ConcurrentHashSet."<init>":()V
      12: putfield      #4                  // Field allowedPrefix:Ljava/util/Set;
      15: aload_0
      16: new           #2                  // class org/apache/dubbo/common/utils/ConcurrentHashSet
      19: dup
      20: invokespecial #3                  // Method org/apache/dubbo/common/utils/ConcurrentHashSet."<init>":()V
      23: putfield      #5                  // Field alwaysAllowedPrefix:Ljava/util/Set;
      26: aload_0
      27: new           #2                  // class org/apache/dubbo/common/utils/ConcurrentHashSet
      30: dup
      31: invokespecial #3                  // Method org/apache/dubbo/common/utils/ConcurrentHashSet."<init>":()V
      34: putfield      #6                  // Field disAllowedPrefix:Ljava/util/Set;
      37: aload_0
      38: new           #2                  // class org/apache/dubbo/common/utils/ConcurrentHashSet
      41: dup
      42: invokespecial #3                  // Method org/apache/dubbo/common/utils/ConcurrentHashSet."<init>":()V
      45: putfield      #7                  // Field listeners:Ljava/util/Set;
      48: aload_0
      49: new           #2                  // class org/apache/dubbo/common/utils/ConcurrentHashSet
      52: dup
      53: iconst_1
      54: invokespecial #8                  // Method org/apache/dubbo/common/utils/ConcurrentHashSet."<init>":(I)V
      57: putfield      #9                  // Field warnedClasses:Ljava/util/Set;
      60: aload_0
      61: aconst_null
      62: putfield      #10                 // Field checkStatus:Lorg/apache/dubbo/common/utils/SerializeCheckStatus;
      65: aload_0
      66: getstatic     #11                 // Field org/apache/dubbo/common/utils/AllowClassNotifyListener.DEFAULT_STATUS:Lorg/apache/dubbo/common/utils/SerializeCheckStatus;
      69: putfield      #12                 // Field defaultCheckStatus:Lorg/apache/dubbo/common/utils/SerializeCheckStatus;
      72: aload_0
      73: aconst_null
      74: putfield      #13                 // Field checkSerializable:Ljava/lang/Boolean;
      77: return

  public void addToAlwaysAllowed(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field alwaysAllowedPrefix:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: istore_2
      11: iload_2
      12: ifeq          19
      15: aload_0
      16: invokespecial #15                 // Method notifyPrefix:()V
      19: return

  public void addToAllowed(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field disAllowedPrefix:Ljava/util/Set;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
       9: aload_1
      10: dup
      11: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: pop
      15: invokedynamic #18,  0             // InvokeDynamic #0:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      20: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      25: ifeq          29
      28: return
      29: aload_0
      30: getfield      #4                  // Field allowedPrefix:Ljava/util/Set;
      33: aload_1
      34: invokeinterface #14,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      39: istore_2
      40: iload_2
      41: ifeq          48
      44: aload_0
      45: invokespecial #15                 // Method notifyPrefix:()V
      48: return

  public void addToDisAllowed(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field disAllowedPrefix:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: istore_2
      11: aload_0
      12: getfield      #4                  // Field allowedPrefix:Ljava/util/Set;
      15: aload_1
      16: invokedynamic #20,  0             // InvokeDynamic #1:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      21: invokeinterface #21,  2           // InterfaceMethod java/util/Set.removeIf:(Ljava/util/function/Predicate;)Z
      26: ifne          33
      29: iload_2
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: istore_2
      39: iload_2
      40: ifeq          47
      43: aload_0
      44: invokespecial #15                 // Method notifyPrefix:()V
      47: aload_1
      48: getstatic     #22                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
      51: invokevirtual #23                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      54: astore_3
      55: aload_3
      56: aload_1
      57: invokestatic  #24                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      60: ifne          68
      63: aload_0
      64: aload_3
      65: invokevirtual #25                 // Method addToDisAllowed:(Ljava/lang/String;)V
      68: return

  public void setCheckStatus(org.apache.dubbo.common.utils.SerializeCheckStatus);
    Code:
       0: aload_0
       1: getfield      #10                 // Field checkStatus:Lorg/apache/dubbo/common/utils/SerializeCheckStatus;
       4: ifnonnull     47
       7: aload_0
       8: aload_1
       9: putfield      #10                 // Field checkStatus:Lorg/apache/dubbo/common/utils/SerializeCheckStatus;
      12: getstatic     #26                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      15: new           #27                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #29                 // String Serialize check level:
      24: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #31                 // Method org/apache/dubbo/common/utils/SerializeCheckStatus.name:()Ljava/lang/String;
      31: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokeinterface #33,  2           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.info:(Ljava/lang/String;)V
      42: aload_0
      43: invokespecial #34                 // Method notifyCheckStatus:()V
      46: return
      47: aload_0
      48: getfield      #10                 // Field checkStatus:Lorg/apache/dubbo/common/utils/SerializeCheckStatus;
      51: invokevirtual #35                 // Method org/apache/dubbo/common/utils/SerializeCheckStatus.level:()I
      54: aload_1
      55: invokevirtual #35                 // Method org/apache/dubbo/common/utils/SerializeCheckStatus.level:()I
      58: if_icmpgt     62
      61: return
      62: aload_0
      63: aload_1
      64: putfield      #10                 // Field checkStatus:Lorg/apache/dubbo/common/utils/SerializeCheckStatus;
      67: getstatic     #26                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      70: new           #27                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      77: ldc           #29                 // String Serialize check level:
      79: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_1
      83: invokevirtual #31                 // Method org/apache/dubbo/common/utils/SerializeCheckStatus.name:()Ljava/lang/String;
      86: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokeinterface #33,  2           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.info:(Ljava/lang/String;)V
      97: aload_0
      98: invokespecial #34                 // Method notifyCheckStatus:()V
     101: return

  public void setDefaultCheckStatus(org.apache.dubbo.common.utils.SerializeCheckStatus);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field defaultCheckStatus:Lorg/apache/dubbo/common/utils/SerializeCheckStatus;
       5: getstatic     #26                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: new           #27                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #36                 // String Serialize check default level:
      17: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_1
      21: invokevirtual #31                 // Method org/apache/dubbo/common/utils/SerializeCheckStatus.name:()Ljava/lang/String;
      24: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokeinterface #33,  2           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.info:(Ljava/lang/String;)V
      35: aload_0
      36: invokespecial #34                 // Method notifyCheckStatus:()V
      39: return

  public void setCheckSerializable(boolean);
    Code:
       0: aload_0
       1: getfield      #13                 // Field checkSerializable:Ljava/lang/Boolean;
       4: ifnull        24
       7: getstatic     #37                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      10: aload_0
      11: getfield      #13                 // Field checkSerializable:Ljava/lang/Boolean;
      14: invokevirtual #38                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      17: ifeq          63
      20: iload_1
      21: ifne          63
      24: aload_0
      25: iload_1
      26: invokestatic  #39                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      29: putfield      #13                 // Field checkSerializable:Ljava/lang/Boolean;
      32: getstatic     #26                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      35: new           #27                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #40                 // String Serialize check serializable:
      44: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: iload_1
      48: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      51: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokeinterface #33,  2           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.info:(Ljava/lang/String;)V
      59: aload_0
      60: invokespecial #42                 // Method notifyCheckSerializable:()V
      63: return

  public void registerListener(org.apache.dubbo.common.utils.AllowClassNotifyListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: aload_0
      13: invokevirtual #43                 // Method getAllowedPrefix:()Ljava/util/Set;
      16: aload_0
      17: invokevirtual #44                 // Method getDisAllowedPrefix:()Ljava/util/Set;
      20: invokeinterface #45,  3           // InterfaceMethod org/apache/dubbo/common/utils/AllowClassNotifyListener.notifyPrefix:(Ljava/util/Set;Ljava/util/Set;)V
      25: aload_1
      26: aload_0
      27: invokevirtual #46                 // Method isCheckSerializable:()Z
      30: invokeinterface #47,  2           // InterfaceMethod org/apache/dubbo/common/utils/AllowClassNotifyListener.notifyCheckSerializable:(Z)V
      35: aload_1
      36: aload_0
      37: invokevirtual #48                 // Method getCheckStatus:()Lorg/apache/dubbo/common/utils/SerializeCheckStatus;
      40: invokeinterface #49,  2           // InterfaceMethod org/apache/dubbo/common/utils/AllowClassNotifyListener.notifyCheckStatus:(Lorg/apache/dubbo/common/utils/SerializeCheckStatus;)V
      45: return

  private void notifyPrefix();
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Set;
       4: invokeinterface #50,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          46
      19: aload_1
      20: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #53                 // class org/apache/dubbo/common/utils/AllowClassNotifyListener
      28: astore_2
      29: aload_2
      30: aload_0
      31: invokevirtual #43                 // Method getAllowedPrefix:()Ljava/util/Set;
      34: aload_0
      35: invokevirtual #44                 // Method getDisAllowedPrefix:()Ljava/util/Set;
      38: invokeinterface #45,  3           // InterfaceMethod org/apache/dubbo/common/utils/AllowClassNotifyListener.notifyPrefix:(Ljava/util/Set;Ljava/util/Set;)V
      43: goto          10
      46: return

  private void notifyCheckStatus();
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Set;
       4: invokeinterface #50,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_1
      20: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #53                 // class org/apache/dubbo/common/utils/AllowClassNotifyListener
      28: astore_2
      29: aload_2
      30: aload_0
      31: invokevirtual #48                 // Method getCheckStatus:()Lorg/apache/dubbo/common/utils/SerializeCheckStatus;
      34: invokeinterface #49,  2           // InterfaceMethod org/apache/dubbo/common/utils/AllowClassNotifyListener.notifyCheckStatus:(Lorg/apache/dubbo/common/utils/SerializeCheckStatus;)V
      39: goto          10
      42: return

  private void notifyCheckSerializable();
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Set;
       4: invokeinterface #50,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_1
      20: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #53                 // class org/apache/dubbo/common/utils/AllowClassNotifyListener
      28: astore_2
      29: aload_2
      30: aload_0
      31: invokevirtual #46                 // Method isCheckSerializable:()Z
      34: invokeinterface #47,  2           // InterfaceMethod org/apache/dubbo/common/utils/AllowClassNotifyListener.notifyCheckSerializable:(Z)V
      39: goto          10
      42: return

  protected org.apache.dubbo.common.utils.SerializeCheckStatus getCheckStatus();
    Code:
       0: aload_0
       1: getfield      #10                 // Field checkStatus:Lorg/apache/dubbo/common/utils/SerializeCheckStatus;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #12                 // Field defaultCheckStatus:Lorg/apache/dubbo/common/utils/SerializeCheckStatus;
      11: goto          18
      14: aload_0
      15: getfield      #10                 // Field checkStatus:Lorg/apache/dubbo/common/utils/SerializeCheckStatus;
      18: areturn

  protected java.util.Set<java.lang.String> getAllowedPrefix();
    Code:
       0: new           #2                  // class org/apache/dubbo/common/utils/ConcurrentHashSet
       3: dup
       4: invokespecial #3                  // Method org/apache/dubbo/common/utils/ConcurrentHashSet."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #4                  // Field allowedPrefix:Ljava/util/Set;
      13: invokeinterface #54,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      18: pop
      19: aload_1
      20: aload_0
      21: getfield      #5                  // Field alwaysAllowedPrefix:Ljava/util/Set;
      24: invokeinterface #54,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      29: pop
      30: aload_1
      31: areturn

  protected java.util.Set<java.lang.String> getDisAllowedPrefix();
    Code:
       0: new           #2                  // class org/apache/dubbo/common/utils/ConcurrentHashSet
       3: dup
       4: invokespecial #3                  // Method org/apache/dubbo/common/utils/ConcurrentHashSet."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #6                  // Field disAllowedPrefix:Ljava/util/Set;
      13: invokeinterface #54,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      18: pop
      19: aload_1
      20: areturn

  protected boolean isCheckSerializable();
    Code:
       0: aload_0
       1: getfield      #13                 // Field checkSerializable:Ljava/lang/Boolean;
       4: ifnull        17
       7: aload_0
       8: getfield      #13                 // Field checkSerializable:Ljava/lang/Boolean;
      11: invokevirtual #55                 // Method java/lang/Boolean.booleanValue:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public java.util.Set<java.lang.String> getWarnedClasses();
    Code:
       0: aload_0
       1: getfield      #9                  // Field warnedClasses:Ljava/util/Set;
       4: areturn

  private static boolean lambda$addToDisAllowed$0(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #56                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       5: ireturn

  static {};
    Code:
       0: ldc           #57                 // class org/apache/dubbo/common/utils/SerializeSecurityManager
       2: invokestatic  #58                 // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #26                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: return
}
