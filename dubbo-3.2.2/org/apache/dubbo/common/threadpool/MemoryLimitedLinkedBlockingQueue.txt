Compiled from "MemoryLimitedLinkedBlockingQueue.java"
public class org.apache.dubbo.common.threadpool.MemoryLimitedLinkedBlockingQueue<E> extends java.util.concurrent.LinkedBlockingQueue<E> {
  private static final long serialVersionUID;

  private final org.apache.dubbo.common.threadpool.MemoryLimiter memoryLimiter;

  public org.apache.dubbo.common.threadpool.MemoryLimitedLinkedBlockingQueue(java.lang.instrument.Instrumentation);
    Code:
       0: aload_0
       1: ldc2_w        #2                  // long 2147483647l
       4: aload_1
       5: invokespecial #4                  // Method "<init>":(JLjava/lang/instrument/Instrumentation;)V
       8: return

  public org.apache.dubbo.common.threadpool.MemoryLimitedLinkedBlockingQueue(long, java.lang.instrument.Instrumentation);
    Code:
       0: aload_0
       1: ldc           #5                  // int 2147483647
       3: invokespecial #6                  // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
       6: aload_0
       7: new           #7                  // class org/apache/dubbo/common/threadpool/MemoryLimiter
      10: dup
      11: lload_1
      12: aload_3
      13: invokespecial #8                  // Method org/apache/dubbo/common/threadpool/MemoryLimiter."<init>":(JLjava/lang/instrument/Instrumentation;)V
      16: putfield      #9                  // Field memoryLimiter:Lorg/apache/dubbo/common/threadpool/MemoryLimiter;
      19: return

  public org.apache.dubbo.common.threadpool.MemoryLimitedLinkedBlockingQueue(java.util.Collection<? extends E>, long, java.lang.instrument.Instrumentation);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(Ljava/util/Collection;)V
       5: aload_0
       6: new           #7                  // class org/apache/dubbo/common/threadpool/MemoryLimiter
       9: dup
      10: lload_2
      11: aload         4
      13: invokespecial #8                  // Method org/apache/dubbo/common/threadpool/MemoryLimiter."<init>":(JLjava/lang/instrument/Instrumentation;)V
      16: putfield      #9                  // Field memoryLimiter:Lorg/apache/dubbo/common/threadpool/MemoryLimiter;
      19: return

  public void setMemoryLimit(long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field memoryLimiter:Lorg/apache/dubbo/common/threadpool/MemoryLimiter;
       4: lload_1
       5: invokevirtual #11                 // Method org/apache/dubbo/common/threadpool/MemoryLimiter.setMemoryLimit:(J)V
       8: return

  public long getMemoryLimit();
    Code:
       0: aload_0
       1: getfield      #9                  // Field memoryLimiter:Lorg/apache/dubbo/common/threadpool/MemoryLimiter;
       4: invokevirtual #12                 // Method org/apache/dubbo/common/threadpool/MemoryLimiter.getMemoryLimit:()J
       7: lreturn

  public long getCurrentMemory();
    Code:
       0: aload_0
       1: getfield      #9                  // Field memoryLimiter:Lorg/apache/dubbo/common/threadpool/MemoryLimiter;
       4: invokevirtual #13                 // Method org/apache/dubbo/common/threadpool/MemoryLimiter.getCurrentMemory:()J
       7: lreturn

  public long getCurrentRemainMemory();
    Code:
       0: aload_0
       1: getfield      #9                  // Field memoryLimiter:Lorg/apache/dubbo/common/threadpool/MemoryLimiter;
       4: invokevirtual #14                 // Method org/apache/dubbo/common/threadpool/MemoryLimiter.getCurrentRemainMemory:()J
       7: lreturn

  public void put(E) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field memoryLimiter:Lorg/apache/dubbo/common/threadpool/MemoryLimiter;
       4: aload_1
       5: invokevirtual #15                 // Method org/apache/dubbo/common/threadpool/MemoryLimiter.acquireInterruptibly:(Ljava/lang/Object;)V
       8: aload_0
       9: aload_1
      10: invokespecial #16                 // Method java/util/concurrent/LinkedBlockingQueue.put:(Ljava/lang/Object;)V
      13: return

  public boolean offer(E, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field memoryLimiter:Lorg/apache/dubbo/common/threadpool/MemoryLimiter;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokevirtual #17                 // Method org/apache/dubbo/common/threadpool/MemoryLimiter.acquire:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
      11: ifeq          29
      14: aload_0
      15: aload_1
      16: lload_2
      17: aload         4
      19: invokespecial #18                 // Method java/util/concurrent/LinkedBlockingQueue.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public boolean offer(E);
    Code:
       0: aload_0
       1: getfield      #9                  // Field memoryLimiter:Lorg/apache/dubbo/common/threadpool/MemoryLimiter;
       4: aload_1
       5: invokevirtual #19                 // Method org/apache/dubbo/common/threadpool/MemoryLimiter.acquire:(Ljava/lang/Object;)Z
       8: ifeq          23
      11: aload_0
      12: aload_1
      13: invokespecial #20                 // Method java/util/concurrent/LinkedBlockingQueue.offer:(Ljava/lang/Object;)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public E take() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/util/concurrent/LinkedBlockingQueue.take:()Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #9                  // Field memoryLimiter:Lorg/apache/dubbo/common/threadpool/MemoryLimiter;
       9: aload_1
      10: invokevirtual #22                 // Method org/apache/dubbo/common/threadpool/MemoryLimiter.releaseInterruptibly:(Ljava/lang/Object;)V
      13: aload_1
      14: areturn

  public E poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokespecial #23                 // Method java/util/concurrent/LinkedBlockingQueue.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
       6: astore        4
       8: aload_0
       9: getfield      #9                  // Field memoryLimiter:Lorg/apache/dubbo/common/threadpool/MemoryLimiter;
      12: aload         4
      14: lload_1
      15: aload_3
      16: invokevirtual #24                 // Method org/apache/dubbo/common/threadpool/MemoryLimiter.releaseInterruptibly:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)V
      19: aload         4
      21: areturn

  public E poll();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/util/concurrent/LinkedBlockingQueue.poll:()Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #9                  // Field memoryLimiter:Lorg/apache/dubbo/common/threadpool/MemoryLimiter;
       9: aload_1
      10: invokevirtual #26                 // Method org/apache/dubbo/common/threadpool/MemoryLimiter.release:(Ljava/lang/Object;)V
      13: aload_1
      14: areturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #27                 // Method java/util/concurrent/LinkedBlockingQueue.remove:(Ljava/lang/Object;)Z
       5: istore_2
       6: iload_2
       7: ifeq          18
      10: aload_0
      11: getfield      #9                  // Field memoryLimiter:Lorg/apache/dubbo/common/threadpool/MemoryLimiter;
      14: aload_1
      15: invokevirtual #26                 // Method org/apache/dubbo/common/threadpool/MemoryLimiter.release:(Ljava/lang/Object;)V
      18: iload_2
      19: ireturn

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/util/concurrent/LinkedBlockingQueue.clear:()V
       4: aload_0
       5: getfield      #9                  // Field memoryLimiter:Lorg/apache/dubbo/common/threadpool/MemoryLimiter;
       8: invokevirtual #29                 // Method org/apache/dubbo/common/threadpool/MemoryLimiter.clear:()V
      11: return
}
