Compiled from "MemoryLimiter.java"
public class org.apache.dubbo.common.threadpool.MemoryLimiter {
  private final java.lang.instrument.Instrumentation inst;

  private long memoryLimit;

  private final java.util.concurrent.atomic.LongAdder memory;

  private final java.util.concurrent.locks.ReentrantLock acquireLock;

  private final java.util.concurrent.locks.Condition notLimited;

  private final java.util.concurrent.locks.ReentrantLock releaseLock;

  private final java.util.concurrent.locks.Condition notEmpty;

  public org.apache.dubbo.common.threadpool.MemoryLimiter(java.lang.instrument.Instrumentation);
    Code:
       0: aload_0
       1: ldc2_w        #2                  // long 2147483647l
       4: aload_1
       5: invokespecial #4                  // Method "<init>":(JLjava/lang/instrument/Instrumentation;)V
       8: return

  public org.apache.dubbo.common.threadpool.MemoryLimiter(long, java.lang.instrument.Instrumentation);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/atomic/LongAdder
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/atomic/LongAdder."<init>":()V
      12: putfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      15: aload_0
      16: new           #9                  // class java/util/concurrent/locks/ReentrantLock
      19: dup
      20: invokespecial #10                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      23: putfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
      26: aload_0
      27: aload_0
      28: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
      31: invokevirtual #12                 // Method java/util/concurrent/locks/ReentrantLock.newCondition:()Ljava/util/concurrent/locks/Condition;
      34: putfield      #13                 // Field notLimited:Ljava/util/concurrent/locks/Condition;
      37: aload_0
      38: new           #9                  // class java/util/concurrent/locks/ReentrantLock
      41: dup
      42: invokespecial #10                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      45: putfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
      48: aload_0
      49: aload_0
      50: getfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
      53: invokevirtual #12                 // Method java/util/concurrent/locks/ReentrantLock.newCondition:()Ljava/util/concurrent/locks/Condition;
      56: putfield      #15                 // Field notEmpty:Ljava/util/concurrent/locks/Condition;
      59: lload_1
      60: lconst_0
      61: lcmp
      62: ifgt          73
      65: new           #16                 // class java/lang/IllegalArgumentException
      68: dup
      69: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":()V
      72: athrow
      73: aload_0
      74: lload_1
      75: putfield      #18                 // Field memoryLimit:J
      78: aload_0
      79: aload_3
      80: putfield      #19                 // Field inst:Ljava/lang/instrument/Instrumentation;
      83: return

  public void setMemoryLimit(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifgt          14
       6: new           #16                 // class java/lang/IllegalArgumentException
       9: dup
      10: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":()V
      13: athrow
      14: aload_0
      15: lload_1
      16: putfield      #18                 // Field memoryLimit:J
      19: return

  public long getMemoryLimit();
    Code:
       0: aload_0
       1: getfield      #18                 // Field memoryLimit:J
       4: lreturn

  public long getCurrentMemory();
    Code:
       0: aload_0
       1: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
       4: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
       7: lreturn

  public long getCurrentRemainMemory();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getMemoryLimit:()J
       4: aload_0
       5: invokevirtual #22                 // Method getCurrentMemory:()J
       8: lsub
       9: lreturn

  private void signalNotEmpty();
    Code:
       0: aload_0
       1: getfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #15                 // Field notEmpty:Ljava/util/concurrent/locks/Condition;
      11: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      16: aload_0
      17: getfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
      20: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      23: goto          36
      26: astore_1
      27: aload_0
      28: getfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
      31: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      34: aload_1
      35: athrow
      36: return
    Exception table:
       from    to  target type
           7    16    26   any

  private void signalNotLimited();
    Code:
       0: aload_0
       1: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #13                 // Field notLimited:Ljava/util/concurrent/locks/Condition;
      11: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      16: aload_0
      17: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
      20: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      23: goto          36
      26: astore_1
      27: aload_0
      28: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
      31: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      34: aload_1
      35: athrow
      36: return
    Exception table:
       from    to  target type
           7    16    26   any

  private void fullyLock();
    Code:
       0: aload_0
       1: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
      11: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      14: return

  private void fullyUnlock();
    Code:
       0: aload_0
       1: getfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
       7: aload_0
       8: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
      11: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      14: return

  public boolean acquire(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #26                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #27                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      16: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
      19: aload_0
      20: getfield      #18                 // Field memoryLimit:J
      23: lcmp
      24: iflt          29
      27: iconst_0
      28: ireturn
      29: aload_0
      30: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
      33: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      36: aload_0
      37: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      40: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
      43: lstore_2
      44: aload_0
      45: getfield      #19                 // Field inst:Ljava/lang/instrument/Instrumentation;
      48: aload_1
      49: invokeinterface #28,  2           // InterfaceMethod java/lang/instrument/Instrumentation.getObjectSize:(Ljava/lang/Object;)J
      54: lstore        4
      56: lload_2
      57: lload         4
      59: ladd
      60: aload_0
      61: getfield      #18                 // Field memoryLimit:J
      64: lcmp
      65: iflt          81
      68: iconst_0
      69: istore        6
      71: aload_0
      72: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
      75: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      78: iload         6
      80: ireturn
      81: aload_0
      82: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      85: lload         4
      87: invokevirtual #29                 // Method java/util/concurrent/atomic/LongAdder.add:(J)V
      90: aload_0
      91: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      94: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
      97: aload_0
      98: getfield      #18                 // Field memoryLimit:J
     101: lcmp
     102: ifge          114
     105: aload_0
     106: getfield      #13                 // Field notLimited:Ljava/util/concurrent/locks/Condition;
     109: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
     114: aload_0
     115: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
     118: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     121: goto          136
     124: astore        7
     126: aload_0
     127: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
     130: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     133: aload         7
     135: athrow
     136: aload_0
     137: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
     140: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
     143: lconst_0
     144: lcmp
     145: ifle          152
     148: aload_0
     149: invokespecial #30                 // Method signalNotEmpty:()V
     152: iconst_1
     153: ireturn
    Exception table:
       from    to  target type
          36    71   124   any
          81   114   124   any
         124   126   124   any

  public void acquireInterruptibly(java.lang.Object) throws java.lang.InterruptedException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #26                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #27                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #31                 // Method java/util/concurrent/locks/ReentrantLock.lockInterruptibly:()V
      19: aload_0
      20: getfield      #19                 // Field inst:Ljava/lang/instrument/Instrumentation;
      23: aload_1
      24: invokeinterface #28,  2           // InterfaceMethod java/lang/instrument/Instrumentation.getObjectSize:(Ljava/lang/Object;)J
      29: lstore_2
      30: aload_0
      31: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      34: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
      37: lload_2
      38: ladd
      39: aload_0
      40: getfield      #18                 // Field memoryLimit:J
      43: lcmp
      44: iflt          59
      47: aload_0
      48: getfield      #13                 // Field notLimited:Ljava/util/concurrent/locks/Condition;
      51: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/Condition.await:()V
      56: goto          30
      59: aload_0
      60: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      63: lload_2
      64: invokevirtual #29                 // Method java/util/concurrent/atomic/LongAdder.add:(J)V
      67: aload_0
      68: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      71: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
      74: aload_0
      75: getfield      #18                 // Field memoryLimit:J
      78: lcmp
      79: ifge          91
      82: aload_0
      83: getfield      #13                 // Field notLimited:Ljava/util/concurrent/locks/Condition;
      86: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      91: aload_0
      92: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
      95: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      98: goto          113
     101: astore        4
     103: aload_0
     104: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
     107: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     110: aload         4
     112: athrow
     113: aload_0
     114: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
     117: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
     120: lconst_0
     121: lcmp
     122: ifle          129
     125: aload_0
     126: invokespecial #30                 // Method signalNotEmpty:()V
     129: return
    Exception table:
       from    to  target type
          19    91   101   any
         101   103   101   any

  public boolean acquire(java.lang.Object, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #26                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #27                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload         4
      14: lload_2
      15: invokevirtual #33                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      18: lstore        5
      20: aload_0
      21: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
      24: invokevirtual #31                 // Method java/util/concurrent/locks/ReentrantLock.lockInterruptibly:()V
      27: aload_0
      28: getfield      #19                 // Field inst:Ljava/lang/instrument/Instrumentation;
      31: aload_1
      32: invokeinterface #28,  2           // InterfaceMethod java/lang/instrument/Instrumentation.getObjectSize:(Ljava/lang/Object;)J
      37: lstore        7
      39: aload_0
      40: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      43: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
      46: lload         7
      48: ladd
      49: aload_0
      50: getfield      #18                 // Field memoryLimit:J
      53: lcmp
      54: iflt          93
      57: lload         5
      59: lconst_0
      60: lcmp
      61: ifgt          77
      64: iconst_0
      65: istore        9
      67: aload_0
      68: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
      71: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      74: iload         9
      76: ireturn
      77: aload_0
      78: getfield      #13                 // Field notLimited:Ljava/util/concurrent/locks/Condition;
      81: lload         5
      83: invokeinterface #34,  3           // InterfaceMethod java/util/concurrent/locks/Condition.awaitNanos:(J)J
      88: lstore        5
      90: goto          39
      93: aload_0
      94: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      97: lload         7
      99: invokevirtual #29                 // Method java/util/concurrent/atomic/LongAdder.add:(J)V
     102: aload_0
     103: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
     106: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
     109: aload_0
     110: getfield      #18                 // Field memoryLimit:J
     113: lcmp
     114: ifge          126
     117: aload_0
     118: getfield      #13                 // Field notLimited:Ljava/util/concurrent/locks/Condition;
     121: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
     126: aload_0
     127: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
     130: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     133: goto          148
     136: astore        10
     138: aload_0
     139: getfield      #11                 // Field acquireLock:Ljava/util/concurrent/locks/ReentrantLock;
     142: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     145: aload         10
     147: athrow
     148: aload_0
     149: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
     152: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
     155: lconst_0
     156: lcmp
     157: ifle          164
     160: aload_0
     161: invokespecial #30                 // Method signalNotEmpty:()V
     164: iconst_1
     165: ireturn
    Exception table:
       from    to  target type
          27    67   136   any
          77   126   136   any
         136   138   136   any

  public void release(java.lang.Object);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     6
       5: return
       6: aload_0
       7: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      10: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
      13: lconst_0
      14: lcmp
      15: ifne          19
      18: return
      19: aload_0
      20: getfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
      23: invokevirtual #23                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      26: aload_0
      27: getfield      #19                 // Field inst:Ljava/lang/instrument/Instrumentation;
      30: aload_1
      31: invokeinterface #28,  2           // InterfaceMethod java/lang/instrument/Instrumentation.getObjectSize:(Ljava/lang/Object;)J
      36: lstore_2
      37: aload_0
      38: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      41: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
      44: lconst_0
      45: lcmp
      46: ifle          79
      49: aload_0
      50: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      53: lload_2
      54: lneg
      55: invokevirtual #29                 // Method java/util/concurrent/atomic/LongAdder.add:(J)V
      58: aload_0
      59: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      62: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
      65: lconst_0
      66: lcmp
      67: ifle          79
      70: aload_0
      71: getfield      #15                 // Field notEmpty:Ljava/util/concurrent/locks/Condition;
      74: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      79: aload_0
      80: getfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
      83: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      86: goto          101
      89: astore        4
      91: aload_0
      92: getfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
      95: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      98: aload         4
     100: athrow
     101: aload_0
     102: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
     105: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
     108: aload_0
     109: getfield      #18                 // Field memoryLimit:J
     112: lcmp
     113: ifge          120
     116: aload_0
     117: invokespecial #35                 // Method signalNotLimited:()V
     120: return
    Exception table:
       from    to  target type
          26    79    89   any
          89    91    89   any

  public void releaseInterruptibly(java.lang.Object) throws java.lang.InterruptedException;
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     6
       5: return
       6: aload_0
       7: getfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
      10: invokevirtual #31                 // Method java/util/concurrent/locks/ReentrantLock.lockInterruptibly:()V
      13: aload_0
      14: getfield      #19                 // Field inst:Ljava/lang/instrument/Instrumentation;
      17: aload_1
      18: invokeinterface #28,  2           // InterfaceMethod java/lang/instrument/Instrumentation.getObjectSize:(Ljava/lang/Object;)J
      23: lstore_2
      24: aload_0
      25: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      28: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
      31: lconst_0
      32: lcmp
      33: ifne          48
      36: aload_0
      37: getfield      #15                 // Field notEmpty:Ljava/util/concurrent/locks/Condition;
      40: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/Condition.await:()V
      45: goto          24
      48: aload_0
      49: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      52: lload_2
      53: lneg
      54: invokevirtual #29                 // Method java/util/concurrent/atomic/LongAdder.add:(J)V
      57: aload_0
      58: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      61: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
      64: lconst_0
      65: lcmp
      66: ifle          78
      69: aload_0
      70: getfield      #15                 // Field notEmpty:Ljava/util/concurrent/locks/Condition;
      73: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      78: aload_0
      79: getfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
      82: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      85: goto          100
      88: astore        4
      90: aload_0
      91: getfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
      94: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      97: aload         4
      99: athrow
     100: aload_0
     101: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
     104: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
     107: aload_0
     108: getfield      #18                 // Field memoryLimit:J
     111: lcmp
     112: ifge          119
     115: aload_0
     116: invokespecial #35                 // Method signalNotLimited:()V
     119: return
    Exception table:
       from    to  target type
          13    78    88   any
          88    90    88   any

  public void releaseInterruptibly(java.lang.Object, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     6
       5: return
       6: aload         4
       8: lload_2
       9: invokevirtual #33                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      12: lstore        5
      14: aload_0
      15: getfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
      18: invokevirtual #31                 // Method java/util/concurrent/locks/ReentrantLock.lockInterruptibly:()V
      21: aload_0
      22: getfield      #19                 // Field inst:Ljava/lang/instrument/Instrumentation;
      25: aload_1
      26: invokeinterface #28,  2           // InterfaceMethod java/lang/instrument/Instrumentation.getObjectSize:(Ljava/lang/Object;)J
      31: lstore        7
      33: aload_0
      34: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      37: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
      40: lconst_0
      41: lcmp
      42: ifne          76
      45: lload         5
      47: lconst_0
      48: lcmp
      49: ifgt          60
      52: aload_0
      53: getfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
      56: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      59: return
      60: aload_0
      61: getfield      #15                 // Field notEmpty:Ljava/util/concurrent/locks/Condition;
      64: lload         5
      66: invokeinterface #34,  3           // InterfaceMethod java/util/concurrent/locks/Condition.awaitNanos:(J)J
      71: lstore        5
      73: goto          33
      76: aload_0
      77: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      80: lload         7
      82: lneg
      83: invokevirtual #29                 // Method java/util/concurrent/atomic/LongAdder.add:(J)V
      86: aload_0
      87: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
      90: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
      93: lconst_0
      94: lcmp
      95: ifle          107
      98: aload_0
      99: getfield      #15                 // Field notEmpty:Ljava/util/concurrent/locks/Condition;
     102: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
     107: aload_0
     108: getfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
     111: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     114: goto          129
     117: astore        9
     119: aload_0
     120: getfield      #14                 // Field releaseLock:Ljava/util/concurrent/locks/ReentrantLock;
     123: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     126: aload         9
     128: athrow
     129: aload_0
     130: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
     133: invokevirtual #20                 // Method java/util/concurrent/atomic/LongAdder.sum:()J
     136: aload_0
     137: getfield      #18                 // Field memoryLimit:J
     140: lcmp
     141: ifge          148
     144: aload_0
     145: invokespecial #35                 // Method signalNotLimited:()V
     148: return
    Exception table:
       from    to  target type
          21    52   117   any
          60   107   117   any
         117   119   117   any

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #36                 // Method fullyLock:()V
       4: aload_0
       5: getfield      #8                  // Field memory:Ljava/util/concurrent/atomic/LongAdder;
       8: invokevirtual #37                 // Method java/util/concurrent/atomic/LongAdder.sumThenReset:()J
      11: aload_0
      12: getfield      #18                 // Field memoryLimit:J
      15: lcmp
      16: ifge          28
      19: aload_0
      20: getfield      #13                 // Field notLimited:Ljava/util/concurrent/locks/Condition;
      23: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      28: aload_0
      29: invokespecial #38                 // Method fullyUnlock:()V
      32: goto          42
      35: astore_1
      36: aload_0
      37: invokespecial #38                 // Method fullyUnlock:()V
      40: aload_1
      41: athrow
      42: return
    Exception table:
       from    to  target type
           4    28    35   any
}
