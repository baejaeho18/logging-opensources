Compiled from "AbstractDynamicConfiguration.java"
public abstract class org.apache.dubbo.common.config.configcenter.AbstractDynamicConfiguration implements org.apache.dubbo.common.config.configcenter.DynamicConfiguration {
  public static final java.lang.String PARAM_NAME_PREFIX;

  public static final java.lang.String THREAD_POOL_PREFIX_PARAM_NAME;

  public static final java.lang.String DEFAULT_THREAD_POOL_PREFIX;

  public static final java.lang.String THREAD_POOL_SIZE_PARAM_NAME;

  public static final java.lang.String THREAD_POOL_KEEP_ALIVE_TIME_PARAM_NAME;

  public static final java.lang.String GROUP_PARAM_NAME;

  public static final java.lang.String TIMEOUT_PARAM_NAME;

  public static final int DEFAULT_THREAD_POOL_SIZE;

  public static final long DEFAULT_THREAD_POOL_KEEP_ALIVE_TIME;

  protected final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  private final java.util.concurrent.ThreadPoolExecutor workersThreadPool;

  private final java.lang.String group;

  private final long timeout;

  protected org.apache.dubbo.common.config.configcenter.AbstractDynamicConfiguration(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method getThreadPoolPrefixName:(Lorg/apache/dubbo/common/URL;)Ljava/lang/String;
       5: aload_1
       6: invokestatic  #5                  // Method getThreadPoolSize:(Lorg/apache/dubbo/common/URL;)I
       9: aload_1
      10: invokestatic  #6                  // Method getThreadPoolKeepAliveTime:(Lorg/apache/dubbo/common/URL;)J
      13: aload_1
      14: invokestatic  #7                  // Method getGroup:(Lorg/apache/dubbo/common/URL;)Ljava/lang/String;
      17: aload_1
      18: invokestatic  #8                  // Method getTimeout:(Lorg/apache/dubbo/common/URL;)J
      21: invokespecial #9                  // Method "<init>":(Ljava/lang/String;IJLjava/lang/String;J)V
      24: return

  protected org.apache.dubbo.common.config.configcenter.AbstractDynamicConfiguration(java.lang.String, int, long, java.lang.String, long);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #12                 // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      12: putfield      #13                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      15: aload_0
      16: aload_0
      17: aload_1
      18: iload_2
      19: lload_3
      20: invokevirtual #14                 // Method initWorkersThreadPool:(Ljava/lang/String;IJ)Ljava/util/concurrent/ThreadPoolExecutor;
      23: putfield      #15                 // Field workersThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
      26: aload_0
      27: aload         5
      29: putfield      #16                 // Field group:Ljava/lang/String;
      32: aload_0
      33: lload         6
      35: putfield      #17                 // Field timeout:J
      38: return

  public void addListener(java.lang.String, java.lang.String, org.apache.dubbo.common.config.configcenter.ConfigurationListener);
    Code:
       0: return

  public void removeListener(java.lang.String, java.lang.String, org.apache.dubbo.common.config.configcenter.ConfigurationListener);
    Code:
       0: return

  public final java.lang.String getConfig(java.lang.String, java.lang.String, long) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokedynamic #18,  0             // InvokeDynamic #0:call:(Lorg/apache/dubbo/common/config/configcenter/AbstractDynamicConfiguration;Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/Callable;
       9: lload_3
      10: invokevirtual #19                 // Method execute:(Ljava/util/concurrent/Callable;J)Ljava/lang/Object;
      13: checkcast     #20                 // class java/lang/String
      16: areturn

  public java.lang.Object getInternalProperty(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public final void close() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method doClose:()V
       4: aload_0
       5: invokespecial #22                 // Method doFinally:()V
       8: goto          18
      11: astore_1
      12: aload_0
      13: invokespecial #22                 // Method doFinally:()V
      16: aload_1
      17: athrow
      18: return
    Exception table:
       from    to  target type
           0     4    11   any

  public boolean removeConfig(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #23                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       3: aload_0
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokedynamic #24,  0             // InvokeDynamic #1:call:(Lorg/apache/dubbo/common/config/configcenter/AbstractDynamicConfiguration;Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/Callable;
      12: ldc2_w        #25                 // long -1l
      15: invokevirtual #19                 // Method execute:(Ljava/util/concurrent/Callable;J)Ljava/lang/Object;
      18: invokevirtual #27                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      21: ireturn

  public java.lang.String getDefaultGroup();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getGroup:()Ljava/lang/String;
       4: areturn

  public long getDefaultTimeout();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getTimeout:()J
       4: lreturn

  protected abstract java.lang.String doGetConfig(java.lang.String, java.lang.String) throws java.lang.Exception;

  protected abstract void doClose() throws java.lang.Exception;

  protected abstract boolean doRemoveConfig(java.lang.String, java.lang.String) throws java.lang.Exception;

  protected final void execute(java.lang.Runnable, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #30,  0             // InvokeDynamic #2:call:(Ljava/lang/Runnable;)Ljava/util/concurrent/Callable;
       7: lload_2
       8: invokevirtual #19                 // Method execute:(Ljava/util/concurrent/Callable;J)Ljava/lang/Object;
      11: pop
      12: return

  protected final <V> V execute(java.util.concurrent.Callable<V>, long);
    Code:
       0: aconst_null
       1: astore        4
       3: lload_2
       4: lconst_1
       5: lcmp
       6: ifge          20
       9: aload_1
      10: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      15: astore        4
      17: goto          43
      20: aload_0
      21: getfield      #15                 // Field workersThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
      24: aload_1
      25: invokevirtual #32                 // Method java/util/concurrent/ThreadPoolExecutor.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      28: astore        5
      30: aload         5
      32: lload_2
      33: getstatic     #33                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      36: invokeinterface #34,  4           // InterfaceMethod java/util/concurrent/Future.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      41: astore        4
      43: goto          82
      46: astore        5
      48: aload_0
      49: getfield      #13                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      52: invokeinterface #36,  1           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.isErrorEnabled:()Z
      57: ifeq          82
      60: aload_0
      61: getfield      #13                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      64: ldc           #37                 // String 0-12
      66: ldc           #38                 // String
      68: ldc           #38                 // String
      70: aload         5
      72: invokevirtual #39                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      75: aload         5
      77: invokeinterface #40,  6           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      82: aload         4
      84: areturn
    Exception table:
       from    to  target type
           3    43    46   Class java/lang/Exception

  protected java.util.concurrent.ThreadPoolExecutor getWorkersThreadPool();
    Code:
       0: aload_0
       1: getfield      #15                 // Field workersThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: areturn

  private void doFinally();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method shutdownWorkersThreadPool:()V
       4: return

  private void shutdownWorkersThreadPool();
    Code:
       0: aload_0
       1: getfield      #15                 // Field workersThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
       4: invokevirtual #42                 // Method java/util/concurrent/ThreadPoolExecutor.isShutdown:()Z
       7: ifne          17
      10: aload_0
      11: getfield      #15                 // Field workersThreadPool:Ljava/util/concurrent/ThreadPoolExecutor;
      14: invokevirtual #43                 // Method java/util/concurrent/ThreadPoolExecutor.shutdown:()V
      17: return

  protected java.util.concurrent.ThreadPoolExecutor initWorkersThreadPool(java.lang.String, int, long);
    Code:
       0: new           #44                 // class java/util/concurrent/ThreadPoolExecutor
       3: dup
       4: iload_2
       5: iload_2
       6: lload_3
       7: getstatic     #33                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      10: new           #45                 // class java/util/concurrent/LinkedBlockingQueue
      13: dup
      14: invokespecial #46                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      17: new           #47                 // class org/apache/dubbo/common/utils/NamedThreadFactory
      20: dup
      21: aload_1
      22: iconst_1
      23: invokespecial #48                 // Method org/apache/dubbo/common/utils/NamedThreadFactory."<init>":(Ljava/lang/String;Z)V
      26: invokespecial #49                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      29: areturn

  protected static java.lang.String getThreadPoolPrefixName(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: ldc           #50                 // String dubbo.config-center.thread-pool.prefix
       3: ldc           #51                 // String dubbo.config-center.workers
       5: invokestatic  #52                 // Method getParameter:(Lorg/apache/dubbo/common/URL;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  protected static int getThreadPoolSize(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: ldc           #53                 // String dubbo.config-center.thread-pool.size
       3: iconst_1
       4: invokestatic  #54                 // Method getParameter:(Lorg/apache/dubbo/common/URL;Ljava/lang/String;I)I
       7: ireturn

  protected static long getThreadPoolKeepAliveTime(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: ldc           #55                 // String dubbo.config-center.thread-pool.keep-alive-time
       3: getstatic     #56                 // Field DEFAULT_THREAD_POOL_KEEP_ALIVE_TIME:J
       6: invokestatic  #57                 // Method getParameter:(Lorg/apache/dubbo/common/URL;Ljava/lang/String;J)J
       9: lreturn

  protected static java.lang.String getParameter(org.apache.dubbo.common.URL, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #58                 // Method org/apache/dubbo/common/URL.getParameter:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: areturn
      11: aload_2
      12: areturn

  protected static int getParameter(org.apache.dubbo.common.URL, java.lang.String, int);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokevirtual #59                 // Method org/apache/dubbo/common/URL.getParameter:(Ljava/lang/String;I)I
      10: ireturn
      11: iload_2
      12: ireturn

  protected static long getParameter(org.apache.dubbo.common.URL, java.lang.String, long);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: aload_1
       6: lload_2
       7: invokevirtual #60                 // Method org/apache/dubbo/common/URL.getParameter:(Ljava/lang/String;J)J
      10: lreturn
      11: lload_2
      12: lreturn

  protected java.lang.String getGroup();
    Code:
       0: aload_0
       1: getfield      #16                 // Field group:Ljava/lang/String;
       4: areturn

  protected long getTimeout();
    Code:
       0: aload_0
       1: getfield      #17                 // Field timeout:J
       4: lreturn

  protected static java.lang.String getGroup(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: ldc           #61                 // String dubbo.config-center.group
       3: aconst_null
       4: invokestatic  #52                 // Method getParameter:(Lorg/apache/dubbo/common/URL;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: invokestatic  #62                 // Method org/apache/dubbo/common/utils/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
      12: ifeq          26
      15: aload_0
      16: ldc           #63                 // String group
      18: ldc           #65                 // String dubbo
      20: invokestatic  #52                 // Method getParameter:(Lorg/apache/dubbo/common/URL;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      23: goto          27
      26: aload_1
      27: areturn

  protected static long getTimeout(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: ldc           #66                 // String dubbo.config-center.timeout
       3: ldc2_w        #25                 // long -1l
       6: invokestatic  #57                 // Method getParameter:(Lorg/apache/dubbo/common/URL;Ljava/lang/String;J)J
       9: lreturn

  private static java.lang.Object lambda$execute$2(java.lang.Runnable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokeinterface #67,  1           // InterfaceMethod java/lang/Runnable.run:()V
       6: aconst_null
       7: areturn

  private java.lang.Boolean lambda$removeConfig$1(java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #68                 // Method doRemoveConfig:(Ljava/lang/String;Ljava/lang/String;)Z
       6: invokestatic  #69                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: areturn

  private java.lang.String lambda$getConfig$0(java.lang.String, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #70                 // Method doGetConfig:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  static {};
    Code:
       0: getstatic     #71                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
       3: lconst_1
       4: invokevirtual #72                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
       7: putstatic     #56                 // Field DEFAULT_THREAD_POOL_KEEP_ALIVE_TIME:J
      10: return
}
