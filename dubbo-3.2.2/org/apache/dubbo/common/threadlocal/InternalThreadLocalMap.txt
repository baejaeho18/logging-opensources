Compiled from "InternalThreadLocalMap.java"
public final class org.apache.dubbo.common.threadlocal.InternalThreadLocalMap {
  private java.lang.Object[] indexedVariables;

  private static java.lang.ThreadLocal<org.apache.dubbo.common.threadlocal.InternalThreadLocalMap> slowThreadLocalMap;

  private static final java.util.concurrent.atomic.AtomicInteger NEXT_INDEX;

  static final java.lang.Object UNSET;

  static int ARRAY_LIST_CAPACITY_MAX_SIZE;

  private static final int ARRAY_LIST_CAPACITY_EXPAND_THRESHOLD;

  public static org.apache.dubbo.common.threadlocal.InternalThreadLocalMap getIfSet();
    Code:
       0: invokestatic  #1                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_0
       4: aload_0
       5: instanceof    #2                  // class org/apache/dubbo/common/threadlocal/InternalThread
       8: ifeq          19
      11: aload_0
      12: checkcast     #2                  // class org/apache/dubbo/common/threadlocal/InternalThread
      15: invokevirtual #3                  // Method org/apache/dubbo/common/threadlocal/InternalThread.threadLocalMap:()Lorg/apache/dubbo/common/threadlocal/InternalThreadLocalMap;
      18: areturn
      19: getstatic     #4                  // Field slowThreadLocalMap:Ljava/lang/ThreadLocal;
      22: invokevirtual #5                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      25: checkcast     #6                  // class org/apache/dubbo/common/threadlocal/InternalThreadLocalMap
      28: areturn

  public static org.apache.dubbo.common.threadlocal.InternalThreadLocalMap get();
    Code:
       0: invokestatic  #1                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_0
       4: aload_0
       5: instanceof    #2                  // class org/apache/dubbo/common/threadlocal/InternalThread
       8: ifeq          19
      11: aload_0
      12: checkcast     #2                  // class org/apache/dubbo/common/threadlocal/InternalThread
      15: invokestatic  #7                  // Method fastGet:(Lorg/apache/dubbo/common/threadlocal/InternalThread;)Lorg/apache/dubbo/common/threadlocal/InternalThreadLocalMap;
      18: areturn
      19: invokestatic  #8                  // Method slowGet:()Lorg/apache/dubbo/common/threadlocal/InternalThreadLocalMap;
      22: areturn

  public static org.apache.dubbo.common.threadlocal.InternalThreadLocalMap getAndRemove();
    Code:
       0: invokestatic  #1                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_0
       4: aload_0
       5: instanceof    #2                  // class org/apache/dubbo/common/threadlocal/InternalThread
       8: ifeq          24
      11: aload_0
      12: checkcast     #2                  // class org/apache/dubbo/common/threadlocal/InternalThread
      15: invokevirtual #3                  // Method org/apache/dubbo/common/threadlocal/InternalThread.threadLocalMap:()Lorg/apache/dubbo/common/threadlocal/InternalThreadLocalMap;
      18: astore_1
      19: invokestatic  #9                  // Method remove:()V
      22: aload_1
      23: areturn
      24: getstatic     #4                  // Field slowThreadLocalMap:Ljava/lang/ThreadLocal;
      27: invokevirtual #5                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      30: checkcast     #6                  // class org/apache/dubbo/common/threadlocal/InternalThreadLocalMap
      33: astore_1
      34: invokestatic  #9                  // Method remove:()V
      37: aload_1
      38: areturn
      39: astore_2
      40: invokestatic  #9                  // Method remove:()V
      43: aload_2
      44: athrow
    Exception table:
       from    to  target type
           0    19    39   any
          24    34    39   any

  public static void set(org.apache.dubbo.common.threadlocal.InternalThreadLocalMap);
    Code:
       0: invokestatic  #1                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_1
       4: aload_1
       5: instanceof    #2                  // class org/apache/dubbo/common/threadlocal/InternalThread
       8: ifeq          19
      11: aload_1
      12: checkcast     #2                  // class org/apache/dubbo/common/threadlocal/InternalThread
      15: aload_0
      16: invokevirtual #10                 // Method org/apache/dubbo/common/threadlocal/InternalThread.setThreadLocalMap:(Lorg/apache/dubbo/common/threadlocal/InternalThreadLocalMap;)V
      19: getstatic     #4                  // Field slowThreadLocalMap:Ljava/lang/ThreadLocal;
      22: aload_0
      23: invokevirtual #11                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      26: return

  public static void remove();
    Code:
       0: invokestatic  #1                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_0
       4: aload_0
       5: instanceof    #2                  // class org/apache/dubbo/common/threadlocal/InternalThread
       8: ifeq          22
      11: aload_0
      12: checkcast     #2                  // class org/apache/dubbo/common/threadlocal/InternalThread
      15: aconst_null
      16: invokevirtual #10                 // Method org/apache/dubbo/common/threadlocal/InternalThread.setThreadLocalMap:(Lorg/apache/dubbo/common/threadlocal/InternalThreadLocalMap;)V
      19: goto          28
      22: getstatic     #4                  // Field slowThreadLocalMap:Ljava/lang/ThreadLocal;
      25: invokevirtual #12                 // Method java/lang/ThreadLocal.remove:()V
      28: return

  public static void destroy();
    Code:
       0: aconst_null
       1: putstatic     #4                  // Field slowThreadLocalMap:Ljava/lang/ThreadLocal;
       4: return

  public static int nextVariableIndex();
    Code:
       0: getstatic     #13                 // Field NEXT_INDEX:Ljava/util/concurrent/atomic/AtomicInteger;
       3: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       6: istore_0
       7: iload_0
       8: getstatic     #15                 // Field ARRAY_LIST_CAPACITY_MAX_SIZE:I
      11: if_icmpge     18
      14: iload_0
      15: ifge          37
      18: getstatic     #13                 // Field NEXT_INDEX:Ljava/util/concurrent/atomic/AtomicInteger;
      21: getstatic     #15                 // Field ARRAY_LIST_CAPACITY_MAX_SIZE:I
      24: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      27: new           #17                 // class java/lang/IllegalStateException
      30: dup
      31: ldc           #18                 // String Too many thread-local indexed variables
      33: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_0
      38: ireturn

  public static int lastVariableIndex();
    Code:
       0: getstatic     #13                 // Field NEXT_INDEX:Ljava/util/concurrent/atomic/AtomicInteger;
       3: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       6: iconst_1
       7: isub
       8: ireturn

  private org.apache.dubbo.common.threadlocal.InternalThreadLocalMap();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #22                 // Method newIndexedVariableTable:()[Ljava/lang/Object;
       8: putfield      #23                 // Field indexedVariables:[Ljava/lang/Object;
      11: return

  public java.lang.Object indexedVariable(int);
    Code:
       0: aload_0
       1: getfield      #23                 // Field indexedVariables:[Ljava/lang/Object;
       4: astore_2
       5: iload_1
       6: aload_2
       7: arraylength
       8: if_icmpge     17
      11: aload_2
      12: iload_1
      13: aaload
      14: goto          20
      17: getstatic     #24                 // Field UNSET:Ljava/lang/Object;
      20: areturn

  public boolean setIndexedVariable(int, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #23                 // Field indexedVariables:[Ljava/lang/Object;
       4: astore_3
       5: iload_1
       6: aload_3
       7: arraylength
       8: if_icmpge     34
      11: aload_3
      12: iload_1
      13: aaload
      14: astore        4
      16: aload_3
      17: iload_1
      18: aload_2
      19: aastore
      20: aload         4
      22: getstatic     #24                 // Field UNSET:Ljava/lang/Object;
      25: if_acmpne     32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn
      34: aload_0
      35: iload_1
      36: aload_2
      37: invokespecial #25                 // Method expandIndexedVariableTableAndSet:(ILjava/lang/Object;)V
      40: iconst_1
      41: ireturn

  public java.lang.Object removeIndexedVariable(int);
    Code:
       0: aload_0
       1: getfield      #23                 // Field indexedVariables:[Ljava/lang/Object;
       4: astore_2
       5: iload_1
       6: aload_2
       7: arraylength
       8: if_icmpge     23
      11: aload_2
      12: iload_1
      13: aaload
      14: astore_3
      15: aload_2
      16: iload_1
      17: getstatic     #24                 // Field UNSET:Ljava/lang/Object;
      20: aastore
      21: aload_3
      22: areturn
      23: getstatic     #24                 // Field UNSET:Ljava/lang/Object;
      26: areturn

  public int size();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #23                 // Field indexedVariables:[Ljava/lang/Object;
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     42
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: aload         5
      27: getstatic     #24                 // Field UNSET:Ljava/lang/Object;
      30: if_acmpeq     36
      33: iinc          1, 1
      36: iinc          4, 1
      39: goto          13
      42: iload_1
      43: iconst_1
      44: isub
      45: ireturn

  private static java.lang.Object[] newIndexedVariableTable();
    Code:
       0: getstatic     #13                 // Field NEXT_INDEX:Ljava/util/concurrent/atomic/AtomicInteger;
       3: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       6: istore_0
       7: iload_0
       8: bipush        32
      10: if_icmpge     18
      13: bipush        32
      15: goto          22
      18: iload_0
      19: invokestatic  #26                 // Method newCapacity:(I)I
      22: istore_1
      23: iload_1
      24: anewarray     #27                 // class java/lang/Object
      27: astore_2
      28: aload_2
      29: getstatic     #24                 // Field UNSET:Ljava/lang/Object;
      32: invokestatic  #28                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      35: aload_2
      36: areturn

  private static int newCapacity(int);
    Code:
       0: iload_0
       1: ldc           #29                 // int 1073741824
       3: if_icmpge     46
       6: iload_0
       7: istore_1
       8: iload_1
       9: iload_1
      10: iconst_1
      11: iushr
      12: ior
      13: istore_1
      14: iload_1
      15: iload_1
      16: iconst_2
      17: iushr
      18: ior
      19: istore_1
      20: iload_1
      21: iload_1
      22: iconst_4
      23: iushr
      24: ior
      25: istore_1
      26: iload_1
      27: iload_1
      28: bipush        8
      30: iushr
      31: ior
      32: istore_1
      33: iload_1
      34: iload_1
      35: bipush        16
      37: iushr
      38: ior
      39: istore_1
      40: iinc          1, 1
      43: goto          50
      46: getstatic     #15                 // Field ARRAY_LIST_CAPACITY_MAX_SIZE:I
      49: istore_1
      50: iload_1
      51: ireturn

  private static org.apache.dubbo.common.threadlocal.InternalThreadLocalMap fastGet(org.apache.dubbo.common.threadlocal.InternalThread);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method org/apache/dubbo/common/threadlocal/InternalThread.threadLocalMap:()Lorg/apache/dubbo/common/threadlocal/InternalThreadLocalMap;
       4: astore_1
       5: aload_1
       6: ifnonnull     22
       9: aload_0
      10: new           #6                  // class org/apache/dubbo/common/threadlocal/InternalThreadLocalMap
      13: dup
      14: invokespecial #30                 // Method "<init>":()V
      17: dup
      18: astore_1
      19: invokevirtual #10                 // Method org/apache/dubbo/common/threadlocal/InternalThread.setThreadLocalMap:(Lorg/apache/dubbo/common/threadlocal/InternalThreadLocalMap;)V
      22: aload_1
      23: areturn

  private static org.apache.dubbo.common.threadlocal.InternalThreadLocalMap slowGet();
    Code:
       0: getstatic     #4                  // Field slowThreadLocalMap:Ljava/lang/ThreadLocal;
       3: astore_0
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       8: checkcast     #6                  // class org/apache/dubbo/common/threadlocal/InternalThreadLocalMap
      11: astore_1
      12: aload_1
      13: ifnonnull     29
      16: new           #6                  // class org/apache/dubbo/common/threadlocal/InternalThreadLocalMap
      19: dup
      20: invokespecial #30                 // Method "<init>":()V
      23: astore_1
      24: aload_0
      25: aload_1
      26: invokevirtual #11                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      29: aload_1
      30: areturn

  private void expandIndexedVariableTableAndSet(int, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #23                 // Field indexedVariables:[Ljava/lang/Object;
       4: astore_3
       5: aload_3
       6: arraylength
       7: istore        4
       9: iload_1
      10: invokestatic  #26                 // Method newCapacity:(I)I
      13: istore        5
      15: aload_3
      16: iload         5
      18: invokestatic  #31                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      21: astore        6
      23: aload         6
      25: iload         4
      27: aload         6
      29: arraylength
      30: getstatic     #24                 // Field UNSET:Ljava/lang/Object;
      33: invokestatic  #32                 // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
      36: aload         6
      38: iload_1
      39: aload_2
      40: aastore
      41: aload_0
      42: aload         6
      44: putfield      #23                 // Field indexedVariables:[Ljava/lang/Object;
      47: return

  static {};
    Code:
       0: new           #33                 // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #34                 // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #4                  // Field slowThreadLocalMap:Ljava/lang/ThreadLocal;
      10: new           #35                 // class java/util/concurrent/atomic/AtomicInteger
      13: dup
      14: invokespecial #36                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      17: putstatic     #13                 // Field NEXT_INDEX:Ljava/util/concurrent/atomic/AtomicInteger;
      20: new           #27                 // class java/lang/Object
      23: dup
      24: invokespecial #21                 // Method java/lang/Object."<init>":()V
      27: putstatic     #24                 // Field UNSET:Ljava/lang/Object;
      30: ldc           #38                 // int 2147483639
      32: putstatic     #15                 // Field ARRAY_LIST_CAPACITY_MAX_SIZE:I
      35: return
}
