Compiled from "SimpleDataStore.java"
public class org.apache.dubbo.common.store.support.SimpleDataStore implements org.apache.dubbo.common.store.DataStore {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Object>> data;

  public org.apache.dubbo.common.store.support.SimpleDataStore();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field data:Ljava/util/concurrent/ConcurrentMap;
      15: return

  public java.util.Map<java.lang.String, java.lang.Object> get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #6                  // class java/util/concurrent/ConcurrentMap
      13: astore_2
      14: aload_2
      15: ifnonnull     26
      18: new           #7                  // class java/util/HashMap
      21: dup
      22: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      25: areturn
      26: new           #7                  // class java/util/HashMap
      29: dup
      30: aload_2
      31: invokespecial #9                  // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      34: areturn

  public java.lang.Object get(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ifne          15
      13: aconst_null
      14: areturn
      15: aload_0
      16: getfield      #4                  // Field data:Ljava/util/concurrent/ConcurrentMap;
      19: aload_1
      20: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #6                  // class java/util/concurrent/ConcurrentMap
      28: aload_2
      29: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: areturn

  public void put(java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokedynamic #11,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      10: invokestatic  #12                 // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      13: checkcast     #13                 // class java/util/Map
      16: astore        4
      18: aload         4
      20: aload_2
      21: aload_3
      22: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: return

  public void remove(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #4                  // Field data:Ljava/util/concurrent/ConcurrentMap;
      18: aload_1
      19: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #6                  // class java/util/concurrent/ConcurrentMap
      27: aload_2
      28: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: return

  private static java.util.concurrent.ConcurrentMap lambda$put$0(java.lang.String);
    Code:
       0: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: areturn
}
