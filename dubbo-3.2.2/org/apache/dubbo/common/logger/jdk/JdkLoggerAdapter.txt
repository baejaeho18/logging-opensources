Compiled from "JdkLoggerAdapter.java"
public class org.apache.dubbo.common.logger.jdk.JdkLoggerAdapter implements org.apache.dubbo.common.logger.LoggerAdapter {
  public static final java.lang.String NAME;

  private static final java.lang.String GLOBAL_LOGGER_NAME;

  private java.io.File file;

  private boolean propertiesLoaded;

  public org.apache.dubbo.common.logger.jdk.JdkLoggerAdapter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field propertiesLoaded:Z
       9: invokestatic  #3                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      12: invokevirtual #4                  // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      15: ldc           #5                  // String logging.properties
      17: invokevirtual #6                  // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      20: astore_1
      21: aload_1
      22: ifnull        40
      25: invokestatic  #7                  // Method java/util/logging/LogManager.getLogManager:()Ljava/util/logging/LogManager;
      28: aload_1
      29: invokevirtual #8                  // Method java/util/logging/LogManager.readConfiguration:(Ljava/io/InputStream;)V
      32: aload_0
      33: iconst_1
      34: putfield      #2                  // Field propertiesLoaded:Z
      37: goto          48
      40: getstatic     #9                  // Field java/lang/System.err:Ljava/io/PrintStream;
      43: ldc           #10                 // String No such logging.properties in classpath for jdk logging config!
      45: invokevirtual #11                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      48: goto          80
      51: astore_1
      52: getstatic     #9                  // Field java/lang/System.err:Ljava/io/PrintStream;
      55: new           #13                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      62: ldc           #15                 // String Failed to load logging.properties in classpath for jdk logging config, cause:
      64: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_1
      68: invokevirtual #17                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      71: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokevirtual #11                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      80: ldc           #20                 // String global
      82: invokestatic  #21                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      85: invokevirtual #22                 // Method java/util/logging/Logger.getHandlers:()[Ljava/util/logging/Handler;
      88: astore_1
      89: aload_1
      90: astore_2
      91: aload_2
      92: arraylength
      93: istore_3
      94: iconst_0
      95: istore        4
      97: iload         4
      99: iload_3
     100: if_icmpge     176
     103: aload_2
     104: iload         4
     106: aaload
     107: astore        5
     109: aload         5
     111: instanceof    #23                 // class java/util/logging/FileHandler
     114: ifeq          170
     117: aload         5
     119: checkcast     #23                 // class java/util/logging/FileHandler
     122: astore        6
     124: aload         6
     126: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     129: ldc           #25                 // String files
     131: invokevirtual #26                 // Method java/lang/Class.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
     134: astore        7
     136: aload         7
     138: aload         6
     140: invokevirtual #27                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
     143: checkcast     #28                 // class "[Ljava/io/File;"
     146: checkcast     #28                 // class "[Ljava/io/File;"
     149: astore        8
     151: aload         8
     153: ifnull        170
     156: aload         8
     158: arraylength
     159: ifle          170
     162: aload_0
     163: aload         8
     165: iconst_0
     166: aaload
     167: putfield      #29                 // Field file:Ljava/io/File;
     170: iinc          4, 1
     173: goto          97
     176: goto          180
     179: astore_1
     180: return
    Exception table:
       from    to  target type
           9    48    51   Class java/lang/Exception
          80   176   179   Class java/lang/Exception

  private static java.util.logging.Level toJdkLevel(org.apache.dubbo.common.logger.Level);
    Code:
       0: aload_0
       1: getstatic     #30                 // Field org/apache/dubbo/common/logger/Level.ALL:Lorg/apache/dubbo/common/logger/Level;
       4: if_acmpne     11
       7: getstatic     #31                 // Field java/util/logging/Level.ALL:Ljava/util/logging/Level;
      10: areturn
      11: aload_0
      12: getstatic     #32                 // Field org/apache/dubbo/common/logger/Level.TRACE:Lorg/apache/dubbo/common/logger/Level;
      15: if_acmpne     22
      18: getstatic     #33                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      21: areturn
      22: aload_0
      23: getstatic     #34                 // Field org/apache/dubbo/common/logger/Level.DEBUG:Lorg/apache/dubbo/common/logger/Level;
      26: if_acmpne     33
      29: getstatic     #35                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      32: areturn
      33: aload_0
      34: getstatic     #36                 // Field org/apache/dubbo/common/logger/Level.INFO:Lorg/apache/dubbo/common/logger/Level;
      37: if_acmpne     44
      40: getstatic     #37                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      43: areturn
      44: aload_0
      45: getstatic     #38                 // Field org/apache/dubbo/common/logger/Level.WARN:Lorg/apache/dubbo/common/logger/Level;
      48: if_acmpne     55
      51: getstatic     #39                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      54: areturn
      55: aload_0
      56: getstatic     #40                 // Field org/apache/dubbo/common/logger/Level.ERROR:Lorg/apache/dubbo/common/logger/Level;
      59: if_acmpne     66
      62: getstatic     #41                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      65: areturn
      66: getstatic     #42                 // Field java/util/logging/Level.OFF:Ljava/util/logging/Level;
      69: areturn

  private static org.apache.dubbo.common.logger.Level fromJdkLevel(java.util.logging.Level);
    Code:
       0: aload_0
       1: getstatic     #31                 // Field java/util/logging/Level.ALL:Ljava/util/logging/Level;
       4: if_acmpne     11
       7: getstatic     #30                 // Field org/apache/dubbo/common/logger/Level.ALL:Lorg/apache/dubbo/common/logger/Level;
      10: areturn
      11: aload_0
      12: getstatic     #33                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      15: if_acmpne     22
      18: getstatic     #32                 // Field org/apache/dubbo/common/logger/Level.TRACE:Lorg/apache/dubbo/common/logger/Level;
      21: areturn
      22: aload_0
      23: getstatic     #35                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      26: if_acmpne     33
      29: getstatic     #34                 // Field org/apache/dubbo/common/logger/Level.DEBUG:Lorg/apache/dubbo/common/logger/Level;
      32: areturn
      33: aload_0
      34: getstatic     #37                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      37: if_acmpne     44
      40: getstatic     #36                 // Field org/apache/dubbo/common/logger/Level.INFO:Lorg/apache/dubbo/common/logger/Level;
      43: areturn
      44: aload_0
      45: getstatic     #39                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      48: if_acmpne     55
      51: getstatic     #38                 // Field org/apache/dubbo/common/logger/Level.WARN:Lorg/apache/dubbo/common/logger/Level;
      54: areturn
      55: aload_0
      56: getstatic     #41                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      59: if_acmpne     66
      62: getstatic     #40                 // Field org/apache/dubbo/common/logger/Level.ERROR:Lorg/apache/dubbo/common/logger/Level;
      65: areturn
      66: getstatic     #43                 // Field org/apache/dubbo/common/logger/Level.OFF:Lorg/apache/dubbo/common/logger/Level;
      69: areturn

  public org.apache.dubbo.common.logger.Logger getLogger(java.lang.Class<?>);
    Code:
       0: new           #44                 // class org/apache/dubbo/common/logger/jdk/JdkLogger
       3: dup
       4: aload_1
       5: ifnonnull     13
       8: ldc           #45                 // String
      10: goto          17
      13: aload_1
      14: invokevirtual #46                 // Method java/lang/Class.getName:()Ljava/lang/String;
      17: invokestatic  #21                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      20: invokespecial #47                 // Method org/apache/dubbo/common/logger/jdk/JdkLogger."<init>":(Ljava/util/logging/Logger;)V
      23: areturn

  public org.apache.dubbo.common.logger.Logger getLogger(java.lang.String);
    Code:
       0: new           #44                 // class org/apache/dubbo/common/logger/jdk/JdkLogger
       3: dup
       4: aload_1
       5: invokestatic  #21                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: invokespecial #47                 // Method org/apache/dubbo/common/logger/jdk/JdkLogger."<init>":(Ljava/util/logging/Logger;)V
      11: areturn

  public org.apache.dubbo.common.logger.Level getLevel();
    Code:
       0: ldc           #20                 // String global
       2: invokestatic  #21                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       5: invokevirtual #48                 // Method java/util/logging/Logger.getLevel:()Ljava/util/logging/Level;
       8: invokestatic  #49                 // Method fromJdkLevel:(Ljava/util/logging/Level;)Lorg/apache/dubbo/common/logger/Level;
      11: areturn

  public void setLevel(org.apache.dubbo.common.logger.Level);
    Code:
       0: ldc           #20                 // String global
       2: invokestatic  #21                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       5: aload_1
       6: invokestatic  #50                 // Method toJdkLevel:(Lorg/apache/dubbo/common/logger/Level;)Ljava/util/logging/Level;
       9: invokevirtual #51                 // Method java/util/logging/Logger.setLevel:(Ljava/util/logging/Level;)V
      12: return

  public java.io.File getFile();
    Code:
       0: aload_0
       1: getfield      #29                 // Field file:Ljava/io/File;
       4: areturn

  public void setFile(java.io.File);
    Code:
       0: return

  public boolean isConfigured();
    Code:
       0: aload_0
       1: getfield      #2                  // Field propertiesLoaded:Z
       4: ireturn
}
