Compiled from "Converter.java"
public interface org.apache.dubbo.common.convert.Converter<S, T> extends org.apache.dubbo.common.lang.Prioritized {
  public default boolean accept(java.lang.Class<?>, java.lang.Class<?>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #1,  1            // InterfaceMethod getSourceType:()Ljava/lang/Class;
       7: invokestatic  #2                  // Method org/apache/dubbo/common/utils/ClassUtils.isAssignableFrom:(Ljava/lang/Class;Ljava/lang/Class;)Z
      10: ifeq          30
      13: aload_2
      14: aload_0
      15: invokeinterface #3,  1            // InterfaceMethod getTargetType:()Ljava/lang/Class;
      20: invokestatic  #2                  // Method org/apache/dubbo/common/utils/ClassUtils.isAssignableFrom:(Ljava/lang/Class;Ljava/lang/Class;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public abstract T convert(S);

  public default java.lang.Class<S> getSourceType();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #5                  // class org/apache/dubbo/common/convert/Converter
       6: iconst_0
       7: invokestatic  #6                  // InterfaceMethod org/apache/dubbo/common/utils/TypeUtils.findActualTypeArgument:(Ljava/lang/reflect/Type;Ljava/lang/Class;I)Ljava/lang/Class;
      10: areturn

  public default java.lang.Class<T> getTargetType();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #5                  // class org/apache/dubbo/common/convert/Converter
       6: iconst_1
       7: invokestatic  #6                  // InterfaceMethod org/apache/dubbo/common/utils/TypeUtils.findActualTypeArgument:(Ljava/lang/reflect/Type;Ljava/lang/Class;I)Ljava/lang/Class;
      10: areturn
}
