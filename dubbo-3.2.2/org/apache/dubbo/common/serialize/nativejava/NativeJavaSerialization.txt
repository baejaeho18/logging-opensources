Compiled from "NativeJavaSerialization.java"
public class org.apache.dubbo.common.serialize.nativejava.NativeJavaSerialization implements org.apache.dubbo.common.serialize.Serialization {
  private static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  private static final java.util.concurrent.atomic.AtomicBoolean warn;

  public org.apache.dubbo.common.serialize.nativejava.NativeJavaSerialization();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  public byte getContentTypeId();
    Code:
       0: bipush        7
       2: ireturn

  public java.lang.String getContentType();
    Code:
       0: ldc           #4                  // String x-application/nativejava
       2: areturn

  public org.apache.dubbo.common.serialize.ObjectOutput serialize(org.apache.dubbo.common.URL, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: getstatic     #5                  // Field warn:Ljava/util/concurrent/atomic/AtomicBoolean;
       3: iconst_0
       4: iconst_1
       5: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       8: ifeq          27
      11: getstatic     #7                  // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      14: ldc           #8                  // String 4-4
      16: ldc           #9                  // String
      18: ldc           #9                  // String
      20: ldc           #10                 // String Java serialization is unsafe. Dubbo Team do not recommend anyone to use it.If you still want to use it, please follow [JEP 290](https://openjdk.java.net/jeps/290)to set serialization filter to prevent deserialization leak.
      22: invokeinterface #11,  5           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      27: new           #12                 // class org/apache/dubbo/common/serialize/nativejava/NativeJavaObjectOutput
      30: dup
      31: aload_2
      32: invokespecial #13                 // Method org/apache/dubbo/common/serialize/nativejava/NativeJavaObjectOutput."<init>":(Ljava/io/OutputStream;)V
      35: areturn

  public org.apache.dubbo.common.serialize.ObjectInput deserialize(org.apache.dubbo.common.URL, java.io.InputStream) throws java.io.IOException;
    Code:
       0: getstatic     #5                  // Field warn:Ljava/util/concurrent/atomic/AtomicBoolean;
       3: iconst_0
       4: iconst_1
       5: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       8: ifeq          27
      11: getstatic     #7                  // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      14: ldc           #8                  // String 4-4
      16: ldc           #9                  // String
      18: ldc           #9                  // String
      20: ldc           #10                 // String Java serialization is unsafe. Dubbo Team do not recommend anyone to use it.If you still want to use it, please follow [JEP 290](https://openjdk.java.net/jeps/290)to set serialization filter to prevent deserialization leak.
      22: invokeinterface #11,  5           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      27: new           #14                 // class org/apache/dubbo/common/serialize/nativejava/NativeJavaObjectInput
      30: dup
      31: aload_2
      32: invokespecial #15                 // Method org/apache/dubbo/common/serialize/nativejava/NativeJavaObjectInput."<init>":(Ljava/io/InputStream;)V
      35: areturn

  static {};
    Code:
       0: ldc           #16                 // class org/apache/dubbo/common/serialize/java/JavaSerialization
       2: invokestatic  #17                 // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #7                  // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: new           #18                 // class java/util/concurrent/atomic/AtomicBoolean
      11: dup
      12: iconst_0
      13: invokespecial #19                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      16: putstatic     #5                  // Field warn:Ljava/util/concurrent/atomic/AtomicBoolean;
      19: return
}
