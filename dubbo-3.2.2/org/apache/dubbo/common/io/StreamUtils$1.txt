Compiled from "StreamUtils.java"
final class org.apache.dubbo.common.io.StreamUtils$1 extends java.io.InputStream {
  private int mPosition;

  private int mMark;

  private final int mLimit;

  final int val$limit;

  final java.io.InputStream val$is;

  org.apache.dubbo.common.io.StreamUtils$1(int, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field val$limit:I
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$is:Ljava/io/InputStream;
      10: aload_0
      11: invokespecial #3                  // Method java/io/InputStream."<init>":()V
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field mPosition:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field mMark:I
      24: aload_0
      25: aload_0
      26: getfield      #1                  // Field val$limit:I
      29: aload_0
      30: getfield      #2                  // Field val$is:Ljava/io/InputStream;
      33: invokevirtual #6                  // Method java/io/InputStream.available:()I
      36: invokestatic  #7                  // Method java/lang/Math.min:(II)I
      39: putfield      #8                  // Field mLimit:I
      42: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mPosition:I
       4: aload_0
       5: getfield      #8                  // Field mLimit:I
       8: if_icmpge     29
      11: aload_0
      12: dup
      13: getfield      #4                  // Field mPosition:I
      16: iconst_1
      17: iadd
      18: putfield      #4                  // Field mPosition:I
      21: aload_0
      22: getfield      #2                  // Field val$is:Ljava/io/InputStream;
      25: invokevirtual #9                  // Method java/io/InputStream.read:()I
      28: ireturn
      29: iconst_m1
      30: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #10                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #11                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: iload_2
      13: iflt          28
      16: iload_3
      17: iflt          28
      20: iload_3
      21: aload_1
      22: arraylength
      23: iload_2
      24: isub
      25: if_icmple     36
      28: new           #12                 // class java/lang/IndexOutOfBoundsException
      31: dup
      32: invokespecial #13                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      35: athrow
      36: aload_0
      37: getfield      #4                  // Field mPosition:I
      40: aload_0
      41: getfield      #8                  // Field mLimit:I
      44: if_icmplt     49
      47: iconst_m1
      48: ireturn
      49: aload_0
      50: getfield      #4                  // Field mPosition:I
      53: iload_3
      54: iadd
      55: aload_0
      56: getfield      #8                  // Field mLimit:I
      59: if_icmple     72
      62: aload_0
      63: getfield      #8                  // Field mLimit:I
      66: aload_0
      67: getfield      #4                  // Field mPosition:I
      70: isub
      71: istore_3
      72: iload_3
      73: ifgt          78
      76: iconst_0
      77: ireturn
      78: aload_0
      79: getfield      #2                  // Field val$is:Ljava/io/InputStream;
      82: aload_1
      83: iload_2
      84: iload_3
      85: invokevirtual #14                 // Method java/io/InputStream.read:([BII)I
      88: pop
      89: aload_0
      90: dup
      91: getfield      #4                  // Field mPosition:I
      94: iload_3
      95: iadd
      96: putfield      #4                  // Field mPosition:I
      99: iload_3
     100: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mPosition:I
       4: i2l
       5: lload_1
       6: ladd
       7: aload_0
       8: getfield      #8                  // Field mLimit:I
      11: i2l
      12: lcmp
      13: ifle          27
      16: aload_0
      17: getfield      #8                  // Field mLimit:I
      20: aload_0
      21: getfield      #4                  // Field mPosition:I
      24: isub
      25: i2l
      26: lstore_1
      27: lload_1
      28: lconst_0
      29: lcmp
      30: ifgt          35
      33: lconst_0
      34: lreturn
      35: aload_0
      36: getfield      #2                  // Field val$is:Ljava/io/InputStream;
      39: lload_1
      40: invokevirtual #15                 // Method java/io/InputStream.skip:(J)J
      43: pop2
      44: aload_0
      45: dup
      46: getfield      #4                  // Field mPosition:I
      49: i2l
      50: lload_1
      51: ladd
      52: l2i
      53: putfield      #4                  // Field mPosition:I
      56: lload_1
      57: lreturn

  public int available();
    Code:
       0: aload_0
       1: getfield      #8                  // Field mLimit:I
       4: aload_0
       5: getfield      #4                  // Field mPosition:I
       8: isub
       9: ireturn

  public boolean markSupported();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$is:Ljava/io/InputStream;
       4: invokevirtual #16                 // Method java/io/InputStream.markSupported:()Z
       7: ireturn

  public synchronized void mark(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$is:Ljava/io/InputStream;
       4: iload_1
       5: invokevirtual #17                 // Method java/io/InputStream.mark:(I)V
       8: aload_0
       9: aload_0
      10: getfield      #4                  // Field mPosition:I
      13: putfield      #5                  // Field mMark:I
      16: return

  public synchronized void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$is:Ljava/io/InputStream;
       4: invokevirtual #18                 // Method java/io/InputStream.reset:()V
       7: aload_0
       8: aload_0
       9: getfield      #5                  // Field mMark:I
      12: putfield      #4                  // Field mPosition:I
      15: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$is:Ljava/io/InputStream;
       4: invokevirtual #19                 // Method java/io/InputStream.close:()V
       7: return
}
