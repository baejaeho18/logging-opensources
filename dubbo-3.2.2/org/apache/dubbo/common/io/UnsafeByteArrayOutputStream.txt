Compiled from "UnsafeByteArrayOutputStream.java"
public class org.apache.dubbo.common.io.UnsafeByteArrayOutputStream extends java.io.OutputStream {
  protected byte[] mBuffer;

  protected int mCount;

  public org.apache.dubbo.common.io.UnsafeByteArrayOutputStream();
    Code:
       0: aload_0
       1: bipush        32
       3: invokespecial #1                  // Method "<init>":(I)V
       6: return

  public org.apache.dubbo.common.io.UnsafeByteArrayOutputStream(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/io/OutputStream."<init>":()V
       4: iload_1
       5: ifge          35
       8: new           #3                  // class java/lang/IllegalArgumentException
      11: dup
      12: new           #4                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #6                  // String Negative initial size:
      21: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_1
      25: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: iload_1
      37: newarray       byte
      39: putfield      #11                 // Field mBuffer:[B
      42: return

  public void write(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field mCount:I
       4: iconst_1
       5: iadd
       6: istore_2
       7: iload_2
       8: aload_0
       9: getfield      #11                 // Field mBuffer:[B
      12: arraylength
      13: if_icmple     38
      16: aload_0
      17: aload_0
      18: getfield      #11                 // Field mBuffer:[B
      21: aload_0
      22: getfield      #11                 // Field mBuffer:[B
      25: arraylength
      26: iconst_1
      27: ishl
      28: iload_2
      29: invokestatic  #13                 // Method java/lang/Math.max:(II)I
      32: invokestatic  #14                 // Method org/apache/dubbo/common/io/Bytes.copyOf:([BI)[B
      35: putfield      #11                 // Field mBuffer:[B
      38: aload_0
      39: getfield      #11                 // Field mBuffer:[B
      42: aload_0
      43: getfield      #12                 // Field mCount:I
      46: iload_1
      47: i2b
      48: bastore
      49: aload_0
      50: iload_2
      51: putfield      #12                 // Field mCount:I
      54: return

  public void write(byte[], int, int);
    Code:
       0: iload_2
       1: iflt          28
       4: iload_2
       5: aload_1
       6: arraylength
       7: if_icmpgt     28
      10: iload_3
      11: iflt          28
      14: iload_2
      15: iload_3
      16: iadd
      17: aload_1
      18: arraylength
      19: if_icmpgt     28
      22: iload_2
      23: iload_3
      24: iadd
      25: ifge          36
      28: new           #15                 // class java/lang/IndexOutOfBoundsException
      31: dup
      32: invokespecial #16                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      35: athrow
      36: iload_3
      37: ifne          41
      40: return
      41: aload_0
      42: getfield      #12                 // Field mCount:I
      45: iload_3
      46: iadd
      47: istore        4
      49: iload         4
      51: aload_0
      52: getfield      #11                 // Field mBuffer:[B
      55: arraylength
      56: if_icmple     82
      59: aload_0
      60: aload_0
      61: getfield      #11                 // Field mBuffer:[B
      64: aload_0
      65: getfield      #11                 // Field mBuffer:[B
      68: arraylength
      69: iconst_1
      70: ishl
      71: iload         4
      73: invokestatic  #13                 // Method java/lang/Math.max:(II)I
      76: invokestatic  #14                 // Method org/apache/dubbo/common/io/Bytes.copyOf:([BI)[B
      79: putfield      #11                 // Field mBuffer:[B
      82: aload_1
      83: iload_2
      84: aload_0
      85: getfield      #11                 // Field mBuffer:[B
      88: aload_0
      89: getfield      #12                 // Field mCount:I
      92: iload_3
      93: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      96: aload_0
      97: iload         4
      99: putfield      #12                 // Field mCount:I
     102: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #12                 // Field mCount:I
       4: ireturn

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #12                 // Field mCount:I
       5: return

  public byte[] toByteArray();
    Code:
       0: aload_0
       1: getfield      #11                 // Field mBuffer:[B
       4: aload_0
       5: getfield      #12                 // Field mCount:I
       8: invokestatic  #14                 // Method org/apache/dubbo/common/io/Bytes.copyOf:([BI)[B
      11: areturn

  public java.nio.ByteBuffer toByteBuffer();
    Code:
       0: aload_0
       1: getfield      #11                 // Field mBuffer:[B
       4: iconst_0
       5: aload_0
       6: getfield      #12                 // Field mCount:I
       9: invokestatic  #18                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      12: areturn

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #11                 // Field mBuffer:[B
       5: iconst_0
       6: aload_0
       7: getfield      #12                 // Field mCount:I
      10: invokevirtual #19                 // Method java/io/OutputStream.write:([BII)V
      13: return

  public java.lang.String toString();
    Code:
       0: new           #20                 // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #11                 // Field mBuffer:[B
       8: iconst_0
       9: aload_0
      10: getfield      #12                 // Field mCount:I
      13: invokespecial #21                 // Method java/lang/String."<init>":([BII)V
      16: areturn

  public java.lang.String toString(java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: new           #20                 // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #11                 // Field mBuffer:[B
       8: iconst_0
       9: aload_0
      10: getfield      #12                 // Field mCount:I
      13: aload_1
      14: invokespecial #22                 // Method java/lang/String."<init>":([BIILjava/lang/String;)V
      17: areturn

  public void close() throws java.io.IOException;
    Code:
       0: return
}
