Compiled from "UnsafeStringWriter.java"
public class org.apache.dubbo.common.io.UnsafeStringWriter extends java.io.Writer {
  private final java.lang.StringBuilder mBuffer;

  public org.apache.dubbo.common.io.UnsafeStringWriter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/Writer."<init>":()V
       4: aload_0
       5: aload_0
       6: new           #2                  // class java/lang/StringBuilder
       9: dup
      10: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      13: dup_x1
      14: putfield      #4                  // Field mBuffer:Ljava/lang/StringBuilder;
      17: putfield      #5                  // Field lock:Ljava/lang/Object;
      20: return

  public org.apache.dubbo.common.io.UnsafeStringWriter(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/Writer."<init>":()V
       4: iload_1
       5: ifge          18
       8: new           #6                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #7                  // String Negative buffer size
      14: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_0
      20: new           #2                  // class java/lang/StringBuilder
      23: dup
      24: iload_1
      25: invokespecial #9                  // Method java/lang/StringBuilder."<init>":(I)V
      28: dup_x1
      29: putfield      #4                  // Field mBuffer:Ljava/lang/StringBuilder;
      32: putfield      #5                  // Field lock:Ljava/lang/Object;
      35: return

  public void write(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuilder;
       4: iload_1
       5: i2c
       6: invokevirtual #10                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       9: pop
      10: return

  public void write(char[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuilder;
       4: aload_1
       5: iconst_0
       6: aload_1
       7: arraylength
       8: invokevirtual #11                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
      11: pop
      12: return

  public void write(char[], int, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: iflt          28
       4: iload_2
       5: aload_1
       6: arraylength
       7: if_icmpgt     28
      10: iload_3
      11: iflt          28
      14: iload_2
      15: iload_3
      16: iadd
      17: aload_1
      18: arraylength
      19: if_icmpgt     28
      22: iload_2
      23: iload_3
      24: iadd
      25: ifge          36
      28: new           #12                 // class java/lang/IndexOutOfBoundsException
      31: dup
      32: invokespecial #13                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      35: athrow
      36: iload_3
      37: ifle          51
      40: aload_0
      41: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuilder;
      44: aload_1
      45: iload_2
      46: iload_3
      47: invokevirtual #11                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
      50: pop
      51: return

  public void write(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuilder;
       4: aload_1
       5: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       8: pop
       9: return

  public void write(java.lang.String, int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuilder;
       4: aload_1
       5: iload_2
       6: iload_2
       7: iload_3
       8: iadd
       9: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      12: pop
      13: return

  public java.io.Writer append(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: aload_0
       5: ldc           #16                 // String null
       7: invokevirtual #17                 // Method write:(Ljava/lang/String;)V
      10: goto          23
      13: aload_0
      14: aload_1
      15: invokeinterface #18,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      20: invokevirtual #17                 // Method write:(Ljava/lang/String;)V
      23: aload_0
      24: areturn

  public java.io.Writer append(java.lang.CharSequence, int, int);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: ldc           #16                 // String null
       6: goto          10
       9: aload_1
      10: astore        4
      12: aload_0
      13: aload         4
      15: iload_2
      16: iload_3
      17: invokeinterface #19,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      22: invokeinterface #18,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      27: invokevirtual #17                 // Method write:(Ljava/lang/String;)V
      30: aload_0
      31: areturn

  public java.io.Writer append(char);
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuilder;
       4: iload_1
       5: invokevirtual #10                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       8: pop
       9: aload_0
      10: areturn

  public void close();
    Code:
       0: return

  public void flush();
    Code:
       0: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mBuffer:Ljava/lang/StringBuilder;
       4: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       7: areturn

  public java.lang.Appendable append(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #21                 // Method append:(C)Ljava/io/Writer;
       5: areturn

  public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #22                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
       7: areturn

  public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
       5: areturn
}
