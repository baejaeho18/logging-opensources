Compiled from "StreamUtils.java"
final class org.apache.dubbo.common.io.StreamUtils$2 extends java.io.InputStream {
  byte[] mMarkBuffer;

  boolean mInMarked;

  boolean mInReset;

  boolean mDry;

  private int mPosition;

  private int mCount;

  final java.io.InputStream val$is;

  final int val$markBufferSize;

  org.apache.dubbo.common.io.StreamUtils$2(java.io.InputStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$is:Ljava/io/InputStream;
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field val$markBufferSize:I
      10: aload_0
      11: invokespecial #3                  // Method java/io/InputStream."<init>":()V
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field mInMarked:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field mInReset:Z
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field mDry:Z
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field mPosition:I
      34: aload_0
      35: iconst_0
      36: putfield      #8                  // Field mCount:I
      39: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mInMarked:Z
       4: ifne          15
       7: aload_0
       8: getfield      #1                  // Field val$is:Ljava/io/InputStream;
      11: invokevirtual #9                  // Method java/io/InputStream.read:()I
      14: ireturn
      15: aload_0
      16: getfield      #7                  // Field mPosition:I
      19: aload_0
      20: getfield      #8                  // Field mCount:I
      23: if_icmpge     49
      26: aload_0
      27: getfield      #10                 // Field mMarkBuffer:[B
      30: aload_0
      31: dup
      32: getfield      #7                  // Field mPosition:I
      35: dup_x1
      36: iconst_1
      37: iadd
      38: putfield      #7                  // Field mPosition:I
      41: baload
      42: istore_1
      43: iload_1
      44: sipush        255
      47: iand
      48: ireturn
      49: aload_0
      50: getfield      #5                  // Field mInReset:Z
      53: ifne          154
      56: aload_0
      57: getfield      #6                  // Field mDry:Z
      60: ifeq          65
      63: iconst_m1
      64: ireturn
      65: aconst_null
      66: aload_0
      67: getfield      #10                 // Field mMarkBuffer:[B
      70: if_acmpne     83
      73: aload_0
      74: aload_0
      75: getfield      #2                  // Field val$markBufferSize:I
      78: newarray       byte
      80: putfield      #10                 // Field mMarkBuffer:[B
      83: aload_0
      84: getfield      #7                  // Field mPosition:I
      87: aload_0
      88: getfield      #2                  // Field val$markBufferSize:I
      91: if_icmplt     104
      94: new           #11                 // class java/io/IOException
      97: dup
      98: ldc           #12                 // String Mark buffer is full!
     100: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload_0
     105: getfield      #1                  // Field val$is:Ljava/io/InputStream;
     108: invokevirtual #9                  // Method java/io/InputStream.read:()I
     111: istore_1
     112: iconst_m1
     113: iload_1
     114: if_icmpne     124
     117: aload_0
     118: iconst_1
     119: putfield      #6                  // Field mDry:Z
     122: iconst_m1
     123: ireturn
     124: aload_0
     125: getfield      #10                 // Field mMarkBuffer:[B
     128: aload_0
     129: dup
     130: getfield      #7                  // Field mPosition:I
     133: dup_x1
     134: iconst_1
     135: iadd
     136: putfield      #7                  // Field mPosition:I
     139: iload_1
     140: i2b
     141: bastore
     142: aload_0
     143: dup
     144: getfield      #8                  // Field mCount:I
     147: iconst_1
     148: iadd
     149: putfield      #8                  // Field mCount:I
     152: iload_1
     153: ireturn
     154: aload_0
     155: iconst_0
     156: putfield      #4                  // Field mInMarked:Z
     159: aload_0
     160: iconst_0
     161: putfield      #5                  // Field mInReset:Z
     164: aload_0
     165: iconst_0
     166: putfield      #7                  // Field mPosition:I
     169: aload_0
     170: iconst_0
     171: putfield      #8                  // Field mCount:I
     174: aload_0
     175: getfield      #1                  // Field val$is:Ljava/io/InputStream;
     178: invokevirtual #9                  // Method java/io/InputStream.read:()I
     181: ireturn

  public synchronized void mark(int);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field mInMarked:Z
       5: aload_0
       6: iconst_0
       7: putfield      #5                  // Field mInReset:Z
      10: aload_0
      11: getfield      #8                  // Field mCount:I
      14: aload_0
      15: getfield      #7                  // Field mPosition:I
      18: isub
      19: istore_2
      20: iload_2
      21: ifle          51
      24: aload_0
      25: getfield      #10                 // Field mMarkBuffer:[B
      28: aload_0
      29: getfield      #7                  // Field mPosition:I
      32: aload_0
      33: getfield      #10                 // Field mMarkBuffer:[B
      36: iconst_0
      37: iload_2
      38: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      41: aload_0
      42: iload_2
      43: putfield      #8                  // Field mCount:I
      46: aload_0
      47: iconst_0
      48: putfield      #7                  // Field mPosition:I
      51: return

  public synchronized void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mInMarked:Z
       4: ifne          17
       7: new           #11                 // class java/io/IOException
      10: dup
      11: ldc           #15                 // String should mark before reset!
      13: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iconst_1
      19: putfield      #5                  // Field mInReset:Z
      22: aload_0
      23: iconst_0
      24: putfield      #7                  // Field mPosition:I
      27: return

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$is:Ljava/io/InputStream;
       4: invokevirtual #16                 // Method java/io/InputStream.available:()I
       7: istore_1
       8: aload_0
       9: getfield      #4                  // Field mInMarked:Z
      12: ifeq          34
      15: aload_0
      16: getfield      #5                  // Field mInReset:Z
      19: ifeq          34
      22: iload_1
      23: aload_0
      24: getfield      #8                  // Field mCount:I
      27: aload_0
      28: getfield      #7                  // Field mPosition:I
      31: isub
      32: iadd
      33: istore_1
      34: iload_1
      35: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$is:Ljava/io/InputStream;
       4: invokevirtual #17                 // Method java/io/InputStream.close:()V
       7: return
}
