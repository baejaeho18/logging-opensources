Compiled from "HistogramMetricRegister.java"
public class org.apache.dubbo.metrics.register.HistogramMetricRegister implements org.apache.dubbo.metrics.register.MetricRegister<org.apache.dubbo.metrics.sample.HistogramMetricSample, io.micrometer.core.instrument.Timer> {
  private final io.micrometer.core.instrument.MeterRegistry registry;

  private final org.apache.dubbo.config.nested.HistogramConfig config;

  public org.apache.dubbo.metrics.register.HistogramMetricRegister(io.micrometer.core.instrument.MeterRegistry, org.apache.dubbo.config.nested.HistogramConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field config:Lorg/apache/dubbo/config/nested/HistogramConfig;
      14: return

  public io.micrometer.core.instrument.Timer register(org.apache.dubbo.metrics.sample.HistogramMetricSample);
    Code:
       0: new           #4                  // class java/util/ArrayList
       3: dup
       4: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #6                  // Method org/apache/dubbo/metrics/sample/HistogramMetricSample.getTags:()Ljava/util/Map;
      12: aload_2
      13: invokedynamic #7,  0              // InvokeDynamic #0:accept:(Ljava/util/List;)Ljava/util/function/BiConsumer;
      18: invokeinterface #8,  2            // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      23: aload_1
      24: invokevirtual #9                  // Method org/apache/dubbo/metrics/sample/HistogramMetricSample.getName:()Ljava/lang/String;
      27: invokestatic  #10                 // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      30: aload_1
      31: invokevirtual #11                 // Method org/apache/dubbo/metrics/sample/HistogramMetricSample.getDescription:()Ljava/lang/String;
      34: invokevirtual #12                 // Method io/micrometer/core/instrument/Timer$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      37: aload_2
      38: invokevirtual #13                 // Method io/micrometer/core/instrument/Timer$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer$Builder;
      41: astore_3
      42: getstatic     #14                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      45: aload_0
      46: getfield      #3                  // Field config:Lorg/apache/dubbo/config/nested/HistogramConfig;
      49: invokevirtual #15                 // Method org/apache/dubbo/config/nested/HistogramConfig.getEnabledPercentiles:()Ljava/lang/Boolean;
      52: invokevirtual #16                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      55: ifeq          67
      58: aload_3
      59: iconst_1
      60: invokestatic  #17                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      63: invokevirtual #18                 // Method io/micrometer/core/instrument/Timer$Builder.publishPercentileHistogram:(Ljava/lang/Boolean;)Lio/micrometer/core/instrument/Timer$Builder;
      66: pop
      67: aload_0
      68: getfield      #3                  // Field config:Lorg/apache/dubbo/config/nested/HistogramConfig;
      71: invokevirtual #19                 // Method org/apache/dubbo/config/nested/HistogramConfig.getPercentiles:()[D
      74: ifnull        89
      77: aload_3
      78: aload_0
      79: getfield      #3                  // Field config:Lorg/apache/dubbo/config/nested/HistogramConfig;
      82: invokevirtual #19                 // Method org/apache/dubbo/config/nested/HistogramConfig.getPercentiles:()[D
      85: invokevirtual #20                 // Method io/micrometer/core/instrument/Timer$Builder.publishPercentiles:([D)Lio/micrometer/core/instrument/Timer$Builder;
      88: pop
      89: aload_0
      90: getfield      #3                  // Field config:Lorg/apache/dubbo/config/nested/HistogramConfig;
      93: invokevirtual #21                 // Method org/apache/dubbo/config/nested/HistogramConfig.getBucketsMs:()[Ljava/lang/Integer;
      96: ifnull        137
      99: aload_3
     100: aload_0
     101: getfield      #3                  // Field config:Lorg/apache/dubbo/config/nested/HistogramConfig;
     104: invokevirtual #21                 // Method org/apache/dubbo/config/nested/HistogramConfig.getBucketsMs:()[Ljava/lang/Integer;
     107: invokestatic  #22                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
     110: invokedynamic #23,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
     115: invokeinterface #24,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     120: invokedynamic #25,  0             // InvokeDynamic #2:apply:()Ljava/util/function/IntFunction;
     125: invokeinterface #26,  2           // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
     130: checkcast     #27                 // class "[Ljava/time/Duration;"
     133: invokevirtual #28                 // Method io/micrometer/core/instrument/Timer$Builder.serviceLevelObjectives:([Ljava/time/Duration;)Lio/micrometer/core/instrument/Timer$Builder;
     136: pop
     137: aload_0
     138: getfield      #3                  // Field config:Lorg/apache/dubbo/config/nested/HistogramConfig;
     141: invokevirtual #29                 // Method org/apache/dubbo/config/nested/HistogramConfig.getMinExpectedMs:()Ljava/lang/Integer;
     144: ifnull        166
     147: aload_3
     148: aload_0
     149: getfield      #3                  // Field config:Lorg/apache/dubbo/config/nested/HistogramConfig;
     152: invokevirtual #29                 // Method org/apache/dubbo/config/nested/HistogramConfig.getMinExpectedMs:()Ljava/lang/Integer;
     155: invokevirtual #30                 // Method java/lang/Integer.intValue:()I
     158: i2l
     159: invokestatic  #31                 // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
     162: invokevirtual #32                 // Method io/micrometer/core/instrument/Timer$Builder.minimumExpectedValue:(Ljava/time/Duration;)Lio/micrometer/core/instrument/Timer$Builder;
     165: pop
     166: aload_0
     167: getfield      #3                  // Field config:Lorg/apache/dubbo/config/nested/HistogramConfig;
     170: invokevirtual #33                 // Method org/apache/dubbo/config/nested/HistogramConfig.getMaxExpectedMs:()Ljava/lang/Integer;
     173: ifnull        195
     176: aload_3
     177: aload_0
     178: getfield      #3                  // Field config:Lorg/apache/dubbo/config/nested/HistogramConfig;
     181: invokevirtual #33                 // Method org/apache/dubbo/config/nested/HistogramConfig.getMaxExpectedMs:()Ljava/lang/Integer;
     184: invokevirtual #30                 // Method java/lang/Integer.intValue:()I
     187: i2l
     188: invokestatic  #31                 // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
     191: invokevirtual #34                 // Method io/micrometer/core/instrument/Timer$Builder.maximumExpectedValue:(Ljava/time/Duration;)Lio/micrometer/core/instrument/Timer$Builder;
     194: pop
     195: aload_0
     196: getfield      #3                  // Field config:Lorg/apache/dubbo/config/nested/HistogramConfig;
     199: invokevirtual #35                 // Method org/apache/dubbo/config/nested/HistogramConfig.getDistributionStatisticExpiryMin:()Ljava/lang/Integer;
     202: ifnull        224
     205: aload_3
     206: aload_0
     207: getfield      #3                  // Field config:Lorg/apache/dubbo/config/nested/HistogramConfig;
     210: invokevirtual #35                 // Method org/apache/dubbo/config/nested/HistogramConfig.getDistributionStatisticExpiryMin:()Ljava/lang/Integer;
     213: invokevirtual #30                 // Method java/lang/Integer.intValue:()I
     216: i2l
     217: invokestatic  #36                 // Method java/time/Duration.ofMinutes:(J)Ljava/time/Duration;
     220: invokevirtual #37                 // Method io/micrometer/core/instrument/Timer$Builder.distributionStatisticExpiry:(Ljava/time/Duration;)Lio/micrometer/core/instrument/Timer$Builder;
     223: pop
     224: aload_3
     225: aload_0
     226: getfield      #2                  // Field registry:Lio/micrometer/core/instrument/MeterRegistry;
     229: invokevirtual #38                 // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
     232: areturn

  public io.micrometer.core.instrument.Meter register(org.apache.dubbo.metrics.model.sample.MetricSample);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class org/apache/dubbo/metrics/sample/HistogramMetricSample
       5: invokevirtual #40                 // Method register:(Lorg/apache/dubbo/metrics/sample/HistogramMetricSample;)Lio/micrometer/core/instrument/Timer;
       8: areturn

  private static java.time.Duration[] lambda$register$1(int);
    Code:
       0: iload_0
       1: anewarray     #41                 // class java/time/Duration
       4: areturn

  private static void lambda$register$0(java.util.List, java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     7
       4: ldc           #42                 // String
       6: astore_2
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokestatic  #43                 // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      13: invokeinterface #44,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      18: pop
      19: return
}
