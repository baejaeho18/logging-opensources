Compiled from "MetricsGlobalRegistry.java"
public class org.apache.dubbo.metrics.MetricsGlobalRegistry {
  private static io.micrometer.core.instrument.composite.CompositeMeterRegistry compositeRegistry;

  public org.apache.dubbo.metrics.MetricsGlobalRegistry();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static io.micrometer.core.instrument.composite.CompositeMeterRegistry getCompositeRegistry(org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method org/apache/dubbo/rpc/model/ApplicationModel.getApplicationConfigManager:()Lorg/apache/dubbo/config/context/ConfigManager;
       4: invokevirtual #3                  // Method org/apache/dubbo/config/context/ConfigManager.getMetrics:()Ljava/util/Optional;
       7: astore_1
       8: aload_1
       9: invokevirtual #4                  // Method java/util/Optional.isPresent:()Z
      12: ifeq          48
      15: aload_1
      16: invokevirtual #5                  // Method java/util/Optional.get:()Ljava/lang/Object;
      19: checkcast     #6                  // class org/apache/dubbo/config/MetricsConfig
      22: invokevirtual #7                  // Method org/apache/dubbo/config/MetricsConfig.getUseGlobalRegistry:()Ljava/lang/Boolean;
      25: ifnull        48
      28: aload_1
      29: invokevirtual #5                  // Method java/util/Optional.get:()Ljava/lang/Object;
      32: checkcast     #6                  // class org/apache/dubbo/config/MetricsConfig
      35: invokevirtual #7                  // Method org/apache/dubbo/config/MetricsConfig.getUseGlobalRegistry:()Ljava/lang/Boolean;
      38: invokevirtual #8                  // Method java/lang/Boolean.booleanValue:()Z
      41: ifeq          48
      44: getstatic     #9                  // Field io/micrometer/core/instrument/Metrics.globalRegistry:Lio/micrometer/core/instrument/composite/CompositeMeterRegistry;
      47: areturn
      48: getstatic     #10                 // Field compositeRegistry:Lio/micrometer/core/instrument/composite/CompositeMeterRegistry;
      51: areturn

  public static io.micrometer.core.instrument.composite.CompositeMeterRegistry getCompositeRegistry();
    Code:
       0: invokestatic  #11                 // Method org/apache/dubbo/rpc/model/ApplicationModel.defaultModel:()Lorg/apache/dubbo/rpc/model/ApplicationModel;
       3: invokestatic  #12                 // Method getCompositeRegistry:(Lorg/apache/dubbo/rpc/model/ApplicationModel;)Lio/micrometer/core/instrument/composite/CompositeMeterRegistry;
       6: areturn

  public static void setCompositeRegistry(io.micrometer.core.instrument.composite.CompositeMeterRegistry);
    Code:
       0: aload_0
       1: putstatic     #10                 // Field compositeRegistry:Lio/micrometer/core/instrument/composite/CompositeMeterRegistry;
       4: return

  static {};
    Code:
       0: new           #13                 // class io/micrometer/core/instrument/composite/CompositeMeterRegistry
       3: dup
       4: invokespecial #14                 // Method io/micrometer/core/instrument/composite/CompositeMeterRegistry."<init>":()V
       7: putstatic     #10                 // Field compositeRegistry:Lio/micrometer/core/instrument/composite/CompositeMeterRegistry;
      10: return
}
