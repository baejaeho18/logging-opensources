Compiled from "DefaultMetricsCollector.java"
public class org.apache.dubbo.metrics.collector.DefaultMetricsCollector extends org.apache.dubbo.metrics.collector.CombMetricsCollector<org.apache.dubbo.metrics.event.RequestEvent> {
  private boolean collectEnabled;

  private volatile boolean threadpoolCollectEnabled;

  private final org.apache.dubbo.metrics.collector.sample.ThreadPoolMetricsSampler threadPoolSampler;

  private java.lang.String applicationName;

  private final org.apache.dubbo.rpc.model.ApplicationModel applicationModel;

  private final java.util.List<org.apache.dubbo.metrics.collector.sample.MetricsSampler> samplers;

  public org.apache.dubbo.metrics.collector.sample.SimpleMetricsCountSampler<java.lang.String, org.apache.dubbo.metrics.event.MetricsEvent$Type, org.apache.dubbo.metrics.model.ApplicationMetric> applicationSampler;

  public org.apache.dubbo.metrics.collector.DefaultMetricsCollector(org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: aload_0
       1: new           #2                  // class org/apache/dubbo/metrics/collector/DefaultMetricsCollector$1
       4: dup
       5: aload_1
       6: invokespecial #3                  // Method org/apache/dubbo/metrics/collector/DefaultMetricsCollector$1."<init>":(Lorg/apache/dubbo/rpc/model/ApplicationModel;)V
       9: invokespecial #4                  // Method org/apache/dubbo/metrics/collector/CombMetricsCollector."<init>":(Lorg/apache/dubbo/metrics/data/BaseStatComposite;)V
      12: aload_0
      13: iconst_0
      14: putfield      #5                  // Field collectEnabled:Z
      17: aload_0
      18: iconst_0
      19: putfield      #6                  // Field threadpoolCollectEnabled:Z
      22: aload_0
      23: new           #7                  // class org/apache/dubbo/metrics/collector/sample/ThreadPoolMetricsSampler
      26: dup
      27: aload_0
      28: invokespecial #8                  // Method org/apache/dubbo/metrics/collector/sample/ThreadPoolMetricsSampler."<init>":(Lorg/apache/dubbo/metrics/collector/DefaultMetricsCollector;)V
      31: putfield      #9                  // Field threadPoolSampler:Lorg/apache/dubbo/metrics/collector/sample/ThreadPoolMetricsSampler;
      34: aload_0
      35: new           #10                 // class java/util/ArrayList
      38: dup
      39: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      42: putfield      #12                 // Field samplers:Ljava/util/List;
      45: aload_0
      46: new           #13                 // class org/apache/dubbo/metrics/collector/DefaultMetricsCollector$2
      49: dup
      50: aload_0
      51: invokespecial #14                 // Method org/apache/dubbo/metrics/collector/DefaultMetricsCollector$2."<init>":(Lorg/apache/dubbo/metrics/collector/DefaultMetricsCollector;)V
      54: putfield      #15                 // Field applicationSampler:Lorg/apache/dubbo/metrics/collector/sample/SimpleMetricsCountSampler;
      57: aload_0
      58: new           #16                 // class org/apache/dubbo/metrics/event/DefaultSubDispatcher
      61: dup
      62: aload_0
      63: invokespecial #17                 // Method org/apache/dubbo/metrics/event/DefaultSubDispatcher."<init>":(Lorg/apache/dubbo/metrics/collector/DefaultMetricsCollector;)V
      66: invokespecial #18                 // Method org/apache/dubbo/metrics/collector/CombMetricsCollector.setEventMulticaster:(Lorg/apache/dubbo/metrics/event/MetricsEventMulticaster;)V
      69: aload_0
      70: getfield      #12                 // Field samplers:Ljava/util/List;
      73: aload_0
      74: getfield      #15                 // Field applicationSampler:Lorg/apache/dubbo/metrics/collector/sample/SimpleMetricsCountSampler;
      77: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      82: pop
      83: aload_0
      84: getfield      #12                 // Field samplers:Ljava/util/List;
      87: aload_0
      88: getfield      #9                  // Field threadPoolSampler:Lorg/apache/dubbo/metrics/collector/sample/ThreadPoolMetricsSampler;
      91: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      96: pop
      97: aload_0
      98: aload_1
      99: putfield      #1                  // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
     102: return

  public void addSampler(org.apache.dubbo.metrics.collector.sample.MetricsSampler);
    Code:
       0: aload_0
       1: getfield      #12                 // Field samplers:Ljava/util/List;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void setApplicationName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field applicationName:Ljava/lang/String;
       5: return

  public java.lang.String getApplicationName();
    Code:
       0: aload_0
       1: getfield      #20                 // Field applicationName:Ljava/lang/String;
       4: areturn

  public org.apache.dubbo.rpc.model.ApplicationModel getApplicationModel();
    Code:
       0: aload_0
       1: getfield      #1                  // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
       4: areturn

  public void setCollectEnabled(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method java/lang/Boolean.booleanValue:()Z
       5: putfield      #5                  // Field collectEnabled:Z
       8: return

  public boolean isCollectEnabled();
    Code:
       0: aload_0
       1: getfield      #5                  // Field collectEnabled:Z
       4: ireturn

  public boolean isThreadpoolCollectEnabled();
    Code:
       0: aload_0
       1: getfield      #6                  // Field threadpoolCollectEnabled:Z
       4: ireturn

  public void setThreadpoolCollectEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field threadpoolCollectEnabled:Z
       5: return

  public void collectApplication();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #1                  // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
       5: invokevirtual #22                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getApplicationName:()Ljava/lang/String;
       8: invokevirtual #23                 // Method setApplicationName:(Ljava/lang/String;)V
      11: aload_0
      12: getfield      #15                 // Field applicationSampler:Lorg/apache/dubbo/metrics/collector/sample/SimpleMetricsCountSampler;
      15: aload_0
      16: getfield      #20                 // Field applicationName:Ljava/lang/String;
      19: getstatic     #24                 // Field org/apache/dubbo/metrics/event/MetricsEvent$Type.APPLICATION_INFO:Lorg/apache/dubbo/metrics/event/MetricsEvent$Type;
      22: invokevirtual #25                 // Method org/apache/dubbo/metrics/collector/sample/SimpleMetricsCountSampler.inc:(Ljava/lang/Object;Ljava/lang/Object;)V
      25: return

  public void registryDefaultSample();
    Code:
       0: aload_0
       1: getfield      #9                  // Field threadPoolSampler:Lorg/apache/dubbo/metrics/collector/sample/ThreadPoolMetricsSampler;
       4: invokevirtual #26                 // Method org/apache/dubbo/metrics/collector/sample/ThreadPoolMetricsSampler.registryDefaultSampleThreadPoolExecutor:()V
       7: return

  public java.util.List<org.apache.dubbo.metrics.model.sample.MetricSample> collect();
    Code:
       0: new           #10                 // class java/util/ArrayList
       3: dup
       4: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #27                 // Method isCollectEnabled:()Z
      12: ifne          17
      15: aload_1
      16: areturn
      17: aload_0
      18: getfield      #12                 // Field samplers:Ljava/util/List;
      21: invokeinterface #28,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          66
      36: aload_2
      37: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #31                 // class org/apache/dubbo/metrics/collector/sample/MetricsSampler
      45: astore_3
      46: aload_3
      47: invokeinterface #32,  1           // InterfaceMethod org/apache/dubbo/metrics/collector/sample/MetricsSampler.sample:()Ljava/util/List;
      52: astore        4
      54: aload_1
      55: aload         4
      57: invokeinterface #33,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      62: pop
      63: goto          27
      66: aload_1
      67: aload_0
      68: getstatic     #34                 // Field org/apache/dubbo/metrics/model/MetricsCategory.REQUESTS:Lorg/apache/dubbo/metrics/model/MetricsCategory;
      71: invokespecial #35                 // Method org/apache/dubbo/metrics/collector/CombMetricsCollector.export:(Lorg/apache/dubbo/metrics/model/MetricsCategory;)Ljava/util/List;
      74: invokeinterface #33,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      79: pop
      80: aload_1
      81: areturn

  public boolean isSupport(org.apache.dubbo.metrics.event.MetricsEvent);
    Code:
       0: aload_1
       1: instanceof    #36                 // class org/apache/dubbo/metrics/event/RequestEvent
       4: ifne          14
       7: aload_1
       8: instanceof    #37                 // class org/apache/dubbo/metrics/event/RequestBeforeEvent
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  static org.apache.dubbo.rpc.model.ApplicationModel access$000(org.apache.dubbo.metrics.collector.DefaultMetricsCollector);
    Code:
       0: aload_0
       1: getfield      #1                  // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
       4: areturn
}
