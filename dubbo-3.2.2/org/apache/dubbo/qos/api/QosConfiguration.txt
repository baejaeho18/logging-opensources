Compiled from "QosConfiguration.java"
public class org.apache.dubbo.qos.api.QosConfiguration {
  private java.lang.String welcome;

  private boolean acceptForeignIp;

  private java.lang.String acceptForeignIpWhitelist;

  private java.util.function.Predicate<java.lang.String> acceptForeignIpWhitelistPredicate;

  private org.apache.dubbo.qos.api.PermissionLevel anonymousAccessPermissionLevel;

  private java.lang.String anonymousAllowCommands;

  private org.apache.dubbo.qos.api.QosConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/apache/dubbo/qos/api/PermissionLevel.PUBLIC:Lorg/apache/dubbo/qos/api/PermissionLevel;
       8: putfield      #3                  // Field anonymousAccessPermissionLevel:Lorg/apache/dubbo/qos/api/PermissionLevel;
      11: return

  public org.apache.dubbo.qos.api.QosConfiguration(org.apache.dubbo.qos.api.QosConfiguration$Builder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/apache/dubbo/qos/api/PermissionLevel.PUBLIC:Lorg/apache/dubbo/qos/api/PermissionLevel;
       8: putfield      #3                  // Field anonymousAccessPermissionLevel:Lorg/apache/dubbo/qos/api/PermissionLevel;
      11: aload_0
      12: aload_1
      13: invokevirtual #4                  // Method org/apache/dubbo/qos/api/QosConfiguration$Builder.getWelcome:()Ljava/lang/String;
      16: putfield      #5                  // Field welcome:Ljava/lang/String;
      19: aload_0
      20: aload_1
      21: invokevirtual #6                  // Method org/apache/dubbo/qos/api/QosConfiguration$Builder.isAcceptForeignIp:()Z
      24: putfield      #7                  // Field acceptForeignIp:Z
      27: aload_0
      28: aload_1
      29: invokevirtual #8                  // Method org/apache/dubbo/qos/api/QosConfiguration$Builder.getAcceptForeignIpWhitelist:()Ljava/lang/String;
      32: putfield      #9                  // Field acceptForeignIpWhitelist:Ljava/lang/String;
      35: aload_0
      36: aload_1
      37: invokevirtual #10                 // Method org/apache/dubbo/qos/api/QosConfiguration$Builder.getAnonymousAccessPermissionLevel:()Lorg/apache/dubbo/qos/api/PermissionLevel;
      40: putfield      #3                  // Field anonymousAccessPermissionLevel:Lorg/apache/dubbo/qos/api/PermissionLevel;
      43: aload_0
      44: aload_1
      45: invokevirtual #11                 // Method org/apache/dubbo/qos/api/QosConfiguration$Builder.getAnonymousAllowCommands:()Ljava/lang/String;
      48: putfield      #12                 // Field anonymousAllowCommands:Ljava/lang/String;
      51: aload_0
      52: invokespecial #13                 // Method buildPredicate:()V
      55: return

  private void buildPredicate();
    Code:
       0: aload_0
       1: getfield      #9                  // Field acceptForeignIpWhitelist:Ljava/lang/String;
       4: invokestatic  #14                 // Method org/apache/dubbo/common/utils/StringUtils.isNotEmpty:(Ljava/lang/String;)Z
       7: ifeq          80
      10: aload_0
      11: aload_0
      12: getfield      #9                  // Field acceptForeignIpWhitelist:Ljava/lang/String;
      15: ldc           #15                 // String ,
      17: invokevirtual #16                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      20: invokestatic  #17                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      23: invokedynamic #18,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      28: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      33: invokedynamic #20,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      38: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      43: invokedynamic #22,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      48: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      53: invokedynamic #23,  0             // InvokeDynamic #3:apply:()Ljava/util/function/BinaryOperator;
      58: invokeinterface #24,  2           // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/util/function/BinaryOperator;)Ljava/util/Optional;
      63: invokedynamic #25,  0             // InvokeDynamic #4:test:()Ljava/util/function/Predicate;
      68: invokevirtual #26                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      71: checkcast     #27                 // class java/util/function/Predicate
      74: putfield      #28                 // Field acceptForeignIpWhitelistPredicate:Ljava/util/function/Predicate;
      77: goto          89
      80: aload_0
      81: invokedynamic #29,  0             // InvokeDynamic #5:test:()Ljava/util/function/Predicate;
      86: putfield      #28                 // Field acceptForeignIpWhitelistPredicate:Ljava/util/function/Predicate;
      89: return

  public boolean isAllowAnonymousAccess();
    Code:
       0: getstatic     #30                 // Field org/apache/dubbo/qos/api/PermissionLevel.NONE:Lorg/apache/dubbo/qos/api/PermissionLevel;
       3: aload_0
       4: getfield      #3                  // Field anonymousAccessPermissionLevel:Lorg/apache/dubbo/qos/api/PermissionLevel;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public java.lang.String getWelcome();
    Code:
       0: aload_0
       1: getfield      #5                  // Field welcome:Ljava/lang/String;
       4: areturn

  public org.apache.dubbo.qos.api.PermissionLevel getAnonymousAccessPermissionLevel();
    Code:
       0: aload_0
       1: getfield      #3                  // Field anonymousAccessPermissionLevel:Lorg/apache/dubbo/qos/api/PermissionLevel;
       4: areturn

  public java.lang.String getAcceptForeignIpWhitelist();
    Code:
       0: aload_0
       1: getfield      #9                  // Field acceptForeignIpWhitelist:Ljava/lang/String;
       4: areturn

  public java.util.function.Predicate<java.lang.String> getAcceptForeignIpWhitelistPredicate();
    Code:
       0: aload_0
       1: getfield      #28                 // Field acceptForeignIpWhitelistPredicate:Ljava/util/function/Predicate;
       4: areturn

  public boolean isAcceptForeignIp();
    Code:
       0: aload_0
       1: getfield      #7                  // Field acceptForeignIp:Z
       4: ireturn

  public java.lang.String getAnonymousAllowCommands();
    Code:
       0: aload_0
       1: getfield      #12                 // Field anonymousAllowCommands:Ljava/lang/String;
       4: areturn

  public static org.apache.dubbo.qos.api.QosConfiguration$Builder builder();
    Code:
       0: new           #31                 // class org/apache/dubbo/qos/api/QosConfiguration$Builder
       3: dup
       4: aconst_null
       5: invokespecial #32                 // Method org/apache/dubbo/qos/api/QosConfiguration$Builder."<init>":(Lorg/apache/dubbo/qos/api/QosConfiguration$1;)V
       8: areturn

  private static boolean lambda$buildPredicate$3(java.lang.String);
    Code:
       0: iconst_0
       1: ireturn

  private static boolean lambda$buildPredicate$2(java.lang.String);
    Code:
       0: iconst_0
       1: ireturn

  private static java.util.function.Predicate lambda$buildPredicate$1(java.lang.String);
    Code:
       0: aload_0
       1: invokedynamic #33,  0             // InvokeDynamic #6:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
       6: areturn

  private static boolean lambda$null$0(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_m1
       3: invokestatic  #34                 // Method org/apache/dubbo/common/utils/NetUtils.matchIpExpression:(Ljava/lang/String;Ljava/lang/String;I)Z
       6: ireturn
       7: astore_2
       8: iconst_0
       9: ireturn
    Exception table:
       from    to  target type
           0     6     7   Class java/net/UnknownHostException
}
