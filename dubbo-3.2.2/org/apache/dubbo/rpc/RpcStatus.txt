Compiled from "RpcStatus.java"
public class org.apache.dubbo.rpc.RpcStatus {
  private static final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.dubbo.rpc.RpcStatus> SERVICE_STATISTICS;

  private static final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.dubbo.rpc.RpcStatus>> METHOD_STATISTICS;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Object> values;

  private final java.util.concurrent.atomic.AtomicInteger active;

  private final java.util.concurrent.atomic.AtomicLong total;

  private final java.util.concurrent.atomic.AtomicInteger failed;

  private final java.util.concurrent.atomic.AtomicLong totalElapsed;

  private final java.util.concurrent.atomic.AtomicLong failedElapsed;

  private final java.util.concurrent.atomic.AtomicLong maxElapsed;

  private final java.util.concurrent.atomic.AtomicLong failedMaxElapsed;

  private final java.util.concurrent.atomic.AtomicLong succeededMaxElapsed;

  private org.apache.dubbo.rpc.RpcStatus();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicInteger
      19: dup
      20: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      23: putfield      #7                  // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      26: aload_0
      27: new           #8                  // class java/util/concurrent/atomic/AtomicLong
      30: dup
      31: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      34: putfield      #10                 // Field total:Ljava/util/concurrent/atomic/AtomicLong;
      37: aload_0
      38: new           #5                  // class java/util/concurrent/atomic/AtomicInteger
      41: dup
      42: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      45: putfield      #11                 // Field failed:Ljava/util/concurrent/atomic/AtomicInteger;
      48: aload_0
      49: new           #8                  // class java/util/concurrent/atomic/AtomicLong
      52: dup
      53: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      56: putfield      #12                 // Field totalElapsed:Ljava/util/concurrent/atomic/AtomicLong;
      59: aload_0
      60: new           #8                  // class java/util/concurrent/atomic/AtomicLong
      63: dup
      64: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      67: putfield      #13                 // Field failedElapsed:Ljava/util/concurrent/atomic/AtomicLong;
      70: aload_0
      71: new           #8                  // class java/util/concurrent/atomic/AtomicLong
      74: dup
      75: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      78: putfield      #14                 // Field maxElapsed:Ljava/util/concurrent/atomic/AtomicLong;
      81: aload_0
      82: new           #8                  // class java/util/concurrent/atomic/AtomicLong
      85: dup
      86: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      89: putfield      #15                 // Field failedMaxElapsed:Ljava/util/concurrent/atomic/AtomicLong;
      92: aload_0
      93: new           #8                  // class java/util/concurrent/atomic/AtomicLong
      96: dup
      97: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
     100: putfield      #16                 // Field succeededMaxElapsed:Ljava/util/concurrent/atomic/AtomicLong;
     103: return

  public static org.apache.dubbo.rpc.RpcStatus getStatus(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method org/apache/dubbo/common/URL.toIdentityString:()Ljava/lang/String;
       4: astore_1
       5: getstatic     #18                 // Field SERVICE_STATISTICS:Ljava/util/concurrent/ConcurrentMap;
       8: aload_1
       9: invokedynamic #19,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      14: invokestatic  #20                 // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      17: checkcast     #21                 // class org/apache/dubbo/rpc/RpcStatus
      20: areturn

  public static void removeStatus(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method org/apache/dubbo/common/URL.toIdentityString:()Ljava/lang/String;
       4: astore_1
       5: getstatic     #18                 // Field SERVICE_STATISTICS:Ljava/util/concurrent/ConcurrentMap;
       8: aload_1
       9: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  public static org.apache.dubbo.rpc.RpcStatus getStatus(org.apache.dubbo.common.URL, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method org/apache/dubbo/common/URL.toIdentityString:()Ljava/lang/String;
       4: astore_2
       5: getstatic     #23                 // Field METHOD_STATISTICS:Ljava/util/concurrent/ConcurrentMap;
       8: aload_2
       9: invokedynamic #24,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      14: invokestatic  #20                 // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      17: checkcast     #25                 // class java/util/concurrent/ConcurrentMap
      20: astore_3
      21: aload_3
      22: aload_1
      23: invokedynamic #26,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      28: invokestatic  #20                 // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      31: checkcast     #21                 // class org/apache/dubbo/rpc/RpcStatus
      34: areturn

  public static void removeStatus(org.apache.dubbo.common.URL, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method org/apache/dubbo/common/URL.toIdentityString:()Ljava/lang/String;
       4: astore_2
       5: getstatic     #23                 // Field METHOD_STATISTICS:Ljava/util/concurrent/ConcurrentMap;
       8: aload_2
       9: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #25                 // class java/util/concurrent/ConcurrentMap
      17: astore_3
      18: aload_3
      19: ifnull        30
      22: aload_3
      23: aload_1
      24: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: return

  public static void beginCount(org.apache.dubbo.common.URL, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #29                 // int 2147483647
       4: invokestatic  #30                 // Method beginCount:(Lorg/apache/dubbo/common/URL;Ljava/lang/String;I)Z
       7: pop
       8: return

  public static boolean beginCount(org.apache.dubbo.common.URL, java.lang.String, int);
    Code:
       0: iload_2
       1: ifgt          9
       4: ldc           #29                 // int 2147483647
       6: goto          10
       9: iload_2
      10: istore_2
      11: aload_0
      12: invokestatic  #31                 // Method getStatus:(Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/rpc/RpcStatus;
      15: astore_3
      16: aload_0
      17: aload_1
      18: invokestatic  #32                 // Method getStatus:(Lorg/apache/dubbo/common/URL;Ljava/lang/String;)Lorg/apache/dubbo/rpc/RpcStatus;
      21: astore        4
      23: aload         4
      25: getfield      #7                  // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      28: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      31: ldc           #29                 // int 2147483647
      33: if_icmpne     38
      36: iconst_0
      37: ireturn
      38: aload         4
      40: getfield      #7                  // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      43: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      46: istore        5
      48: iload         5
      50: ldc           #29                 // int 2147483647
      52: if_icmpeq     63
      55: iload         5
      57: iconst_1
      58: iadd
      59: iload_2
      60: if_icmple     65
      63: iconst_0
      64: ireturn
      65: aload         4
      67: getfield      #7                  // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      70: iload         5
      72: iload         5
      74: iconst_1
      75: iadd
      76: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      79: ifeq          38
      82: goto          85
      85: aload_3
      86: getfield      #7                  // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
      89: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      92: pop
      93: iconst_1
      94: ireturn

  public static void endCount(org.apache.dubbo.common.URL, java.lang.String, long, boolean);
    Code:
       0: aload_0
       1: invokestatic  #31                 // Method getStatus:(Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/rpc/RpcStatus;
       4: lload_2
       5: iload         4
       7: invokestatic  #36                 // Method endCount:(Lorg/apache/dubbo/rpc/RpcStatus;JZ)V
      10: aload_0
      11: aload_1
      12: invokestatic  #32                 // Method getStatus:(Lorg/apache/dubbo/common/URL;Ljava/lang/String;)Lorg/apache/dubbo/rpc/RpcStatus;
      15: lload_2
      16: iload         4
      18: invokestatic  #36                 // Method endCount:(Lorg/apache/dubbo/rpc/RpcStatus;JZ)V
      21: return

  private static void endCount(org.apache.dubbo.rpc.RpcStatus, long, boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: pop
       8: aload_0
       9: getfield      #10                 // Field total:Ljava/util/concurrent/atomic/AtomicLong;
      12: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      15: pop2
      16: aload_0
      17: getfield      #12                 // Field totalElapsed:Ljava/util/concurrent/atomic/AtomicLong;
      20: lload_1
      21: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      24: pop2
      25: aload_0
      26: getfield      #14                 // Field maxElapsed:Ljava/util/concurrent/atomic/AtomicLong;
      29: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      32: lload_1
      33: lcmp
      34: ifge          45
      37: aload_0
      38: getfield      #14                 // Field maxElapsed:Ljava/util/concurrent/atomic/AtomicLong;
      41: lload_1
      42: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      45: iload_3
      46: ifeq          72
      49: aload_0
      50: getfield      #16                 // Field succeededMaxElapsed:Ljava/util/concurrent/atomic/AtomicLong;
      53: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      56: lload_1
      57: lcmp
      58: ifge          109
      61: aload_0
      62: getfield      #16                 // Field succeededMaxElapsed:Ljava/util/concurrent/atomic/AtomicLong;
      65: lload_1
      66: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      69: goto          109
      72: aload_0
      73: getfield      #11                 // Field failed:Ljava/util/concurrent/atomic/AtomicInteger;
      76: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      79: pop
      80: aload_0
      81: getfield      #13                 // Field failedElapsed:Ljava/util/concurrent/atomic/AtomicLong;
      84: lload_1
      85: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      88: pop2
      89: aload_0
      90: getfield      #15                 // Field failedMaxElapsed:Ljava/util/concurrent/atomic/AtomicLong;
      93: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      96: lload_1
      97: lcmp
      98: ifge          109
     101: aload_0
     102: getfield      #15                 // Field failedMaxElapsed:Ljava/util/concurrent/atomic/AtomicLong;
     105: lload_1
     106: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
     109: return

  public void set(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #42,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.lang.Object get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public int getActive();
    Code:
       0: aload_0
       1: getfield      #7                  // Field active:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public long getTotal();
    Code:
       0: aload_0
       1: getfield      #10                 // Field total:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicLong.longValue:()J
       7: lreturn

  public long getTotalElapsed();
    Code:
       0: aload_0
       1: getfield      #12                 // Field totalElapsed:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getAverageElapsed();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method getTotal:()J
       4: lstore_1
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifne          13
      11: lconst_0
      12: lreturn
      13: aload_0
      14: invokevirtual #45                 // Method getTotalElapsed:()J
      17: lload_1
      18: ldiv
      19: lreturn

  public long getMaxElapsed();
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxElapsed:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public int getFailed();
    Code:
       0: aload_0
       1: getfield      #11                 // Field failed:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public long getFailedElapsed();
    Code:
       0: aload_0
       1: getfield      #13                 // Field failedElapsed:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getFailedAverageElapsed();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getFailed:()I
       4: i2l
       5: lstore_1
       6: lload_1
       7: lconst_0
       8: lcmp
       9: ifne          14
      12: lconst_0
      13: lreturn
      14: aload_0
      15: invokevirtual #47                 // Method getFailedElapsed:()J
      18: lload_1
      19: ldiv
      20: lreturn

  public long getFailedMaxElapsed();
    Code:
       0: aload_0
       1: getfield      #15                 // Field failedMaxElapsed:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getSucceeded();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method getTotal:()J
       4: aload_0
       5: invokevirtual #46                 // Method getFailed:()I
       8: i2l
       9: lsub
      10: lreturn

  public long getSucceededElapsed();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method getTotalElapsed:()J
       4: aload_0
       5: invokevirtual #47                 // Method getFailedElapsed:()J
       8: lsub
       9: lreturn

  public long getSucceededAverageElapsed();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method getSucceeded:()J
       4: lstore_1
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifne          13
      11: lconst_0
      12: lreturn
      13: aload_0
      14: invokevirtual #49                 // Method getSucceededElapsed:()J
      17: lload_1
      18: ldiv
      19: lreturn

  public long getSucceededMaxElapsed();
    Code:
       0: aload_0
       1: getfield      #16                 // Field succeededMaxElapsed:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getAverageTps();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method getTotalElapsed:()J
       4: ldc2_w        #50                 // long 1000l
       7: lcmp
       8: iflt          25
      11: aload_0
      12: invokevirtual #44                 // Method getTotal:()J
      15: aload_0
      16: invokevirtual #45                 // Method getTotalElapsed:()J
      19: ldc2_w        #50                 // long 1000l
      22: ldiv
      23: ldiv
      24: lreturn
      25: aload_0
      26: invokevirtual #44                 // Method getTotal:()J
      29: lreturn

  private static org.apache.dubbo.rpc.RpcStatus lambda$getStatus$2(java.lang.String);
    Code:
       0: new           #21                 // class org/apache/dubbo/rpc/RpcStatus
       3: dup
       4: invokespecial #52                 // Method "<init>":()V
       7: areturn

  private static java.util.concurrent.ConcurrentMap lambda$getStatus$1(java.lang.String);
    Code:
       0: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: areturn

  private static org.apache.dubbo.rpc.RpcStatus lambda$getStatus$0(java.lang.String);
    Code:
       0: new           #21                 // class org/apache/dubbo/rpc/RpcStatus
       3: dup
       4: invokespecial #52                 // Method "<init>":()V
       7: areturn

  static {};
    Code:
       0: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: putstatic     #18                 // Field SERVICE_STATISTICS:Ljava/util/concurrent/ConcurrentMap;
      10: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: putstatic     #23                 // Field METHOD_STATISTICS:Ljava/util/concurrent/ConcurrentMap;
      20: return
}
