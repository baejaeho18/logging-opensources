Compiled from "AppResponse.java"
public class org.apache.dubbo.rpc.AppResponse implements org.apache.dubbo.rpc.Result {
  private static final long serialVersionUID;

  private java.lang.Object result;

  private java.lang.Throwable exception;

  private java.util.Map<java.lang.String, java.lang.Object> attachments;

  private final java.util.Map<java.lang.String, java.lang.Object> attributes;

  public org.apache.dubbo.rpc.AppResponse();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field attachments:Ljava/util/Map;
      15: aload_0
      16: new           #3                  // class java/util/HashMap
      19: dup
      20: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      23: putfield      #6                  // Field attributes:Ljava/util/Map;
      26: return

  public org.apache.dubbo.rpc.AppResponse(org.apache.dubbo.rpc.Invocation);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field attachments:Ljava/util/Map;
      15: aload_0
      16: new           #3                  // class java/util/HashMap
      19: dup
      20: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      23: putfield      #6                  // Field attributes:Ljava/util/Map;
      26: aload_0
      27: ldc           #7                  // String invocation
      29: aload_1
      30: invokevirtual #8                  // Method setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      33: return

  public org.apache.dubbo.rpc.AppResponse(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field attachments:Ljava/util/Map;
      15: aload_0
      16: new           #3                  // class java/util/HashMap
      19: dup
      20: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      23: putfield      #6                  // Field attributes:Ljava/util/Map;
      26: aload_0
      27: aload_1
      28: putfield      #9                  // Field result:Ljava/lang/Object;
      31: return

  public org.apache.dubbo.rpc.AppResponse(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field attachments:Ljava/util/Map;
      15: aload_0
      16: new           #3                  // class java/util/HashMap
      19: dup
      20: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      23: putfield      #6                  // Field attributes:Ljava/util/Map;
      26: aload_0
      27: aload_1
      28: putfield      #10                 // Field exception:Ljava/lang/Throwable;
      31: return

  public java.lang.Object recreate() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #10                 // Field exception:Ljava/lang/Throwable;
       4: ifnull        39
       7: aload_0
       8: getfield      #10                 // Field exception:Ljava/lang/Throwable;
      11: invokevirtual #11                 // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
      14: astore_1
      15: aload_1
      16: ifnonnull     30
      19: aload_0
      20: getfield      #10                 // Field exception:Ljava/lang/Throwable;
      23: iconst_0
      24: anewarray     #12                 // class java/lang/StackTraceElement
      27: invokevirtual #13                 // Method java/lang/Throwable.setStackTrace:([Ljava/lang/StackTraceElement;)V
      30: goto          34
      33: astore_1
      34: aload_0
      35: getfield      #10                 // Field exception:Ljava/lang/Throwable;
      38: athrow
      39: aload_0
      40: getfield      #9                  // Field result:Ljava/lang/Object;
      43: areturn
    Exception table:
       from    to  target type
           7    30    33   Class java/lang/Exception

  public java.lang.Object getValue();
    Code:
       0: aload_0
       1: getfield      #9                  // Field result:Ljava/lang/Object;
       4: areturn

  public void setValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field result:Ljava/lang/Object;
       5: return

  public java.lang.Throwable getException();
    Code:
       0: aload_0
       1: getfield      #10                 // Field exception:Ljava/lang/Throwable;
       4: areturn

  public void setException(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field exception:Ljava/lang/Throwable;
       5: return

  public boolean hasException();
    Code:
       0: aload_0
       1: getfield      #10                 // Field exception:Ljava/lang/Throwable;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.util.Map<java.lang.String, java.lang.String> getAttachments();
    Code:
       0: new           #15                 // class org/apache/dubbo/rpc/AttachmentsAdapter$ObjectToStringMap
       3: dup
       4: aload_0
       5: getfield      #5                  // Field attachments:Ljava/util/Map;
       8: invokespecial #16                 // Method org/apache/dubbo/rpc/AttachmentsAdapter$ObjectToStringMap."<init>":(Ljava/util/Map;)V
      11: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getObjectAttachments();
    Code:
       0: aload_0
       1: getfield      #5                  // Field attachments:Ljava/util/Map;
       4: areturn

  public void setAttachments(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     15
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: goto          23
      15: new           #3                  // class java/util/HashMap
      18: dup
      19: aload_1
      20: invokespecial #17                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      23: putfield      #5                  // Field attachments:Ljava/util/Map;
      26: return

  public void setObjectAttachments(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     15
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: goto          16
      15: aload_1
      16: putfield      #5                  // Field attachments:Ljava/util/Map;
      19: return

  public void addAttachments(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #5                  // Field attachments:Ljava/util/Map;
       9: ifnonnull     29
      12: aload_0
      13: new           #3                  // class java/util/HashMap
      16: dup
      17: aload_1
      18: invokeinterface #18,  1           // InterfaceMethod java/util/Map.size:()I
      23: invokespecial #19                 // Method java/util/HashMap."<init>":(I)V
      26: putfield      #5                  // Field attachments:Ljava/util/Map;
      29: aload_0
      30: getfield      #5                  // Field attachments:Ljava/util/Map;
      33: aload_1
      34: invokeinterface #20,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      39: return

  public void addObjectAttachments(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #5                  // Field attachments:Ljava/util/Map;
       9: ifnonnull     29
      12: aload_0
      13: new           #3                  // class java/util/HashMap
      16: dup
      17: aload_1
      18: invokeinterface #18,  1           // InterfaceMethod java/util/Map.size:()I
      23: invokespecial #19                 // Method java/util/HashMap."<init>":(I)V
      26: putfield      #5                  // Field attachments:Ljava/util/Map;
      29: aload_0
      30: getfield      #5                  // Field attachments:Ljava/util/Map;
      33: aload_1
      34: invokeinterface #20,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      39: return

  public java.lang.String getAttachment(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field attachments:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: instanceof    #22                 // class java/lang/String
      15: ifeq          23
      18: aload_2
      19: checkcast     #22                 // class java/lang/String
      22: areturn
      23: aconst_null
      24: areturn

  public java.lang.Object getObjectAttachment(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field attachments:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.lang.String getAttachment(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field attachments:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_3
      11: aload_3
      12: ifnonnull     17
      15: aload_2
      16: areturn
      17: aload_3
      18: instanceof    #22                 // class java/lang/String
      21: ifeq          29
      24: aload_3
      25: checkcast     #22                 // class java/lang/String
      28: areturn
      29: aload_2
      30: areturn

  public java.lang.Object getObjectAttachment(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field attachments:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_3
      11: aload_3
      12: ifnonnull     17
      15: aload_2
      16: astore_3
      17: aload_3
      18: areturn

  public void setAttachment(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #23                 // Method setObjectAttachment:(Ljava/lang/String;Ljava/lang/Object;)V
       6: return

  public void setAttachment(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #23                 // Method setObjectAttachment:(Ljava/lang/String;Ljava/lang/Object;)V
       6: return

  public void setObjectAttachment(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field attachments:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.lang.Object getAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field attributes:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public void setAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field attributes:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public org.apache.dubbo.rpc.Result whenCompleteWithContext(java.util.function.BiConsumer<org.apache.dubbo.rpc.Result, java.lang.Throwable>);
    Code:
       0: new           #25                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #26                 // String AppResponse represents an concrete business response, there will be no status changes, you should get internal values directly.
       6: invokespecial #27                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public <U> java.util.concurrent.CompletableFuture<U> thenApply(java.util.function.Function<org.apache.dubbo.rpc.Result, ? extends U>);
    Code:
       0: new           #25                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #26                 // String AppResponse represents an concrete business response, there will be no status changes, you should get internal values directly.
       6: invokespecial #27                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.apache.dubbo.rpc.Result get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: new           #25                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #26                 // String AppResponse represents an concrete business response, there will be no status changes, you should get internal values directly.
       6: invokespecial #27                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.apache.dubbo.rpc.Result get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: new           #25                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #26                 // String AppResponse represents an concrete business response, there will be no status changes, you should get internal values directly.
       6: invokespecial #27                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #9                  // Field result:Ljava/lang/Object;
       5: aload_0
       6: aconst_null
       7: putfield      #10                 // Field exception:Ljava/lang/Throwable;
      10: aload_0
      11: getfield      #5                  // Field attachments:Ljava/util/Map;
      14: invokeinterface #28,  1           // InterfaceMethod java/util/Map.clear:()V
      19: return

  public java.lang.String toString();
    Code:
       0: new           #29                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #31                 // String AppResponse [value=
       9: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #9                  // Field result:Ljava/lang/Object;
      16: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #34                 // String , exception=
      21: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #10                 // Field exception:Ljava/lang/Throwable;
      28: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #35                 // String ]
      33: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn
}
