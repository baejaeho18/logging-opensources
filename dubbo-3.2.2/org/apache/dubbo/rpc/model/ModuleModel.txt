Compiled from "ModuleModel.java"
public class org.apache.dubbo.rpc.model.ModuleModel extends org.apache.dubbo.rpc.model.ScopeModel {
  private static final org.apache.dubbo.common.logger.Logger logger;

  public static final java.lang.String NAME;

  private final org.apache.dubbo.rpc.model.ApplicationModel applicationModel;

  private volatile org.apache.dubbo.rpc.model.ModuleServiceRepository serviceRepository;

  private volatile org.apache.dubbo.common.config.ModuleEnvironment moduleEnvironment;

  private volatile org.apache.dubbo.config.context.ModuleConfigManager moduleConfigManager;

  private volatile org.apache.dubbo.common.deploy.ModuleDeployer deployer;

  private boolean lifeCycleManagedExternally;

  protected org.apache.dubbo.rpc.model.ModuleModel(org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Lorg/apache/dubbo/rpc/model/ApplicationModel;Z)V
       6: return

  protected org.apache.dubbo.rpc.model.ModuleModel(org.apache.dubbo.rpc.model.ApplicationModel, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #2                  // Field org/apache/dubbo/common/extension/ExtensionScope.MODULE:Lorg/apache/dubbo/common/extension/ExtensionScope;
       5: iload_2
       6: invokespecial #3                  // Method org/apache/dubbo/rpc/model/ScopeModel."<init>":(Lorg/apache/dubbo/rpc/model/ScopeModel;Lorg/apache/dubbo/common/extension/ExtensionScope;Z)V
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field lifeCycleManagedExternally:Z
      14: aload_0
      15: getfield      #5                  // Field instLock:Ljava/lang/Object;
      18: dup
      19: astore_3
      20: monitorenter
      21: aload_1
      22: ldc           #6                  // String ApplicationModel can not be null
      24: invokestatic  #7                  // Method org/apache/dubbo/common/utils/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      27: aload_0
      28: aload_1
      29: putfield      #8                  // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
      32: aload_1
      33: aload_0
      34: iload_2
      35: invokevirtual #9                  // Method org/apache/dubbo/rpc/model/ApplicationModel.addModule:(Lorg/apache/dubbo/rpc/model/ModuleModel;Z)V
      38: getstatic     #10                 // Field LOGGER:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      41: invokeinterface #11,  1           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.isInfoEnabled:()Z
      46: ifeq          79
      49: getstatic     #10                 // Field LOGGER:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      52: new           #12                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      59: aload_0
      60: invokevirtual #14                 // Method getDesc:()Ljava/lang/String;
      63: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: ldc           #16                 // String  is created
      68: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokeinterface #18,  2           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.info:(Ljava/lang/String;)V
      79: aload_0
      80: invokevirtual #19                 // Method initialize:()V
      83: aload_0
      84: new           #20                 // class org/apache/dubbo/rpc/model/ModuleServiceRepository
      87: dup
      88: aload_0
      89: invokespecial #21                 // Method org/apache/dubbo/rpc/model/ModuleServiceRepository."<init>":(Lorg/apache/dubbo/rpc/model/ModuleModel;)V
      92: putfield      #22                 // Field serviceRepository:Lorg/apache/dubbo/rpc/model/ModuleServiceRepository;
      95: aload_0
      96: invokespecial #23                 // Method initModuleExt:()V
      99: aload_0
     100: ldc           #24                 // class org/apache/dubbo/rpc/model/ScopeModelInitializer
     102: invokevirtual #25                 // Method getExtensionLoader:(Ljava/lang/Class;)Lorg/apache/dubbo/common/extension/ExtensionLoader;
     105: astore        4
     107: aload         4
     109: invokevirtual #26                 // Method org/apache/dubbo/common/extension/ExtensionLoader.getSupportedExtensionInstances:()Ljava/util/Set;
     112: astore        5
     114: aload         5
     116: invokeinterface #27,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     121: astore        6
     123: aload         6
     125: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     130: ifeq          156
     133: aload         6
     135: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     140: checkcast     #24                 // class org/apache/dubbo/rpc/model/ScopeModelInitializer
     143: astore        7
     145: aload         7
     147: aload_0
     148: invokeinterface #30,  2           // InterfaceMethod org/apache/dubbo/rpc/model/ScopeModelInitializer.initializeModuleModel:(Lorg/apache/dubbo/rpc/model/ModuleModel;)V
     153: goto          123
     156: aload_0
     157: invokevirtual #31                 // Method getServiceRepository:()Lorg/apache/dubbo/rpc/model/ModuleServiceRepository;
     160: ldc           #32                 // String ModuleServiceRepository can not be null
     162: invokestatic  #7                  // Method org/apache/dubbo/common/utils/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
     165: aload_0
     166: invokevirtual #33                 // Method getConfigManager:()Lorg/apache/dubbo/config/context/ModuleConfigManager;
     169: ldc           #34                 // String ModuleConfigManager can not be null
     171: invokestatic  #7                  // Method org/apache/dubbo/common/utils/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
     174: aload_0
     175: invokevirtual #33                 // Method getConfigManager:()Lorg/apache/dubbo/config/context/ModuleConfigManager;
     178: invokevirtual #35                 // Method org/apache/dubbo/config/context/ModuleConfigManager.isInitialized:()Z
     181: ldc           #36                 // String ModuleConfigManager can not be initialized
     183: invokestatic  #37                 // Method org/apache/dubbo/common/utils/Assert.assertTrue:(ZLjava/lang/String;)V
     186: aload_1
     187: invokevirtual #38                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getDeployer:()Lorg/apache/dubbo/common/deploy/ApplicationDeployer;
     190: astore        6
     192: aload         6
     194: ifnull        208
     197: aload         6
     199: aload_0
     200: getstatic     #39                 // Field org/apache/dubbo/common/deploy/DeployState.PENDING:Lorg/apache/dubbo/common/deploy/DeployState;
     203: invokeinterface #40,  3           // InterfaceMethod org/apache/dubbo/common/deploy/ApplicationDeployer.notifyModuleChanged:(Lorg/apache/dubbo/rpc/model/ModuleModel;Lorg/apache/dubbo/common/deploy/DeployState;)V
     208: aload_3
     209: monitorexit
     210: goto          220
     213: astore        8
     215: aload_3
     216: monitorexit
     217: aload         8
     219: athrow
     220: return
    Exception table:
       from    to  target type
          21   210   213   any
         213   217   213   any

  private void initModuleExt();
    Code:
       0: aload_0
       1: ldc           #41                 // class org/apache/dubbo/common/context/ModuleExt
       3: invokevirtual #25                 // Method getExtensionLoader:(Ljava/lang/Class;)Lorg/apache/dubbo/common/extension/ExtensionLoader;
       6: invokevirtual #26                 // Method org/apache/dubbo/common/extension/ExtensionLoader.getSupportedExtensionInstances:()Ljava/util/Set;
       9: astore_1
      10: aload_1
      11: invokeinterface #27,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          45
      26: aload_2
      27: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #41                 // class org/apache/dubbo/common/context/ModuleExt
      35: astore_3
      36: aload_3
      37: invokeinterface #42,  1           // InterfaceMethod org/apache/dubbo/common/context/ModuleExt.initialize:()V
      42: goto          17
      45: return

  protected void onDestroy();
    Code:
       0: aload_0
       1: getfield      #5                  // Field instLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #8                  // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
      11: aload_0
      12: invokevirtual #43                 // Method org/apache/dubbo/rpc/model/ApplicationModel.removeModule:(Lorg/apache/dubbo/rpc/model/ModuleModel;)V
      15: aload_0
      16: getfield      #44                 // Field deployer:Lorg/apache/dubbo/common/deploy/ModuleDeployer;
      19: ifnull        31
      22: aload_0
      23: getfield      #44                 // Field deployer:Lorg/apache/dubbo/common/deploy/ModuleDeployer;
      26: invokeinterface #45,  1           // InterfaceMethod org/apache/dubbo/common/deploy/ModuleDeployer.preDestroy:()V
      31: aload_0
      32: getfield      #44                 // Field deployer:Lorg/apache/dubbo/common/deploy/ModuleDeployer;
      35: ifnull        47
      38: aload_0
      39: getfield      #44                 // Field deployer:Lorg/apache/dubbo/common/deploy/ModuleDeployer;
      42: invokeinterface #46,  1           // InterfaceMethod org/apache/dubbo/common/deploy/ModuleDeployer.postDestroy:()V
      47: aload_0
      48: invokevirtual #47                 // Method notifyDestroy:()V
      51: aload_0
      52: getfield      #22                 // Field serviceRepository:Lorg/apache/dubbo/rpc/model/ModuleServiceRepository;
      55: ifnull        70
      58: aload_0
      59: getfield      #22                 // Field serviceRepository:Lorg/apache/dubbo/rpc/model/ModuleServiceRepository;
      62: invokevirtual #48                 // Method org/apache/dubbo/rpc/model/ModuleServiceRepository.destroy:()V
      65: aload_0
      66: aconst_null
      67: putfield      #22                 // Field serviceRepository:Lorg/apache/dubbo/rpc/model/ModuleServiceRepository;
      70: aload_0
      71: getfield      #49                 // Field moduleEnvironment:Lorg/apache/dubbo/common/config/ModuleEnvironment;
      74: ifnull        89
      77: aload_0
      78: getfield      #49                 // Field moduleEnvironment:Lorg/apache/dubbo/common/config/ModuleEnvironment;
      81: invokevirtual #50                 // Method org/apache/dubbo/common/config/ModuleEnvironment.destroy:()V
      84: aload_0
      85: aconst_null
      86: putfield      #49                 // Field moduleEnvironment:Lorg/apache/dubbo/common/config/ModuleEnvironment;
      89: aload_0
      90: getfield      #51                 // Field moduleConfigManager:Lorg/apache/dubbo/config/context/ModuleConfigManager;
      93: ifnull        108
      96: aload_0
      97: getfield      #51                 // Field moduleConfigManager:Lorg/apache/dubbo/config/context/ModuleConfigManager;
     100: invokevirtual #52                 // Method org/apache/dubbo/config/context/ModuleConfigManager.destroy:()V
     103: aload_0
     104: aconst_null
     105: putfield      #51                 // Field moduleConfigManager:Lorg/apache/dubbo/config/context/ModuleConfigManager;
     108: aload_0
     109: getfield      #8                  // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
     112: invokevirtual #53                 // Method org/apache/dubbo/rpc/model/ApplicationModel.tryDestroy:()V
     115: aload_1
     116: monitorexit
     117: goto          125
     120: astore_2
     121: aload_1
     122: monitorexit
     123: aload_2
     124: athrow
     125: return
    Exception table:
       from    to  target type
           7   117   120   any
         120   123   120   any

  public org.apache.dubbo.rpc.model.ApplicationModel getApplicationModel();
    Code:
       0: aload_0
       1: getfield      #8                  // Field applicationModel:Lorg/apache/dubbo/rpc/model/ApplicationModel;
       4: areturn

  public org.apache.dubbo.rpc.model.ModuleServiceRepository getServiceRepository();
    Code:
       0: aload_0
       1: getfield      #22                 // Field serviceRepository:Lorg/apache/dubbo/rpc/model/ModuleServiceRepository;
       4: areturn

  public void addClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #54                 // Method org/apache/dubbo/rpc/model/ScopeModel.addClassLoader:(Ljava/lang/ClassLoader;)V
       5: aload_0
       6: getfield      #49                 // Field moduleEnvironment:Lorg/apache/dubbo/common/config/ModuleEnvironment;
       9: ifnull        19
      12: aload_0
      13: getfield      #49                 // Field moduleEnvironment:Lorg/apache/dubbo/common/config/ModuleEnvironment;
      16: invokevirtual #55                 // Method org/apache/dubbo/common/config/ModuleEnvironment.refreshClassLoaders:()V
      19: return

  public org.apache.dubbo.common.config.ModuleEnvironment getModelEnvironment();
    Code:
       0: aload_0
       1: getfield      #49                 // Field moduleEnvironment:Lorg/apache/dubbo/common/config/ModuleEnvironment;
       4: ifnonnull     25
       7: aload_0
       8: aload_0
       9: ldc           #41                 // class org/apache/dubbo/common/context/ModuleExt
      11: invokevirtual #25                 // Method getExtensionLoader:(Ljava/lang/Class;)Lorg/apache/dubbo/common/extension/ExtensionLoader;
      14: ldc           #57                 // String moduleEnvironment
      16: invokevirtual #58                 // Method org/apache/dubbo/common/extension/ExtensionLoader.getExtension:(Ljava/lang/String;)Ljava/lang/Object;
      19: checkcast     #56                 // class org/apache/dubbo/common/config/ModuleEnvironment
      22: putfield      #49                 // Field moduleEnvironment:Lorg/apache/dubbo/common/config/ModuleEnvironment;
      25: aload_0
      26: getfield      #49                 // Field moduleEnvironment:Lorg/apache/dubbo/common/config/ModuleEnvironment;
      29: areturn

  public org.apache.dubbo.config.context.ModuleConfigManager getConfigManager();
    Code:
       0: aload_0
       1: getfield      #51                 // Field moduleConfigManager:Lorg/apache/dubbo/config/context/ModuleConfigManager;
       4: ifnonnull     25
       7: aload_0
       8: aload_0
       9: ldc           #41                 // class org/apache/dubbo/common/context/ModuleExt
      11: invokevirtual #25                 // Method getExtensionLoader:(Ljava/lang/Class;)Lorg/apache/dubbo/common/extension/ExtensionLoader;
      14: ldc           #60                 // String moduleConfig
      16: invokevirtual #58                 // Method org/apache/dubbo/common/extension/ExtensionLoader.getExtension:(Ljava/lang/String;)Ljava/lang/Object;
      19: checkcast     #59                 // class org/apache/dubbo/config/context/ModuleConfigManager
      22: putfield      #51                 // Field moduleConfigManager:Lorg/apache/dubbo/config/context/ModuleConfigManager;
      25: aload_0
      26: getfield      #51                 // Field moduleConfigManager:Lorg/apache/dubbo/config/context/ModuleConfigManager;
      29: areturn

  public org.apache.dubbo.common.deploy.ModuleDeployer getDeployer();
    Code:
       0: aload_0
       1: getfield      #44                 // Field deployer:Lorg/apache/dubbo/common/deploy/ModuleDeployer;
       4: areturn

  public void setDeployer(org.apache.dubbo.common.deploy.ModuleDeployer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field deployer:Lorg/apache/dubbo/common/deploy/ModuleDeployer;
       5: return

  protected java.util.concurrent.locks.Lock acquireDestroyLock();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method getApplicationModel:()Lorg/apache/dubbo/rpc/model/ApplicationModel;
       4: invokevirtual #62                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getFrameworkModel:()Lorg/apache/dubbo/rpc/model/FrameworkModel;
       7: invokevirtual #63                 // Method org/apache/dubbo/rpc/model/FrameworkModel.acquireDestroyLock:()Ljava/util/concurrent/locks/Lock;
      10: areturn

  public void setModuleEnvironment(org.apache.dubbo.common.config.ModuleEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field moduleEnvironment:Lorg/apache/dubbo/common/config/ModuleEnvironment;
       5: return

  public org.apache.dubbo.rpc.model.ConsumerModel registerInternalConsumer(java.lang.Class<?>, org.apache.dubbo.common.URL);
    Code:
       0: new           #64                 // class org/apache/dubbo/rpc/model/ServiceMetadata
       3: dup
       4: invokespecial #65                 // Method org/apache/dubbo/rpc/model/ServiceMetadata."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_2
      10: invokevirtual #66                 // Method org/apache/dubbo/common/URL.getVersion:()Ljava/lang/String;
      13: invokevirtual #67                 // Method org/apache/dubbo/rpc/model/ServiceMetadata.setVersion:(Ljava/lang/String;)V
      16: aload_3
      17: aload_2
      18: invokevirtual #68                 // Method org/apache/dubbo/common/URL.getGroup:()Ljava/lang/String;
      21: invokevirtual #69                 // Method org/apache/dubbo/rpc/model/ServiceMetadata.setGroup:(Ljava/lang/String;)V
      24: aload_3
      25: aload_2
      26: invokevirtual #68                 // Method org/apache/dubbo/common/URL.getGroup:()Ljava/lang/String;
      29: invokevirtual #70                 // Method org/apache/dubbo/rpc/model/ServiceMetadata.setDefaultGroup:(Ljava/lang/String;)V
      32: aload_3
      33: aload_1
      34: invokevirtual #71                 // Method java/lang/Class.getName:()Ljava/lang/String;
      37: invokevirtual #72                 // Method org/apache/dubbo/rpc/model/ServiceMetadata.setServiceInterfaceName:(Ljava/lang/String;)V
      40: aload_3
      41: aload_1
      42: invokevirtual #73                 // Method org/apache/dubbo/rpc/model/ServiceMetadata.setServiceType:(Ljava/lang/Class;)V
      45: aload_1
      46: invokevirtual #71                 // Method java/lang/Class.getName:()Ljava/lang/String;
      49: aload_2
      50: invokevirtual #68                 // Method org/apache/dubbo/common/URL.getGroup:()Ljava/lang/String;
      53: aload_2
      54: invokevirtual #66                 // Method org/apache/dubbo/common/URL.getVersion:()Ljava/lang/String;
      57: invokestatic  #74                 // Method org/apache/dubbo/common/URL.buildKey:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      60: astore        4
      62: aload_3
      63: aload         4
      65: invokevirtual #75                 // Method org/apache/dubbo/rpc/model/ServiceMetadata.setServiceKey:(Ljava/lang/String;)V
      68: new           #76                 // class org/apache/dubbo/rpc/model/ConsumerModel
      71: dup
      72: aload_3
      73: invokevirtual #77                 // Method org/apache/dubbo/rpc/model/ServiceMetadata.getServiceKey:()Ljava/lang/String;
      76: ldc           #78                 // String jdk
      78: aload_0
      79: getfield      #22                 // Field serviceRepository:Lorg/apache/dubbo/rpc/model/ModuleServiceRepository;
      82: aload_3
      83: invokevirtual #79                 // Method org/apache/dubbo/rpc/model/ServiceMetadata.getServiceInterfaceName:()Ljava/lang/String;
      86: invokevirtual #80                 // Method org/apache/dubbo/rpc/model/ModuleServiceRepository.lookupService:(Ljava/lang/String;)Lorg/apache/dubbo/rpc/model/ServiceDescriptor;
      89: aload_0
      90: aload_3
      91: new           #81                 // class java/util/HashMap
      94: dup
      95: iconst_0
      96: invokespecial #82                 // Method java/util/HashMap."<init>":(I)V
      99: aload_1
     100: invokestatic  #83                 // Method org/apache/dubbo/common/utils/ClassUtils.getClassLoader:(Ljava/lang/Class;)Ljava/lang/ClassLoader;
     103: invokespecial #84                 // Method org/apache/dubbo/rpc/model/ConsumerModel."<init>":(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/dubbo/rpc/model/ServiceDescriptor;Lorg/apache/dubbo/rpc/model/ModuleModel;Lorg/apache/dubbo/rpc/model/ServiceMetadata;Ljava/util/Map;Ljava/lang/ClassLoader;)V
     106: astore        5
     108: getstatic     #85                 // Field logger:Lorg/apache/dubbo/common/logger/Logger;
     111: new           #12                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     118: ldc           #86                 // String Dynamically registering consumer model
     120: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload         4
     125: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: ldc           #87                 // String  into model
     130: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload_0
     134: invokevirtual #14                 // Method getDesc:()Ljava/lang/String;
     137: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: invokeinterface #88,  2           // InterfaceMethod org/apache/dubbo/common/logger/Logger.info:(Ljava/lang/String;)V
     148: aload_0
     149: getfield      #22                 // Field serviceRepository:Lorg/apache/dubbo/rpc/model/ModuleServiceRepository;
     152: aload         5
     154: invokevirtual #89                 // Method org/apache/dubbo/rpc/model/ModuleServiceRepository.registerConsumer:(Lorg/apache/dubbo/rpc/model/ConsumerModel;)V
     157: aload         5
     159: areturn

  public boolean isLifeCycleManagedExternally();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lifeCycleManagedExternally:Z
       4: ireturn

  public void setLifeCycleManagedExternally(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field lifeCycleManagedExternally:Z
       5: return

  public org.apache.dubbo.common.config.Environment getModelEnvironment();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method getModelEnvironment:()Lorg/apache/dubbo/common/config/ModuleEnvironment;
       4: areturn

  static {};
    Code:
       0: ldc           #91                 // class org/apache/dubbo/rpc/model/ModuleModel
       2: invokestatic  #92                 // Method org/apache/dubbo/common/logger/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/Logger;
       5: putstatic     #85                 // Field logger:Lorg/apache/dubbo/common/logger/Logger;
       8: return
}
