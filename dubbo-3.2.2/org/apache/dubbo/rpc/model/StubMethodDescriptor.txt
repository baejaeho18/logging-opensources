Compiled from "StubMethodDescriptor.java"
public class org.apache.dubbo.rpc.model.StubMethodDescriptor implements org.apache.dubbo.rpc.model.MethodDescriptor,org.apache.dubbo.rpc.model.PackableMethod {
  private static final org.apache.dubbo.common.logger.Logger logger;

  private final org.apache.dubbo.rpc.model.ServiceDescriptor serviceDescriptor;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Object> attributeMap;

  private final java.lang.String methodName;

  private final java.lang.String[] compatibleParamSignatures;

  private final java.lang.Class<?>[] parameterClasses;

  private final java.lang.Class<?> returnClass;

  private final java.lang.reflect.Type[] returnTypes;

  private final java.lang.String paramDesc;

  private final org.apache.dubbo.rpc.model.MethodDescriptor$RpcType rpcType;

  private final org.apache.dubbo.rpc.model.Pack requestPack;

  private final org.apache.dubbo.rpc.model.Pack responsePack;

  private final org.apache.dubbo.rpc.model.UnPack requestUnpack;

  private final org.apache.dubbo.rpc.model.UnPack responseUnpack;

  public org.apache.dubbo.rpc.model.StubMethodDescriptor(java.lang.String, java.lang.Class<?>, java.lang.Class<?>, org.apache.dubbo.rpc.model.StubServiceDescriptor, org.apache.dubbo.rpc.model.MethodDescriptor$RpcType, org.apache.dubbo.rpc.model.Pack, org.apache.dubbo.rpc.model.Pack, org.apache.dubbo.rpc.model.UnPack, org.apache.dubbo.rpc.model.UnPack);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field attributeMap:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field methodName:Ljava/lang/String;
      20: aload_0
      21: aload         4
      23: putfield      #6                  // Field serviceDescriptor:Lorg/apache/dubbo/rpc/model/ServiceDescriptor;
      26: aload_0
      27: aload         5
      29: putfield      #7                  // Field rpcType:Lorg/apache/dubbo/rpc/model/MethodDescriptor$RpcType;
      32: aload_0
      33: aload         6
      35: putfield      #8                  // Field requestPack:Lorg/apache/dubbo/rpc/model/Pack;
      38: aload_0
      39: aload         7
      41: putfield      #9                  // Field responsePack:Lorg/apache/dubbo/rpc/model/Pack;
      44: aload_0
      45: aload         9
      47: putfield      #10                 // Field responseUnpack:Lorg/apache/dubbo/rpc/model/UnPack;
      50: aload_0
      51: aload         8
      53: putfield      #11                 // Field requestUnpack:Lorg/apache/dubbo/rpc/model/UnPack;
      56: aload_0
      57: iconst_1
      58: anewarray     #12                 // class java/lang/Class
      61: dup
      62: iconst_0
      63: aload_2
      64: aastore
      65: putfield      #13                 // Field parameterClasses:[Ljava/lang/Class;
      68: aload_0
      69: aload_3
      70: putfield      #14                 // Field returnClass:Ljava/lang/Class;
      73: aload_0
      74: aload_0
      75: getfield      #13                 // Field parameterClasses:[Ljava/lang/Class;
      78: invokestatic  #15                 // Method org/apache/dubbo/common/utils/ReflectUtils.getDesc:([Ljava/lang/Class;)Ljava/lang/String;
      81: putfield      #16                 // Field paramDesc:Ljava/lang/String;
      84: aload_0
      85: aload_0
      86: getfield      #13                 // Field parameterClasses:[Ljava/lang/Class;
      89: invokestatic  #17                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      92: invokedynamic #18,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      97: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     102: invokedynamic #20,  0             // InvokeDynamic #1:apply:()Ljava/util/function/IntFunction;
     107: invokeinterface #21,  2           // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
     112: checkcast     #22                 // class "[Ljava/lang/String;"
     115: putfield      #23                 // Field compatibleParamSignatures:[Ljava/lang/String;
     118: aload_0
     119: iconst_2
     120: anewarray     #24                 // class java/lang/reflect/Type
     123: dup
     124: iconst_0
     125: aload_2
     126: aastore
     127: dup
     128: iconst_1
     129: aload_2
     130: aastore
     131: putfield      #25                 // Field returnTypes:[Ljava/lang/reflect/Type;
     134: aload         4
     136: aload_0
     137: invokevirtual #26                 // Method org/apache/dubbo/rpc/model/StubServiceDescriptor.addMethod:(Lorg/apache/dubbo/rpc/model/MethodDescriptor;)V
     140: return

  public java.lang.String getMethodName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field methodName:Ljava/lang/String;
       4: areturn

  public java.lang.String getParamDesc();
    Code:
       0: aload_0
       1: getfield      #16                 // Field paramDesc:Ljava/lang/String;
       4: areturn

  public java.lang.String[] getCompatibleParamSignatures();
    Code:
       0: aload_0
       1: getfield      #23                 // Field compatibleParamSignatures:[Ljava/lang/String;
       4: areturn

  public java.lang.Class<?>[] getParameterClasses();
    Code:
       0: aload_0
       1: getfield      #13                 // Field parameterClasses:[Ljava/lang/Class;
       4: areturn

  public java.lang.Class<?> getReturnClass();
    Code:
       0: aload_0
       1: getfield      #14                 // Field returnClass:Ljava/lang/Class;
       4: areturn

  public java.lang.reflect.Type[] getReturnTypes();
    Code:
       0: aload_0
       1: getfield      #25                 // Field returnTypes:[Ljava/lang/reflect/Type;
       4: areturn

  public org.apache.dubbo.rpc.model.MethodDescriptor$RpcType getRpcType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field rpcType:Lorg/apache/dubbo/rpc/model/MethodDescriptor$RpcType;
       4: areturn

  public boolean isGeneric();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.reflect.Method getMethod();
    Code:
       0: aconst_null
       1: areturn

  public void addAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field attributeMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #27,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.lang.Object getAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field attributeMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public org.apache.dubbo.rpc.model.Pack getRequestPack();
    Code:
       0: aload_0
       1: getfield      #8                  // Field requestPack:Lorg/apache/dubbo/rpc/model/Pack;
       4: areturn

  public org.apache.dubbo.rpc.model.Pack getResponsePack();
    Code:
       0: aload_0
       1: getfield      #9                  // Field responsePack:Lorg/apache/dubbo/rpc/model/Pack;
       4: areturn

  public org.apache.dubbo.rpc.model.UnPack getResponseUnpack();
    Code:
       0: aload_0
       1: getfield      #10                 // Field responseUnpack:Lorg/apache/dubbo/rpc/model/UnPack;
       4: areturn

  public org.apache.dubbo.rpc.model.UnPack getRequestUnpack();
    Code:
       0: aload_0
       1: getfield      #11                 // Field requestUnpack:Lorg/apache/dubbo/rpc/model/UnPack;
       4: areturn

  private static java.lang.String[] lambda$new$0(int);
    Code:
       0: iload_0
       1: anewarray     #29                 // class java/lang/String
       4: areturn

  static {};
    Code:
       0: ldc           #30                 // class org/apache/dubbo/rpc/model/StubMethodDescriptor
       2: invokestatic  #31                 // Method org/apache/dubbo/common/logger/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/Logger;
       5: putstatic     #32                 // Field logger:Lorg/apache/dubbo/common/logger/Logger;
       8: return
}
