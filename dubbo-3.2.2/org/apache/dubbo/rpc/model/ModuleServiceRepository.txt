Compiled from "ModuleServiceRepository.java"
public class org.apache.dubbo.rpc.model.ModuleServiceRepository {
  private final org.apache.dubbo.rpc.model.ModuleModel moduleModel;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<org.apache.dubbo.rpc.model.ServiceDescriptor>> services;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<org.apache.dubbo.rpc.model.ConsumerModel>> consumers;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.dubbo.rpc.model.ProviderModel> providers;

  private final org.apache.dubbo.rpc.model.FrameworkServiceRepository frameworkServiceRepository;

  public org.apache.dubbo.rpc.model.ModuleServiceRepository(org.apache.dubbo.rpc.model.ModuleModel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field services:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #5                  // Field consumers:Ljava/util/concurrent/ConcurrentMap;
      26: aload_0
      27: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      30: dup
      31: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      34: putfield      #6                  // Field providers:Ljava/util/concurrent/ConcurrentMap;
      37: aload_0
      38: aload_1
      39: putfield      #7                  // Field moduleModel:Lorg/apache/dubbo/rpc/model/ModuleModel;
      42: aload_0
      43: aload_1
      44: invokestatic  #8                  // Method org/apache/dubbo/rpc/model/ScopeModelUtil.getFrameworkModel:(Lorg/apache/dubbo/rpc/model/ScopeModel;)Lorg/apache/dubbo/rpc/model/FrameworkModel;
      47: invokevirtual #9                  // Method org/apache/dubbo/rpc/model/FrameworkModel.getServiceRepository:()Lorg/apache/dubbo/rpc/model/FrameworkServiceRepository;
      50: putfield      #10                 // Field frameworkServiceRepository:Lorg/apache/dubbo/rpc/model/FrameworkServiceRepository;
      53: return

  public org.apache.dubbo.rpc.model.ModuleModel getModuleModel();
    Code:
       0: aload_0
       1: getfield      #7                  // Field moduleModel:Lorg/apache/dubbo/rpc/model/ModuleModel;
       4: areturn

  public void registerConsumer(java.lang.String, org.apache.dubbo.rpc.model.ServiceDescriptor, org.apache.dubbo.config.ReferenceConfigBase<?>, java.lang.Object, org.apache.dubbo.rpc.model.ServiceMetadata);
    Code:
       0: aconst_null
       1: astore        6
       3: aload_3
       4: ifnull        13
       7: aload_3
       8: invokevirtual #11                 // Method org/apache/dubbo/config/ReferenceConfigBase.getInterfaceClassLoader:()Ljava/lang/ClassLoader;
      11: astore        6
      13: new           #12                 // class org/apache/dubbo/rpc/model/ConsumerModel
      16: dup
      17: aload         5
      19: invokevirtual #13                 // Method org/apache/dubbo/rpc/model/ServiceMetadata.getServiceKey:()Ljava/lang/String;
      22: aload         4
      24: aload_2
      25: aload         5
      27: aconst_null
      28: aload         6
      30: invokespecial #14                 // Method org/apache/dubbo/rpc/model/ConsumerModel."<init>":(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/dubbo/rpc/model/ServiceDescriptor;Lorg/apache/dubbo/rpc/model/ServiceMetadata;Ljava/util/Map;Ljava/lang/ClassLoader;)V
      33: astore        7
      35: aload_0
      36: aload         7
      38: invokevirtual #15                 // Method registerConsumer:(Lorg/apache/dubbo/rpc/model/ConsumerModel;)V
      41: return

  public void registerConsumer(org.apache.dubbo.rpc.model.ConsumerModel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field consumers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokevirtual #16                 // Method org/apache/dubbo/rpc/model/ConsumerModel.getServiceKey:()Ljava/lang/String;
       8: invokedynamic #17,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      13: invokestatic  #18                 // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      16: checkcast     #19                 // class java/util/List
      19: aload_1
      20: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      25: pop
      26: return

  public void registerProvider(java.lang.String, java.lang.Object, org.apache.dubbo.rpc.model.ServiceDescriptor, org.apache.dubbo.config.ServiceConfigBase<?>, org.apache.dubbo.rpc.model.ServiceMetadata);
    Code:
       0: aconst_null
       1: astore        6
       3: aconst_null
       4: astore        7
       6: aload         4
       8: ifnull        25
      11: aload         4
      13: invokevirtual #21                 // Method org/apache/dubbo/config/ServiceConfigBase.getInterfaceClassLoader:()Ljava/lang/ClassLoader;
      16: astore        6
      18: aload         4
      20: invokevirtual #22                 // Method org/apache/dubbo/config/ServiceConfigBase.getInterfaceClass:()Ljava/lang/Class;
      23: astore        7
      25: new           #23                 // class org/apache/dubbo/rpc/model/ProviderModel
      28: dup
      29: aload_1
      30: aload_2
      31: aload_3
      32: aload         5
      34: aload         6
      36: invokespecial #24                 // Method org/apache/dubbo/rpc/model/ProviderModel."<init>":(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/dubbo/rpc/model/ServiceDescriptor;Lorg/apache/dubbo/rpc/model/ServiceMetadata;Ljava/lang/ClassLoader;)V
      39: astore        8
      41: aload_0
      42: aload         8
      44: invokevirtual #25                 // Method registerProvider:(Lorg/apache/dubbo/rpc/model/ProviderModel;)V
      47: return

  public void registerProvider(org.apache.dubbo.rpc.model.ProviderModel);
    Code:
       0: aload_0
       1: getfield      #6                  // Field providers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokevirtual #26                 // Method org/apache/dubbo/rpc/model/ProviderModel.getServiceKey:()Ljava/lang/String;
       8: aload_1
       9: invokeinterface #27,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: getfield      #10                 // Field frameworkServiceRepository:Lorg/apache/dubbo/rpc/model/FrameworkServiceRepository;
      19: aload_1
      20: invokevirtual #28                 // Method org/apache/dubbo/rpc/model/FrameworkServiceRepository.registerProvider:(Lorg/apache/dubbo/rpc/model/ProviderModel;)V
      23: return

  public org.apache.dubbo.rpc.model.ServiceDescriptor registerService(org.apache.dubbo.rpc.model.ServiceDescriptor);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #29,  1           // InterfaceMethod org/apache/dubbo/rpc/model/ServiceDescriptor.getServiceInterfaceClass:()Ljava/lang/Class;
       7: aload_1
       8: invokevirtual #30                 // Method registerService:(Ljava/lang/Class;Lorg/apache/dubbo/rpc/model/ServiceDescriptor;)Lorg/apache/dubbo/rpc/model/ServiceDescriptor;
      11: areturn

  public org.apache.dubbo.rpc.model.ServiceDescriptor registerService(java.lang.Class<?>);
    Code:
       0: new           #31                 // class org/apache/dubbo/rpc/model/ReflectionServiceDescriptor
       3: dup
       4: aload_1
       5: invokespecial #32                 // Method org/apache/dubbo/rpc/model/ReflectionServiceDescriptor."<init>":(Ljava/lang/Class;)V
       8: astore_2
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #30                 // Method registerService:(Ljava/lang/Class;Lorg/apache/dubbo/rpc/model/ServiceDescriptor;)Lorg/apache/dubbo/rpc/model/ServiceDescriptor;
      15: areturn

  public org.apache.dubbo.rpc.model.ServiceDescriptor registerService(java.lang.Class<?>, org.apache.dubbo.rpc.model.ServiceDescriptor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field services:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokevirtual #33                 // Method java/lang/Class.getName:()Ljava/lang/String;
       8: invokedynamic #34,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      13: invokestatic  #18                 // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      16: checkcast     #19                 // class java/util/List
      19: astore_3
      20: aload_3
      21: dup
      22: astore        4
      24: monitorenter
      25: aload_3
      26: invokeinterface #35,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      31: aload_1
      32: invokedynamic #36,  0             // InvokeDynamic #2:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;
      37: invokeinterface #37,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      42: invokeinterface #38,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      47: astore        5
      49: aload         5
      51: invokevirtual #39                 // Method java/util/Optional.isPresent:()Z
      54: ifeq          69
      57: aload         5
      59: invokevirtual #40                 // Method java/util/Optional.get:()Ljava/lang/Object;
      62: checkcast     #41                 // class org/apache/dubbo/rpc/model/ServiceDescriptor
      65: aload         4
      67: monitorexit
      68: areturn
      69: aload_3
      70: aload_2
      71: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      76: pop
      77: aload_2
      78: aload         4
      80: monitorexit
      81: areturn
      82: astore        6
      84: aload         4
      86: monitorexit
      87: aload         6
      89: athrow
    Exception table:
       from    to  target type
          25    68    82   any
          69    81    82   any
          82    87    82   any

  public org.apache.dubbo.rpc.model.ServiceDescriptor registerService(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #42                 // Method registerService:(Ljava/lang/Class;)Lorg/apache/dubbo/rpc/model/ServiceDescriptor;
       5: astore_3
       6: aload_2
       7: invokevirtual #33                 // Method java/lang/Class.getName:()Ljava/lang/String;
      10: aload_1
      11: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifne          108
      17: aload_0
      18: getfield      #4                  // Field services:Ljava/util/concurrent/ConcurrentMap;
      21: aload_1
      22: invokedynamic #44,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      27: invokestatic  #18                 // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      30: checkcast     #19                 // class java/util/List
      33: astore        4
      35: aload         4
      37: dup
      38: astore        5
      40: monitorenter
      41: aload         4
      43: invokeinterface #35,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      48: aload_3
      49: invokedynamic #45,  0             // InvokeDynamic #4:test:(Lorg/apache/dubbo/rpc/model/ServiceDescriptor;)Ljava/util/function/Predicate;
      54: invokeinterface #37,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      59: invokeinterface #38,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      64: astore        6
      66: aload         6
      68: invokevirtual #39                 // Method java/util/Optional.isPresent:()Z
      71: ifeq          86
      74: aload         6
      76: invokevirtual #40                 // Method java/util/Optional.get:()Ljava/lang/Object;
      79: checkcast     #41                 // class org/apache/dubbo/rpc/model/ServiceDescriptor
      82: aload         5
      84: monitorexit
      85: areturn
      86: aload         4
      88: aload_3
      89: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      94: pop
      95: aload_3
      96: aload         5
      98: monitorexit
      99: areturn
     100: astore        7
     102: aload         5
     104: monitorexit
     105: aload         7
     107: athrow
     108: aload_3
     109: areturn
    Exception table:
       from    to  target type
          41    85   100   any
          86    99   100   any
         100   105   100   any

  public void reRegisterProvider(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field providers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #23                 // class org/apache/dubbo/rpc/model/ProviderModel
      13: astore_3
      14: aload_0
      15: getfield      #10                 // Field frameworkServiceRepository:Lorg/apache/dubbo/rpc/model/FrameworkServiceRepository;
      18: aload_3
      19: invokevirtual #47                 // Method org/apache/dubbo/rpc/model/FrameworkServiceRepository.unregisterProvider:(Lorg/apache/dubbo/rpc/model/ProviderModel;)V
      22: aload_3
      23: aload_1
      24: invokevirtual #48                 // Method org/apache/dubbo/rpc/model/ProviderModel.setServiceKey:(Ljava/lang/String;)V
      27: aload_0
      28: getfield      #6                  // Field providers:Ljava/util/concurrent/ConcurrentMap;
      31: aload_1
      32: aload_3
      33: invokeinterface #27,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: aload_0
      40: getfield      #10                 // Field frameworkServiceRepository:Lorg/apache/dubbo/rpc/model/FrameworkServiceRepository;
      43: aload_3
      44: invokevirtual #28                 // Method org/apache/dubbo/rpc/model/FrameworkServiceRepository.registerProvider:(Lorg/apache/dubbo/rpc/model/ProviderModel;)V
      47: aload_0
      48: getfield      #6                  // Field providers:Ljava/util/concurrent/ConcurrentMap;
      51: aload_2
      52: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: return

  public void reRegisterConsumer(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field consumers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class java/util/List
      13: astore_3
      14: aload_3
      15: aload_1
      16: invokedynamic #50,  0             // InvokeDynamic #5:accept:(Ljava/lang/String;)Ljava/util/function/Consumer;
      21: invokeinterface #51,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      26: aload_0
      27: getfield      #5                  // Field consumers:Ljava/util/concurrent/ConcurrentMap;
      30: aload_1
      31: invokedynamic #52,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      36: invokestatic  #18                 // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      39: checkcast     #19                 // class java/util/List
      42: aload_3
      43: invokeinterface #53,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      48: pop
      49: aload_0
      50: getfield      #5                  // Field consumers:Ljava/util/concurrent/ConcurrentMap;
      53: aload_2
      54: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: return

  public void unregisterService(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokevirtual #54                 // Method unregisterService:(Ljava/lang/String;)V
       8: return

  public void unregisterService(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field services:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public void unregisterProvider(org.apache.dubbo.rpc.model.ProviderModel);
    Code:
       0: aload_0
       1: getfield      #10                 // Field frameworkServiceRepository:Lorg/apache/dubbo/rpc/model/FrameworkServiceRepository;
       4: aload_1
       5: invokevirtual #47                 // Method org/apache/dubbo/rpc/model/FrameworkServiceRepository.unregisterProvider:(Lorg/apache/dubbo/rpc/model/ProviderModel;)V
       8: aload_0
       9: getfield      #6                  // Field providers:Ljava/util/concurrent/ConcurrentMap;
      12: aload_1
      13: invokevirtual #26                 // Method org/apache/dubbo/rpc/model/ProviderModel.getServiceKey:()Ljava/lang/String;
      16: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: return

  public void unregisterConsumer(org.apache.dubbo.rpc.model.ConsumerModel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field consumers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokevirtual #16                 // Method org/apache/dubbo/rpc/model/ConsumerModel.getServiceKey:()Ljava/lang/String;
       8: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #19                 // class java/util/List
      16: aload_1
      17: invokeinterface #55,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      22: pop
      23: return

  public java.util.List<org.apache.dubbo.rpc.model.ServiceDescriptor> getAllServices();
    Code:
       0: aload_0
       1: getfield      #4                  // Field services:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #56,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokeinterface #57,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #58,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      19: invokeinterface #59,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      24: invokestatic  #60                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      27: invokeinterface #61,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      32: checkcast     #19                 // class java/util/List
      35: astore_1
      36: aload_1
      37: invokestatic  #62                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      40: areturn

  public org.apache.dubbo.rpc.model.ServiceDescriptor getService(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field services:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class java/util/List
      13: astore_2
      14: aload_2
      15: invokestatic  #63                 // Method org/apache/dubbo/common/utils/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      18: ifeq          23
      21: aconst_null
      22: areturn
      23: aload_2
      24: iconst_0
      25: invokeinterface #64,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      30: checkcast     #41                 // class org/apache/dubbo/rpc/model/ServiceDescriptor
      33: areturn

  public org.apache.dubbo.rpc.model.ServiceDescriptor lookupService(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        55
       4: aload_0
       5: getfield      #4                  // Field services:Ljava/util/concurrent/ConcurrentMap;
       8: aload_1
       9: invokeinterface #65,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      14: ifeq          55
      17: aload_0
      18: getfield      #4                  // Field services:Ljava/util/concurrent/ConcurrentMap;
      21: aload_1
      22: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #19                 // class java/util/List
      30: astore_2
      31: aload_2
      32: invokeinterface #66,  1           // InterfaceMethod java/util/List.size:()I
      37: ifle          53
      40: aload_2
      41: iconst_0
      42: invokeinterface #64,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      47: checkcast     #41                 // class org/apache/dubbo/rpc/model/ServiceDescriptor
      50: goto          54
      53: aconst_null
      54: areturn
      55: aconst_null
      56: areturn

  public org.apache.dubbo.rpc.model.MethodDescriptor lookupMethod(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #67                 // Method lookupService:(Ljava/lang/String;)Lorg/apache/dubbo/rpc/model/ServiceDescriptor;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_3
      13: aload_2
      14: invokeinterface #68,  2           // InterfaceMethod org/apache/dubbo/rpc/model/ServiceDescriptor.getMethods:(Ljava/lang/String;)Ljava/util/List;
      19: astore        4
      21: aload         4
      23: invokestatic  #63                 // Method org/apache/dubbo/common/utils/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      26: ifeq          31
      29: aconst_null
      30: areturn
      31: aload         4
      33: invokeinterface #69,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      38: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #71                 // class org/apache/dubbo/rpc/model/MethodDescriptor
      46: areturn

  public java.util.List<org.apache.dubbo.rpc.model.ProviderModel> getExportedServices();
    Code:
       0: new           #72                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #6                  // Field providers:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #56,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      13: invokespecial #73                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      16: invokestatic  #62                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      19: areturn

  public org.apache.dubbo.rpc.model.ProviderModel lookupExportedService(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field providers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #23                 // class org/apache/dubbo/rpc/model/ProviderModel
      13: areturn

  public java.util.List<org.apache.dubbo.rpc.model.ConsumerModel> getReferredServices();
    Code:
       0: aload_0
       1: getfield      #5                  // Field consumers:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #56,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokeinterface #57,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #58,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      19: invokeinterface #59,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      24: invokestatic  #60                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      27: invokeinterface #61,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      32: checkcast     #19                 // class java/util/List
      35: astore_1
      36: aload_1
      37: invokestatic  #62                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      40: areturn

  public org.apache.dubbo.rpc.model.ConsumerModel lookupReferredService(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field consumers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #65,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          51
      13: aload_0
      14: getfield      #5                  // Field consumers:Ljava/util/concurrent/ConcurrentMap;
      17: aload_1
      18: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #19                 // class java/util/List
      26: astore_2
      27: aload_2
      28: invokeinterface #66,  1           // InterfaceMethod java/util/List.size:()I
      33: ifle          49
      36: aload_2
      37: iconst_0
      38: invokeinterface #64,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      43: checkcast     #12                 // class org/apache/dubbo/rpc/model/ConsumerModel
      46: goto          50
      49: aconst_null
      50: areturn
      51: aconst_null
      52: areturn

  public java.util.List<org.apache.dubbo.rpc.model.ConsumerModel> lookupReferredServices(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field consumers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class java/util/List
      13: areturn

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #6                  // Field providers:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #56,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokeinterface #74,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          45
      24: aload_1
      25: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #23                 // class org/apache/dubbo/rpc/model/ProviderModel
      33: astore_2
      34: aload_0
      35: getfield      #10                 // Field frameworkServiceRepository:Lorg/apache/dubbo/rpc/model/FrameworkServiceRepository;
      38: aload_2
      39: invokevirtual #47                 // Method org/apache/dubbo/rpc/model/FrameworkServiceRepository.unregisterProvider:(Lorg/apache/dubbo/rpc/model/ProviderModel;)V
      42: goto          15
      45: aload_0
      46: getfield      #6                  // Field providers:Ljava/util/concurrent/ConcurrentMap;
      49: invokeinterface #76,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      54: aload_0
      55: getfield      #5                  // Field consumers:Ljava/util/concurrent/ConcurrentMap;
      58: invokeinterface #76,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      63: aload_0
      64: getfield      #4                  // Field services:Ljava/util/concurrent/ConcurrentMap;
      67: invokeinterface #76,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      72: return

  private static java.util.List lambda$reRegisterConsumer$6(java.lang.String);
    Code:
       0: new           #77                 // class java/util/concurrent/CopyOnWriteArrayList
       3: dup
       4: invokespecial #78                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
       7: areturn

  private static void lambda$reRegisterConsumer$5(java.lang.String, org.apache.dubbo.rpc.model.ConsumerModel);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #79                 // Method org/apache/dubbo/rpc/model/ConsumerModel.setServiceKey:(Ljava/lang/String;)V
       5: return

  private static boolean lambda$registerService$4(org.apache.dubbo.rpc.model.ServiceDescriptor, org.apache.dubbo.rpc.model.ServiceDescriptor);
    Code:
       0: aload_1
       1: invokeinterface #29,  1           // InterfaceMethod org/apache/dubbo/rpc/model/ServiceDescriptor.getServiceInterfaceClass:()Ljava/lang/Class;
       6: aload_0
       7: invokeinterface #29,  1           // InterfaceMethod org/apache/dubbo/rpc/model/ServiceDescriptor.getServiceInterfaceClass:()Ljava/lang/Class;
      12: invokevirtual #80                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      15: ireturn

  private static java.util.List lambda$registerService$3(java.lang.String);
    Code:
       0: new           #77                 // class java/util/concurrent/CopyOnWriteArrayList
       3: dup
       4: invokespecial #78                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
       7: areturn

  private static boolean lambda$registerService$2(java.lang.Class, org.apache.dubbo.rpc.model.ServiceDescriptor);
    Code:
       0: aload_1
       1: invokeinterface #29,  1           // InterfaceMethod org/apache/dubbo/rpc/model/ServiceDescriptor.getServiceInterfaceClass:()Ljava/lang/Class;
       6: aload_0
       7: invokevirtual #80                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      10: ireturn

  private static java.util.List lambda$registerService$1(java.lang.String);
    Code:
       0: new           #77                 // class java/util/concurrent/CopyOnWriteArrayList
       3: dup
       4: invokespecial #78                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
       7: areturn

  private static java.util.List lambda$registerConsumer$0(java.lang.String);
    Code:
       0: new           #77                 // class java/util/concurrent/CopyOnWriteArrayList
       3: dup
       4: invokespecial #78                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
       7: areturn
}
