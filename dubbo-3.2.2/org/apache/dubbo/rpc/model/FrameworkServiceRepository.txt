Compiled from "FrameworkServiceRepository.java"
public class org.apache.dubbo.rpc.model.FrameworkServiceRepository {
  private final org.apache.dubbo.rpc.model.FrameworkModel frameworkModel;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.dubbo.rpc.model.ProviderModel> providers;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<org.apache.dubbo.rpc.model.ProviderModel>> providersWithoutGroup;

  public org.apache.dubbo.rpc.model.FrameworkServiceRepository(org.apache.dubbo.rpc.model.FrameworkModel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field providers:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #5                  // Field providersWithoutGroup:Ljava/util/concurrent/ConcurrentMap;
      26: aload_0
      27: aload_1
      28: putfield      #6                  // Field frameworkModel:Lorg/apache/dubbo/rpc/model/FrameworkModel;
      31: return

  public void registerProvider(org.apache.dubbo.rpc.model.ProviderModel);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/apache/dubbo/rpc/model/ProviderModel.getServiceKey:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #4                  // Field providers:Ljava/util/concurrent/ConcurrentMap;
       9: aload_2
      10: aload_1
      11: invokeinterface #8,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #9                  // class org/apache/dubbo/rpc/model/ProviderModel
      19: astore_3
      20: aload_3
      21: ifnull        29
      24: aload_3
      25: aload_1
      26: if_acmpeq     29
      29: aload_2
      30: invokestatic  #10                 // Method keyWithoutGroup:(Ljava/lang/String;)Ljava/lang/String;
      33: astore        4
      35: aload_0
      36: getfield      #5                  // Field providersWithoutGroup:Ljava/util/concurrent/ConcurrentMap;
      39: aload         4
      41: invokedynamic #11,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      46: invokestatic  #12                 // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      49: checkcast     #13                 // class java/util/List
      52: aload_1
      53: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      58: pop
      59: return

  public void unregisterProvider(org.apache.dubbo.rpc.model.ProviderModel);
    Code:
       0: aload_0
       1: getfield      #4                  // Field providers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokevirtual #7                  // Method org/apache/dubbo/rpc/model/ProviderModel.getServiceKey:()Ljava/lang/String;
       8: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_1
      15: invokevirtual #7                  // Method org/apache/dubbo/rpc/model/ProviderModel.getServiceKey:()Ljava/lang/String;
      18: invokestatic  #10                 // Method keyWithoutGroup:(Ljava/lang/String;)Ljava/lang/String;
      21: astore_2
      22: aload_0
      23: getfield      #5                  // Field providersWithoutGroup:Ljava/util/concurrent/ConcurrentMap;
      26: aload_2
      27: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: return

  public org.apache.dubbo.rpc.model.ProviderModel lookupExportedServiceWithoutGroup(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field providersWithoutGroup:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          51
      13: aload_0
      14: getfield      #5                  // Field providersWithoutGroup:Ljava/util/concurrent/ConcurrentMap;
      17: aload_1
      18: invokeinterface #17,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #13                 // class java/util/List
      26: astore_2
      27: aload_2
      28: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
      33: ifle          49
      36: aload_2
      37: iconst_0
      38: invokeinterface #19,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      43: checkcast     #9                  // class org/apache/dubbo/rpc/model/ProviderModel
      46: goto          50
      49: aconst_null
      50: areturn
      51: aconst_null
      52: areturn

  public java.util.List<org.apache.dubbo.rpc.model.ProviderModel> lookupExportedServicesWithoutGroup(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field providersWithoutGroup:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #13                 // class java/util/List
      13: areturn

  public org.apache.dubbo.rpc.model.ProviderModel lookupExportedService(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field providers:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #9                  // class org/apache/dubbo/rpc/model/ProviderModel
      13: areturn

  public java.util.List<org.apache.dubbo.rpc.model.ProviderModel> allProviderModels();
    Code:
       0: new           #20                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #4                  // Field providers:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      13: invokespecial #22                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      16: invokestatic  #23                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      19: areturn

  public java.util.List<org.apache.dubbo.rpc.model.ConsumerModel> allConsumerModels();
    Code:
       0: new           #24                 // class java/util/LinkedList
       3: dup
       4: invokespecial #25                 // Method java/util/LinkedList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field frameworkModel:Lorg/apache/dubbo/rpc/model/FrameworkModel;
      12: invokevirtual #26                 // Method org/apache/dubbo/rpc/model/FrameworkModel.getApplicationModels:()Ljava/util/List;
      15: aload_1
      16: invokedynamic #27,  0             // InvokeDynamic #1:accept:(Ljava/util/List;)Ljava/util/function/Consumer;
      21: invokeinterface #28,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      26: aload_1
      27: invokestatic  #23                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      30: areturn

  private static java.lang.String keyWithoutGroup(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #29                 // Method org/apache/dubbo/common/BaseServiceMetadata.interfaceFromServiceKey:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: aload_0
       6: invokestatic  #30                 // Method org/apache/dubbo/common/BaseServiceMetadata.versionFromServiceKey:(Ljava/lang/String;)Ljava/lang/String;
       9: astore_2
      10: aload_2
      11: invokestatic  #31                 // Method org/apache/dubbo/common/utils/StringUtils.isEmpty:(Ljava/lang/String;)Z
      14: ifeq          19
      17: aload_1
      18: areturn
      19: new           #32                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      26: aload_1
      27: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #36                 // String :
      32: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_2
      36: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: areturn

  private static void lambda$allConsumerModels$1(java.util.List, org.apache.dubbo.rpc.model.ApplicationModel);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method org/apache/dubbo/rpc/model/ApplicationModel.getApplicationServiceRepository:()Lorg/apache/dubbo/rpc/model/ServiceRepository;
       5: invokevirtual #39                 // Method org/apache/dubbo/rpc/model/ServiceRepository.allConsumerModels:()Ljava/util/Collection;
       8: invokeinterface #40,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      13: pop
      14: return

  private static java.util.List lambda$registerProvider$0(java.lang.String);
    Code:
       0: new           #41                 // class java/util/concurrent/CopyOnWriteArrayList
       3: dup
       4: invokespecial #42                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
       7: areturn
}
