Compiled from "AbstractProxyProtocol.java"
public class org.apache.dubbo.rpc.protocol.AbstractProxyProtocol$ProxyProtocolServer implements org.apache.dubbo.rpc.ProtocolServer {
  private org.apache.dubbo.remoting.RemotingServer server;

  private java.lang.String address;

  private java.util.Map<java.lang.String, java.lang.Object> attributes;

  final org.apache.dubbo.rpc.protocol.AbstractProxyProtocol this$0;

  public org.apache.dubbo.rpc.protocol.AbstractProxyProtocol$ProxyProtocolServer(org.apache.dubbo.rpc.protocol.AbstractProxyProtocol, org.apache.dubbo.remoting.RemotingServer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/AbstractProxyProtocol;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: putfield      #5                  // Field attributes:Ljava/util/Map;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field server:Lorg/apache/dubbo/remoting/RemotingServer;
      25: return

  public org.apache.dubbo.remoting.RemotingServer getRemotingServer();
    Code:
       0: aload_0
       1: getfield      #6                  // Field server:Lorg/apache/dubbo/remoting/RemotingServer;
       4: areturn

  public java.lang.String getAddress();
    Code:
       0: aload_0
       1: getfield      #7                  // Field address:Ljava/lang/String;
       4: invokestatic  #8                  // Method org/apache/dubbo/common/utils/StringUtils.isNotEmpty:(Ljava/lang/String;)Z
       7: ifeq          17
      10: aload_0
      11: getfield      #7                  // Field address:Ljava/lang/String;
      14: goto          29
      17: aload_0
      18: getfield      #6                  // Field server:Lorg/apache/dubbo/remoting/RemotingServer;
      21: invokeinterface #9,  1            // InterfaceMethod org/apache/dubbo/remoting/RemotingServer.getUrl:()Lorg/apache/dubbo/common/URL;
      26: invokevirtual #10                 // Method org/apache/dubbo/common/URL.getAddress:()Ljava/lang/String;
      29: areturn

  public void setAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field address:Ljava/lang/String;
       5: return

  public org.apache.dubbo.common.URL getUrl();
    Code:
       0: aload_0
       1: getfield      #6                  // Field server:Lorg/apache/dubbo/remoting/RemotingServer;
       4: invokeinterface #9,  1            // InterfaceMethod org/apache/dubbo/remoting/RemotingServer.getUrl:()Lorg/apache/dubbo/common/URL;
       9: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #6                  // Field server:Lorg/apache/dubbo/remoting/RemotingServer;
       4: invokeinterface #11,  1           // InterfaceMethod org/apache/dubbo/remoting/RemotingServer.close:()V
       9: return

  public java.util.Map<java.lang.String, java.lang.Object> getAttributes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field attributes:Ljava/util/Map;
       4: areturn
}
