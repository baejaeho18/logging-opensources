Compiled from "AbstractProxyProtocol.java"
public abstract class org.apache.dubbo.rpc.protocol.AbstractProxyProtocol$RemotingServerAdapter implements org.apache.dubbo.remoting.RemotingServer {
  final org.apache.dubbo.rpc.protocol.AbstractProxyProtocol this$0;

  protected org.apache.dubbo.rpc.protocol.AbstractProxyProtocol$RemotingServerAdapter(org.apache.dubbo.rpc.protocol.AbstractProxyProtocol);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/AbstractProxyProtocol;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public abstract java.lang.Object getDelegateServer();

  public boolean isBound();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.Collection<org.apache.dubbo.remoting.Channel> getChannels();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.dubbo.remoting.Channel getChannel(java.net.InetSocketAddress);
    Code:
       0: aconst_null
       1: areturn

  public void reset(org.apache.dubbo.common.Parameters);
    Code:
       0: return

  public void reset(org.apache.dubbo.common.URL);
    Code:
       0: return

  public org.apache.dubbo.common.URL getUrl();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.dubbo.remoting.ChannelHandler getChannelHandler();
    Code:
       0: aconst_null
       1: areturn

  public java.net.InetSocketAddress getLocalAddress();
    Code:
       0: aconst_null
       1: areturn

  public void send(java.lang.Object) throws org.apache.dubbo.remoting.RemotingException;
    Code:
       0: return

  public void send(java.lang.Object, boolean) throws org.apache.dubbo.remoting.RemotingException;
    Code:
       0: return

  public void close();
    Code:
       0: return

  public void close(int);
    Code:
       0: return

  public void startClose();
    Code:
       0: return

  public boolean isClosed();
    Code:
       0: iconst_0
       1: ireturn
}
