Compiled from "ProtocolSecurityWrapper.java"
public class org.apache.dubbo.rpc.protocol.ProtocolSecurityWrapper implements org.apache.dubbo.rpc.Protocol {
  private final org.apache.dubbo.rpc.Protocol protocol;

  private static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  public org.apache.dubbo.rpc.protocol.ProtocolSecurityWrapper(org.apache.dubbo.rpc.Protocol);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #3                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #4                  // String protocol == null
      14: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #6                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
      23: return

  public int getDefaultPort();
    Code:
       0: aload_0
       1: getfield      #6                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
       4: invokeinterface #7,  1            // InterfaceMethod org/apache/dubbo/rpc/Protocol.getDefaultPort:()I
       9: ireturn

  public <T> org.apache.dubbo.rpc.Exporter<T> export(org.apache.dubbo.rpc.Invoker<T>) throws org.apache.dubbo.rpc.RpcException;
    Code:
       0: aload_1
       1: invokeinterface #8,  1            // InterfaceMethod org/apache/dubbo/rpc/Invoker.getUrl:()Lorg/apache/dubbo/common/URL;
       6: invokevirtual #9                  // Method org/apache/dubbo/common/URL.getServiceModel:()Lorg/apache/dubbo/rpc/model/ServiceModel;
       9: astore_2
      10: aload_1
      11: invokeinterface #8,  1            // InterfaceMethod org/apache/dubbo/rpc/Invoker.getUrl:()Lorg/apache/dubbo/common/URL;
      16: invokevirtual #10                 // Method org/apache/dubbo/common/URL.getScopeModel:()Lorg/apache/dubbo/rpc/model/ScopeModel;
      19: astore_3
      20: aload_3
      21: invokestatic  #11                 // Method org/apache/dubbo/rpc/model/ScopeModelUtil.getModuleModel:(Lorg/apache/dubbo/rpc/model/ScopeModel;)Lorg/apache/dubbo/rpc/model/ModuleModel;
      24: invokevirtual #12                 // Method org/apache/dubbo/rpc/model/ModuleModel.getBeanFactory:()Lorg/apache/dubbo/common/beans/factory/ScopeBeanFactory;
      27: ldc           #13                 // class org/apache/dubbo/common/utils/SerializeSecurityConfigurator
      29: invokevirtual #14                 // Method org/apache/dubbo/common/beans/factory/ScopeBeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      32: checkcast     #13                 // class org/apache/dubbo/common/utils/SerializeSecurityConfigurator
      35: astore        4
      37: aload         4
      39: invokevirtual #15                 // Method org/apache/dubbo/common/utils/SerializeSecurityConfigurator.refreshStatus:()V
      42: aload         4
      44: invokevirtual #16                 // Method org/apache/dubbo/common/utils/SerializeSecurityConfigurator.refreshCheck:()V
      47: aload_1
      48: invokeinterface #17,  1           // InterfaceMethod org/apache/dubbo/rpc/Invoker.getInterface:()Ljava/lang/Class;
      53: invokestatic  #18                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      56: aload         4
      58: dup
      59: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      62: pop
      63: invokedynamic #20,  0             // InvokeDynamic #0:accept:(Lorg/apache/dubbo/common/utils/SerializeSecurityConfigurator;)Ljava/util/function/Consumer;
      68: invokevirtual #21                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      71: aload_2
      72: invokestatic  #18                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      75: invokedynamic #22,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      80: invokevirtual #23                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      83: invokedynamic #24,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      88: invokevirtual #23                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      91: aload         4
      93: dup
      94: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      97: pop
      98: invokedynamic #20,  0             // InvokeDynamic #0:accept:(Lorg/apache/dubbo/common/utils/SerializeSecurityConfigurator;)Ljava/util/function/Consumer;
     103: invokevirtual #21                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     106: aload_2
     107: invokestatic  #18                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
     110: invokedynamic #25,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
     115: invokevirtual #23                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     118: invokedynamic #26,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
     123: invokevirtual #23                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     126: aload         4
     128: dup
     129: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     132: pop
     133: invokedynamic #20,  0             // InvokeDynamic #0:accept:(Lorg/apache/dubbo/common/utils/SerializeSecurityConfigurator;)Ljava/util/function/Consumer;
     138: invokevirtual #21                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     141: goto          162
     144: astore_2
     145: getstatic     #28                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
     148: ldc           #29                 // String 99-0
     150: ldc           #30                 // String
     152: ldc           #30                 // String
     154: ldc           #31                 // String Failed to register interface for security check
     156: aload_2
     157: invokeinterface #32,  6           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
     162: aload_0
     163: getfield      #6                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
     166: aload_1
     167: invokeinterface #33,  2           // InterfaceMethod org/apache/dubbo/rpc/Protocol.export:(Lorg/apache/dubbo/rpc/Invoker;)Lorg/apache/dubbo/rpc/Exporter;
     172: areturn
    Exception table:
       from    to  target type
           0   141   144   Class java/lang/Throwable

  public <T> org.apache.dubbo.rpc.Invoker<T> refer(java.lang.Class<T>, org.apache.dubbo.common.URL) throws org.apache.dubbo.rpc.RpcException;
    Code:
       0: aload_2
       1: invokevirtual #9                  // Method org/apache/dubbo/common/URL.getServiceModel:()Lorg/apache/dubbo/rpc/model/ServiceModel;
       4: astore_3
       5: aload_2
       6: invokevirtual #10                 // Method org/apache/dubbo/common/URL.getScopeModel:()Lorg/apache/dubbo/rpc/model/ScopeModel;
       9: astore        4
      11: aload         4
      13: invokestatic  #11                 // Method org/apache/dubbo/rpc/model/ScopeModelUtil.getModuleModel:(Lorg/apache/dubbo/rpc/model/ScopeModel;)Lorg/apache/dubbo/rpc/model/ModuleModel;
      16: invokevirtual #12                 // Method org/apache/dubbo/rpc/model/ModuleModel.getBeanFactory:()Lorg/apache/dubbo/common/beans/factory/ScopeBeanFactory;
      19: ldc           #13                 // class org/apache/dubbo/common/utils/SerializeSecurityConfigurator
      21: invokevirtual #14                 // Method org/apache/dubbo/common/beans/factory/ScopeBeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      24: checkcast     #13                 // class org/apache/dubbo/common/utils/SerializeSecurityConfigurator
      27: astore        5
      29: aload         5
      31: invokevirtual #15                 // Method org/apache/dubbo/common/utils/SerializeSecurityConfigurator.refreshStatus:()V
      34: aload         5
      36: invokevirtual #16                 // Method org/apache/dubbo/common/utils/SerializeSecurityConfigurator.refreshCheck:()V
      39: aload_3
      40: invokestatic  #18                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      43: invokedynamic #22,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      48: invokevirtual #23                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      51: invokedynamic #24,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      56: invokevirtual #23                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      59: aload         5
      61: dup
      62: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      65: pop
      66: invokedynamic #20,  0             // InvokeDynamic #0:accept:(Lorg/apache/dubbo/common/utils/SerializeSecurityConfigurator;)Ljava/util/function/Consumer;
      71: invokevirtual #21                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      74: aload_3
      75: invokestatic  #18                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      78: invokedynamic #25,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      83: invokevirtual #23                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      86: invokedynamic #26,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      91: invokevirtual #23                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      94: aload         5
      96: dup
      97: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     100: pop
     101: invokedynamic #20,  0             // InvokeDynamic #0:accept:(Lorg/apache/dubbo/common/utils/SerializeSecurityConfigurator;)Ljava/util/function/Consumer;
     106: invokevirtual #21                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     109: aload         5
     111: aload_1
     112: invokevirtual #34                 // Method org/apache/dubbo/common/utils/SerializeSecurityConfigurator.registerInterface:(Ljava/lang/Class;)V
     115: goto          136
     118: astore_3
     119: getstatic     #28                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
     122: ldc           #29                 // String 99-0
     124: ldc           #30                 // String
     126: ldc           #30                 // String
     128: ldc           #31                 // String Failed to register interface for security check
     130: aload_3
     131: invokeinterface #32,  6           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
     136: aload_0
     137: getfield      #6                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
     140: aload_1
     141: aload_2
     142: invokeinterface #35,  3           // InterfaceMethod org/apache/dubbo/rpc/Protocol.refer:(Ljava/lang/Class;Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/rpc/Invoker;
     147: areturn
    Exception table:
       from    to  target type
           0   115   118   Class java/lang/Throwable

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #6                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
       4: invokeinterface #36,  1           // InterfaceMethod org/apache/dubbo/rpc/Protocol.destroy:()V
       9: return

  public java.util.List<org.apache.dubbo.rpc.ProtocolServer> getServers();
    Code:
       0: aload_0
       1: getfield      #6                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
       4: invokeinterface #37,  1           // InterfaceMethod org/apache/dubbo/rpc/Protocol.getServers:()Ljava/util/List;
       9: areturn

  static {};
    Code:
       0: ldc           #38                 // class org/apache/dubbo/rpc/protocol/ProtocolSecurityWrapper
       2: invokestatic  #39                 // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #28                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: return
}
