Compiled from "ProtocolSerializationWrapper.java"
public class org.apache.dubbo.rpc.protocol.ProtocolSerializationWrapper implements org.apache.dubbo.rpc.Protocol {
  private final org.apache.dubbo.rpc.Protocol protocol;

  public org.apache.dubbo.rpc.protocol.ProtocolSerializationWrapper(org.apache.dubbo.rpc.Protocol);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
       9: return

  public int getDefaultPort();
    Code:
       0: aload_0
       1: getfield      #2                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
       4: invokeinterface #3,  1            // InterfaceMethod org/apache/dubbo/rpc/Protocol.getDefaultPort:()I
       9: ireturn

  public <T> org.apache.dubbo.rpc.Exporter<T> export(org.apache.dubbo.rpc.Invoker<T>) throws org.apache.dubbo.rpc.RpcException;
    Code:
       0: aload_1
       1: invokeinterface #4,  1            // InterfaceMethod org/apache/dubbo/rpc/Invoker.getUrl:()Lorg/apache/dubbo/common/URL;
       6: invokevirtual #5                  // Method org/apache/dubbo/common/URL.getScopeModel:()Lorg/apache/dubbo/rpc/model/ScopeModel;
       9: invokestatic  #6                  // Method org/apache/dubbo/rpc/model/ScopeModelUtil.getFrameworkModel:(Lorg/apache/dubbo/rpc/model/ScopeModel;)Lorg/apache/dubbo/rpc/model/FrameworkModel;
      12: invokevirtual #7                  // Method org/apache/dubbo/rpc/model/FrameworkModel.getBeanFactory:()Lorg/apache/dubbo/common/beans/factory/ScopeBeanFactory;
      15: ldc           #8                  // class org/apache/dubbo/rpc/protocol/PermittedSerializationKeeper
      17: invokevirtual #9                  // Method org/apache/dubbo/common/beans/factory/ScopeBeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      20: checkcast     #8                  // class org/apache/dubbo/rpc/protocol/PermittedSerializationKeeper
      23: aload_1
      24: invokeinterface #4,  1            // InterfaceMethod org/apache/dubbo/rpc/Invoker.getUrl:()Lorg/apache/dubbo/common/URL;
      29: invokevirtual #10                 // Method org/apache/dubbo/rpc/protocol/PermittedSerializationKeeper.registerService:(Lorg/apache/dubbo/common/URL;)V
      32: aload_0
      33: getfield      #2                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
      36: aload_1
      37: invokeinterface #11,  2           // InterfaceMethod org/apache/dubbo/rpc/Protocol.export:(Lorg/apache/dubbo/rpc/Invoker;)Lorg/apache/dubbo/rpc/Exporter;
      42: areturn

  public <T> org.apache.dubbo.rpc.Invoker<T> refer(java.lang.Class<T>, org.apache.dubbo.common.URL) throws org.apache.dubbo.rpc.RpcException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
       4: aload_1
       5: aload_2
       6: invokeinterface #12,  3           // InterfaceMethod org/apache/dubbo/rpc/Protocol.refer:(Ljava/lang/Class;Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/rpc/Invoker;
      11: areturn

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
       4: invokeinterface #13,  1           // InterfaceMethod org/apache/dubbo/rpc/Protocol.destroy:()V
       9: return

  public java.util.List<org.apache.dubbo.rpc.ProtocolServer> getServers();
    Code:
       0: aload_0
       1: getfield      #2                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
       4: invokeinterface #14,  1           // InterfaceMethod org/apache/dubbo/rpc/Protocol.getServers:()Ljava/util/List;
       9: areturn
}
