Compiled from "AbstractProxyProtocol.java"
class org.apache.dubbo.rpc.protocol.AbstractProxyProtocol$1 implements org.apache.dubbo.rpc.Invoker<T> {
  final org.apache.dubbo.rpc.Invoker val$invoker;

  final org.apache.dubbo.rpc.protocol.AbstractProxyProtocol this$0;

  org.apache.dubbo.rpc.protocol.AbstractProxyProtocol$1(org.apache.dubbo.rpc.protocol.AbstractProxyProtocol, org.apache.dubbo.rpc.Invoker);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/AbstractProxyProtocol;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$invoker:Lorg/apache/dubbo/rpc/Invoker;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public java.lang.Class<T> getInterface();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$invoker:Lorg/apache/dubbo/rpc/Invoker;
       4: invokeinterface #4,  1            // InterfaceMethod org/apache/dubbo/rpc/Invoker.getInterface:()Ljava/lang/Class;
       9: areturn

  public org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation) throws org.apache.dubbo.rpc.RpcException;
    Code:
       0: invokestatic  #5                  // Method org/apache/dubbo/rpc/RpcContext.getServiceContext:()Lorg/apache/dubbo/rpc/RpcServiceContext;
       3: invokevirtual #6                  // Method org/apache/dubbo/rpc/RpcServiceContext.getObjectAttachments:()Ljava/util/Map;
       6: aload_1
       7: dup
       8: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: pop
      12: invokedynamic #8,  0              // InvokeDynamic #0:accept:(Lorg/apache/dubbo/rpc/Invocation;)Ljava/util/function/BiConsumer;
      17: invokeinterface #9,  2            // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      22: aload_0
      23: getfield      #2                  // Field val$invoker:Lorg/apache/dubbo/rpc/Invoker;
      26: aload_1
      27: invokeinterface #10,  2           // InterfaceMethod org/apache/dubbo/rpc/Invoker.invoke:(Lorg/apache/dubbo/rpc/Invocation;)Lorg/apache/dubbo/rpc/Result;
      32: areturn

  public org.apache.dubbo.common.URL getUrl();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$invoker:Lorg/apache/dubbo/rpc/Invoker;
       4: invokeinterface #11,  1           // InterfaceMethod org/apache/dubbo/rpc/Invoker.getUrl:()Lorg/apache/dubbo/common/URL;
       9: areturn

  public boolean isAvailable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$invoker:Lorg/apache/dubbo/rpc/Invoker;
       4: invokeinterface #12,  1           // InterfaceMethod org/apache/dubbo/rpc/Invoker.isAvailable:()Z
       9: ireturn

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$invoker:Lorg/apache/dubbo/rpc/Invoker;
       4: invokeinterface #13,  1           // InterfaceMethod org/apache/dubbo/rpc/Invoker.destroy:()V
       9: return
}
