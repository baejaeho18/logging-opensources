Compiled from "ReflectionPackableMethod.java"
class org.apache.dubbo.rpc.protocol.tri.ReflectionPackableMethod$WrapRequestPack implements org.apache.dubbo.rpc.model.Pack {
  private final java.lang.String serialize;

  private final org.apache.dubbo.common.serialize.MultipleSerialization multipleSerialization;

  private final java.lang.String[] argumentsType;

  private final java.lang.Class<?>[] actualRequestTypes;

  private final org.apache.dubbo.common.URL url;

  private final boolean singleArgument;

  private org.apache.dubbo.rpc.protocol.tri.ReflectionPackableMethod$WrapRequestPack(org.apache.dubbo.common.serialize.MultipleSerialization, org.apache.dubbo.common.URL, java.lang.String, java.lang.Class<?>[], boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #3                  // Field url:Lorg/apache/dubbo/common/URL;
       9: aload_0
      10: aload_0
      11: aload_3
      12: invokespecial #4                  // Method convertHessianToWrapper:(Ljava/lang/String;)Ljava/lang/String;
      15: putfield      #5                  // Field serialize:Ljava/lang/String;
      18: aload_0
      19: aload_1
      20: putfield      #6                  // Field multipleSerialization:Lorg/apache/dubbo/common/serialize/MultipleSerialization;
      23: aload_0
      24: aload         4
      26: putfield      #7                  // Field actualRequestTypes:[Ljava/lang/Class;
      29: aload_0
      30: aload         4
      32: invokestatic  #8                  // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      35: invokedynamic #9,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      40: invokeinterface #10,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      45: invokedynamic #11,  0             // InvokeDynamic #1:apply:()Ljava/util/function/IntFunction;
      50: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
      55: checkcast     #13                 // class "[Ljava/lang/String;"
      58: putfield      #14                 // Field argumentsType:[Ljava/lang/String;
      61: aload_0
      62: iload         5
      64: putfield      #15                 // Field singleArgument:Z
      67: return

  public byte[] pack(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field singleArgument:Z
       4: ifeq          19
       7: iconst_1
       8: anewarray     #16                 // class java/lang/Object
      11: dup
      12: iconst_0
      13: aload_1
      14: aastore
      15: astore_2
      16: goto          27
      19: aload_1
      20: checkcast     #17                 // class "[Ljava/lang/Object;"
      23: checkcast     #17                 // class "[Ljava/lang/Object;"
      26: astore_2
      27: invokestatic  #18                 // Method org/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper$Builder.newBuilder:()Lorg/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper$Builder;
      30: astore_3
      31: aload_3
      32: aload_0
      33: getfield      #5                  // Field serialize:Ljava/lang/String;
      36: invokevirtual #19                 // Method org/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper$Builder.setSerializeType:(Ljava/lang/String;)Lorg/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper$Builder;
      39: pop
      40: aload_0
      41: getfield      #14                 // Field argumentsType:[Ljava/lang/String;
      44: astore        4
      46: aload         4
      48: arraylength
      49: istore        5
      51: iconst_0
      52: istore        6
      54: iload         6
      56: iload         5
      58: if_icmpge     81
      61: aload         4
      63: iload         6
      65: aaload
      66: astore        7
      68: aload_3
      69: aload         7
      71: invokevirtual #20                 // Method org/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper$Builder.addArgTypes:(Ljava/lang/String;)Lorg/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper$Builder;
      74: pop
      75: iinc          6, 1
      78: goto          54
      81: new           #21                 // class java/io/ByteArrayOutputStream
      84: dup
      85: invokespecial #22                 // Method java/io/ByteArrayOutputStream."<init>":()V
      88: astore        4
      90: iconst_0
      91: istore        5
      93: iload         5
      95: aload_2
      96: arraylength
      97: if_icmpge     155
     100: aload_2
     101: iload         5
     103: aaload
     104: astore        6
     106: aload_0
     107: getfield      #6                  // Field multipleSerialization:Lorg/apache/dubbo/common/serialize/MultipleSerialization;
     110: aload_0
     111: getfield      #3                  // Field url:Lorg/apache/dubbo/common/URL;
     114: aload_0
     115: getfield      #5                  // Field serialize:Ljava/lang/String;
     118: aload_0
     119: getfield      #7                  // Field actualRequestTypes:[Ljava/lang/Class;
     122: iload         5
     124: aaload
     125: aload         6
     127: aload         4
     129: invokeinterface #23,  6           // InterfaceMethod org/apache/dubbo/common/serialize/MultipleSerialization.serialize:(Lorg/apache/dubbo/common/URL;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;Ljava/io/OutputStream;)V
     134: aload_3
     135: aload         4
     137: invokevirtual #24                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     140: invokevirtual #25                 // Method org/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper$Builder.addArgs:([B)Lorg/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper$Builder;
     143: pop
     144: aload         4
     146: invokevirtual #26                 // Method java/io/ByteArrayOutputStream.reset:()V
     149: iinc          5, 1
     152: goto          93
     155: aload_3
     156: invokevirtual #27                 // Method org/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper$Builder.build:()Lorg/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper;
     159: invokevirtual #28                 // Method org/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper.toByteArray:()[B
     162: areturn

  private java.lang.String convertHessianToWrapper(java.lang.String);
    Code:
       0: ldc           #30                 // String hessian2
       2: aload_1
       3: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          12
       9: ldc           #32                 // String hessian4
      11: areturn
      12: aload_1
      13: areturn

  private static java.lang.String[] lambda$new$0(int);
    Code:
       0: iload_0
       1: anewarray     #33                 // class java/lang/String
       4: areturn

  org.apache.dubbo.rpc.protocol.tri.ReflectionPackableMethod$WrapRequestPack(org.apache.dubbo.common.serialize.MultipleSerialization, org.apache.dubbo.common.URL, java.lang.String, java.lang.Class[], boolean, org.apache.dubbo.rpc.protocol.tri.ReflectionPackableMethod$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: invokespecial #1                  // Method "<init>":(Lorg/apache/dubbo/common/serialize/MultipleSerialization;Lorg/apache/dubbo/common/URL;Ljava/lang/String;[Ljava/lang/Class;Z)V
      11: return
}
