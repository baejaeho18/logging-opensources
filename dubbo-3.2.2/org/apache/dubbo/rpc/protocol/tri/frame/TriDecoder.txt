Compiled from "TriDecoder.java"
public class org.apache.dubbo.rpc.protocol.tri.frame.TriDecoder implements org.apache.dubbo.rpc.protocol.tri.frame.Deframer {
  private static final int HEADER_LENGTH;

  private static final int COMPRESSED_FLAG_MASK;

  private static final int RESERVED_MASK;

  private final io.netty.buffer.CompositeByteBuf accumulate;

  private final org.apache.dubbo.rpc.protocol.tri.frame.TriDecoder$Listener listener;

  private final org.apache.dubbo.rpc.protocol.tri.compressor.DeCompressor decompressor;

  private boolean compressedFlag;

  private long pendingDeliveries;

  private boolean inDelivery;

  private boolean closing;

  private boolean closed;

  private int requiredLength;

  private org.apache.dubbo.rpc.protocol.tri.frame.TriDecoder$GrpcDecodeState state;

  public org.apache.dubbo.rpc.protocol.tri.frame.TriDecoder(org.apache.dubbo.rpc.protocol.tri.compressor.DeCompressor, org.apache.dubbo.rpc.protocol.tri.frame.TriDecoder$Listener);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method io/netty/buffer/Unpooled.compositeBuffer:()Lio/netty/buffer/CompositeByteBuf;
       8: putfield      #3                  // Field accumulate:Lio/netty/buffer/CompositeByteBuf;
      11: aload_0
      12: iconst_0
      13: putfield      #4                  // Field inDelivery:Z
      16: aload_0
      17: iconst_5
      18: putfield      #6                  // Field requiredLength:I
      21: aload_0
      22: getstatic     #7                  // Field org/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$GrpcDecodeState.HEADER:Lorg/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$GrpcDecodeState;
      25: putfield      #8                  // Field state:Lorg/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$GrpcDecodeState;
      28: aload_0
      29: aload_1
      30: putfield      #9                  // Field decompressor:Lorg/apache/dubbo/rpc/protocol/tri/compressor/DeCompressor;
      33: aload_0
      34: aload_2
      35: putfield      #10                 // Field listener:Lorg/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$Listener;
      38: return

  public void deframe(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: getfield      #11                 // Field closing:Z
       4: ifne          14
       7: aload_0
       8: getfield      #12                 // Field closed:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: getfield      #3                  // Field accumulate:Lio/netty/buffer/CompositeByteBuf;
      19: iconst_1
      20: aload_1
      21: invokevirtual #13                 // Method io/netty/buffer/CompositeByteBuf.addComponent:(ZLio/netty/buffer/ByteBuf;)Lio/netty/buffer/CompositeByteBuf;
      24: pop
      25: aload_0
      26: invokespecial #14                 // Method deliver:()V
      29: return

  public void request(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #15                 // Field pendingDeliveries:J
       5: iload_1
       6: i2l
       7: ladd
       8: putfield      #15                 // Field pendingDeliveries:J
      11: aload_0
      12: invokespecial #14                 // Method deliver:()V
      15: return

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #11                 // Field closing:Z
       5: aload_0
       6: invokespecial #14                 // Method deliver:()V
       9: return

  private void deliver();
    Code:
       0: aload_0
       1: getfield      #4                  // Field inDelivery:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #4                  // Field inDelivery:Z
      13: aload_0
      14: getfield      #15                 // Field pendingDeliveries:J
      17: lconst_0
      18: lcmp
      19: ifle          122
      22: aload_0
      23: invokespecial #16                 // Method hasEnoughBytes:()Z
      26: ifeq          122
      29: getstatic     #17                 // Field org/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$1.$SwitchMap$org$apache$dubbo$rpc$protocol$tri$frame$TriDecoder$GrpcDecodeState:[I
      32: aload_0
      33: getfield      #8                  // Field state:Lorg/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$GrpcDecodeState;
      36: invokevirtual #18                 // Method org/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$GrpcDecodeState.ordinal:()I
      39: iaload
      40: lookupswitch  { // 2
                     1: 68
                     2: 75
               default: 92
          }
      68: aload_0
      69: invokespecial #19                 // Method processHeader:()V
      72: goto          13
      75: aload_0
      76: invokespecial #20                 // Method processBody:()V
      79: aload_0
      80: dup
      81: getfield      #15                 // Field pendingDeliveries:J
      84: lconst_1
      85: lsub
      86: putfield      #15                 // Field pendingDeliveries:J
      89: goto          13
      92: new           #21                 // class java/lang/AssertionError
      95: dup
      96: new           #22                 // class java/lang/StringBuilder
      99: dup
     100: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     103: ldc           #24                 // String Invalid state:
     105: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_0
     109: getfield      #8                  // Field state:Lorg/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$GrpcDecodeState;
     112: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     115: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: invokespecial #28                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     121: athrow
     122: aload_0
     123: getfield      #11                 // Field closing:Z
     126: ifeq          166
     129: aload_0
     130: getfield      #12                 // Field closed:Z
     133: ifne          166
     136: aload_0
     137: iconst_1
     138: putfield      #12                 // Field closed:Z
     141: aload_0
     142: getfield      #3                  // Field accumulate:Lio/netty/buffer/CompositeByteBuf;
     145: invokevirtual #29                 // Method io/netty/buffer/CompositeByteBuf.clear:()Lio/netty/buffer/CompositeByteBuf;
     148: pop
     149: aload_0
     150: getfield      #3                  // Field accumulate:Lio/netty/buffer/CompositeByteBuf;
     153: invokevirtual #30                 // Method io/netty/buffer/CompositeByteBuf.release:()Z
     156: pop
     157: aload_0
     158: getfield      #10                 // Field listener:Lorg/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$Listener;
     161: invokeinterface #31,  1           // InterfaceMethod org/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$Listener.close:()V
     166: aload_0
     167: iconst_0
     168: putfield      #4                  // Field inDelivery:Z
     171: goto          182
     174: astore_1
     175: aload_0
     176: iconst_0
     177: putfield      #4                  // Field inDelivery:Z
     180: aload_1
     181: athrow
     182: return
    Exception table:
       from    to  target type
          13   166   174   any

  private boolean hasEnoughBytes();
    Code:
       0: aload_0
       1: getfield      #6                  // Field requiredLength:I
       4: aload_0
       5: getfield      #3                  // Field accumulate:Lio/netty/buffer/CompositeByteBuf;
       8: invokevirtual #32                 // Method io/netty/buffer/CompositeByteBuf.readableBytes:()I
      11: isub
      12: ifgt          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  private void processHeader();
    Code:
       0: aload_0
       1: getfield      #3                  // Field accumulate:Lio/netty/buffer/CompositeByteBuf;
       4: invokevirtual #33                 // Method io/netty/buffer/CompositeByteBuf.readUnsignedByte:()S
       7: istore_1
       8: iload_1
       9: sipush        254
      12: iand
      13: ifeq          26
      16: new           #34                 // class org/apache/dubbo/rpc/RpcException
      19: dup
      20: ldc           #35                 // String gRPC frame header malformed: reserved bits not zero
      22: invokespecial #36                 // Method org/apache/dubbo/rpc/RpcException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: iload_1
      28: iconst_1
      29: iand
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: putfield      #37                 // Field compressedFlag:Z
      41: aload_0
      42: aload_0
      43: getfield      #3                  // Field accumulate:Lio/netty/buffer/CompositeByteBuf;
      46: invokevirtual #38                 // Method io/netty/buffer/CompositeByteBuf.readInt:()I
      49: putfield      #6                  // Field requiredLength:I
      52: aload_0
      53: getstatic     #39                 // Field org/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$GrpcDecodeState.PAYLOAD:Lorg/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$GrpcDecodeState;
      56: putfield      #8                  // Field state:Lorg/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$GrpcDecodeState;
      59: return

  private void processBody();
    Code:
       0: aload_0
       1: getfield      #37                 // Field compressedFlag:Z
       4: ifeq          14
       7: aload_0
       8: invokespecial #40                 // Method getCompressedBody:()[B
      11: goto          18
      14: aload_0
      15: invokespecial #41                 // Method getUncompressedBody:()[B
      18: astore_1
      19: aload_0
      20: getfield      #10                 // Field listener:Lorg/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$Listener;
      23: aload_1
      24: invokeinterface #42,  2           // InterfaceMethod org/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$Listener.onRawMessage:([B)V
      29: aload_0
      30: getstatic     #7                  // Field org/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$GrpcDecodeState.HEADER:Lorg/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$GrpcDecodeState;
      33: putfield      #8                  // Field state:Lorg/apache/dubbo/rpc/protocol/tri/frame/TriDecoder$GrpcDecodeState;
      36: aload_0
      37: iconst_5
      38: putfield      #6                  // Field requiredLength:I
      41: return

  private byte[] getCompressedBody();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method getUncompressedBody:()[B
       4: astore_1
       5: aload_0
       6: getfield      #9                  // Field decompressor:Lorg/apache/dubbo/rpc/protocol/tri/compressor/DeCompressor;
       9: aload_1
      10: invokeinterface #43,  2           // InterfaceMethod org/apache/dubbo/rpc/protocol/tri/compressor/DeCompressor.decompress:([B)[B
      15: areturn

  private byte[] getUncompressedBody();
    Code:
       0: aload_0
       1: getfield      #6                  // Field requiredLength:I
       4: newarray       byte
       6: astore_1
       7: aload_0
       8: getfield      #3                  // Field accumulate:Lio/netty/buffer/CompositeByteBuf;
      11: aload_1
      12: invokevirtual #44                 // Method io/netty/buffer/CompositeByteBuf.readBytes:([B)Lio/netty/buffer/CompositeByteBuf;
      15: pop
      16: aload_1
      17: areturn
}
