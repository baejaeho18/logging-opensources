Compiled from "TriHttp2RemoteFlowController.java"
class org.apache.dubbo.rpc.protocol.tri.TriHttp2RemoteFlowController$1 extends io.netty.handler.codec.http2.Http2ConnectionAdapter {
  final org.apache.dubbo.rpc.protocol.tri.TriHttp2RemoteFlowController this$0;

  org.apache.dubbo.rpc.protocol.tri.TriHttp2RemoteFlowController$1(org.apache.dubbo.rpc.protocol.tri.TriHttp2RemoteFlowController);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController;
       5: aload_0
       6: invokespecial #2                  // Method io/netty/handler/codec/http2/Http2ConnectionAdapter."<init>":()V
       9: return

  public void onStreamAdded(io.netty.handler.codec.http2.Http2Stream);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController;
       5: invokestatic  #3                  // Method org/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController.access$000:(Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/Http2Connection$PropertyKey;
       8: new           #4                  // class org/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController$FlowState
      11: dup
      12: aload_0
      13: getfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController;
      16: aload_1
      17: invokespecial #5                  // Method org/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController$FlowState."<init>":(Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController;Lio/netty/handler/codec/http2/Http2Stream;)V
      20: invokeinterface #6,  3            // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.setProperty:(Lio/netty/handler/codec/http2/Http2Connection$PropertyKey;Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: return

  public void onStreamActive(io.netty.handler.codec.http2.Http2Stream);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController;
       4: invokestatic  #7                  // Method org/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController.access$300:(Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController;)Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController$WritabilityMonitor;
       7: aload_0
       8: getfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController;
      11: aload_1
      12: invokestatic  #8                  // Method org/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController.access$100:(Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController;Lio/netty/handler/codec/http2/Http2Stream;)Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController$FlowState;
      15: aload_0
      16: getfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController;
      19: invokestatic  #9                  // Method org/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController.access$200:(Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController;)I
      22: invokevirtual #10                 // Method org/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController$WritabilityMonitor.windowSize:(Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController$FlowState;I)V
      25: return

  public void onStreamClosed(io.netty.handler.codec.http2.Http2Stream);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController;
       4: aload_1
       5: invokestatic  #8                  // Method org/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController.access$100:(Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController;Lio/netty/handler/codec/http2/Http2Stream;)Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController$FlowState;
       8: getstatic     #11                 // Field io/netty/handler/codec/http2/Http2Error.STREAM_CLOSED:Lio/netty/handler/codec/http2/Http2Error;
      11: aconst_null
      12: invokevirtual #12                 // Method org/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController$FlowState.cancel:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/Throwable;)V
      15: return

  public void onStreamHalfClosed(io.netty.handler.codec.http2.Http2Stream);
    Code:
       0: getstatic     #13                 // Field io/netty/handler/codec/http2/Http2Stream$State.HALF_CLOSED_LOCAL:Lio/netty/handler/codec/http2/Http2Stream$State;
       3: aload_1
       4: invokeinterface #14,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Stream.state:()Lio/netty/handler/codec/http2/Http2Stream$State;
       9: if_acmpne     27
      12: aload_0
      13: getfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController;
      16: aload_1
      17: invokestatic  #8                  // Method org/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController.access$100:(Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController;Lio/netty/handler/codec/http2/Http2Stream;)Lorg/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController$FlowState;
      20: getstatic     #11                 // Field io/netty/handler/codec/http2/Http2Error.STREAM_CLOSED:Lio/netty/handler/codec/http2/Http2Error;
      23: aconst_null
      24: invokevirtual #12                 // Method org/apache/dubbo/rpc/protocol/tri/TriHttp2RemoteFlowController$FlowState.cancel:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/Throwable;)V
      27: return
}
