Compiled from "UnaryServerCallListener.java"
public class org.apache.dubbo.rpc.protocol.tri.call.UnaryServerCallListener extends org.apache.dubbo.rpc.protocol.tri.call.AbstractServerCallListener {
  private final boolean needWrapper;

  public org.apache.dubbo.rpc.protocol.tri.call.UnaryServerCallListener(org.apache.dubbo.rpc.RpcInvocation, org.apache.dubbo.rpc.Invoker<?>, org.apache.dubbo.rpc.protocol.tri.observer.ServerCallToObserverAdapter<java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/apache/dubbo/rpc/protocol/tri/call/AbstractServerCallListener."<init>":(Lorg/apache/dubbo/rpc/RpcInvocation;Lorg/apache/dubbo/rpc/Invoker;Lorg/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter;)V
       7: aload_0
       8: iload         4
      10: putfield      #2                  // Field needWrapper:Z
      13: return

  public void onReturn(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field responseObserver:Lorg/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter;
       4: aload_1
       5: invokevirtual #4                  // Method org/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter.onNext:(Ljava/lang/Object;)V
       8: aload_0
       9: getfield      #3                  // Field responseObserver:Lorg/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter;
      12: invokevirtual #5                  // Method org/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter.onCompleted:()V
      15: return

  public void onMessage(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #6                  // class "[Ljava/lang/Object;"
       4: ifeq          24
       7: aload_0
       8: getfield      #7                  // Field invocation:Lorg/apache/dubbo/rpc/RpcInvocation;
      11: aload_1
      12: checkcast     #6                  // class "[Ljava/lang/Object;"
      15: checkcast     #6                  // class "[Ljava/lang/Object;"
      18: invokevirtual #8                  // Method org/apache/dubbo/rpc/RpcInvocation.setArguments:([Ljava/lang/Object;)V
      21: goto          39
      24: aload_0
      25: getfield      #7                  // Field invocation:Lorg/apache/dubbo/rpc/RpcInvocation;
      28: iconst_1
      29: anewarray     #9                  // class java/lang/Object
      32: dup
      33: iconst_0
      34: aload_1
      35: aastore
      36: invokevirtual #8                  // Method org/apache/dubbo/rpc/RpcInvocation.setArguments:([Ljava/lang/Object;)V
      39: return

  public void onCancel(org.apache.dubbo.rpc.TriRpcStatus);
    Code:
       0: return

  protected void doOnResponseHasException(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field needWrapper:Z
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #10                 // class java/lang/Exception
      12: invokespecial #11                 // Method onReturnException:(Ljava/lang/Exception;)V
      15: goto          23
      18: aload_0
      19: aload_1
      20: invokespecial #12                 // Method org/apache/dubbo/rpc/protocol/tri/call/AbstractServerCallListener.doOnResponseHasException:(Ljava/lang/Throwable;)V
      23: return

  private void onReturnException(java.lang.Exception);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method org/apache/dubbo/rpc/TriRpcStatus.getStatus:(Ljava/lang/Throwable;)Lorg/apache/dubbo/rpc/TriRpcStatus;
       4: astore_2
       5: aload_2
       6: getfield      #14                 // Field org/apache/dubbo/rpc/TriRpcStatus.code:Lorg/apache/dubbo/rpc/TriRpcStatus$Code;
       9: getfield      #15                 // Field org/apache/dubbo/rpc/TriRpcStatus$Code.code:I
      12: istore_3
      13: iload_3
      14: getstatic     #16                 // Field org/apache/dubbo/rpc/TriRpcStatus.UNKNOWN:Lorg/apache/dubbo/rpc/TriRpcStatus;
      17: getfield      #14                 // Field org/apache/dubbo/rpc/TriRpcStatus.code:Lorg/apache/dubbo/rpc/TriRpcStatus$Code;
      20: getfield      #15                 // Field org/apache/dubbo/rpc/TriRpcStatus$Code.code:I
      23: if_icmpne     28
      26: iconst_3
      27: istore_3
      28: aload_0
      29: getfield      #3                  // Field responseObserver:Lorg/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter;
      32: iload_3
      33: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: invokevirtual #19                 // Method org/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter.setExceptionCode:(Ljava/lang/Integer;)V
      39: aload_0
      40: getfield      #3                  // Field responseObserver:Lorg/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter;
      43: iconst_1
      44: invokevirtual #20                 // Method org/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter.setNeedReturnException:(Z)V
      47: aload_0
      48: aload_1
      49: invokevirtual #21                 // Method onReturn:(Ljava/lang/Object;)V
      52: return

  public void onComplete();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method invoke:()V
       4: return
}
