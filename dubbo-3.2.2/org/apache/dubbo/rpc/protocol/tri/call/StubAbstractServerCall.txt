Compiled from "StubAbstractServerCall.java"
public class org.apache.dubbo.rpc.protocol.tri.call.StubAbstractServerCall extends org.apache.dubbo.rpc.protocol.tri.call.AbstractServerCall {
  public org.apache.dubbo.rpc.protocol.tri.call.StubAbstractServerCall(org.apache.dubbo.rpc.Invoker<?>, org.apache.dubbo.rpc.protocol.tri.stream.ServerStream, org.apache.dubbo.rpc.model.FrameworkModel, java.lang.String, java.lang.String, java.lang.String, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload_1
       5: invokeinterface #1,  1            // InterfaceMethod org/apache/dubbo/rpc/Invoker.getUrl:()Lorg/apache/dubbo/common/URL;
      10: aload         5
      12: invokestatic  #2                  // Method getServiceDescriptor:(Lorg/apache/dubbo/common/URL;Ljava/lang/String;)Lorg/apache/dubbo/rpc/model/ServiceDescriptor;
      15: aload         4
      17: aload         5
      19: aload         6
      21: aload         7
      23: invokespecial #3                  // Method org/apache/dubbo/rpc/protocol/tri/call/AbstractServerCall."<init>":(Lorg/apache/dubbo/rpc/Invoker;Lorg/apache/dubbo/rpc/protocol/tri/stream/ServerStream;Lorg/apache/dubbo/rpc/model/FrameworkModel;Lorg/apache/dubbo/rpc/model/ServiceDescriptor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/concurrent/Executor;)V
      26: aload_0
      27: aload_0
      28: getfield      #4                  // Field serviceDescriptor:Lorg/apache/dubbo/rpc/model/ServiceDescriptor;
      31: aload         6
      33: invokeinterface #5,  2            // InterfaceMethod org/apache/dubbo/rpc/model/ServiceDescriptor.getMethods:(Ljava/lang/String;)Ljava/util/List;
      38: iconst_0
      39: invokeinterface #6,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      44: checkcast     #7                  // class org/apache/dubbo/rpc/model/MethodDescriptor
      47: putfield      #8                  // Field methodDescriptor:Lorg/apache/dubbo/rpc/model/MethodDescriptor;
      50: aload_0
      51: aload_0
      52: getfield      #8                  // Field methodDescriptor:Lorg/apache/dubbo/rpc/model/MethodDescriptor;
      55: checkcast     #9                  // class org/apache/dubbo/rpc/model/StubMethodDescriptor
      58: putfield      #10                 // Field packableMethod:Lorg/apache/dubbo/rpc/model/PackableMethod;
      61: return

  private static org.apache.dubbo.rpc.model.ServiceDescriptor getServiceDescriptor(org.apache.dubbo.common.URL, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method org/apache/dubbo/common/URL.getServiceModel:()Lorg/apache/dubbo/rpc/model/ServiceModel;
       4: ifnull        18
       7: aload_0
       8: invokevirtual #11                 // Method org/apache/dubbo/common/URL.getServiceModel:()Lorg/apache/dubbo/rpc/model/ServiceModel;
      11: invokevirtual #12                 // Method org/apache/dubbo/rpc/model/ServiceModel.getServiceModel:()Lorg/apache/dubbo/rpc/model/ServiceDescriptor;
      14: astore_2
      15: goto          23
      18: aload_1
      19: invokestatic  #13                 // Method org/apache/dubbo/rpc/stub/StubSuppliers.getServiceDescriptor:(Ljava/lang/String;)Lorg/apache/dubbo/rpc/model/ServiceDescriptor;
      22: astore_2
      23: aload_2
      24: areturn

  protected java.lang.Object parseSingleMessage(byte[]) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #10                 // Field packableMethod:Lorg/apache/dubbo/rpc/model/PackableMethod;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod org/apache/dubbo/rpc/model/PackableMethod.parseRequest:([B)Ljava/lang/Object;
      10: areturn
}
