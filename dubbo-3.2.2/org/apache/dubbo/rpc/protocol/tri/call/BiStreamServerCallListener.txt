Compiled from "BiStreamServerCallListener.java"
public class org.apache.dubbo.rpc.protocol.tri.call.BiStreamServerCallListener extends org.apache.dubbo.rpc.protocol.tri.call.AbstractServerCallListener {
  private org.apache.dubbo.common.stream.StreamObserver<java.lang.Object> requestObserver;

  public org.apache.dubbo.rpc.protocol.tri.call.BiStreamServerCallListener(org.apache.dubbo.rpc.RpcInvocation, org.apache.dubbo.rpc.Invoker<?>, org.apache.dubbo.rpc.protocol.tri.observer.ServerCallToObserverAdapter<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/apache/dubbo/rpc/protocol/tri/call/AbstractServerCallListener."<init>":(Lorg/apache/dubbo/rpc/RpcInvocation;Lorg/apache/dubbo/rpc/Invoker;Lorg/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter;)V
       7: aload_1
       8: iconst_1
       9: anewarray     #2                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_3
      15: aastore
      16: invokevirtual #3                  // Method org/apache/dubbo/rpc/RpcInvocation.setArguments:([Ljava/lang/Object;)V
      19: aload_0
      20: invokevirtual #4                  // Method invoke:()V
      23: return

  public void onReturn(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class org/apache/dubbo/common/stream/StreamObserver
       5: putfield      #6                  // Field requestObserver:Lorg/apache/dubbo/common/stream/StreamObserver;
       8: return

  public void onMessage(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #7                  // class "[Ljava/lang/Object;"
       4: ifeq          17
       7: aload_1
       8: checkcast     #7                  // class "[Ljava/lang/Object;"
      11: checkcast     #7                  // class "[Ljava/lang/Object;"
      14: iconst_0
      15: aaload
      16: astore_1
      17: aload_0
      18: getfield      #6                  // Field requestObserver:Lorg/apache/dubbo/common/stream/StreamObserver;
      21: aload_1
      22: invokeinterface #8,  2            // InterfaceMethod org/apache/dubbo/common/stream/StreamObserver.onNext:(Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #9                  // Field responseObserver:Lorg/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter;
      31: invokevirtual #10                 // Method org/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter.isAutoRequestN:()Z
      34: ifeq          45
      37: aload_0
      38: getfield      #9                  // Field responseObserver:Lorg/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter;
      41: iconst_1
      42: invokevirtual #11                 // Method org/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter.request:(I)V
      45: return

  public void onCancel(org.apache.dubbo.rpc.TriRpcStatus);
    Code:
       0: aload_0
       1: getfield      #9                  // Field responseObserver:Lorg/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter;
       4: aload_1
       5: invokevirtual #12                 // Method org/apache/dubbo/rpc/TriRpcStatus.asException:()Lorg/apache/dubbo/rpc/StatusRpcException;
       8: invokevirtual #13                 // Method org/apache/dubbo/rpc/protocol/tri/observer/ServerCallToObserverAdapter.onError:(Ljava/lang/Throwable;)V
      11: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field requestObserver:Lorg/apache/dubbo/common/stream/StreamObserver;
       4: invokeinterface #14,  1           // InterfaceMethod org/apache/dubbo/common/stream/StreamObserver.onCompleted:()V
       9: return
}
