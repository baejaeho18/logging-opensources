Compiled from "ReflectionPackableMethod.java"
class org.apache.dubbo.rpc.protocol.tri.ReflectionPackableMethod$WrapRequestUnpack implements org.apache.dubbo.rpc.model.WrapperUnPack {
  private final org.apache.dubbo.common.serialize.MultipleSerialization serialization;

  private final org.apache.dubbo.common.URL url;

  private final java.lang.Class<?>[] actualRequestTypes;

  private final java.util.Collection<java.lang.String> allSerialize;

  final org.apache.dubbo.rpc.protocol.tri.ReflectionPackableMethod this$0;

  private org.apache.dubbo.rpc.protocol.tri.ReflectionPackableMethod$WrapRequestUnpack(org.apache.dubbo.common.serialize.MultipleSerialization, org.apache.dubbo.common.URL, java.util.Collection<java.lang.String>, java.lang.Class<?>[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/ReflectionPackableMethod;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field serialization:Lorg/apache/dubbo/common/serialize/MultipleSerialization;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field url:Lorg/apache/dubbo/common/URL;
      19: aload_0
      20: aload         5
      22: putfield      #6                  // Field actualRequestTypes:[Ljava/lang/Class;
      25: aload_0
      26: aload         4
      28: putfield      #7                  // Field allSerialize:Ljava/util/Collection;
      31: return

  public java.lang.Object unpack(byte[], boolean) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokestatic  #8                  // Method org/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper.parseFrom:([B)Lorg/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper;
       4: astore_3
       5: aload_3
       6: invokevirtual #9                  // Method org/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper.getSerializeType:()Ljava/lang/String;
       9: invokestatic  #10                 // Method org/apache/dubbo/rpc/protocol/tri/ReflectionPackableMethod.access$400:(Ljava/lang/String;)Ljava/lang/String;
      12: astore        4
      14: aload         4
      16: aload_0
      17: getfield      #7                  // Field allSerialize:Ljava/util/Collection;
      20: invokestatic  #11                 // Method org/apache/dubbo/remoting/transport/CodecSupport.checkSerialization:(Ljava/lang/String;Ljava/util/Collection;)V
      23: aload_3
      24: invokevirtual #12                 // Method org/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper.getArgs:()Ljava/util/List;
      27: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
      32: anewarray     #14                 // class java/lang/Object
      35: astore        5
      37: aload_0
      38: getfield      #2                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/ReflectionPackableMethod;
      41: invokestatic  #15                 // Method org/apache/dubbo/rpc/protocol/tri/ReflectionPackableMethod.access$500:(Lorg/apache/dubbo/rpc/protocol/tri/ReflectionPackableMethod;)Lorg/apache/dubbo/rpc/model/Pack;
      44: checkcast     #16                 // class org/apache/dubbo/rpc/protocol/tri/ReflectionPackableMethod$WrapResponsePack
      47: aload_3
      48: invokevirtual #9                  // Method org/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper.getSerializeType:()Ljava/lang/String;
      51: putfield      #17                 // Field org/apache/dubbo/rpc/protocol/tri/ReflectionPackableMethod$WrapResponsePack.requestSerialize:Ljava/lang/String;
      54: iconst_0
      55: istore        6
      57: iload         6
      59: aload_3
      60: invokevirtual #12                 // Method org/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper.getArgs:()Ljava/util/List;
      63: invokeinterface #13,  1           // InterfaceMethod java/util/List.size:()I
      68: if_icmpge     131
      71: new           #18                 // class java/io/ByteArrayInputStream
      74: dup
      75: aload_3
      76: invokevirtual #12                 // Method org/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper.getArgs:()Ljava/util/List;
      79: iload         6
      81: invokeinterface #19,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      86: checkcast     #20                 // class "[B"
      89: invokespecial #21                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      92: astore        7
      94: aload         5
      96: iload         6
      98: aload_0
      99: getfield      #4                  // Field serialization:Lorg/apache/dubbo/common/serialize/MultipleSerialization;
     102: aload_0
     103: getfield      #5                  // Field url:Lorg/apache/dubbo/common/URL;
     106: aload_3
     107: invokevirtual #9                  // Method org/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapper$TripleRequestWrapper.getSerializeType:()Ljava/lang/String;
     110: aload_0
     111: getfield      #6                  // Field actualRequestTypes:[Ljava/lang/Class;
     114: iload         6
     116: aaload
     117: aload         7
     119: invokeinterface #22,  5           // InterfaceMethod org/apache/dubbo/common/serialize/MultipleSerialization.deserialize:(Lorg/apache/dubbo/common/URL;Ljava/lang/String;Ljava/lang/Class;Ljava/io/InputStream;)Ljava/lang/Object;
     124: aastore
     125: iinc          6, 1
     128: goto          57
     131: aload         5
     133: areturn

  org.apache.dubbo.rpc.protocol.tri.ReflectionPackableMethod$WrapRequestUnpack(org.apache.dubbo.rpc.protocol.tri.ReflectionPackableMethod, org.apache.dubbo.common.serialize.MultipleSerialization, org.apache.dubbo.common.URL, java.util.Collection, java.lang.Class[], org.apache.dubbo.rpc.protocol.tri.ReflectionPackableMethod$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #1                  // Method "<init>":(Lorg/apache/dubbo/rpc/protocol/tri/ReflectionPackableMethod;Lorg/apache/dubbo/common/serialize/MultipleSerialization;Lorg/apache/dubbo/common/URL;Ljava/util/Collection;[Ljava/lang/Class;)V
      11: return
}
