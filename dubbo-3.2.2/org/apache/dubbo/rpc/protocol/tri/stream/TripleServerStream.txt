Compiled from "TripleServerStream.java"
public class org.apache.dubbo.rpc.protocol.tri.stream.TripleServerStream extends org.apache.dubbo.rpc.protocol.tri.stream.AbstractStream implements org.apache.dubbo.rpc.protocol.tri.stream.ServerStream {
  private static final org.apache.dubbo.common.logger.Logger LOGGER;

  public final org.apache.dubbo.rpc.protocol.tri.stream.TripleServerStream$ServerTransportObserver transportObserver;

  private final org.apache.dubbo.rpc.protocol.tri.transport.TripleWriteQueue writeQueue;

  private final org.apache.dubbo.rpc.PathResolver pathResolver;

  private final java.util.List<org.apache.dubbo.rpc.HeaderFilter> filters;

  private final java.lang.String acceptEncoding;

  private boolean headerSent;

  private boolean trailersSent;

  private volatile boolean reset;

  private org.apache.dubbo.rpc.protocol.tri.stream.ServerStream$Listener listener;

  private final java.net.InetSocketAddress remoteAddress;

  private org.apache.dubbo.rpc.protocol.tri.frame.Deframer deframer;

  private boolean rst;

  private final io.netty.handler.codec.http2.Http2StreamChannel http2StreamChannel;

  private final org.apache.dubbo.rpc.protocol.tri.stream.TripleStreamChannelFuture tripleStreamChannelFuture;

  public org.apache.dubbo.rpc.protocol.tri.stream.TripleServerStream(io.netty.handler.codec.http2.Http2StreamChannel, org.apache.dubbo.rpc.model.FrameworkModel, java.util.concurrent.Executor, org.apache.dubbo.rpc.PathResolver, java.lang.String, java.util.List<org.apache.dubbo.rpc.HeaderFilter>, org.apache.dubbo.rpc.protocol.tri.transport.TripleWriteQueue);
    Code:
       0: aload_0
       1: aload_3
       2: aload_2
       3: invokespecial #11                 // Method org/apache/dubbo/rpc/protocol/tri/stream/AbstractStream."<init>":(Ljava/util/concurrent/Executor;Lorg/apache/dubbo/rpc/model/FrameworkModel;)V
       6: aload_0
       7: new           #12                 // class org/apache/dubbo/rpc/protocol/tri/stream/TripleServerStream$ServerTransportObserver
      10: dup
      11: aload_0
      12: invokespecial #13                 // Method org/apache/dubbo/rpc/protocol/tri/stream/TripleServerStream$ServerTransportObserver."<init>":(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleServerStream;)V
      15: putfield      #14                 // Field transportObserver:Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleServerStream$ServerTransportObserver;
      18: aload_0
      19: iconst_0
      20: putfield      #15                 // Field rst:Z
      23: aload_0
      24: aload         4
      26: putfield      #7                  // Field pathResolver:Lorg/apache/dubbo/rpc/PathResolver;
      29: aload_0
      30: aload         5
      32: putfield      #5                  // Field acceptEncoding:Ljava/lang/String;
      35: aload_0
      36: aload         6
      38: putfield      #4                  // Field filters:Ljava/util/List;
      41: aload_0
      42: aload         7
      44: putfield      #16                 // Field writeQueue:Lorg/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue;
      47: aload_0
      48: aload_1
      49: invokeinterface #17,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.remoteAddress:()Ljava/net/SocketAddress;
      54: checkcast     #18                 // class java/net/InetSocketAddress
      57: putfield      #19                 // Field remoteAddress:Ljava/net/InetSocketAddress;
      60: aload_0
      61: aload_1
      62: putfield      #20                 // Field http2StreamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      65: aload_0
      66: new           #21                 // class org/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture
      69: dup
      70: aload_1
      71: invokespecial #22                 // Method org/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture."<init>":(Lio/netty/handler/codec/http2/Http2StreamChannel;)V
      74: putfield      #23                 // Field tripleStreamChannelFuture:Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
      77: return

  public java.net.SocketAddress remoteAddress();
    Code:
       0: aload_0
       1: getfield      #19                 // Field remoteAddress:Ljava/net/InetSocketAddress;
       4: areturn

  public void request(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field deframer:Lorg/apache/dubbo/rpc/protocol/tri/frame/Deframer;
       4: iload_1
       5: invokeinterface #24,  2           // InterfaceMethod org/apache/dubbo/rpc/protocol/tri/frame/Deframer.request:(I)V
      10: return

  public io.netty.channel.ChannelFuture reset(io.netty.handler.codec.http2.Http2Error);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method preCheck:()Lio/netty/channel/ChannelFuture;
       4: astore_2
       5: aload_2
       6: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
      11: ifne          16
      14: aload_2
      15: areturn
      16: aload_0
      17: iconst_1
      18: putfield      #15                 // Field rst:Z
      21: aload_0
      22: getfield      #16                 // Field writeQueue:Lorg/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue;
      25: aload_0
      26: getfield      #23                 // Field tripleStreamChannelFuture:Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
      29: aload_1
      30: invokestatic  #27                 // Method org/apache/dubbo/rpc/protocol/tri/command/CancelQueueCommand.createCommand:(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;Lio/netty/handler/codec/http2/Http2Error;)Lorg/apache/dubbo/rpc/protocol/tri/command/CancelQueueCommand;
      33: invokevirtual #28                 // Method org/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue.enqueue:(Lorg/apache/dubbo/rpc/protocol/tri/command/QueuedCommand;)Lio/netty/channel/ChannelFuture;
      36: areturn

  public io.netty.channel.ChannelFuture sendHeader(io.netty.handler.codec.http2.Http2Headers);
    Code:
       0: aload_0
       1: getfield      #2                  // Field reset:Z
       4: ifeq          26
       7: aload_0
       8: getfield      #20                 // Field http2StreamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      11: new           #29                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #30                 // String Stream already reset, no more headers allowed
      17: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: invokeinterface #32,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.newFailedFuture:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelFuture;
      25: areturn
      26: aload_0
      27: getfield      #33                 // Field headerSent:Z
      30: ifeq          52
      33: aload_0
      34: getfield      #20                 // Field http2StreamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      37: new           #29                 // class java/lang/IllegalStateException
      40: dup
      41: ldc           #34                 // String Header already sent
      43: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: invokeinterface #32,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.newFailedFuture:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelFuture;
      51: areturn
      52: aload_0
      53: getfield      #1                  // Field trailersSent:Z
      56: ifeq          78
      59: aload_0
      60: getfield      #20                 // Field http2StreamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      63: new           #29                 // class java/lang/IllegalStateException
      66: dup
      67: ldc           #35                 // String Trailers already sent
      69: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      72: invokeinterface #32,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.newFailedFuture:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelFuture;
      77: areturn
      78: aload_0
      79: invokespecial #25                 // Method preCheck:()Lio/netty/channel/ChannelFuture;
      82: astore_2
      83: aload_2
      84: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
      89: ifne          94
      92: aload_2
      93: areturn
      94: aload_0
      95: iconst_1
      96: putfield      #33                 // Field headerSent:Z
      99: aload_0
     100: getfield      #16                 // Field writeQueue:Lorg/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue;
     103: aload_0
     104: getfield      #23                 // Field tripleStreamChannelFuture:Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
     107: aload_1
     108: iconst_0
     109: invokestatic  #36                 // Method org/apache/dubbo/rpc/protocol/tri/command/HeaderQueueCommand.createHeaders:(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;Lio/netty/handler/codec/http2/Http2Headers;Z)Lorg/apache/dubbo/rpc/protocol/tri/command/HeaderQueueCommand;
     112: invokevirtual #28                 // Method org/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue.enqueue:(Lorg/apache/dubbo/rpc/protocol/tri/command/QueuedCommand;)Lio/netty/channel/ChannelFuture;
     115: aload_0
     116: invokedynamic #37,  0             // InvokeDynamic #0:operationComplete:(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleServerStream;)Lio/netty/util/concurrent/GenericFutureListener;
     121: invokeinterface #38,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     126: areturn

  public io.netty.util.concurrent.Future<?> cancelByLocal(org.apache.dubbo.rpc.TriRpcStatus);
    Code:
       0: getstatic     #39                 // Field LOGGER:Lorg/apache/dubbo/common/logger/Logger;
       3: invokeinterface #40,  1           // InterfaceMethod org/apache/dubbo/common/logger/Logger.isDebugEnabled:()Z
       8: ifeq          39
      11: getstatic     #39                 // Field LOGGER:Lorg/apache/dubbo/common/logger/Logger;
      14: ldc           #41                 // String Cancel stream:%s by local: %s
      16: iconst_2
      17: anewarray     #42                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #20                 // Field http2StreamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      26: aastore
      27: dup
      28: iconst_1
      29: aload_1
      30: aastore
      31: invokestatic  #43                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: invokeinterface #44,  2           // InterfaceMethod org/apache/dubbo/common/logger/Logger.debug:(Ljava/lang/String;)V
      39: aload_0
      40: getstatic     #45                 // Field io/netty/handler/codec/http2/Http2Error.CANCEL:Lio/netty/handler/codec/http2/Http2Error;
      43: invokevirtual #46                 // Method reset:(Lio/netty/handler/codec/http2/Http2Error;)Lio/netty/channel/ChannelFuture;
      46: areturn

  public io.netty.channel.ChannelFuture complete(org.apache.dubbo.rpc.TriRpcStatus, java.util.Map<java.lang.String, java.lang.Object>, boolean, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: getstatic     #47                 // Field org/apache/dubbo/common/constants/CommonConstants.TRI_EXCEPTION_CODE_NOT_EXISTS:Ljava/lang/Integer;
       7: invokevirtual #48                 // Method java/lang/Integer.intValue:()I
      10: invokespecial #49                 // Method getTrailers:(Lorg/apache/dubbo/rpc/TriRpcStatus;Ljava/util/Map;ZI)Lio/netty/handler/codec/http2/Http2Headers;
      13: astore        5
      15: aload_0
      16: aload         5
      18: invokespecial #50                 // Method sendTrailers:(Lio/netty/handler/codec/http2/Http2Headers;)Lio/netty/channel/ChannelFuture;
      21: areturn

  private io.netty.channel.ChannelFuture sendTrailers(io.netty.handler.codec.http2.Http2Headers);
    Code:
       0: aload_0
       1: getfield      #2                  // Field reset:Z
       4: ifeq          26
       7: aload_0
       8: getfield      #20                 // Field http2StreamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      11: new           #29                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #51                 // String Stream already reset, no more trailers allowed
      17: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: invokeinterface #32,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.newFailedFuture:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelFuture;
      25: areturn
      26: aload_0
      27: getfield      #1                  // Field trailersSent:Z
      30: ifeq          52
      33: aload_0
      34: getfield      #20                 // Field http2StreamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      37: new           #29                 // class java/lang/IllegalStateException
      40: dup
      41: ldc           #35                 // String Trailers already sent
      43: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: invokeinterface #32,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.newFailedFuture:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelFuture;
      51: areturn
      52: aload_0
      53: invokespecial #25                 // Method preCheck:()Lio/netty/channel/ChannelFuture;
      56: astore_2
      57: aload_2
      58: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
      63: ifne          68
      66: aload_2
      67: areturn
      68: aload_0
      69: iconst_1
      70: putfield      #33                 // Field headerSent:Z
      73: aload_0
      74: iconst_1
      75: putfield      #1                  // Field trailersSent:Z
      78: aload_0
      79: getfield      #16                 // Field writeQueue:Lorg/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue;
      82: aload_0
      83: getfield      #23                 // Field tripleStreamChannelFuture:Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
      86: aload_1
      87: iconst_1
      88: invokestatic  #36                 // Method org/apache/dubbo/rpc/protocol/tri/command/HeaderQueueCommand.createHeaders:(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;Lio/netty/handler/codec/http2/Http2Headers;Z)Lorg/apache/dubbo/rpc/protocol/tri/command/HeaderQueueCommand;
      91: invokevirtual #28                 // Method org/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue.enqueue:(Lorg/apache/dubbo/rpc/protocol/tri/command/QueuedCommand;)Lio/netty/channel/ChannelFuture;
      94: aload_0
      95: invokedynamic #52,  0             // InvokeDynamic #1:operationComplete:(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleServerStream;)Lio/netty/util/concurrent/GenericFutureListener;
     100: invokeinterface #38,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     105: areturn

  private io.netty.handler.codec.http2.Http2Headers getTrailers(org.apache.dubbo.rpc.TriRpcStatus, java.util.Map<java.lang.String, java.lang.Object>, boolean, int);
    Code:
       0: new           #53                 // class io/netty/handler/codec/http2/DefaultHttp2Headers
       3: dup
       4: invokespecial #54                 // Method io/netty/handler/codec/http2/DefaultHttp2Headers."<init>":()V
       7: astore        5
       9: aload_0
      10: getfield      #33                 // Field headerSent:Z
      13: ifne          39
      16: aload         5
      18: getstatic     #55                 // Field io/netty/handler/codec/http/HttpResponseStatus.OK:Lio/netty/handler/codec/http/HttpResponseStatus;
      21: invokevirtual #56                 // Method io/netty/handler/codec/http/HttpResponseStatus.codeAsText:()Lio/netty/util/AsciiString;
      24: invokevirtual #57                 // Method io/netty/handler/codec/http2/DefaultHttp2Headers.status:(Ljava/lang/CharSequence;)Lio/netty/handler/codec/http2/Http2Headers;
      27: pop
      28: aload         5
      30: getstatic     #58                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_TYPE:Lio/netty/util/AsciiString;
      33: ldc           #60                 // String application/grpc+proto
      35: invokevirtual #61                 // Method io/netty/handler/codec/http2/DefaultHttp2Headers.set:(Ljava/lang/Object;Ljava/lang/Object;)Lio/netty/handler/codec/Headers;
      38: pop
      39: aload         5
      41: aload_2
      42: getstatic     #62                 // Field org/apache/dubbo/rpc/protocol/tri/TripleProtocol.CONVERT_NO_LOWER_HEADER:Z
      45: invokestatic  #63                 // Method org/apache/dubbo/rpc/protocol/tri/stream/StreamUtils.convertAttachment:(Lio/netty/handler/codec/http2/DefaultHttp2Headers;Ljava/util/Map;Z)V
      48: aload         5
      50: getstatic     #64                 // Field org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.STATUS_KEY:Lorg/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum;
      53: invokevirtual #65                 // Method org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.getHeader:()Ljava/lang/String;
      56: aload_1
      57: getfield      #66                 // Field org/apache/dubbo/rpc/TriRpcStatus.code:Lorg/apache/dubbo/rpc/TriRpcStatus$Code;
      60: getfield      #67                 // Field org/apache/dubbo/rpc/TriRpcStatus$Code.code:I
      63: invokestatic  #68                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      66: invokevirtual #61                 // Method io/netty/handler/codec/http2/DefaultHttp2Headers.set:(Ljava/lang/Object;Ljava/lang/Object;)Lio/netty/handler/codec/Headers;
      69: pop
      70: aload_1
      71: invokevirtual #69                 // Method org/apache/dubbo/rpc/TriRpcStatus.isOk:()Z
      74: ifeq          80
      77: aload         5
      79: areturn
      80: aload_0
      81: aload_1
      82: invokespecial #70                 // Method getGrpcMessage:(Lorg/apache/dubbo/rpc/TriRpcStatus;)Ljava/lang/String;
      85: astore        6
      87: aload         6
      89: invokestatic  #71                 // Method org/apache/dubbo/rpc/TriRpcStatus.limitSizeTo1KB:(Ljava/lang/String;)Ljava/lang/String;
      92: invokestatic  #72                 // Method org/apache/dubbo/rpc/TriRpcStatus.encodeMessage:(Ljava/lang/String;)Ljava/lang/String;
      95: astore        6
      97: aload         5
      99: getstatic     #73                 // Field org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.MESSAGE_KEY:Lorg/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum;
     102: invokevirtual #65                 // Method org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.getHeader:()Ljava/lang/String;
     105: aload         6
     107: invokevirtual #61                 // Method io/netty/handler/codec/http2/DefaultHttp2Headers.set:(Ljava/lang/Object;Ljava/lang/Object;)Lio/netty/handler/codec/Headers;
     110: pop
     111: invokestatic  #74                 // Method getGrpcStatusDetailEnabled:()Z
     114: ifne          120
     117: aload         5
     119: areturn
     120: invokestatic  #75                 // Method com/google/rpc/Status.newBuilder:()Lcom/google/rpc/Status$Builder;
     123: aload_1
     124: getfield      #66                 // Field org/apache/dubbo/rpc/TriRpcStatus.code:Lorg/apache/dubbo/rpc/TriRpcStatus$Code;
     127: getfield      #67                 // Field org/apache/dubbo/rpc/TriRpcStatus$Code.code:I
     130: invokevirtual #76                 // Method com/google/rpc/Status$Builder.setCode:(I)Lcom/google/rpc/Status$Builder;
     133: aload         6
     135: invokevirtual #77                 // Method com/google/rpc/Status$Builder.setMessage:(Ljava/lang/String;)Lcom/google/rpc/Status$Builder;
     138: astore        7
     140: aload_1
     141: getfield      #78                 // Field org/apache/dubbo/rpc/TriRpcStatus.cause:Ljava/lang/Throwable;
     144: astore        8
     146: aload         8
     148: ifnonnull     181
     151: aload         7
     153: invokevirtual #79                 // Method com/google/rpc/Status$Builder.build:()Lcom/google/rpc/Status;
     156: astore        9
     158: aload         5
     160: getstatic     #80                 // Field org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.STATUS_DETAIL_KEY:Lorg/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum;
     163: invokevirtual #65                 // Method org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.getHeader:()Ljava/lang/String;
     166: aload         9
     168: invokevirtual #81                 // Method com/google/rpc/Status.toByteArray:()[B
     171: invokestatic  #82                 // Method org/apache/dubbo/rpc/protocol/tri/stream/StreamUtils.encodeBase64ASCII:([B)Ljava/lang/String;
     174: invokevirtual #61                 // Method io/netty/handler/codec/http2/DefaultHttp2Headers.set:(Ljava/lang/Object;Ljava/lang/Object;)Lio/netty/handler/codec/Headers;
     177: pop
     178: aload         5
     180: areturn
     181: invokestatic  #83                 // Method com/google/rpc/DebugInfo.newBuilder:()Lcom/google/rpc/DebugInfo$Builder;
     184: aload         8
     186: bipush        6
     188: invokestatic  #84                 // Method org/apache/dubbo/rpc/protocol/tri/ExceptionUtils.getStackFrameList:(Ljava/lang/Throwable;I)Ljava/util/List;
     191: invokevirtual #85                 // Method com/google/rpc/DebugInfo$Builder.addAllStackEntries:(Ljava/lang/Iterable;)Lcom/google/rpc/DebugInfo$Builder;
     194: invokevirtual #86                 // Method com/google/rpc/DebugInfo$Builder.build:()Lcom/google/rpc/DebugInfo;
     197: astore        9
     199: aload         7
     201: aload         9
     203: invokestatic  #87                 // Method com/google/protobuf/Any.pack:(Lcom/google/protobuf/Message;)Lcom/google/protobuf/Any;
     206: invokevirtual #88                 // Method com/google/rpc/Status$Builder.addDetails:(Lcom/google/protobuf/Any;)Lcom/google/rpc/Status$Builder;
     209: pop
     210: aload         7
     212: invokevirtual #79                 // Method com/google/rpc/Status$Builder.build:()Lcom/google/rpc/Status;
     215: astore        10
     217: aload         5
     219: getstatic     #80                 // Field org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.STATUS_DETAIL_KEY:Lorg/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum;
     222: invokevirtual #65                 // Method org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.getHeader:()Ljava/lang/String;
     225: aload         10
     227: invokevirtual #81                 // Method com/google/rpc/Status.toByteArray:()[B
     230: invokestatic  #82                 // Method org/apache/dubbo/rpc/protocol/tri/stream/StreamUtils.encodeBase64ASCII:([B)Ljava/lang/String;
     233: invokevirtual #61                 // Method io/netty/handler/codec/http2/DefaultHttp2Headers.set:(Ljava/lang/Object;Ljava/lang/Object;)Lio/netty/handler/codec/Headers;
     236: pop
     237: aload         5
     239: areturn

  private java.lang.String getGrpcMessage(org.apache.dubbo.rpc.TriRpcStatus);
    Code:
       0: aload_1
       1: getfield      #89                 // Field org/apache/dubbo/rpc/TriRpcStatus.description:Ljava/lang/String;
       4: invokestatic  #90                 // Method org/apache/dubbo/common/utils/StringUtils.isNotEmpty:(Ljava/lang/String;)Z
       7: ifeq          15
      10: aload_1
      11: getfield      #89                 // Field org/apache/dubbo/rpc/TriRpcStatus.description:Ljava/lang/String;
      14: areturn
      15: aload_1
      16: getfield      #78                 // Field org/apache/dubbo/rpc/TriRpcStatus.cause:Ljava/lang/Throwable;
      19: invokestatic  #91                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      22: invokedynamic #92,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      27: invokevirtual #93                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      30: ldc           #94                 // String unknown
      32: invokevirtual #95                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #96                 // class java/lang/String
      38: areturn

  public io.netty.channel.ChannelFuture sendMessage(byte[], int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field reset:Z
       4: ifeq          26
       7: aload_0
       8: getfield      #20                 // Field http2StreamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      11: new           #29                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #97                 // String Stream already reset, no more body allowed
      17: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: invokeinterface #32,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.newFailedFuture:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelFuture;
      25: areturn
      26: aload_0
      27: getfield      #33                 // Field headerSent:Z
      30: ifne          52
      33: aload_0
      34: getfield      #20                 // Field http2StreamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      37: new           #29                 // class java/lang/IllegalStateException
      40: dup
      41: ldc           #98                 // String Headers did not sent before send body
      43: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: invokeinterface #32,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.newFailedFuture:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelFuture;
      51: areturn
      52: aload_0
      53: getfield      #1                  // Field trailersSent:Z
      56: ifeq          78
      59: aload_0
      60: getfield      #20                 // Field http2StreamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      63: new           #29                 // class java/lang/IllegalStateException
      66: dup
      67: ldc           #99                 // String Trailers already sent, no more body allowed
      69: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      72: invokeinterface #32,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.newFailedFuture:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelFuture;
      77: areturn
      78: aload_0
      79: invokespecial #25                 // Method preCheck:()Lio/netty/channel/ChannelFuture;
      82: astore_3
      83: aload_3
      84: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
      89: ifne          94
      92: aload_3
      93: areturn
      94: aload_0
      95: getfield      #16                 // Field writeQueue:Lorg/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue;
      98: aload_0
      99: getfield      #23                 // Field tripleStreamChannelFuture:Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
     102: aload_1
     103: iconst_0
     104: iload_2
     105: invokestatic  #100                // Method org/apache/dubbo/rpc/protocol/tri/command/DataQueueCommand.create:(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;[BZI)Lorg/apache/dubbo/rpc/protocol/tri/command/DataQueueCommand;
     108: invokevirtual #28                 // Method org/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue.enqueue:(Lorg/apache/dubbo/rpc/protocol/tri/command/QueuedCommand;)Lio/netty/channel/ChannelFuture;
     111: areturn

  private void responsePlainTextError(int, org.apache.dubbo.rpc.TriRpcStatus);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method preCheck:()Lio/netty/channel/ChannelFuture;
       4: astore_3
       5: aload_3
       6: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
      11: ifne          15
      14: return
      15: new           #53                 // class io/netty/handler/codec/http2/DefaultHttp2Headers
      18: dup
      19: iconst_1
      20: invokespecial #101                // Method io/netty/handler/codec/http2/DefaultHttp2Headers."<init>":(Z)V
      23: iload_1
      24: invokestatic  #68                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      27: invokevirtual #57                 // Method io/netty/handler/codec/http2/DefaultHttp2Headers.status:(Ljava/lang/CharSequence;)Lio/netty/handler/codec/http2/Http2Headers;
      30: getstatic     #64                 // Field org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.STATUS_KEY:Lorg/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum;
      33: invokevirtual #65                 // Method org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.getHeader:()Ljava/lang/String;
      36: aload_2
      37: getfield      #66                 // Field org/apache/dubbo/rpc/TriRpcStatus.code:Lorg/apache/dubbo/rpc/TriRpcStatus$Code;
      40: getfield      #67                 // Field org/apache/dubbo/rpc/TriRpcStatus$Code.code:I
      43: invokeinterface #102,  3          // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.setInt:(Ljava/lang/Object;I)Lio/netty/handler/codec/Headers;
      48: checkcast     #103                // class io/netty/handler/codec/http2/Http2Headers
      51: getstatic     #73                 // Field org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.MESSAGE_KEY:Lorg/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum;
      54: invokevirtual #65                 // Method org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.getHeader:()Ljava/lang/String;
      57: aload_2
      58: getfield      #89                 // Field org/apache/dubbo/rpc/TriRpcStatus.description:Ljava/lang/String;
      61: invokeinterface #104,  3          // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.set:(Ljava/lang/Object;Ljava/lang/Object;)Lio/netty/handler/codec/Headers;
      66: checkcast     #103                // class io/netty/handler/codec/http2/Http2Headers
      69: getstatic     #105                // Field org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.CONTENT_TYPE_KEY:Lorg/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum;
      72: invokevirtual #65                 // Method org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.getHeader:()Ljava/lang/String;
      75: ldc           #106                // String text/plain; encoding=utf-8
      77: invokeinterface #104,  3          // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.set:(Ljava/lang/Object;Ljava/lang/Object;)Lio/netty/handler/codec/Headers;
      82: checkcast     #103                // class io/netty/handler/codec/http2/Http2Headers
      85: astore        4
      87: aload_0
      88: getfield      #16                 // Field writeQueue:Lorg/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue;
      91: aload_0
      92: getfield      #23                 // Field tripleStreamChannelFuture:Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
      95: aload         4
      97: iconst_0
      98: invokestatic  #36                 // Method org/apache/dubbo/rpc/protocol/tri/command/HeaderQueueCommand.createHeaders:(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;Lio/netty/handler/codec/http2/Http2Headers;Z)Lorg/apache/dubbo/rpc/protocol/tri/command/HeaderQueueCommand;
     101: invokevirtual #28                 // Method org/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue.enqueue:(Lorg/apache/dubbo/rpc/protocol/tri/command/QueuedCommand;)Lio/netty/channel/ChannelFuture;
     104: pop
     105: aload_0
     106: getfield      #16                 // Field writeQueue:Lorg/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue;
     109: aload_0
     110: getfield      #23                 // Field tripleStreamChannelFuture:Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
     113: aload_2
     114: getfield      #89                 // Field org/apache/dubbo/rpc/TriRpcStatus.description:Ljava/lang/String;
     117: iconst_1
     118: invokestatic  #107                // Method org/apache/dubbo/rpc/protocol/tri/command/TextDataQueueCommand.createCommand:(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;Ljava/lang/String;Z)Lorg/apache/dubbo/rpc/protocol/tri/command/TextDataQueueCommand;
     121: invokevirtual #28                 // Method org/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue.enqueue:(Lorg/apache/dubbo/rpc/protocol/tri/command/QueuedCommand;)Lio/netty/channel/ChannelFuture;
     124: pop
     125: return

  private void responseErr(org.apache.dubbo.rpc.TriRpcStatus);
    Code:
       0: new           #53                 // class io/netty/handler/codec/http2/DefaultHttp2Headers
       3: dup
       4: invokespecial #54                 // Method io/netty/handler/codec/http2/DefaultHttp2Headers."<init>":()V
       7: getstatic     #55                 // Field io/netty/handler/codec/http/HttpResponseStatus.OK:Lio/netty/handler/codec/http/HttpResponseStatus;
      10: invokevirtual #56                 // Method io/netty/handler/codec/http/HttpResponseStatus.codeAsText:()Lio/netty/util/AsciiString;
      13: invokevirtual #57                 // Method io/netty/handler/codec/http2/DefaultHttp2Headers.status:(Ljava/lang/CharSequence;)Lio/netty/handler/codec/http2/Http2Headers;
      16: getstatic     #58                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_TYPE:Lio/netty/util/AsciiString;
      19: ldc           #60                 // String application/grpc+proto
      21: invokeinterface #104,  3          // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.set:(Ljava/lang/Object;Ljava/lang/Object;)Lio/netty/handler/codec/Headers;
      26: checkcast     #103                // class io/netty/handler/codec/http2/Http2Headers
      29: getstatic     #64                 // Field org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.STATUS_KEY:Lorg/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum;
      32: invokevirtual #65                 // Method org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.getHeader:()Ljava/lang/String;
      35: aload_1
      36: getfield      #66                 // Field org/apache/dubbo/rpc/TriRpcStatus.code:Lorg/apache/dubbo/rpc/TriRpcStatus$Code;
      39: getfield      #67                 // Field org/apache/dubbo/rpc/TriRpcStatus$Code.code:I
      42: invokeinterface #102,  3          // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.setInt:(Ljava/lang/Object;I)Lio/netty/handler/codec/Headers;
      47: checkcast     #103                // class io/netty/handler/codec/http2/Http2Headers
      50: getstatic     #73                 // Field org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.MESSAGE_KEY:Lorg/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum;
      53: invokevirtual #65                 // Method org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.getHeader:()Ljava/lang/String;
      56: aload_1
      57: invokevirtual #108                // Method org/apache/dubbo/rpc/TriRpcStatus.toEncodedMessage:()Ljava/lang/String;
      60: invokeinterface #104,  3          // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.set:(Ljava/lang/Object;Ljava/lang/Object;)Lio/netty/handler/codec/Headers;
      65: checkcast     #103                // class io/netty/handler/codec/http2/Http2Headers
      68: astore_2
      69: aload_0
      70: aload_2
      71: invokespecial #50                 // Method sendTrailers:(Lio/netty/handler/codec/http2/Http2Headers;)Lio/netty/channel/ChannelFuture;
      74: pop
      75: return

  private org.apache.dubbo.rpc.Invoker<?> getInvoker(io.netty.handler.codec.http2.Http2Headers, java.lang.String);
    Code:
       0: aload_1
       1: getstatic     #109                // Field org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.SERVICE_VERSION:Lorg/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum;
       4: invokevirtual #65                 // Method org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.getHeader:()Ljava/lang/String;
       7: invokeinterface #110,  2          // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.contains:(Ljava/lang/Object;)Z
      12: ifeq          38
      15: aload_1
      16: getstatic     #109                // Field org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.SERVICE_VERSION:Lorg/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum;
      19: invokevirtual #65                 // Method org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.getHeader:()Ljava/lang/String;
      22: invokeinterface #111,  2          // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.get:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #112                // class java/lang/CharSequence
      30: invokeinterface #113,  1          // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      35: goto          39
      38: aconst_null
      39: astore_3
      40: aload_1
      41: getstatic     #114                // Field org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.SERVICE_GROUP:Lorg/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum;
      44: invokevirtual #65                 // Method org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.getHeader:()Ljava/lang/String;
      47: invokeinterface #110,  2          // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.contains:(Ljava/lang/Object;)Z
      52: ifeq          78
      55: aload_1
      56: getstatic     #114                // Field org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.SERVICE_GROUP:Lorg/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum;
      59: invokevirtual #65                 // Method org/apache/dubbo/rpc/protocol/tri/TripleHeaderEnum.getHeader:()Ljava/lang/String;
      62: invokeinterface #111,  2          // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.get:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #112                // class java/lang/CharSequence
      70: invokeinterface #113,  1          // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      75: goto          79
      78: aconst_null
      79: astore        4
      81: aload_2
      82: aload         4
      84: aload_3
      85: invokestatic  #115                // Method org/apache/dubbo/common/URL.buildKey:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      88: astore        5
      90: aload_0
      91: getfield      #7                  // Field pathResolver:Lorg/apache/dubbo/rpc/PathResolver;
      94: aload         5
      96: invokeinterface #116,  2          // InterfaceMethod org/apache/dubbo/rpc/PathResolver.resolve:(Ljava/lang/String;)Lorg/apache/dubbo/rpc/Invoker;
     101: astore        6
     103: aload         6
     105: ifnonnull     133
     108: getstatic     #117                // Field org/apache/dubbo/rpc/protocol/tri/TripleProtocol.RESOLVE_FALLBACK_TO_DEFAULT:Z
     111: ifeq          133
     114: aload_0
     115: getfield      #7                  // Field pathResolver:Lorg/apache/dubbo/rpc/PathResolver;
     118: aload_2
     119: aload         4
     121: ldc           #118                // String 1.0.0
     123: invokestatic  #115                // Method org/apache/dubbo/common/URL.buildKey:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     126: invokeinterface #116,  2          // InterfaceMethod org/apache/dubbo/rpc/PathResolver.resolve:(Ljava/lang/String;)Lorg/apache/dubbo/rpc/Invoker;
     131: astore        6
     133: aload         6
     135: ifnonnull     156
     138: getstatic     #117                // Field org/apache/dubbo/rpc/protocol/tri/TripleProtocol.RESOLVE_FALLBACK_TO_DEFAULT:Z
     141: ifeq          156
     144: aload_0
     145: getfield      #7                  // Field pathResolver:Lorg/apache/dubbo/rpc/PathResolver;
     148: aload_2
     149: invokeinterface #116,  2          // InterfaceMethod org/apache/dubbo/rpc/PathResolver.resolve:(Ljava/lang/String;)Lorg/apache/dubbo/rpc/Invoker;
     154: astore        6
     156: aload         6
     158: areturn

  private io.netty.channel.ChannelFuture preCheck();
    Code:
       0: aload_0
       1: getfield      #20                 // Field http2StreamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
       4: invokeinterface #119,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.isActive:()Z
       9: ifne          31
      12: aload_0
      13: getfield      #20                 // Field http2StreamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      16: new           #120                // class java/io/IOException
      19: dup
      20: ldc           #121                // String stream channel is closed
      22: invokespecial #122                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      25: invokeinterface #32,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.newFailedFuture:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelFuture;
      30: areturn
      31: aload_0
      32: getfield      #15                 // Field rst:Z
      35: ifeq          57
      38: aload_0
      39: getfield      #20                 // Field http2StreamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      42: new           #120                // class java/io/IOException
      45: dup
      46: ldc           #123                // String stream channel has reset
      48: invokespecial #122                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      51: invokeinterface #32,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.newFailedFuture:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelFuture;
      56: areturn
      57: aload_0
      58: getfield      #20                 // Field http2StreamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      61: invokeinterface #124,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.newSucceededFuture:()Lio/netty/channel/ChannelFuture;
      66: areturn

  public io.netty.util.concurrent.Future sendHeader(io.netty.handler.codec.http2.Http2Headers);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #125                // Method sendHeader:(Lio/netty/handler/codec/http2/Http2Headers;)Lio/netty/channel/ChannelFuture;
       5: areturn

  public io.netty.util.concurrent.Future sendMessage(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #126                // Method sendMessage:([BI)Lio/netty/channel/ChannelFuture;
       6: areturn

  public io.netty.util.concurrent.Future complete(org.apache.dubbo.rpc.TriRpcStatus, java.util.Map, boolean, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: invokevirtual #127                // Method complete:(Lorg/apache/dubbo/rpc/TriRpcStatus;Ljava/util/Map;ZI)Lio/netty/channel/ChannelFuture;
       9: areturn

  private void lambda$sendTrailers$1(io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #128,  1          // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       6: ifne          17
       9: aload_0
      10: getstatic     #129                // Field io/netty/handler/codec/http2/Http2Error.INTERNAL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      13: invokevirtual #46                 // Method reset:(Lio/netty/handler/codec/http2/Http2Error;)Lio/netty/channel/ChannelFuture;
      16: pop
      17: return

  private void lambda$sendHeader$0(io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #128,  1          // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       6: ifne          17
       9: aload_0
      10: getstatic     #129                // Field io/netty/handler/codec/http2/Http2Error.INTERNAL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      13: invokevirtual #46                 // Method reset:(Lio/netty/handler/codec/http2/Http2Error;)Lio/netty/channel/ChannelFuture;
      16: pop
      17: return

  static void access$000(org.apache.dubbo.rpc.protocol.tri.stream.TripleServerStream, int, org.apache.dubbo.rpc.TriRpcStatus);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #10                 // Method responsePlainTextError:(ILorg/apache/dubbo/rpc/TriRpcStatus;)V
       6: return

  static void access$100(org.apache.dubbo.rpc.protocol.tri.stream.TripleServerStream, org.apache.dubbo.rpc.TriRpcStatus);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method responseErr:(Lorg/apache/dubbo/rpc/TriRpcStatus;)V
       5: return

  static org.apache.dubbo.rpc.Invoker access$200(org.apache.dubbo.rpc.protocol.tri.stream.TripleServerStream, io.netty.handler.codec.http2.Http2Headers, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #8                  // Method getInvoker:(Lio/netty/handler/codec/http2/Http2Headers;Ljava/lang/String;)Lorg/apache/dubbo/rpc/Invoker;
       6: areturn

  static org.apache.dubbo.rpc.PathResolver access$300(org.apache.dubbo.rpc.protocol.tri.stream.TripleServerStream);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pathResolver:Lorg/apache/dubbo/rpc/PathResolver;
       4: areturn

  static org.apache.dubbo.rpc.protocol.tri.stream.ServerStream$Listener access$402(org.apache.dubbo.rpc.protocol.tri.stream.TripleServerStream, org.apache.dubbo.rpc.protocol.tri.stream.ServerStream$Listener);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #6                  // Field listener:Lorg/apache/dubbo/rpc/protocol/tri/stream/ServerStream$Listener;
       6: areturn

  static java.lang.String access$500(org.apache.dubbo.rpc.protocol.tri.stream.TripleServerStream);
    Code:
       0: aload_0
       1: getfield      #5                  // Field acceptEncoding:Ljava/lang/String;
       4: areturn

  static java.util.List access$600(org.apache.dubbo.rpc.protocol.tri.stream.TripleServerStream);
    Code:
       0: aload_0
       1: getfield      #4                  // Field filters:Ljava/util/List;
       4: areturn

  static org.apache.dubbo.rpc.protocol.tri.frame.Deframer access$702(org.apache.dubbo.rpc.protocol.tri.stream.TripleServerStream, org.apache.dubbo.rpc.protocol.tri.frame.Deframer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field deframer:Lorg/apache/dubbo/rpc/protocol/tri/frame/Deframer;
       6: areturn

  static org.apache.dubbo.rpc.protocol.tri.stream.ServerStream$Listener access$400(org.apache.dubbo.rpc.protocol.tri.stream.TripleServerStream);
    Code:
       0: aload_0
       1: getfield      #6                  // Field listener:Lorg/apache/dubbo/rpc/protocol/tri/stream/ServerStream$Listener;
       4: areturn

  static org.apache.dubbo.rpc.protocol.tri.frame.Deframer access$700(org.apache.dubbo.rpc.protocol.tri.stream.TripleServerStream);
    Code:
       0: aload_0
       1: getfield      #3                  // Field deframer:Lorg/apache/dubbo/rpc/protocol/tri/frame/Deframer;
       4: areturn

  static boolean access$802(org.apache.dubbo.rpc.protocol.tri.stream.TripleServerStream, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field reset:Z
       6: ireturn

  static boolean access$900(org.apache.dubbo.rpc.protocol.tri.stream.TripleServerStream);
    Code:
       0: aload_0
       1: getfield      #1                  // Field trailersSent:Z
       4: ireturn

  static {};
    Code:
       0: ldc           #130                // class org/apache/dubbo/rpc/protocol/tri/stream/TripleServerStream
       2: invokestatic  #131                // Method org/apache/dubbo/common/logger/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/Logger;
       5: putstatic     #39                 // Field LOGGER:Lorg/apache/dubbo/common/logger/Logger;
       8: return
}
