Compiled from "TripleClientStream.java"
public class org.apache.dubbo.rpc.protocol.tri.stream.TripleClientStream extends org.apache.dubbo.rpc.protocol.tri.stream.AbstractStream implements org.apache.dubbo.rpc.protocol.tri.stream.ClientStream {
  private static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger LOGGER;

  public final org.apache.dubbo.rpc.protocol.tri.stream.ClientStream$Listener listener;

  private final org.apache.dubbo.rpc.protocol.tri.transport.TripleWriteQueue writeQueue;

  private org.apache.dubbo.rpc.protocol.tri.frame.Deframer deframer;

  private final io.netty.channel.Channel parent;

  private final org.apache.dubbo.rpc.protocol.tri.stream.TripleStreamChannelFuture streamChannelFuture;

  private boolean halfClosed;

  private boolean rst;

  private boolean isReturnTriException;

  org.apache.dubbo.rpc.protocol.tri.stream.TripleClientStream(org.apache.dubbo.rpc.model.FrameworkModel, java.util.concurrent.Executor, org.apache.dubbo.rpc.protocol.tri.transport.TripleWriteQueue, org.apache.dubbo.rpc.protocol.tri.stream.ClientStream$Listener, io.netty.handler.codec.http2.Http2StreamChannel);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokespecial #9                  // Method org/apache/dubbo/rpc/protocol/tri/stream/AbstractStream."<init>":(Ljava/util/concurrent/Executor;Lorg/apache/dubbo/rpc/model/FrameworkModel;)V
       6: aload_0
       7: iconst_0
       8: putfield      #4                  // Field isReturnTriException:Z
      11: aload_0
      12: aload         5
      14: invokeinterface #10,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.parent:()Lio/netty/channel/Channel;
      19: putfield      #11                 // Field parent:Lio/netty/channel/Channel;
      22: aload_0
      23: aload         4
      25: putfield      #12                 // Field listener:Lorg/apache/dubbo/rpc/protocol/tri/stream/ClientStream$Listener;
      28: aload_0
      29: aload_3
      30: putfield      #6                  // Field writeQueue:Lorg/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue;
      33: aload_0
      34: aload_0
      35: aload         5
      37: invokespecial #13                 // Method initHttp2StreamChannel:(Lio/netty/channel/Channel;)Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
      40: putfield      #7                  // Field streamChannelFuture:Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
      43: return

  public org.apache.dubbo.rpc.protocol.tri.stream.TripleClientStream(org.apache.dubbo.rpc.model.FrameworkModel, java.util.concurrent.Executor, io.netty.channel.Channel, org.apache.dubbo.rpc.protocol.tri.stream.ClientStream$Listener, org.apache.dubbo.rpc.protocol.tri.transport.TripleWriteQueue);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokespecial #9                  // Method org/apache/dubbo/rpc/protocol/tri/stream/AbstractStream."<init>":(Ljava/util/concurrent/Executor;Lorg/apache/dubbo/rpc/model/FrameworkModel;)V
       6: aload_0
       7: iconst_0
       8: putfield      #4                  // Field isReturnTriException:Z
      11: aload_0
      12: aload_3
      13: putfield      #11                 // Field parent:Lio/netty/channel/Channel;
      16: aload_0
      17: aload         4
      19: putfield      #12                 // Field listener:Lorg/apache/dubbo/rpc/protocol/tri/stream/ClientStream$Listener;
      22: aload_0
      23: aload         5
      25: putfield      #6                  // Field writeQueue:Lorg/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue;
      28: aload_0
      29: aload_0
      30: aload_3
      31: invokespecial #13                 // Method initHttp2StreamChannel:(Lio/netty/channel/Channel;)Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
      34: putfield      #7                  // Field streamChannelFuture:Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
      37: return

  private org.apache.dubbo.rpc.protocol.tri.stream.TripleStreamChannelFuture initHttp2StreamChannel(io.netty.channel.Channel);
    Code:
       0: new           #14                 // class org/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture
       3: dup
       4: aload_1
       5: invokespecial #15                 // Method org/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture."<init>":(Lio/netty/channel/Channel;)V
       8: astore_2
       9: new           #16                 // class io/netty/handler/codec/http2/Http2StreamChannelBootstrap
      12: dup
      13: aload_1
      14: invokespecial #17                 // Method io/netty/handler/codec/http2/Http2StreamChannelBootstrap."<init>":(Lio/netty/channel/Channel;)V
      17: astore_3
      18: aload_3
      19: new           #18                 // class org/apache/dubbo/rpc/protocol/tri/stream/TripleClientStream$1
      22: dup
      23: aload_0
      24: invokespecial #19                 // Method org/apache/dubbo/rpc/protocol/tri/stream/TripleClientStream$1."<init>":(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleClientStream;)V
      27: invokevirtual #20                 // Method io/netty/handler/codec/http2/Http2StreamChannelBootstrap.handler:(Lio/netty/channel/ChannelHandler;)Lio/netty/handler/codec/http2/Http2StreamChannelBootstrap;
      30: pop
      31: aload_3
      32: aload_2
      33: invokestatic  #21                 // Method org/apache/dubbo/rpc/protocol/tri/command/CreateStreamQueueCommand.create:(Lio/netty/handler/codec/http2/Http2StreamChannelBootstrap;Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;)Lorg/apache/dubbo/rpc/protocol/tri/command/CreateStreamQueueCommand;
      36: astore        4
      38: aload_0
      39: getfield      #6                  // Field writeQueue:Lorg/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue;
      42: aload         4
      44: invokevirtual #22                 // Method org/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue.enqueue:(Lorg/apache/dubbo/rpc/protocol/tri/command/QueuedCommand;)Lio/netty/channel/ChannelFuture;
      47: pop
      48: aload_2
      49: areturn

  public io.netty.channel.ChannelFuture sendHeader(io.netty.handler.codec.http2.Http2Headers);
    Code:
       0: aload_0
       1: getfield      #6                  // Field writeQueue:Lorg/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue;
       4: ifnonnull     26
       7: aload_0
       8: getfield      #11                 // Field parent:Lio/netty/channel/Channel;
      11: new           #23                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #24                 // String Stream already closed
      17: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: invokeinterface #26,  2           // InterfaceMethod io/netty/channel/Channel.newFailedFuture:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelFuture;
      25: areturn
      26: aload_0
      27: invokespecial #27                 // Method preCheck:()Lio/netty/channel/ChannelFuture;
      30: astore_2
      31: aload_2
      32: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
      37: ifne          42
      40: aload_2
      41: areturn
      42: aload_0
      43: getfield      #7                  // Field streamChannelFuture:Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
      46: aload_1
      47: invokestatic  #29                 // Method org/apache/dubbo/rpc/protocol/tri/command/HeaderQueueCommand.createHeaders:(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;Lio/netty/handler/codec/http2/Http2Headers;)Lorg/apache/dubbo/rpc/protocol/tri/command/HeaderQueueCommand;
      50: astore_3
      51: aload_0
      52: getfield      #6                  // Field writeQueue:Lorg/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue;
      55: aload_3
      56: aload_0
      57: getfield      #11                 // Field parent:Lio/netty/channel/Channel;
      60: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      65: invokevirtual #31                 // Method org/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue.enqueueFuture:(Lorg/apache/dubbo/rpc/protocol/tri/command/QueuedCommand;Ljava/util/concurrent/Executor;)Lio/netty/channel/ChannelFuture;
      68: aload_0
      69: invokedynamic #32,  0             // InvokeDynamic #0:operationComplete:(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleClientStream;)Lio/netty/util/concurrent/GenericFutureListener;
      74: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      79: areturn

  private void transportException(java.lang.Throwable);
    Code:
       0: getstatic     #34                 // Field org/apache/dubbo/rpc/TriRpcStatus.INTERNAL:Lorg/apache/dubbo/rpc/TriRpcStatus;
       3: ldc           #35                 // String Http2 exception
       5: invokevirtual #36                 // Method org/apache/dubbo/rpc/TriRpcStatus.withDescription:(Ljava/lang/String;)Lorg/apache/dubbo/rpc/TriRpcStatus;
       8: aload_1
       9: invokevirtual #37                 // Method org/apache/dubbo/rpc/TriRpcStatus.withCause:(Ljava/lang/Throwable;)Lorg/apache/dubbo/rpc/TriRpcStatus;
      12: astore_2
      13: aload_0
      14: getfield      #12                 // Field listener:Lorg/apache/dubbo/rpc/protocol/tri/stream/ClientStream$Listener;
      17: aload_2
      18: aconst_null
      19: invokeinterface #38,  3           // InterfaceMethod org/apache/dubbo/rpc/protocol/tri/stream/ClientStream$Listener.onComplete:(Lorg/apache/dubbo/rpc/TriRpcStatus;Ljava/util/Map;)V
      24: return

  public io.netty.channel.ChannelFuture cancelByLocal(org.apache.dubbo.rpc.TriRpcStatus);
    Code:
       0: aload_0
       1: invokespecial #27                 // Method preCheck:()Lio/netty/channel/ChannelFuture;
       4: astore_2
       5: aload_2
       6: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
      11: ifne          16
      14: aload_2
      15: areturn
      16: aload_0
      17: getfield      #7                  // Field streamChannelFuture:Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
      20: getstatic     #39                 // Field io/netty/handler/codec/http2/Http2Error.CANCEL:Lio/netty/handler/codec/http2/Http2Error;
      23: invokestatic  #40                 // Method org/apache/dubbo/rpc/protocol/tri/command/CancelQueueCommand.createCommand:(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;Lio/netty/handler/codec/http2/Http2Error;)Lorg/apache/dubbo/rpc/protocol/tri/command/CancelQueueCommand;
      26: astore_3
      27: aload_0
      28: iconst_1
      29: putfield      #5                  // Field rst:Z
      32: aload_0
      33: getfield      #6                  // Field writeQueue:Lorg/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue;
      36: aload_3
      37: invokevirtual #22                 // Method org/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue.enqueue:(Lorg/apache/dubbo/rpc/protocol/tri/command/QueuedCommand;)Lio/netty/channel/ChannelFuture;
      40: areturn

  public java.net.SocketAddress remoteAddress();
    Code:
       0: aload_0
       1: getfield      #11                 // Field parent:Lio/netty/channel/Channel;
       4: invokeinterface #41,  1           // InterfaceMethod io/netty/channel/Channel.remoteAddress:()Ljava/net/SocketAddress;
       9: areturn

  public io.netty.channel.ChannelFuture sendMessage(byte[], int, boolean);
    Code:
       0: aload_0
       1: invokespecial #27                 // Method preCheck:()Lio/netty/channel/ChannelFuture;
       4: astore        4
       6: aload         4
       8: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
      13: ifne          19
      16: aload         4
      18: areturn
      19: aload_0
      20: getfield      #7                  // Field streamChannelFuture:Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
      23: aload_1
      24: iconst_0
      25: iload_2
      26: invokestatic  #42                 // Method org/apache/dubbo/rpc/protocol/tri/command/DataQueueCommand.create:(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;[BZI)Lorg/apache/dubbo/rpc/protocol/tri/command/DataQueueCommand;
      29: astore        5
      31: aload_0
      32: getfield      #6                  // Field writeQueue:Lorg/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue;
      35: aload         5
      37: aload_0
      38: getfield      #11                 // Field parent:Lio/netty/channel/Channel;
      41: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      46: invokevirtual #31                 // Method org/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue.enqueueFuture:(Lorg/apache/dubbo/rpc/protocol/tri/command/QueuedCommand;Ljava/util/concurrent/Executor;)Lio/netty/channel/ChannelFuture;
      49: aload_0
      50: invokedynamic #43,  0             // InvokeDynamic #1:operationComplete:(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleClientStream;)Lio/netty/util/concurrent/GenericFutureListener;
      55: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      60: areturn

  public void request(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field deframer:Lorg/apache/dubbo/rpc/protocol/tri/frame/Deframer;
       4: iload_1
       5: invokeinterface #44,  2           // InterfaceMethod org/apache/dubbo/rpc/protocol/tri/frame/Deframer.request:(I)V
      10: return

  public io.netty.channel.ChannelFuture halfClose();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method preCheck:()Lio/netty/channel/ChannelFuture;
       4: astore_1
       5: aload_1
       6: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
      11: ifne          16
      14: aload_1
      15: areturn
      16: aload_0
      17: getfield      #7                  // Field streamChannelFuture:Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
      20: invokestatic  #45                 // Method org/apache/dubbo/rpc/protocol/tri/command/EndStreamQueueCommand.create:(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;)Lorg/apache/dubbo/rpc/protocol/tri/command/EndStreamQueueCommand;
      23: astore_2
      24: aload_0
      25: getfield      #6                  // Field writeQueue:Lorg/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue;
      28: aload_2
      29: aload_0
      30: getfield      #11                 // Field parent:Lio/netty/channel/Channel;
      33: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      38: invokevirtual #31                 // Method org/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue.enqueueFuture:(Lorg/apache/dubbo/rpc/protocol/tri/command/QueuedCommand;Ljava/util/concurrent/Executor;)Lio/netty/channel/ChannelFuture;
      41: aload_0
      42: invokedynamic #46,  0             // InvokeDynamic #2:operationComplete:(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleClientStream;)Lio/netty/util/concurrent/GenericFutureListener;
      47: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      52: areturn

  private io.netty.channel.ChannelFuture preCheck();
    Code:
       0: aload_0
       1: getfield      #5                  // Field rst:Z
       4: ifeq          29
       7: aload_0
       8: getfield      #7                  // Field streamChannelFuture:Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
      11: invokevirtual #47                 // Method org/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture.getNow:()Lio/netty/handler/codec/http2/Http2StreamChannel;
      14: new           #48                 // class java/io/IOException
      17: dup
      18: ldc           #49                 // String stream channel has reset
      20: invokespecial #50                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      23: invokeinterface #51,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.newFailedFuture:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelFuture;
      28: areturn
      29: aload_0
      30: getfield      #11                 // Field parent:Lio/netty/channel/Channel;
      33: invokeinterface #52,  1           // InterfaceMethod io/netty/channel/Channel.newSucceededFuture:()Lio/netty/channel/ChannelFuture;
      38: areturn

  org.apache.dubbo.rpc.protocol.tri.transport.H2TransportListener createTransportListener();
    Code:
       0: new           #53                 // class org/apache/dubbo/rpc/protocol/tri/stream/TripleClientStream$ClientTransportListener
       3: dup
       4: aload_0
       5: invokespecial #54                 // Method org/apache/dubbo/rpc/protocol/tri/stream/TripleClientStream$ClientTransportListener."<init>":(Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleClientStream;)V
       8: areturn

  public io.netty.util.concurrent.Future cancelByLocal(org.apache.dubbo.rpc.TriRpcStatus);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method cancelByLocal:(Lorg/apache/dubbo/rpc/TriRpcStatus;)Lio/netty/channel/ChannelFuture;
       5: areturn

  public io.netty.util.concurrent.Future sendHeader(io.netty.handler.codec.http2.Http2Headers);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method sendHeader:(Lio/netty/handler/codec/http2/Http2Headers;)Lio/netty/channel/ChannelFuture;
       5: areturn

  public io.netty.util.concurrent.Future halfClose();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method halfClose:()Lio/netty/channel/ChannelFuture;
       4: areturn

  public io.netty.util.concurrent.Future sendMessage(byte[], int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #58                 // Method sendMessage:([BIZ)Lio/netty/channel/ChannelFuture;
       7: areturn

  private void lambda$halfClose$2(io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #59,  1           // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       6: ifeq          14
       9: aload_0
      10: iconst_1
      11: putfield      #1                  // Field halfClosed:Z
      14: return

  private void lambda$sendMessage$1(io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #59,  1           // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       6: ifne          41
       9: aload_0
      10: getstatic     #34                 // Field org/apache/dubbo/rpc/TriRpcStatus.INTERNAL:Lorg/apache/dubbo/rpc/TriRpcStatus;
      13: ldc           #60                 // String Client write message failed
      15: invokevirtual #36                 // Method org/apache/dubbo/rpc/TriRpcStatus.withDescription:(Ljava/lang/String;)Lorg/apache/dubbo/rpc/TriRpcStatus;
      18: aload_1
      19: invokeinterface #61,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      24: invokevirtual #37                 // Method org/apache/dubbo/rpc/TriRpcStatus.withCause:(Ljava/lang/Throwable;)Lorg/apache/dubbo/rpc/TriRpcStatus;
      27: invokevirtual #55                 // Method cancelByLocal:(Lorg/apache/dubbo/rpc/TriRpcStatus;)Lio/netty/channel/ChannelFuture;
      30: pop
      31: aload_0
      32: aload_1
      33: invokeinterface #61,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      38: invokespecial #8                  // Method transportException:(Ljava/lang/Throwable;)V
      41: return

  private void lambda$sendHeader$0(io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #59,  1           // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       6: ifne          19
       9: aload_0
      10: aload_1
      11: invokeinterface #61,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      16: invokespecial #8                  // Method transportException:(Ljava/lang/Throwable;)V
      19: return

  static void access$000(org.apache.dubbo.rpc.protocol.tri.stream.TripleClientStream, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method transportException:(Ljava/lang/Throwable;)V
       5: return

  static org.apache.dubbo.rpc.protocol.tri.stream.TripleStreamChannelFuture access$100(org.apache.dubbo.rpc.protocol.tri.stream.TripleClientStream);
    Code:
       0: aload_0
       1: getfield      #7                  // Field streamChannelFuture:Lorg/apache/dubbo/rpc/protocol/tri/stream/TripleStreamChannelFuture;
       4: areturn

  static org.apache.dubbo.rpc.protocol.tri.transport.TripleWriteQueue access$200(org.apache.dubbo.rpc.protocol.tri.stream.TripleClientStream);
    Code:
       0: aload_0
       1: getfield      #6                  // Field writeQueue:Lorg/apache/dubbo/rpc/protocol/tri/transport/TripleWriteQueue;
       4: areturn

  static boolean access$302(org.apache.dubbo.rpc.protocol.tri.stream.TripleClientStream, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #5                  // Field rst:Z
       6: ireturn

  static boolean access$402(org.apache.dubbo.rpc.protocol.tri.stream.TripleClientStream, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #4                  // Field isReturnTriException:Z
       6: ireturn

  static boolean access$400(org.apache.dubbo.rpc.protocol.tri.stream.TripleClientStream);
    Code:
       0: aload_0
       1: getfield      #4                  // Field isReturnTriException:Z
       4: ireturn

  static org.apache.dubbo.rpc.protocol.tri.frame.Deframer access$702(org.apache.dubbo.rpc.protocol.tri.stream.TripleClientStream, org.apache.dubbo.rpc.protocol.tri.frame.Deframer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field deframer:Lorg/apache/dubbo/rpc/protocol/tri/frame/Deframer;
       6: areturn

  static org.apache.dubbo.rpc.protocol.tri.frame.Deframer access$700(org.apache.dubbo.rpc.protocol.tri.stream.TripleClientStream);
    Code:
       0: aload_0
       1: getfield      #3                  // Field deframer:Lorg/apache/dubbo/rpc/protocol/tri/frame/Deframer;
       4: areturn

  static org.apache.dubbo.common.logger.ErrorTypeAwareLogger access$800();
    Code:
       0: getstatic     #2                  // Field LOGGER:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       3: areturn

  static boolean access$900(org.apache.dubbo.rpc.protocol.tri.stream.TripleClientStream);
    Code:
       0: aload_0
       1: getfield      #1                  // Field halfClosed:Z
       4: ireturn

  static boolean access$300(org.apache.dubbo.rpc.protocol.tri.stream.TripleClientStream);
    Code:
       0: aload_0
       1: getfield      #5                  // Field rst:Z
       4: ireturn

  static {};
    Code:
       0: ldc           #62                 // class org/apache/dubbo/rpc/protocol/tri/stream/TripleClientStream
       2: invokestatic  #63                 // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #2                  // Field LOGGER:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: return
}
