Compiled from "QueuedCommand.java"
public abstract class org.apache.dubbo.rpc.protocol.tri.command.QueuedCommand {
  protected io.netty.channel.Channel channel;

  private io.netty.channel.ChannelPromise promise;

  public org.apache.dubbo.rpc.protocol.tri.command.QueuedCommand();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public io.netty.channel.ChannelPromise promise();
    Code:
       0: aload_0
       1: getfield      #2                  // Field promise:Lio/netty/channel/ChannelPromise;
       4: areturn

  public void promise(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field promise:Lio/netty/channel/ChannelPromise;
       5: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field promise:Lio/netty/channel/ChannelPromise;
       4: new           #3                  // class java/lang/IllegalStateException
       7: dup
       8: ldc           #4                  // String Canceled
      10: invokespecial #5                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      13: invokeinterface #6,  2            // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      18: pop
      19: return

  public void run(io.netty.channel.Channel);
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod io/netty/channel/Channel.isActive:()Z
       6: ifeq          31
       9: aload_1
      10: aload_0
      11: invokeinterface #8,  2            // InterfaceMethod io/netty/channel/Channel.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      16: aload_0
      17: invokedynamic #9,  0              // InvokeDynamic #0:operationComplete:(Lorg/apache/dubbo/rpc/protocol/tri/command/QueuedCommand;)Lio/netty/util/concurrent/GenericFutureListener;
      22: invokeinterface #10,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      27: pop
      28: goto          41
      31: aload_0
      32: getfield      #2                  // Field promise:Lio/netty/channel/ChannelPromise;
      35: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelPromise.trySuccess:()Z
      40: pop
      41: return

  public final void send(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #7,  1            // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      11: ifeq          20
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokevirtual #13                 // Method doSend:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      20: return

  public org.apache.dubbo.rpc.protocol.tri.command.QueuedCommand channel(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field channel:Lio/netty/channel/Channel;
       5: aload_0
       6: areturn

  public io.netty.channel.Channel channel();
    Code:
       0: aload_0
       1: getfield      #14                 // Field channel:Lio/netty/channel/Channel;
       4: areturn

  public abstract void doSend(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise);

  private void lambda$run$0(io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       6: ifeq          22
       9: aload_0
      10: getfield      #2                  // Field promise:Lio/netty/channel/ChannelPromise;
      13: invokeinterface #16,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      18: pop
      19: goto          38
      22: aload_0
      23: getfield      #2                  // Field promise:Lio/netty/channel/ChannelPromise;
      26: aload_1
      27: invokeinterface #17,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      32: invokeinterface #18,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      37: pop
      38: return
}
