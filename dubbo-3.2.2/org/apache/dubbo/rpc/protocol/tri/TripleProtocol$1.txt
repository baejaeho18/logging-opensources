Compiled from "TripleProtocol.java"
class org.apache.dubbo.rpc.protocol.tri.TripleProtocol$1 extends org.apache.dubbo.rpc.protocol.AbstractExporter<T> {
  final org.apache.dubbo.common.URL val$url;

  final java.lang.String val$key;

  final org.apache.dubbo.rpc.protocol.tri.TripleProtocol this$0;

  org.apache.dubbo.rpc.protocol.tri.TripleProtocol$1(org.apache.dubbo.rpc.protocol.tri.TripleProtocol, org.apache.dubbo.rpc.Invoker, org.apache.dubbo.common.URL, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/TripleProtocol;
       5: aload_0
       6: aload_3
       7: putfield      #2                  // Field val$url:Lorg/apache/dubbo/common/URL;
      10: aload_0
      11: aload         4
      13: putfield      #3                  // Field val$key:Ljava/lang/String;
      16: aload_0
      17: aload_2
      18: invokespecial #4                  // Method org/apache/dubbo/rpc/protocol/AbstractExporter."<init>":(Lorg/apache/dubbo/rpc/Invoker;)V
      21: return

  public void afterUnExport();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/TripleProtocol;
       4: invokestatic  #5                  // Method org/apache/dubbo/rpc/protocol/tri/TripleProtocol.access$000:(Lorg/apache/dubbo/rpc/protocol/tri/TripleProtocol;)Lorg/apache/dubbo/rpc/PathResolver;
       7: aload_0
       8: getfield      #2                  // Field val$url:Lorg/apache/dubbo/common/URL;
      11: invokevirtual #6                  // Method org/apache/dubbo/common/URL.getServiceKey:()Ljava/lang/String;
      14: invokeinterface #7,  2            // InterfaceMethod org/apache/dubbo/rpc/PathResolver.remove:(Ljava/lang/String;)V
      19: aload_0
      20: getfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/TripleProtocol;
      23: invokestatic  #5                  // Method org/apache/dubbo/rpc/protocol/tri/TripleProtocol.access$000:(Lorg/apache/dubbo/rpc/protocol/tri/TripleProtocol;)Lorg/apache/dubbo/rpc/PathResolver;
      26: aload_0
      27: getfield      #2                  // Field val$url:Lorg/apache/dubbo/common/URL;
      30: invokevirtual #8                  // Method org/apache/dubbo/common/URL.getServiceModel:()Lorg/apache/dubbo/rpc/model/ServiceModel;
      33: invokevirtual #9                  // Method org/apache/dubbo/rpc/model/ServiceModel.getServiceModel:()Lorg/apache/dubbo/rpc/model/ServiceDescriptor;
      36: invokeinterface #10,  1           // InterfaceMethod org/apache/dubbo/rpc/model/ServiceDescriptor.getInterfaceName:()Ljava/lang/String;
      41: invokeinterface #7,  2            // InterfaceMethod org/apache/dubbo/rpc/PathResolver.remove:(Ljava/lang/String;)V
      46: aload_0
      47: getfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/TripleProtocol;
      50: invokestatic  #11                 // Method org/apache/dubbo/rpc/protocol/tri/TripleProtocol.access$100:(Lorg/apache/dubbo/rpc/protocol/tri/TripleProtocol;)Lorg/apache/dubbo/rpc/protocol/tri/service/TriBuiltinService;
      53: invokevirtual #12                 // Method org/apache/dubbo/rpc/protocol/tri/service/TriBuiltinService.enable:()Z
      56: ifeq          105
      59: aload_0
      60: getfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/TripleProtocol;
      63: invokestatic  #11                 // Method org/apache/dubbo/rpc/protocol/tri/TripleProtocol.access$100:(Lorg/apache/dubbo/rpc/protocol/tri/TripleProtocol;)Lorg/apache/dubbo/rpc/protocol/tri/service/TriBuiltinService;
      66: invokevirtual #13                 // Method org/apache/dubbo/rpc/protocol/tri/service/TriBuiltinService.getHealthStatusManager:()Lorg/apache/dubbo/rpc/protocol/tri/service/HealthStatusManager;
      69: aload_0
      70: getfield      #2                  // Field val$url:Lorg/apache/dubbo/common/URL;
      73: invokevirtual #6                  // Method org/apache/dubbo/common/URL.getServiceKey:()Ljava/lang/String;
      76: getstatic     #14                 // Field io/grpc/health/v1/HealthCheckResponse$ServingStatus.NOT_SERVING:Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;
      79: invokevirtual #15                 // Method org/apache/dubbo/rpc/protocol/tri/service/HealthStatusManager.setStatus:(Ljava/lang/String;Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;)V
      82: aload_0
      83: getfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/TripleProtocol;
      86: invokestatic  #11                 // Method org/apache/dubbo/rpc/protocol/tri/TripleProtocol.access$100:(Lorg/apache/dubbo/rpc/protocol/tri/TripleProtocol;)Lorg/apache/dubbo/rpc/protocol/tri/service/TriBuiltinService;
      89: invokevirtual #13                 // Method org/apache/dubbo/rpc/protocol/tri/service/TriBuiltinService.getHealthStatusManager:()Lorg/apache/dubbo/rpc/protocol/tri/service/HealthStatusManager;
      92: aload_0
      93: getfield      #2                  // Field val$url:Lorg/apache/dubbo/common/URL;
      96: invokevirtual #16                 // Method org/apache/dubbo/common/URL.getServiceInterface:()Ljava/lang/String;
      99: getstatic     #14                 // Field io/grpc/health/v1/HealthCheckResponse$ServingStatus.NOT_SERVING:Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;
     102: invokevirtual #15                 // Method org/apache/dubbo/rpc/protocol/tri/service/HealthStatusManager.setStatus:(Ljava/lang/String;Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;)V
     105: aload_0
     106: getfield      #1                  // Field this$0:Lorg/apache/dubbo/rpc/protocol/tri/TripleProtocol;
     109: invokestatic  #17                 // Method org/apache/dubbo/rpc/protocol/tri/TripleProtocol.access$200:(Lorg/apache/dubbo/rpc/protocol/tri/TripleProtocol;)Ljava/util/Map;
     112: aload_0
     113: getfield      #3                  // Field val$key:Ljava/lang/String;
     116: invokeinterface #18,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     121: pop
     122: return
}
