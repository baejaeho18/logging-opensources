Compiled from "TriHealthImpl.java"
public class org.apache.dubbo.rpc.protocol.tri.service.TriHealthImpl extends io.grpc.health.v1.DubboHealthTriple$HealthImplBase {
  private static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  private final java.util.Map<java.lang.String, io.grpc.health.v1.HealthCheckResponse$ServingStatus> statusMap;

  private final java.lang.Object watchLock;

  private final java.util.HashMap<java.lang.String, java.util.IdentityHashMap<org.apache.dubbo.common.stream.StreamObserver<io.grpc.health.v1.HealthCheckResponse>, java.lang.Boolean>> watchers;

  private boolean terminal;

  public org.apache.dubbo.rpc.protocol.tri.service.TriHealthImpl();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method io/grpc/health/v1/DubboHealthTriple$HealthImplBase."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #5                  // Field statusMap:Ljava/util/Map;
      15: aload_0
      16: new           #6                  // class java/lang/Object
      19: dup
      20: invokespecial #7                  // Method java/lang/Object."<init>":()V
      23: putfield      #8                  // Field watchLock:Ljava/lang/Object;
      26: aload_0
      27: new           #9                  // class java/util/HashMap
      30: dup
      31: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      34: putfield      #11                 // Field watchers:Ljava/util/HashMap;
      37: aload_0
      38: getfield      #5                  // Field statusMap:Ljava/util/Map;
      41: ldc           #13                 // String
      43: getstatic     #14                 // Field io/grpc/health/v1/HealthCheckResponse$ServingStatus.SERVING:Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;
      46: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: pop
      52: return

  private static io.grpc.health.v1.HealthCheckResponse getResponseForWatch(io.grpc.health.v1.HealthCheckResponse$ServingStatus);
    Code:
       0: invokestatic  #16                 // Method io/grpc/health/v1/HealthCheckResponse.newBuilder:()Lio/grpc/health/v1/HealthCheckResponse$Builder;
       3: aload_0
       4: ifnonnull     13
       7: getstatic     #17                 // Field io/grpc/health/v1/HealthCheckResponse$ServingStatus.SERVICE_UNKNOWN:Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;
      10: goto          14
      13: aload_0
      14: invokevirtual #18                 // Method io/grpc/health/v1/HealthCheckResponse$Builder.setStatus:(Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;)Lio/grpc/health/v1/HealthCheckResponse$Builder;
      17: invokevirtual #19                 // Method io/grpc/health/v1/HealthCheckResponse$Builder.build:()Lio/grpc/health/v1/HealthCheckResponse;
      20: areturn

  public io.grpc.health.v1.HealthCheckResponse check(io.grpc.health.v1.HealthCheckRequest);
    Code:
       0: aload_0
       1: getfield      #5                  // Field statusMap:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #20                 // Method io/grpc/health/v1/HealthCheckRequest.getService:()Ljava/lang/String;
       8: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #22                 // class io/grpc/health/v1/HealthCheckResponse$ServingStatus
      16: astore_2
      17: aload_2
      18: ifnull        32
      21: invokestatic  #16                 // Method io/grpc/health/v1/HealthCheckResponse.newBuilder:()Lio/grpc/health/v1/HealthCheckResponse$Builder;
      24: aload_2
      25: invokevirtual #18                 // Method io/grpc/health/v1/HealthCheckResponse$Builder.setStatus:(Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;)Lio/grpc/health/v1/HealthCheckResponse$Builder;
      28: invokevirtual #19                 // Method io/grpc/health/v1/HealthCheckResponse$Builder.build:()Lio/grpc/health/v1/HealthCheckResponse;
      31: areturn
      32: getstatic     #23                 // Field org/apache/dubbo/rpc/TriRpcStatus.NOT_FOUND:Lorg/apache/dubbo/rpc/TriRpcStatus;
      35: new           #24                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #26                 // String unknown service
      44: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_1
      48: invokevirtual #20                 // Method io/grpc/health/v1/HealthCheckRequest.getService:()Ljava/lang/String;
      51: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokevirtual #29                 // Method org/apache/dubbo/rpc/TriRpcStatus.withDescription:(Ljava/lang/String;)Lorg/apache/dubbo/rpc/TriRpcStatus;
      60: invokevirtual #30                 // Method org/apache/dubbo/rpc/TriRpcStatus.asException:()Lorg/apache/dubbo/rpc/StatusRpcException;
      63: athrow

  public void watch(io.grpc.health.v1.HealthCheckRequest, org.apache.dubbo.common.stream.StreamObserver<io.grpc.health.v1.HealthCheckResponse>);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method io/grpc/health/v1/HealthCheckRequest.getService:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: getfield      #8                  // Field watchLock:Ljava/lang/Object;
       9: dup
      10: astore        4
      12: monitorenter
      13: aload_0
      14: getfield      #5                  // Field statusMap:Ljava/util/Map;
      17: aload_3
      18: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #22                 // class io/grpc/health/v1/HealthCheckResponse$ServingStatus
      26: astore        5
      28: aload_2
      29: aload         5
      31: invokestatic  #31                 // Method getResponseForWatch:(Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;)Lio/grpc/health/v1/HealthCheckResponse;
      34: invokeinterface #32,  2           // InterfaceMethod org/apache/dubbo/common/stream/StreamObserver.onNext:(Ljava/lang/Object;)V
      39: aload_0
      40: getfield      #11                 // Field watchers:Ljava/util/HashMap;
      43: aload_3
      44: invokevirtual #33                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #34                 // class java/util/IdentityHashMap
      50: astore        6
      52: aload         6
      54: ifnonnull     77
      57: new           #34                 // class java/util/IdentityHashMap
      60: dup
      61: invokespecial #35                 // Method java/util/IdentityHashMap."<init>":()V
      64: astore        6
      66: aload_0
      67: getfield      #11                 // Field watchers:Ljava/util/HashMap;
      70: aload_3
      71: aload         6
      73: invokevirtual #36                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: aload         6
      79: aload_2
      80: getstatic     #37                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      83: invokevirtual #38                 // Method java/util/IdentityHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: aload         4
      89: monitorexit
      90: goto          101
      93: astore        7
      95: aload         4
      97: monitorexit
      98: aload         7
     100: athrow
     101: invokestatic  #39                 // Method org/apache/dubbo/rpc/RpcContext.getCancellationContext:()Lorg/apache/dubbo/rpc/CancellationContext;
     104: aload_0
     105: aload_3
     106: aload_2
     107: invokedynamic #40,  0             // InvokeDynamic #0:cancelled:(Lorg/apache/dubbo/rpc/protocol/tri/service/TriHealthImpl;Ljava/lang/String;Lorg/apache/dubbo/common/stream/StreamObserver;)Lorg/apache/dubbo/rpc/CancellationListener;
     112: invokevirtual #41                 // Method org/apache/dubbo/rpc/CancellationContext.addListener:(Lorg/apache/dubbo/rpc/CancellationListener;)V
     115: return
    Exception table:
       from    to  target type
          13    90    93   any
          93    98    93   any

  void setStatus(java.lang.String, io.grpc.health.v1.HealthCheckResponse$ServingStatus);
    Code:
       0: aload_0
       1: getfield      #8                  // Field watchLock:Ljava/lang/Object;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #42                 // Field terminal:Z
      11: ifeq          53
      14: getstatic     #43                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      17: new           #24                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #44                 // String Ignoring status
      26: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_2
      30: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: ldc           #46                 // String  for
      35: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_1
      39: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokeinterface #47,  2           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.info:(Ljava/lang/String;)V
      50: aload_3
      51: monitorexit
      52: return
      53: aload_0
      54: aload_1
      55: aload_2
      56: invokespecial #48                 // Method setStatusInternal:(Ljava/lang/String;Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;)V
      59: aload_3
      60: monitorexit
      61: goto          71
      64: astore        4
      66: aload_3
      67: monitorexit
      68: aload         4
      70: athrow
      71: return
    Exception table:
       from    to  target type
           7    52    64   any
          53    61    64   any
          64    68    64   any

  private void setStatusInternal(java.lang.String, io.grpc.health.v1.HealthCheckResponse$ServingStatus);
    Code:
       0: aload_0
       1: getfield      #5                  // Field statusMap:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #22                 // class io/grpc/health/v1/HealthCheckResponse$ServingStatus
      14: astore_3
      15: aload_3
      16: aload_2
      17: if_acmpeq     26
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokespecial #49                 // Method notifyWatchers:(Ljava/lang/String;Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;)V
      26: return

  void clearStatus(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field watchLock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #42                 // Field terminal:Z
      11: ifeq          44
      14: getstatic     #43                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      17: new           #24                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #50                 // String Ignoring status clearing for
      26: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokeinterface #47,  2           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.info:(Ljava/lang/String;)V
      41: aload_2
      42: monitorexit
      43: return
      44: aload_0
      45: getfield      #5                  // Field statusMap:Ljava/util/Map;
      48: aload_1
      49: invokeinterface #51,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #22                 // class io/grpc/health/v1/HealthCheckResponse$ServingStatus
      57: astore_3
      58: aload_3
      59: ifnull        68
      62: aload_0
      63: aload_1
      64: aconst_null
      65: invokespecial #49                 // Method notifyWatchers:(Ljava/lang/String;Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;)V
      68: aload_2
      69: monitorexit
      70: goto          80
      73: astore        4
      75: aload_2
      76: monitorexit
      77: aload         4
      79: athrow
      80: return
    Exception table:
       from    to  target type
           7    43    73   any
          44    70    73   any
          73    77    73   any

  void enterTerminalState();
    Code:
       0: aload_0
       1: getfield      #8                  // Field watchLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #42                 // Field terminal:Z
      11: ifeq          40
      14: getstatic     #43                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      17: ldc           #52                 // String 4-16
      19: ldc           #13                 // String
      21: ldc           #13                 // String
      23: ldc           #53                 // String Already terminating
      25: new           #54                 // class java/lang/RuntimeException
      28: dup
      29: invokespecial #55                 // Method java/lang/RuntimeException."<init>":()V
      32: invokeinterface #56,  6           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.warn:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      37: aload_1
      38: monitorexit
      39: return
      40: aload_0
      41: iconst_1
      42: putfield      #42                 // Field terminal:Z
      45: aload_0
      46: getfield      #5                  // Field statusMap:Ljava/util/Map;
      49: invokeinterface #57,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      54: invokeinterface #58,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      59: astore_2
      60: aload_2
      61: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          90
      69: aload_2
      70: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #61                 // class java/lang/String
      78: astore_3
      79: aload_0
      80: aload_3
      81: getstatic     #62                 // Field io/grpc/health/v1/HealthCheckResponse$ServingStatus.NOT_SERVING:Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;
      84: invokespecial #48                 // Method setStatusInternal:(Ljava/lang/String;Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;)V
      87: goto          60
      90: aload_1
      91: monitorexit
      92: goto          102
      95: astore        4
      97: aload_1
      98: monitorexit
      99: aload         4
     101: athrow
     102: return
    Exception table:
       from    to  target type
           7    39    95   any
          40    92    95   any
          95    99    95   any

  private void notifyWatchers(java.lang.String, io.grpc.health.v1.HealthCheckResponse$ServingStatus);
    Code:
       0: aload_2
       1: invokestatic  #31                 // Method getResponseForWatch:(Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;)Lio/grpc/health/v1/HealthCheckResponse;
       4: astore_3
       5: aload_0
       6: getfield      #11                 // Field watchers:Ljava/util/HashMap;
       9: aload_1
      10: invokevirtual #33                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #34                 // class java/util/IdentityHashMap
      16: astore        4
      18: aload         4
      20: ifnull        68
      23: aload         4
      25: invokevirtual #63                 // Method java/util/IdentityHashMap.keySet:()Ljava/util/Set;
      28: invokeinterface #58,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      33: astore        5
      35: aload         5
      37: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          68
      45: aload         5
      47: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #64                 // class org/apache/dubbo/common/stream/StreamObserver
      55: astore        6
      57: aload         6
      59: aload_3
      60: invokeinterface #32,  2           // InterfaceMethod org/apache/dubbo/common/stream/StreamObserver.onNext:(Ljava/lang/Object;)V
      65: goto          35
      68: return

  private void lambda$watch$0(java.lang.String, org.apache.dubbo.common.stream.StreamObserver, org.apache.dubbo.rpc.RpcServiceContext);
    Code:
       0: aload_0
       1: getfield      #8                  // Field watchLock:Ljava/lang/Object;
       4: dup
       5: astore        4
       7: monitorenter
       8: aload_0
       9: getfield      #11                 // Field watchers:Ljava/util/HashMap;
      12: aload_1
      13: invokevirtual #33                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #34                 // class java/util/IdentityHashMap
      19: astore        5
      21: aload         5
      23: ifnull        50
      26: aload         5
      28: aload_2
      29: invokevirtual #65                 // Method java/util/IdentityHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: aload         5
      35: invokevirtual #66                 // Method java/util/IdentityHashMap.isEmpty:()Z
      38: ifeq          50
      41: aload_0
      42: getfield      #11                 // Field watchers:Ljava/util/HashMap;
      45: aload_1
      46: invokevirtual #67                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload         4
      52: monitorexit
      53: goto          64
      56: astore        6
      58: aload         4
      60: monitorexit
      61: aload         6
      63: athrow
      64: return
    Exception table:
       from    to  target type
           8    53    56   any
          56    61    56   any

  static {};
    Code:
       0: ldc           #68                 // class org/apache/dubbo/rpc/protocol/tri/service/TriHealthImpl
       2: invokestatic  #69                 // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #43                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: return
}
