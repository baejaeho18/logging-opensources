Compiled from "RequestFacade.java"
public abstract class org.apache.dubbo.rpc.protocol.rest.request.RequestFacade<T> {
  protected java.util.Map<java.lang.String, java.util.ArrayList<java.lang.String>> headers;

  protected java.util.Map<java.lang.String, java.util.ArrayList<java.lang.String>> parameters;

  protected java.lang.String path;

  protected T request;

  protected byte[] body;

  public org.apache.dubbo.rpc.protocol.rest.request.RequestFacade(T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field headers:Ljava/util/Map;
      15: aload_0
      16: new           #2                  // class java/util/HashMap
      19: dup
      20: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      23: putfield      #5                  // Field parameters:Ljava/util/Map;
      26: aload_0
      27: iconst_0
      28: newarray       byte
      30: putfield      #6                  // Field body:[B
      33: aload_0
      34: aload_1
      35: putfield      #7                  // Field request:Ljava/lang/Object;
      38: aload_0
      39: invokevirtual #8                  // Method initHeaders:()V
      42: aload_0
      43: invokevirtual #9                  // Method initParameters:()V
      46: aload_0
      47: invokevirtual #10                 // Method parseBody:()V
      50: return

  protected void initHeaders();
    Code:
       0: return

  protected void initParameters();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getRequestURI:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnull        185
       9: aload_1
      10: ldc           #12                 // String ?
      12: invokevirtual #13                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      15: ifeq          185
      18: aload_1
      19: aload_1
      20: ldc           #12                 // String ?
      22: invokevirtual #14                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      25: iconst_1
      26: iadd
      27: invokevirtual #15                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      30: astore_2
      31: aload_0
      32: aload_1
      33: iconst_0
      34: aload_1
      35: ldc           #12                 // String ?
      37: invokevirtual #14                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      40: invokevirtual #16                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      43: putfield      #17                 // Field path:Ljava/lang/String;
      46: aload_2
      47: ldc           #18                 // String &
      49: invokevirtual #19                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      52: astore_3
      53: aload_3
      54: astore        4
      56: aload         4
      58: arraylength
      59: istore        5
      61: iconst_0
      62: istore        6
      64: iload         6
      66: iload         5
      68: if_icmpge     182
      71: aload         4
      73: iload         6
      75: aaload
      76: astore        7
      78: aload         7
      80: ldc           #20                 // String =
      82: invokevirtual #14                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      85: istore        8
      87: iload         8
      89: ifgt          95
      92: goto          176
      95: aload         7
      97: iconst_0
      98: iload         8
     100: invokevirtual #16                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     103: astore        9
     105: aload         7
     107: iload         8
     109: iconst_1
     110: iadd
     111: invokevirtual #15                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     114: astore        10
     116: aload         9
     118: invokestatic  #21                 // Method org/apache/dubbo/common/utils/StringUtils.isEmpty:(Ljava/lang/String;)Z
     121: ifne          176
     124: aload_0
     125: getfield      #5                  // Field parameters:Ljava/util/Map;
     128: aload         9
     130: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     135: checkcast     #23                 // class java/util/ArrayList
     138: astore        11
     140: aload         11
     142: ifnonnull     168
     145: new           #23                 // class java/util/ArrayList
     148: dup
     149: invokespecial #24                 // Method java/util/ArrayList."<init>":()V
     152: astore        11
     154: aload_0
     155: getfield      #5                  // Field parameters:Ljava/util/Map;
     158: aload         9
     160: aload         11
     162: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     167: pop
     168: aload         11
     170: aload         10
     172: invokevirtual #26                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     175: pop
     176: iinc          6, 1
     179: goto          64
     182: goto          190
     185: aload_0
     186: aload_1
     187: putfield      #17                 // Field path:Ljava/lang/String;
     190: return

  public T getRequest();
    Code:
       0: aload_0
       1: getfield      #7                  // Field request:Ljava/lang/Object;
       4: areturn

  public abstract java.lang.String getHeader(java.lang.String);

  public abstract java.util.Enumeration<java.lang.String> getHeaders(java.lang.String);

  public abstract java.util.Enumeration<java.lang.String> getHeaderNames();

  public abstract java.lang.String getMethod();

  public abstract java.lang.String getPath();

  public abstract java.lang.String getContextPath();

  public abstract java.lang.String getRequestURI();

  public abstract java.lang.String getParameter(java.lang.String);

  public abstract java.util.Enumeration<java.lang.String> getParameterNames();

  public abstract java.lang.String[] getParameterValues(java.lang.String);

  public abstract java.util.Map<java.lang.String, java.lang.String[]> getParameterMap();

  public abstract java.lang.String getRemoteAddr();

  public abstract java.lang.String getRemoteHost();

  public abstract int getRemotePort();

  public abstract java.lang.String getLocalAddr();

  public abstract java.lang.String getLocalHost();

  public abstract int getLocalPort();

  public abstract byte[] getInputStream() throws java.io.IOException;

  protected abstract void parseBody();
}
