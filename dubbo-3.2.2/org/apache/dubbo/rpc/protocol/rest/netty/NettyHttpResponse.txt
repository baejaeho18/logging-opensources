Compiled from "NettyHttpResponse.java"
public class org.apache.dubbo.rpc.protocol.rest.netty.NettyHttpResponse implements org.apache.dubbo.rpc.protocol.rest.netty.HttpResponse {
  private static final int EMPTY_CONTENT_LENGTH;

  private int status;

  private java.io.OutputStream os;

  private java.util.Map<java.lang.String, java.util.List<java.lang.String>> outputHeaders;

  private final io.netty.channel.ChannelHandlerContext ctx;

  private boolean committed;

  private boolean keepAlive;

  private io.netty.handler.codec.http.HttpMethod method;

  public org.apache.dubbo.rpc.protocol.rest.netty.NettyHttpResponse(io.netty.channel.ChannelHandlerContext, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #1                  // Method "<init>":(Lio/netty/channel/ChannelHandlerContext;ZLio/netty/handler/codec/http/HttpMethod;)V
       7: return

  public org.apache.dubbo.rpc.protocol.rest.netty.NettyHttpResponse(io.netty.channel.ChannelHandlerContext, boolean, io.netty.handler.codec.http.HttpMethod);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        200
       8: putfield      #3                  // Field status:I
      11: aload_0
      12: new           #4                  // class java/util/HashMap
      15: dup
      16: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      19: putfield      #6                  // Field outputHeaders:Ljava/util/Map;
      22: aload_0
      23: aload_3
      24: putfield      #7                  // Field method:Lio/netty/handler/codec/http/HttpMethod;
      27: aload_0
      28: new           #8                  // class org/apache/dubbo/rpc/protocol/rest/netty/ChunkOutputStream
      31: dup
      32: aload_0
      33: aload_1
      34: sipush        1000
      37: invokespecial #9                  // Method org/apache/dubbo/rpc/protocol/rest/netty/ChunkOutputStream."<init>":(Lorg/apache/dubbo/rpc/protocol/rest/netty/NettyHttpResponse;Lio/netty/channel/ChannelHandlerContext;I)V
      40: putfield      #10                 // Field os:Ljava/io/OutputStream;
      43: aload_0
      44: aload_1
      45: putfield      #11                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      48: aload_0
      49: iload_2
      50: putfield      #12                 // Field keepAlive:Z
      53: return

  public void setOutputStream(java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field os:Ljava/io/OutputStream;
       5: return

  public int getStatus();
    Code:
       0: aload_0
       1: getfield      #3                  // Field status:I
       4: ireturn

  public void setStatus(int);
    Code:
       0: iload_1
       1: sipush        200
       4: if_icmple     23
       7: aload_0
       8: getstatic     #13                 // Field org/apache/dubbo/rpc/protocol/rest/RestHeaderEnum.CONTENT_TYPE:Lorg/apache/dubbo/rpc/protocol/rest/RestHeaderEnum;
      11: invokevirtual #14                 // Method org/apache/dubbo/rpc/protocol/rest/RestHeaderEnum.getHeader:()Ljava/lang/String;
      14: getstatic     #15                 // Field org/apache/dubbo/metadata/rest/media/MediaType.TEXT_PLAIN:Lorg/apache/dubbo/metadata/rest/media/MediaType;
      17: getfield      #16                 // Field org/apache/dubbo/metadata/rest/media/MediaType.value:Ljava/lang/String;
      20: invokevirtual #17                 // Method addOutputHeaders:(Ljava/lang/String;Ljava/lang/String;)V
      23: aload_0
      24: iload_1
      25: putfield      #3                  // Field status:I
      28: return

  public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getOutputHeaders();
    Code:
       0: aload_0
       1: getfield      #6                  // Field outputHeaders:Ljava/util/Map;
       4: areturn

  public java.io.OutputStream getOutputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field os:Ljava/io/OutputStream;
       4: areturn

  public void sendError(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokevirtual #18                 // Method sendError:(ILjava/lang/String;)V
       6: return

  public void sendError(int, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #19                 // Method setStatus:(I)V
       5: aload_2
       6: ifnull        23
       9: aload_0
      10: invokevirtual #20                 // Method getOutputStream:()Ljava/io/OutputStream;
      13: aload_2
      14: getstatic     #21                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      17: invokevirtual #22                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      20: invokevirtual #23                 // Method java/io/OutputStream.write:([B)V
      23: return

  public boolean isCommitted();
    Code:
       0: aload_0
       1: getfield      #24                 // Field committed:Z
       4: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #24                 // Field committed:Z
       4: ifeq          17
       7: new           #25                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #26                 // String Messages.MESSAGES.alreadyCommitted()
      13: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #6                  // Field outputHeaders:Ljava/util/Map;
      21: invokeinterface #28,  1           // InterfaceMethod java/util/Map.clear:()V
      26: aload_0
      27: getfield      #6                  // Field outputHeaders:Ljava/util/Map;
      30: invokeinterface #28,  1           // InterfaceMethod java/util/Map.clear:()V
      35: return

  public boolean isKeepAlive();
    Code:
       0: aload_0
       1: getfield      #12                 // Field keepAlive:Z
       4: ireturn

  public io.netty.handler.codec.http.DefaultHttpResponse getDefaultHttpResponse();
    Code:
       0: new           #29                 // class io/netty/handler/codec/http/DefaultHttpResponse
       3: dup
       4: getstatic     #30                 // Field io/netty/handler/codec/http/HttpVersion.HTTP_1_1:Lio/netty/handler/codec/http/HttpVersion;
       7: aload_0
       8: invokevirtual #31                 // Method getStatus:()I
      11: invokestatic  #32                 // Method io/netty/handler/codec/http/HttpResponseStatus.valueOf:(I)Lio/netty/handler/codec/http/HttpResponseStatus;
      14: invokespecial #33                 // Method io/netty/handler/codec/http/DefaultHttpResponse."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpResponseStatus;)V
      17: astore_1
      18: aload_0
      19: aload_1
      20: invokespecial #34                 // Method transformResponseHeaders:(Lio/netty/handler/codec/http/HttpResponse;)V
      23: aload_1
      24: areturn

  public io.netty.handler.codec.http.DefaultHttpResponse getEmptyHttpResponse();
    Code:
       0: new           #35                 // class io/netty/handler/codec/http/DefaultFullHttpResponse
       3: dup
       4: getstatic     #30                 // Field io/netty/handler/codec/http/HttpVersion.HTTP_1_1:Lio/netty/handler/codec/http/HttpVersion;
       7: aload_0
       8: invokevirtual #31                 // Method getStatus:()I
      11: invokestatic  #32                 // Method io/netty/handler/codec/http/HttpResponseStatus.valueOf:(I)Lio/netty/handler/codec/http/HttpResponseStatus;
      14: invokespecial #36                 // Method io/netty/handler/codec/http/DefaultFullHttpResponse."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpResponseStatus;)V
      17: astore_1
      18: aload_0
      19: getfield      #7                  // Field method:Lio/netty/handler/codec/http/HttpMethod;
      22: ifnull        38
      25: aload_0
      26: getfield      #7                  // Field method:Lio/netty/handler/codec/http/HttpMethod;
      29: getstatic     #37                 // Field io/netty/handler/codec/http/HttpMethod.HEAD:Lio/netty/handler/codec/http/HttpMethod;
      32: invokevirtual #38                 // Method io/netty/handler/codec/http/HttpMethod.equals:(Ljava/lang/Object;)Z
      35: ifne          52
      38: aload_1
      39: invokevirtual #39                 // Method io/netty/handler/codec/http/DefaultFullHttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      42: ldc           #41                 // String Content-Length
      44: iconst_0
      45: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: invokevirtual #44                 // Method io/netty/handler/codec/http/HttpHeaders.add:(Ljava/lang/String;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      51: pop
      52: aload_0
      53: aload_1
      54: invokespecial #34                 // Method transformResponseHeaders:(Lio/netty/handler/codec/http/HttpResponse;)V
      57: aload_1
      58: areturn

  private void transformResponseHeaders(io.netty.handler.codec.http.HttpResponse);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #45                 // Method transformHeaders:(Lorg/apache/dubbo/rpc/protocol/rest/netty/NettyHttpResponse;Lio/netty/handler/codec/http/HttpResponse;)V
       5: return

  public void prepareChunkStream();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #24                 // Field committed:Z
       5: aload_0
       6: invokevirtual #46                 // Method getDefaultHttpResponse:()Lio/netty/handler/codec/http/DefaultHttpResponse;
       9: astore_1
      10: aload_1
      11: invokestatic  #47                 // Method io/netty/handler/codec/http/HttpHeaders.setTransferEncodingChunked:(Lio/netty/handler/codec/http/HttpMessage;)V
      14: aload_0
      15: getfield      #11                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      18: aload_1
      19: invokeinterface #48,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      24: pop
      25: return

  public void finish() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field os:Ljava/io/OutputStream;
       4: ifnull        14
       7: aload_0
       8: getfield      #10                 // Field os:Ljava/io/OutputStream;
      11: invokevirtual #49                 // Method java/io/OutputStream.flush:()V
      14: aload_0
      15: invokevirtual #50                 // Method isCommitted:()Z
      18: ifeq          37
      21: aload_0
      22: getfield      #11                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      25: getstatic     #51                 // Field io/netty/handler/codec/http/LastHttpContent.EMPTY_LAST_CONTENT:Lio/netty/handler/codec/http/LastHttpContent;
      28: invokeinterface #52,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      33: astore_1
      34: goto          51
      37: aload_0
      38: getfield      #11                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      41: aload_0
      42: invokevirtual #53                 // Method getEmptyHttpResponse:()Lio/netty/handler/codec/http/DefaultHttpResponse;
      45: invokeinterface #52,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      50: astore_1
      51: aload_0
      52: invokevirtual #54                 // Method isKeepAlive:()Z
      55: ifne          68
      58: aload_1
      59: getstatic     #55                 // Field io/netty/channel/ChannelFutureListener.CLOSE:Lio/netty/channel/ChannelFutureListener;
      62: invokeinterface #56,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      67: pop
      68: aload_0
      69: invokevirtual #20                 // Method getOutputStream:()Ljava/io/OutputStream;
      72: invokevirtual #57                 // Method java/io/OutputStream.close:()V
      75: return

  public void flushBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field os:Ljava/io/OutputStream;
       4: ifnull        14
       7: aload_0
       8: getfield      #10                 // Field os:Ljava/io/OutputStream;
      11: invokevirtual #49                 // Method java/io/OutputStream.flush:()V
      14: aload_0
      15: getfield      #11                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      18: invokeinterface #58,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
      23: pop
      24: return

  public void addOutputHeaders(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field outputHeaders:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #59,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #60                 // class java/util/List
      13: astore_3
      14: aload_3
      15: ifnonnull     38
      18: new           #61                 // class java/util/ArrayList
      21: dup
      22: invokespecial #62                 // Method java/util/ArrayList."<init>":()V
      25: astore_3
      26: aload_0
      27: getfield      #6                  // Field outputHeaders:Ljava/util/Map;
      30: aload_1
      31: aload_3
      32: invokeinterface #63,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_3
      39: aload_2
      40: invokeinterface #64,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: return

  public static void transformHeaders(org.apache.dubbo.rpc.protocol.rest.netty.NettyHttpResponse, io.netty.handler.codec.http.HttpResponse);
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method getOutputHeaders:()Ljava/util/Map;
       4: invokeinterface #66,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #67,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          103
      24: aload_2
      25: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #70                 // class java/util/Map$Entry
      33: astore_3
      34: aload_3
      35: invokeinterface #71,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      40: checkcast     #72                 // class java/lang/String
      43: astore        4
      45: aload_3
      46: invokeinterface #73,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      51: checkcast     #60                 // class java/util/List
      54: invokeinterface #74,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      59: astore        5
      61: aload         5
      63: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          100
      71: aload         5
      73: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      78: checkcast     #72                 // class java/lang/String
      81: astore        6
      83: aload_1
      84: invokeinterface #75,  1           // InterfaceMethod io/netty/handler/codec/http/HttpResponse.headers:()Lio/netty/handler/codec/http/HttpHeaders;
      89: aload         4
      91: aload         6
      93: invokevirtual #76                 // Method io/netty/handler/codec/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/Object;)Lio/netty/handler/codec/http/HttpHeaders;
      96: pop
      97: goto          61
     100: goto          15
     103: return
}
