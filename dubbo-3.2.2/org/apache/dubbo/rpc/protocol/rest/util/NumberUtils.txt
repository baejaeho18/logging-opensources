Compiled from "NumberUtils.java"
public class org.apache.dubbo.rpc.protocol.rest.util.NumberUtils {
  public org.apache.dubbo.rpc.protocol.rest.util.NumberUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> T parseNumber(java.lang.String, java.lang.Class<T>);
    Code:
       0: aload_0
       1: ldc           #2                  // String Text must not be null
       3: invokestatic  #3                  // Method org/apache/dubbo/common/utils/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #4                  // String Target class must not be null
       9: invokestatic  #3                  // Method org/apache/dubbo/common/utils/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokestatic  #5                  // Method trimAllWhitespace:(Ljava/lang/String;)Ljava/lang/String;
      16: astore_2
      17: ldc           #6                  // class java/lang/Byte
      19: aload_1
      20: if_acmpeq     30
      23: getstatic     #7                  // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      26: aload_1
      27: if_acmpne     49
      30: aload_2
      31: invokestatic  #8                  // Method isHexNumber:(Ljava/lang/String;)Z
      34: ifeq          44
      37: aload_2
      38: invokestatic  #9                  // Method java/lang/Byte.decode:(Ljava/lang/String;)Ljava/lang/Byte;
      41: goto          48
      44: aload_2
      45: invokestatic  #10                 // Method java/lang/Byte.valueOf:(Ljava/lang/String;)Ljava/lang/Byte;
      48: areturn
      49: ldc           #11                 // class java/lang/Short
      51: aload_1
      52: if_acmpeq     62
      55: getstatic     #12                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      58: aload_1
      59: if_acmpne     81
      62: aload_2
      63: invokestatic  #8                  // Method isHexNumber:(Ljava/lang/String;)Z
      66: ifeq          76
      69: aload_2
      70: invokestatic  #13                 // Method java/lang/Short.decode:(Ljava/lang/String;)Ljava/lang/Short;
      73: goto          80
      76: aload_2
      77: invokestatic  #14                 // Method java/lang/Short.valueOf:(Ljava/lang/String;)Ljava/lang/Short;
      80: areturn
      81: ldc           #15                 // class java/lang/Integer
      83: aload_1
      84: if_acmpeq     94
      87: getstatic     #16                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      90: aload_1
      91: if_acmpne     113
      94: aload_2
      95: invokestatic  #8                  // Method isHexNumber:(Ljava/lang/String;)Z
      98: ifeq          108
     101: aload_2
     102: invokestatic  #17                 // Method java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;
     105: goto          112
     108: aload_2
     109: invokestatic  #18                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
     112: areturn
     113: ldc           #19                 // class java/lang/Long
     115: aload_1
     116: if_acmpeq     126
     119: getstatic     #20                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     122: aload_1
     123: if_acmpne     145
     126: aload_2
     127: invokestatic  #8                  // Method isHexNumber:(Ljava/lang/String;)Z
     130: ifeq          140
     133: aload_2
     134: invokestatic  #21                 // Method java/lang/Long.decode:(Ljava/lang/String;)Ljava/lang/Long;
     137: goto          144
     140: aload_2
     141: invokestatic  #22                 // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
     144: areturn
     145: ldc           #23                 // class java/math/BigInteger
     147: aload_1
     148: if_acmpne     174
     151: aload_2
     152: invokestatic  #8                  // Method isHexNumber:(Ljava/lang/String;)Z
     155: ifeq          165
     158: aload_2
     159: invokestatic  #24                 // Method decodeBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;
     162: goto          173
     165: new           #23                 // class java/math/BigInteger
     168: dup
     169: aload_2
     170: invokespecial #25                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
     173: areturn
     174: ldc           #26                 // class java/lang/Float
     176: aload_1
     177: if_acmpeq     187
     180: getstatic     #27                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     183: aload_1
     184: if_acmpne     192
     187: aload_2
     188: invokestatic  #28                 // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;
     191: areturn
     192: ldc           #29                 // class java/lang/Double
     194: aload_1
     195: if_acmpeq     205
     198: getstatic     #30                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
     201: aload_1
     202: if_acmpne     210
     205: aload_2
     206: invokestatic  #31                 // Method java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;
     209: areturn
     210: ldc           #32                 // class java/math/BigDecimal
     212: aload_1
     213: if_acmpeq     222
     216: ldc           #33                 // class java/lang/Number
     218: aload_1
     219: if_acmpne     231
     222: new           #32                 // class java/math/BigDecimal
     225: dup
     226: aload_2
     227: invokespecial #34                 // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
     230: areturn
     231: new           #35                 // class java/lang/IllegalArgumentException
     234: dup
     235: new           #36                 // class java/lang/StringBuilder
     238: dup
     239: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     242: ldc           #38                 // String Cannot convert String [
     244: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: aload_0
     248: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: ldc           #40                 // String ] to target class [
     253: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     256: aload_1
     257: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;
     260: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     263: ldc           #42                 // String ]
     265: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     268: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     271: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     274: athrow

  private static boolean isHexNumber(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #45                 // String -
       3: invokevirtual #46                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: istore_1
      15: aload_0
      16: ldc           #47                 // String 0x
      18: iload_1
      19: invokevirtual #48                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
      22: ifne          45
      25: aload_0
      26: ldc           #49                 // String 0X
      28: iload_1
      29: invokevirtual #48                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
      32: ifne          45
      35: aload_0
      36: ldc           #50                 // String #
      38: iload_1
      39: invokevirtual #48                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
      42: ifeq          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  private static java.math.BigInteger decodeBigInteger(java.lang.String);
    Code:
       0: bipush        10
       2: istore_1
       3: iconst_0
       4: istore_2
       5: iconst_0
       6: istore_3
       7: aload_0
       8: ldc           #45                 // String -
      10: invokevirtual #46                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      13: ifeq          21
      16: iconst_1
      17: istore_3
      18: iinc          2, 1
      21: aload_0
      22: ldc           #47                 // String 0x
      24: iload_2
      25: invokevirtual #48                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
      28: ifne          41
      31: aload_0
      32: ldc           #49                 // String 0X
      34: iload_2
      35: invokevirtual #48                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
      38: ifeq          50
      41: iinc          2, 2
      44: bipush        16
      46: istore_1
      47: goto          95
      50: aload_0
      51: ldc           #50                 // String #
      53: iload_2
      54: invokevirtual #48                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
      57: ifeq          69
      60: iinc          2, 1
      63: bipush        16
      65: istore_1
      66: goto          95
      69: aload_0
      70: ldc           #51                 // String 0
      72: iload_2
      73: invokevirtual #48                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
      76: ifeq          95
      79: aload_0
      80: invokevirtual #52                 // Method java/lang/String.length:()I
      83: iconst_1
      84: iload_2
      85: iadd
      86: if_icmple     95
      89: iinc          2, 1
      92: bipush        8
      94: istore_1
      95: new           #23                 // class java/math/BigInteger
      98: dup
      99: aload_0
     100: iload_2
     101: invokevirtual #53                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     104: iload_1
     105: invokespecial #54                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
     108: astore        4
     110: iload_3
     111: ifeq          122
     114: aload         4
     116: invokevirtual #55                 // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
     119: goto          124
     122: aload         4
     124: areturn

  public static java.lang.String trimAllWhitespace(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #56                 // Method org/apache/dubbo/common/utils/StringUtils.isEmpty:(Ljava/lang/String;)Z
       4: ifeq          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokevirtual #52                 // Method java/lang/String.length:()I
      13: istore_1
      14: new           #36                 // class java/lang/StringBuilder
      17: dup
      18: aload_0
      19: invokevirtual #52                 // Method java/lang/String.length:()I
      22: invokespecial #57                 // Method java/lang/StringBuilder."<init>":(I)V
      25: astore_2
      26: iconst_0
      27: istore_3
      28: iload_3
      29: iload_1
      30: if_icmpge     61
      33: aload_0
      34: iload_3
      35: invokevirtual #58                 // Method java/lang/String.charAt:(I)C
      38: istore        4
      40: iload         4
      42: invokestatic  #59                 // Method java/lang/Character.isWhitespace:(C)Z
      45: ifne          55
      48: aload_2
      49: iload         4
      51: invokevirtual #60                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      54: pop
      55: iinc          3, 1
      58: goto          28
      61: aload_2
      62: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: areturn

  public static java.lang.Object numberToBytes(java.lang.Number);
    Code:
       0: aload_0
       1: instanceof    #6                  // class java/lang/Byte
       4: ifeq          18
       7: aload_0
       8: invokevirtual #61                 // Method java/lang/Number.byteValue:()B
      11: invokestatic  #62                 // Method java/lang/Byte.toString:(B)Ljava/lang/String;
      14: invokevirtual #63                 // Method java/lang/String.getBytes:()[B
      17: areturn
      18: aload_0
      19: instanceof    #29                 // class java/lang/Double
      22: ifeq          36
      25: aload_0
      26: invokevirtual #64                 // Method java/lang/Number.doubleValue:()D
      29: invokestatic  #65                 // Method java/lang/Double.toString:(D)Ljava/lang/String;
      32: invokevirtual #63                 // Method java/lang/String.getBytes:()[B
      35: areturn
      36: aload_0
      37: instanceof    #26                 // class java/lang/Float
      40: ifeq          54
      43: aload_0
      44: invokevirtual #66                 // Method java/lang/Number.floatValue:()F
      47: invokestatic  #67                 // Method java/lang/Float.toString:(F)Ljava/lang/String;
      50: invokevirtual #63                 // Method java/lang/String.getBytes:()[B
      53: areturn
      54: aload_0
      55: instanceof    #15                 // class java/lang/Integer
      58: ifeq          73
      61: aload_0
      62: invokevirtual #68                 // Method java/lang/Number.intValue:()I
      65: i2f
      66: invokestatic  #67                 // Method java/lang/Float.toString:(F)Ljava/lang/String;
      69: invokevirtual #63                 // Method java/lang/String.getBytes:()[B
      72: areturn
      73: aload_0
      74: instanceof    #19                 // class java/lang/Long
      77: ifeq          91
      80: aload_0
      81: invokevirtual #69                 // Method java/lang/Number.longValue:()J
      84: invokestatic  #70                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      87: invokevirtual #63                 // Method java/lang/String.getBytes:()[B
      90: areturn
      91: aload_0
      92: instanceof    #11                 // class java/lang/Short
      95: ifeq          109
      98: aload_0
      99: invokevirtual #71                 // Method java/lang/Number.shortValue:()S
     102: invokestatic  #72                 // Method java/lang/Short.toString:(S)Ljava/lang/String;
     105: invokevirtual #63                 // Method java/lang/String.getBytes:()[B
     108: areturn
     109: aload_0
     110: instanceof    #32                 // class java/math/BigDecimal
     113: ifeq          132
     116: ldc           #32                 // class java/math/BigDecimal
     118: aload_0
     119: invokevirtual #73                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
     122: checkcast     #32                 // class java/math/BigDecimal
     125: invokevirtual #74                 // Method java/math/BigDecimal.toString:()Ljava/lang/String;
     128: invokevirtual #63                 // Method java/lang/String.getBytes:()[B
     131: areturn
     132: aload_0
     133: areturn
}
