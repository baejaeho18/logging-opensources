Compiled from "PathMatcher.java"
public class org.apache.dubbo.rpc.cluster.router.xds.rule.PathMatcher {
  private java.lang.String path;

  private java.lang.String prefix;

  private java.lang.String regex;

  private boolean caseSensitive;

  public org.apache.dubbo.rpc.cluster.router.xds.rule.PathMatcher();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: getfield      #2                  // Field path:Ljava/lang/String;
       4: areturn

  public void setPath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field path:Ljava/lang/String;
       5: return

  public java.lang.String getPrefix();
    Code:
       0: aload_0
       1: getfield      #3                  // Field prefix:Ljava/lang/String;
       4: areturn

  public void setPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field prefix:Ljava/lang/String;
       5: return

  public java.lang.String getRegex();
    Code:
       0: aload_0
       1: getfield      #4                  // Field regex:Ljava/lang/String;
       4: areturn

  public void setRegex(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field regex:Ljava/lang/String;
       5: return

  public boolean isCaseSensitive();
    Code:
       0: aload_0
       1: getfield      #5                  // Field caseSensitive:Z
       4: ireturn

  public void setCaseSensitive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field caseSensitive:Z
       5: return

  public boolean isMatch(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getPath:()Ljava/lang/String;
       4: ifnull        34
       7: aload_0
       8: invokevirtual #7                  // Method isCaseSensitive:()Z
      11: ifeq          25
      14: aload_0
      15: invokevirtual #6                  // Method getPath:()Ljava/lang/String;
      18: aload_1
      19: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      22: goto          33
      25: aload_0
      26: invokevirtual #6                  // Method getPath:()Ljava/lang/String;
      29: aload_1
      30: invokevirtual #9                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      33: ireturn
      34: aload_0
      35: invokevirtual #10                 // Method getPrefix:()Ljava/lang/String;
      38: ifnull        71
      41: aload_0
      42: invokevirtual #7                  // Method isCaseSensitive:()Z
      45: ifeq          59
      48: aload_1
      49: aload_0
      50: invokevirtual #10                 // Method getPrefix:()Ljava/lang/String;
      53: invokevirtual #11                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      56: goto          70
      59: aload_1
      60: invokevirtual #12                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      63: aload_0
      64: invokevirtual #10                 // Method getPrefix:()Ljava/lang/String;
      67: invokevirtual #11                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      70: ireturn
      71: aload_1
      72: aload_0
      73: invokevirtual #13                 // Method getRegex:()Ljava/lang/String;
      76: invokevirtual #14                 // Method java/lang/String.matches:(Ljava/lang/String;)Z
      79: ireturn
}
