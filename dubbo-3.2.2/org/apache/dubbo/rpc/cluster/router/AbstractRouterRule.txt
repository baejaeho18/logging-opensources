Compiled from "AbstractRouterRule.java"
public abstract class org.apache.dubbo.rpc.cluster.router.AbstractRouterRule {
  private java.lang.String rawRule;

  private boolean runtime;

  private boolean force;

  private boolean valid;

  private boolean enabled;

  private int priority;

  private boolean dynamic;

  private java.lang.String version;

  private java.lang.String scope;

  private java.lang.String key;

  public org.apache.dubbo.rpc.cluster.router.AbstractRouterRule();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field runtime:Z
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field force:Z
      14: aload_0
      15: iconst_1
      16: putfield      #5                  // Field valid:Z
      19: aload_0
      20: iconst_1
      21: putfield      #6                  // Field enabled:Z
      24: aload_0
      25: iconst_0
      26: putfield      #7                  // Field dynamic:Z
      29: return

  protected void parseFromMap0(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #8                  // String rawRule
       4: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #10                 // class java/lang/String
      12: invokevirtual #11                 // Method setRawRule:(Ljava/lang/String;)V
      15: aload_1
      16: ldc           #12                 // String runtime
      18: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: astore_2
      24: aload_2
      25: ifnull        39
      28: aload_0
      29: aload_2
      30: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      33: invokestatic  #14                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      36: invokevirtual #15                 // Method setRuntime:(Z)V
      39: aload_1
      40: ldc           #16                 // String force
      42: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      47: astore_3
      48: aload_3
      49: ifnull        63
      52: aload_0
      53: aload_3
      54: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      57: invokestatic  #14                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      60: invokevirtual #17                 // Method setForce:(Z)V
      63: aload_1
      64: ldc           #18                 // String valid
      66: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      71: astore        4
      73: aload         4
      75: ifnull        90
      78: aload_0
      79: aload         4
      81: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      84: invokestatic  #14                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      87: invokevirtual #19                 // Method setValid:(Z)V
      90: aload_1
      91: ldc           #20                 // String enabled
      93: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      98: astore        5
     100: aload         5
     102: ifnull        117
     105: aload_0
     106: aload         5
     108: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
     111: invokestatic  #14                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
     114: invokevirtual #21                 // Method setEnabled:(Z)V
     117: aload_1
     118: ldc           #22                 // String priority
     120: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     125: astore        6
     127: aload         6
     129: ifnull        144
     132: aload_0
     133: aload         6
     135: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
     138: invokestatic  #23                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     141: invokevirtual #24                 // Method setPriority:(I)V
     144: aload_1
     145: ldc           #25                 // String dynamic
     147: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     152: astore        7
     154: aload         7
     156: ifnull        171
     159: aload_0
     160: aload         7
     162: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
     165: invokestatic  #14                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
     168: invokevirtual #26                 // Method setDynamic:(Z)V
     171: aload_0
     172: aload_1
     173: ldc           #27                 // String scope
     175: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     180: checkcast     #10                 // class java/lang/String
     183: invokevirtual #28                 // Method setScope:(Ljava/lang/String;)V
     186: aload_0
     187: aload_1
     188: ldc           #29                 // String key
     190: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     195: checkcast     #10                 // class java/lang/String
     198: invokevirtual #30                 // Method setKey:(Ljava/lang/String;)V
     201: aload_0
     202: aload_1
     203: ldc           #31                 // String configVersion
     205: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     210: checkcast     #10                 // class java/lang/String
     213: invokevirtual #32                 // Method setVersion:(Ljava/lang/String;)V
     216: return

  public java.lang.String getRawRule();
    Code:
       0: aload_0
       1: getfield      #33                 // Field rawRule:Ljava/lang/String;
       4: areturn

  public void setRawRule(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field rawRule:Ljava/lang/String;
       5: return

  public boolean isRuntime();
    Code:
       0: aload_0
       1: getfield      #3                  // Field runtime:Z
       4: ireturn

  public void setRuntime(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field runtime:Z
       5: return

  public boolean isForce();
    Code:
       0: aload_0
       1: getfield      #4                  // Field force:Z
       4: ireturn

  public void setForce(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field force:Z
       5: return

  public boolean isValid();
    Code:
       0: aload_0
       1: getfield      #5                  // Field valid:Z
       4: ireturn

  public void setValid(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field valid:Z
       5: return

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #6                  // Field enabled:Z
       4: ireturn

  public void setEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field enabled:Z
       5: return

  public int getPriority();
    Code:
       0: aload_0
       1: getfield      #34                 // Field priority:I
       4: ireturn

  public void setPriority(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #34                 // Field priority:I
       5: return

  public boolean isDynamic();
    Code:
       0: aload_0
       1: getfield      #7                  // Field dynamic:Z
       4: ireturn

  public void setDynamic(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field dynamic:Z
       5: return

  public java.lang.String getScope();
    Code:
       0: aload_0
       1: getfield      #35                 // Field scope:Ljava/lang/String;
       4: areturn

  public void setScope(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field scope:Ljava/lang/String;
       5: return

  public java.lang.String getKey();
    Code:
       0: aload_0
       1: getfield      #36                 // Field key:Ljava/lang/String;
       4: areturn

  public void setKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field key:Ljava/lang/String;
       5: return

  public java.lang.String getVersion();
    Code:
       0: aload_0
       1: getfield      #37                 // Field version:Ljava/lang/String;
       4: areturn

  public void setVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field version:Ljava/lang/String;
       5: return
}
