Compiled from "Tag.java"
public class org.apache.dubbo.rpc.cluster.router.tag.model.Tag {
  private static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  private java.lang.String name;

  private java.util.List<org.apache.dubbo.rpc.cluster.router.tag.model.ParamMatch> match;

  private java.util.List<java.lang.String> addresses;

  public org.apache.dubbo.rpc.cluster.router.tag.model.Tag();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.dubbo.rpc.cluster.router.tag.model.Tag parseFromMap(java.util.Map<java.lang.String, java.lang.Object>, java.lang.String);
    Code:
       0: new           #4                  // class org/apache/dubbo/rpc/cluster/router/tag/model/Tag
       3: dup
       4: invokespecial #5                  // Method "<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: ldc           #6                  // String name
      12: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #8                  // class java/lang/String
      20: invokevirtual #9                  // Method setName:(Ljava/lang/String;)V
      23: aload_1
      24: ifnull        109
      27: aload_1
      28: ldc           #10                 // String v3.0
      30: invokevirtual #11                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      33: ifeq          109
      36: aload_0
      37: ldc           #12                 // String match
      39: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: ifnull        91
      47: aload_2
      48: aload_0
      49: ldc           #12                 // String match
      51: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #13                 // class java/util/List
      59: invokeinterface #14,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      64: invokedynamic #15,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      69: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      74: invokestatic  #17                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      77: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      82: checkcast     #13                 // class java/util/List
      85: invokevirtual #19                 // Method setMatch:(Ljava/util/List;)V
      88: goto          109
      91: getstatic     #20                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      94: ldc           #21                 // String 2-15
      96: ldc           #22                 // String
      98: aload_0
      99: invokestatic  #23                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     102: ldc           #24                 // String It\'s recommended to use \'match\' instead of \'addresses\' for v3.0 tag rule.
     104: invokeinterface #25,  5           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.warn:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     109: aload_0
     110: ldc           #26                 // String addresses
     112: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     117: astore_3
     118: aload_3
     119: ifnull        168
     122: ldc           #13                 // class java/util/List
     124: aload_3
     125: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     128: invokevirtual #28                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     131: ifeq          168
     134: aload_2
     135: aload_3
     136: checkcast     #13                 // class java/util/List
     139: invokeinterface #14,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     144: invokedynamic #29,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
     149: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     154: invokestatic  #17                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     157: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     162: checkcast     #13                 // class java/util/List
     165: invokevirtual #30                 // Method setAddresses:(Ljava/util/List;)V
     168: aload_2
     169: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #31                 // Field name:Ljava/lang/String;
       4: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field name:Ljava/lang/String;
       5: return

  public java.util.List<java.lang.String> getAddresses();
    Code:
       0: aload_0
       1: getfield      #32                 // Field addresses:Ljava/util/List;
       4: areturn

  public void setAddresses(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field addresses:Ljava/util/List;
       5: return

  public java.util.List<org.apache.dubbo.rpc.cluster.router.tag.model.ParamMatch> getMatch();
    Code:
       0: aload_0
       1: getfield      #33                 // Field match:Ljava/util/List;
       4: areturn

  public void setMatch(java.util.List<org.apache.dubbo.rpc.cluster.router.tag.model.ParamMatch>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field match:Ljava/util/List;
       5: return

  private static org.apache.dubbo.rpc.cluster.router.tag.model.ParamMatch lambda$parseFromMap$0(java.util.Map);
    Code:
       0: aload_0
       1: ldc           #34                 // class org/apache/dubbo/rpc/cluster/router/tag/model/ParamMatch
       3: invokestatic  #35                 // Method org/apache/dubbo/common/utils/PojoUtils.mapToPojo:(Ljava/util/Map;Ljava/lang/Class;)Ljava/lang/Object;
       6: checkcast     #34                 // class org/apache/dubbo/rpc/cluster/router/tag/model/ParamMatch
       9: areturn
      10: astore_1
      11: getstatic     #20                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      14: ldc           #21                 // String 2-15
      16: ldc           #37                 // String  Failed to parse tag rule
      18: aload_0
      19: invokestatic  #23                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      22: ldc           #38                 // String Error occurred when parsing rule component.
      24: aload_1
      25: invokeinterface #39,  6           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      30: aconst_null
      31: areturn
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/ReflectiveOperationException

  static {};
    Code:
       0: ldc           #4                  // class org/apache/dubbo/rpc/cluster/router/tag/model/Tag
       2: invokestatic  #40                 // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #20                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: return
}
