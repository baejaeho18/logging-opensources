Compiled from "TagRouterRule.java"
public class org.apache.dubbo.rpc.cluster.router.tag.model.TagRouterRule extends org.apache.dubbo.rpc.cluster.router.AbstractRouterRule {
  private java.util.List<org.apache.dubbo.rpc.cluster.router.tag.model.Tag> tags;

  private final java.util.Map<java.lang.String, java.util.Set<java.lang.String>> addressToTagnames;

  private final java.util.Map<java.lang.String, java.util.Set<java.lang.String>> tagnameToAddresses;

  public org.apache.dubbo.rpc.cluster.router.tag.model.TagRouterRule();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/dubbo/rpc/cluster/router/AbstractRouterRule."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field addressToTagnames:Ljava/util/Map;
      15: aload_0
      16: new           #3                  // class java/util/HashMap
      19: dup
      20: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      23: putfield      #6                  // Field tagnameToAddresses:Ljava/util/Map;
      26: return

  public static org.apache.dubbo.rpc.cluster.router.tag.model.TagRouterRule parseFromMap(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #7                  // class org/apache/dubbo/rpc/cluster/router/tag/model/TagRouterRule
       3: dup
       4: invokespecial #8                  // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #9                  // Method parseFromMap0:(Ljava/util/Map;)V
      13: aload_0
      14: ldc           #10                 // String tags
      16: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: astore_2
      22: aload_2
      23: ifnull        73
      26: ldc           #12                 // class java/util/List
      28: aload_2
      29: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: invokevirtual #14                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      35: ifeq          73
      38: aload_1
      39: aload_2
      40: checkcast     #12                 // class java/util/List
      43: invokeinterface #15,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      48: aload_1
      49: invokedynamic #16,  0             // InvokeDynamic #0:apply:(Lorg/apache/dubbo/rpc/cluster/router/tag/model/TagRouterRule;)Ljava/util/function/Function;
      54: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      59: invokestatic  #18                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      62: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      67: checkcast     #12                 // class java/util/List
      70: invokevirtual #20                 // Method setTags:(Ljava/util/List;)V
      73: aload_1
      74: areturn

  public void init(org.apache.dubbo.rpc.cluster.router.tag.TagStateRouter<?>);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method isValid:()Z
       4: ifne          8
       7: return
       8: aload_1
       9: invokevirtual #22                 // Method org/apache/dubbo/rpc/cluster/router/tag/TagStateRouter.getInvokers:()Lorg/apache/dubbo/rpc/cluster/router/state/BitList;
      12: astore_2
      13: aload_0
      14: getfield      #23                 // Field tags:Ljava/util/List;
      17: invokeinterface #15,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      22: invokedynamic #24,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      27: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      32: aload_0
      33: invokedynamic #26,  0             // InvokeDynamic #2:accept:(Lorg/apache/dubbo/rpc/cluster/router/tag/model/TagRouterRule;)Ljava/util/function/Consumer;
      38: invokeinterface #27,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      43: aload_0
      44: invokevirtual #28                 // Method getVersion:()Ljava/lang/String;
      47: ifnull        100
      50: aload_0
      51: invokevirtual #28                 // Method getVersion:()Ljava/lang/String;
      54: ldc           #29                 // String v3.0
      56: invokevirtual #30                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      59: ifeq          100
      62: aload_2
      63: invokestatic  #31                 // Method org/apache/dubbo/common/utils/CollectionUtils.isNotEmpty:(Ljava/util/Collection;)Z
      66: ifeq          100
      69: aload_0
      70: getfield      #23                 // Field tags:Ljava/util/List;
      73: invokeinterface #15,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      78: invokedynamic #32,  0             // InvokeDynamic #3:test:()Ljava/util/function/Predicate;
      83: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      88: aload_0
      89: aload_2
      90: invokedynamic #33,  0             // InvokeDynamic #4:accept:(Lorg/apache/dubbo/rpc/cluster/router/tag/model/TagRouterRule;Lorg/apache/dubbo/rpc/cluster/router/state/BitList;)Ljava/util/function/Consumer;
      95: invokeinterface #27,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
     100: return

  public java.util.Set<java.lang.String> getAddresses();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tagnameToAddresses:Ljava/util/Map;
       4: invokeinterface #34,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #35,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #36,  0             // InvokeDynamic #5:test:()Ljava/util/function/Predicate;
      19: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      24: invokedynamic #37,  0             // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      29: invokeinterface #38,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      34: invokestatic  #39                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      37: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      42: checkcast     #40                 // class java/util/Set
      45: areturn

  public java.util.List<java.lang.String> getTagNames();
    Code:
       0: aload_0
       1: getfield      #23                 // Field tags:Ljava/util/List;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #41,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      14: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: invokestatic  #18                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      22: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      27: checkcast     #12                 // class java/util/List
      30: areturn

  public java.util.Map<java.lang.String, java.util.Set<java.lang.String>> getAddressToTagnames();
    Code:
       0: aload_0
       1: getfield      #5                  // Field addressToTagnames:Ljava/util/Map;
       4: areturn

  public java.util.Map<java.lang.String, java.util.Set<java.lang.String>> getTagnameToAddresses();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tagnameToAddresses:Ljava/util/Map;
       4: areturn

  public java.util.List<org.apache.dubbo.rpc.cluster.router.tag.model.Tag> getTags();
    Code:
       0: aload_0
       1: getfield      #23                 // Field tags:Ljava/util/List;
       4: areturn

  public void setTags(java.util.List<org.apache.dubbo.rpc.cluster.router.tag.model.Tag>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field tags:Ljava/util/List;
       5: return

  private static java.util.stream.Stream lambda$getAddresses$9(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       6: checkcast     #40                 // class java/util/Set
       9: invokeinterface #35,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      14: areturn

  private static boolean lambda$getAddresses$8(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       6: checkcast     #43                 // class java/util/Collection
       9: invokestatic  #31                 // Method org/apache/dubbo/common/utils/CollectionUtils.isNotEmpty:(Ljava/util/Collection;)Z
      12: ireturn

  private void lambda$init$7(org.apache.dubbo.rpc.cluster.router.state.BitList, org.apache.dubbo.rpc.cluster.router.tag.model.Tag);
    Code:
       0: new           #44                 // class java/util/HashSet
       3: dup
       4: invokespecial #45                 // Method java/util/HashSet."<init>":()V
       7: astore_3
       8: aload_2
       9: invokevirtual #46                 // Method org/apache/dubbo/rpc/cluster/router/tag/model/Tag.getMatch:()Ljava/util/List;
      12: astore        4
      14: aload_1
      15: aload         4
      17: aload_3
      18: invokedynamic #47,  0             // InvokeDynamic #8:accept:(Ljava/util/List;Ljava/util/Set;)Ljava/util/function/Consumer;
      23: invokevirtual #48                 // Method org/apache/dubbo/rpc/cluster/router/state/BitList.forEach:(Ljava/util/function/Consumer;)V
      26: aload_3
      27: invokestatic  #31                 // Method org/apache/dubbo/common/utils/CollectionUtils.isNotEmpty:(Ljava/util/Collection;)Z
      30: ifeq          48
      33: aload_0
      34: getfield      #6                  // Field tagnameToAddresses:Ljava/util/Map;
      37: aload_2
      38: invokevirtual #49                 // Method org/apache/dubbo/rpc/cluster/router/tag/model/Tag.getName:()Ljava/lang/String;
      41: aload_3
      42: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: return

  private static void lambda$null$6(java.util.List, java.util.Set, org.apache.dubbo.rpc.Invoker);
    Code:
       0: iconst_1
       1: istore_3
       2: aload_0
       3: invokeinterface #51,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore        4
      10: aload         4
      12: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          62
      20: aload         4
      22: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #54                 // class org/apache/dubbo/rpc/cluster/router/tag/model/ParamMatch
      30: astore        5
      32: aload         5
      34: aload_2
      35: invokeinterface #55,  1           // InterfaceMethod org/apache/dubbo/rpc/Invoker.getUrl:()Lorg/apache/dubbo/common/URL;
      40: aload         5
      42: invokevirtual #56                 // Method org/apache/dubbo/rpc/cluster/router/tag/model/ParamMatch.getKey:()Ljava/lang/String;
      45: invokevirtual #57                 // Method org/apache/dubbo/common/URL.getOriginalParameter:(Ljava/lang/String;)Ljava/lang/String;
      48: invokevirtual #58                 // Method org/apache/dubbo/rpc/cluster/router/tag/model/ParamMatch.isMatch:(Ljava/lang/String;)Z
      51: ifne          59
      54: iconst_0
      55: istore_3
      56: goto          62
      59: goto          10
      62: iload_3
      63: ifeq          82
      66: aload_1
      67: aload_2
      68: invokeinterface #55,  1           // InterfaceMethod org/apache/dubbo/rpc/Invoker.getUrl:()Lorg/apache/dubbo/common/URL;
      73: invokevirtual #59                 // Method org/apache/dubbo/common/URL.getAddress:()Ljava/lang/String;
      76: invokeinterface #60,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      81: pop
      82: return

  private static boolean lambda$init$5(org.apache.dubbo.rpc.cluster.router.tag.model.Tag);
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method org/apache/dubbo/rpc/cluster/router/tag/model/Tag.getAddresses:()Ljava/util/List;
       4: invokestatic  #62                 // Method org/apache/dubbo/common/utils/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ireturn

  private void lambda$init$4(org.apache.dubbo.rpc.cluster.router.tag.model.Tag);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tagnameToAddresses:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #49                 // Method org/apache/dubbo/rpc/cluster/router/tag/model/Tag.getName:()Ljava/lang/String;
       8: new           #44                 // class java/util/HashSet
      11: dup
      12: aload_1
      13: invokevirtual #61                 // Method org/apache/dubbo/rpc/cluster/router/tag/model/Tag.getAddresses:()Ljava/util/List;
      16: invokespecial #63                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      19: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_1
      26: invokevirtual #61                 // Method org/apache/dubbo/rpc/cluster/router/tag/model/Tag.getAddresses:()Ljava/util/List;
      29: aload_0
      30: aload_1
      31: invokedynamic #64,  0             // InvokeDynamic #9:accept:(Lorg/apache/dubbo/rpc/cluster/router/tag/model/TagRouterRule;Lorg/apache/dubbo/rpc/cluster/router/tag/model/Tag;)Ljava/util/function/Consumer;
      36: invokeinterface #65,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      41: return

  private void lambda$null$3(org.apache.dubbo.rpc.cluster.router.tag.model.Tag, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field addressToTagnames:Ljava/util/Map;
       4: aload_2
       5: invokedynamic #66,  0             // InvokeDynamic #10:apply:()Ljava/util/function/Function;
      10: invokeinterface #67,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #40                 // class java/util/Set
      18: astore_3
      19: aload_3
      20: aload_1
      21: invokevirtual #49                 // Method org/apache/dubbo/rpc/cluster/router/tag/model/Tag.getName:()Ljava/lang/String;
      24: invokeinterface #60,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      29: pop
      30: return

  private static java.util.Set lambda$null$2(java.lang.String);
    Code:
       0: new           #44                 // class java/util/HashSet
       3: dup
       4: invokespecial #45                 // Method java/util/HashSet."<init>":()V
       7: areturn

  private static boolean lambda$init$1(org.apache.dubbo.rpc.cluster.router.tag.model.Tag);
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method org/apache/dubbo/rpc/cluster/router/tag/model/Tag.getAddresses:()Ljava/util/List;
       4: invokestatic  #31                 // Method org/apache/dubbo/common/utils/CollectionUtils.isNotEmpty:(Ljava/util/Collection;)Z
       7: ireturn

  private static org.apache.dubbo.rpc.cluster.router.tag.model.Tag lambda$parseFromMap$0(org.apache.dubbo.rpc.cluster.router.tag.model.TagRouterRule, java.util.Map);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #28                 // Method getVersion:()Ljava/lang/String;
       5: invokestatic  #68                 // Method org/apache/dubbo/rpc/cluster/router/tag/model/Tag.parseFromMap:(Ljava/util/Map;Ljava/lang/String;)Lorg/apache/dubbo/rpc/cluster/router/tag/model/Tag;
       8: areturn
}
