Compiled from "CacheableStateRouterFactory.java"
public abstract class org.apache.dubbo.rpc.cluster.router.state.CacheableStateRouterFactory implements org.apache.dubbo.rpc.cluster.router.state.StateRouterFactory {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.dubbo.rpc.cluster.router.state.StateRouter> routerMap;

  public org.apache.dubbo.rpc.cluster.router.state.CacheableStateRouterFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field routerMap:Ljava/util/concurrent/ConcurrentMap;
      15: return

  public <T> org.apache.dubbo.rpc.cluster.router.state.StateRouter<T> getRouter(java.lang.Class<T>, org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: getfield      #4                  // Field routerMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokevirtual #5                  // Method org/apache/dubbo/common/URL.getServiceKey:()Ljava/lang/String;
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokedynamic #6,  0              // InvokeDynamic #0:apply:(Lorg/apache/dubbo/rpc/cluster/router/state/CacheableStateRouterFactory;Ljava/lang/Class;Lorg/apache/dubbo/common/URL;)Ljava/util/function/Function;
      16: invokestatic  #7                  // Method org/apache/dubbo/common/utils/ConcurrentHashMapUtils.computeIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      19: checkcast     #8                  // class org/apache/dubbo/rpc/cluster/router/state/StateRouter
      22: areturn

  protected abstract <T> org.apache.dubbo.rpc.cluster.router.state.StateRouter<T> createRouter(java.lang.Class<T>, org.apache.dubbo.common.URL);

  private org.apache.dubbo.rpc.cluster.router.state.StateRouter lambda$getRouter$0(java.lang.Class, org.apache.dubbo.common.URL, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #9                  // Method createRouter:(Ljava/lang/Class;Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/rpc/cluster/router/state/StateRouter;
       6: areturn
}
