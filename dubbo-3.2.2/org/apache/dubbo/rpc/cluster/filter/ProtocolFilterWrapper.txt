Compiled from "ProtocolFilterWrapper.java"
public class org.apache.dubbo.rpc.cluster.filter.ProtocolFilterWrapper implements org.apache.dubbo.rpc.Protocol {
  private final org.apache.dubbo.rpc.Protocol protocol;

  public org.apache.dubbo.rpc.cluster.filter.ProtocolFilterWrapper(org.apache.dubbo.rpc.Protocol);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #3                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #4                  // String protocol == null
      14: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #6                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
      23: return

  public int getDefaultPort();
    Code:
       0: aload_0
       1: getfield      #6                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
       4: invokeinterface #7,  1            // InterfaceMethod org/apache/dubbo/rpc/Protocol.getDefaultPort:()I
       9: ireturn

  public <T> org.apache.dubbo.rpc.Exporter<T> export(org.apache.dubbo.rpc.Invoker<T>) throws org.apache.dubbo.rpc.RpcException;
    Code:
       0: aload_1
       1: invokeinterface #8,  1            // InterfaceMethod org/apache/dubbo/rpc/Invoker.getUrl:()Lorg/apache/dubbo/common/URL;
       6: invokestatic  #9                  // Method org/apache/dubbo/common/utils/UrlUtils.isRegistry:(Lorg/apache/dubbo/common/URL;)Z
       9: ifeq          23
      12: aload_0
      13: getfield      #6                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
      16: aload_1
      17: invokeinterface #10,  2           // InterfaceMethod org/apache/dubbo/rpc/Protocol.export:(Lorg/apache/dubbo/rpc/Invoker;)Lorg/apache/dubbo/rpc/Exporter;
      22: areturn
      23: aload_0
      24: aload_1
      25: invokeinterface #8,  1            // InterfaceMethod org/apache/dubbo/rpc/Invoker.getUrl:()Lorg/apache/dubbo/common/URL;
      30: invokespecial #11                 // Method getFilterChainBuilder:(Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/rpc/cluster/filter/FilterChainBuilder;
      33: astore_2
      34: aload_0
      35: getfield      #6                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
      38: aload_2
      39: aload_1
      40: ldc           #12                 // String service.filter
      42: ldc           #13                 // String provider
      44: invokeinterface #14,  4           // InterfaceMethod org/apache/dubbo/rpc/cluster/filter/FilterChainBuilder.buildInvokerChain:(Lorg/apache/dubbo/rpc/Invoker;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/dubbo/rpc/Invoker;
      49: invokeinterface #10,  2           // InterfaceMethod org/apache/dubbo/rpc/Protocol.export:(Lorg/apache/dubbo/rpc/Invoker;)Lorg/apache/dubbo/rpc/Exporter;
      54: areturn

  private <T> org.apache.dubbo.rpc.cluster.filter.FilterChainBuilder getFilterChainBuilder(org.apache.dubbo.common.URL);
    Code:
       0: ldc           #15                 // class org/apache/dubbo/rpc/cluster/filter/FilterChainBuilder
       2: aload_1
       3: invokevirtual #16                 // Method org/apache/dubbo/common/URL.getScopeModel:()Lorg/apache/dubbo/rpc/model/ScopeModel;
       6: invokestatic  #17                 // Method org/apache/dubbo/rpc/model/ScopeModelUtil.getExtensionLoader:(Ljava/lang/Class;Lorg/apache/dubbo/rpc/model/ScopeModel;)Lorg/apache/dubbo/common/extension/ExtensionLoader;
       9: invokevirtual #18                 // Method org/apache/dubbo/common/extension/ExtensionLoader.getDefaultExtension:()Ljava/lang/Object;
      12: checkcast     #15                 // class org/apache/dubbo/rpc/cluster/filter/FilterChainBuilder
      15: areturn

  public <T> org.apache.dubbo.rpc.Invoker<T> refer(java.lang.Class<T>, org.apache.dubbo.common.URL) throws org.apache.dubbo.rpc.RpcException;
    Code:
       0: aload_2
       1: invokestatic  #9                  // Method org/apache/dubbo/common/utils/UrlUtils.isRegistry:(Lorg/apache/dubbo/common/URL;)Z
       4: ifeq          19
       7: aload_0
       8: getfield      #6                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
      11: aload_1
      12: aload_2
      13: invokeinterface #19,  3           // InterfaceMethod org/apache/dubbo/rpc/Protocol.refer:(Ljava/lang/Class;Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/rpc/Invoker;
      18: areturn
      19: aload_0
      20: aload_2
      21: invokespecial #11                 // Method getFilterChainBuilder:(Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/rpc/cluster/filter/FilterChainBuilder;
      24: astore_3
      25: aload_3
      26: aload_0
      27: getfield      #6                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
      30: aload_1
      31: aload_2
      32: invokeinterface #19,  3           // InterfaceMethod org/apache/dubbo/rpc/Protocol.refer:(Ljava/lang/Class;Lorg/apache/dubbo/common/URL;)Lorg/apache/dubbo/rpc/Invoker;
      37: ldc           #20                 // String reference.filter
      39: ldc           #21                 // String consumer
      41: invokeinterface #14,  4           // InterfaceMethod org/apache/dubbo/rpc/cluster/filter/FilterChainBuilder.buildInvokerChain:(Lorg/apache/dubbo/rpc/Invoker;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/dubbo/rpc/Invoker;
      46: areturn

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #6                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
       4: invokeinterface #22,  1           // InterfaceMethod org/apache/dubbo/rpc/Protocol.destroy:()V
       9: return

  public java.util.List<org.apache.dubbo.rpc.ProtocolServer> getServers();
    Code:
       0: aload_0
       1: getfield      #6                  // Field protocol:Lorg/apache/dubbo/rpc/Protocol;
       4: invokeinterface #23,  1           // InterfaceMethod org/apache/dubbo/rpc/Protocol.getServers:()Ljava/util/List;
       9: areturn
}
