Compiled from "ConfigItem.java"
public class org.apache.dubbo.rpc.cluster.configurator.parser.model.ConfigItem {
  private static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  public static final java.lang.String GENERAL_TYPE;

  public static final java.lang.String WEIGHT_TYPE;

  public static final java.lang.String BALANCING_TYPE;

  public static final java.lang.String DISABLED_TYPE;

  public static final java.lang.String CONFIG_ITEM_TYPE;

  public static final java.lang.String ENABLED_KEY;

  public static final java.lang.String ADDRESSES_KEY;

  public static final java.lang.String PROVIDER_ADDRESSES_KEY;

  public static final java.lang.String SERVICES_KEY;

  public static final java.lang.String APPLICATIONS_KEY;

  public static final java.lang.String PARAMETERS_KEY;

  public static final java.lang.String MATCH_KEY;

  public static final java.lang.String SIDE_KEY;

  private java.lang.String type;

  private java.lang.Boolean enabled;

  private java.util.List<java.lang.String> addresses;

  private java.util.List<java.lang.String> providerAddresses;

  private java.util.List<java.lang.String> services;

  private java.util.List<java.lang.String> applications;

  private java.util.Map<java.lang.String, java.lang.String> parameters;

  private org.apache.dubbo.rpc.cluster.configurator.parser.model.ConditionMatch match;

  private java.lang.String side;

  public org.apache.dubbo.rpc.cluster.configurator.parser.model.ConfigItem();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.apache.dubbo.rpc.cluster.configurator.parser.model.ConfigItem parseFromMap(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #3                  // class org/apache/dubbo/rpc/cluster/configurator/parser/model/ConfigItem
       3: dup
       4: invokespecial #4                  // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: ldc           #5                  // String type
      12: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #7                  // class java/lang/String
      20: invokevirtual #8                  // Method setType:(Ljava/lang/String;)V
      23: aload_0
      24: ldc           #9                  // String enabled
      26: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: astore_2
      32: aload_2
      33: ifnull        50
      36: aload_1
      37: aload_2
      38: invokevirtual #10                 // Method java/lang/Object.toString:()Ljava/lang/String;
      41: invokestatic  #11                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      44: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      47: invokevirtual #13                 // Method setEnabled:(Ljava/lang/Boolean;)V
      50: aload_0
      51: ldc           #14                 // String addresses
      53: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      58: astore_3
      59: aload_3
      60: ifnull        109
      63: ldc           #15                 // class java/util/List
      65: aload_3
      66: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      69: invokevirtual #17                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      72: ifeq          109
      75: aload_1
      76: aload_3
      77: checkcast     #15                 // class java/util/List
      80: invokeinterface #18,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      85: invokedynamic #19,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      90: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      95: invokestatic  #21                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      98: invokeinterface #22,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     103: checkcast     #15                 // class java/util/List
     106: invokevirtual #23                 // Method setAddresses:(Ljava/util/List;)V
     109: aload_0
     110: ldc           #24                 // String providerAddresses
     112: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     117: astore        4
     119: aload         4
     121: ifnull        172
     124: ldc           #15                 // class java/util/List
     126: aload         4
     128: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     131: invokevirtual #17                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     134: ifeq          172
     137: aload_1
     138: aload         4
     140: checkcast     #15                 // class java/util/List
     143: invokeinterface #18,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     148: invokedynamic #19,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
     153: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     158: invokestatic  #21                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     161: invokeinterface #22,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     166: checkcast     #15                 // class java/util/List
     169: invokevirtual #25                 // Method setProviderAddresses:(Ljava/util/List;)V
     172: aload_0
     173: ldc           #26                 // String services
     175: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     180: astore        5
     182: aload         5
     184: ifnull        235
     187: ldc           #15                 // class java/util/List
     189: aload         5
     191: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     194: invokevirtual #17                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     197: ifeq          235
     200: aload_1
     201: aload         5
     203: checkcast     #15                 // class java/util/List
     206: invokeinterface #18,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     211: invokedynamic #19,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
     216: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     221: invokestatic  #21                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     224: invokeinterface #22,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     229: checkcast     #15                 // class java/util/List
     232: invokevirtual #27                 // Method setServices:(Ljava/util/List;)V
     235: aload_0
     236: ldc           #28                 // String applications
     238: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     243: astore        6
     245: aload         6
     247: ifnull        298
     250: ldc           #15                 // class java/util/List
     252: aload         6
     254: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     257: invokevirtual #17                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     260: ifeq          298
     263: aload_1
     264: aload         6
     266: checkcast     #15                 // class java/util/List
     269: invokeinterface #18,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     274: invokedynamic #19,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
     279: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     284: invokestatic  #21                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     287: invokeinterface #22,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     292: checkcast     #15                 // class java/util/List
     295: invokevirtual #29                 // Method setApplications:(Ljava/util/List;)V
     298: aload_0
     299: ldc           #30                 // String parameters
     301: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     306: astore        7
     308: aload         7
     310: ifnull        366
     313: ldc           #31                 // class java/util/Map
     315: aload         7
     317: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     320: invokevirtual #17                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     323: ifeq          366
     326: aload_1
     327: aload         7
     329: checkcast     #31                 // class java/util/Map
     332: invokeinterface #32,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     337: invokeinterface #33,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
     342: invokedynamic #34,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
     347: invokedynamic #35,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
     352: invokestatic  #36                 // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
     355: invokeinterface #22,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     360: checkcast     #31                 // class java/util/Map
     363: invokevirtual #37                 // Method setParameters:(Ljava/util/Map;)V
     366: aload_0
     367: ldc           #38                 // String match
     369: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     374: astore        8
     376: aload         8
     378: ifnull        411
     381: ldc           #31                 // class java/util/Map
     383: aload         8
     385: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     388: invokevirtual #17                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     391: ifeq          411
     394: aload_1
     395: aload         8
     397: checkcast     #31                 // class java/util/Map
     400: ldc           #39                 // class org/apache/dubbo/rpc/cluster/configurator/parser/model/ConditionMatch
     402: invokestatic  #40                 // Method org/apache/dubbo/common/utils/PojoUtils.mapToPojo:(Ljava/util/Map;Ljava/lang/Class;)Ljava/lang/Object;
     405: checkcast     #39                 // class org/apache/dubbo/rpc/cluster/configurator/parser/model/ConditionMatch
     408: invokevirtual #41                 // Method setMatch:(Lorg/apache/dubbo/rpc/cluster/configurator/parser/model/ConditionMatch;)V
     411: goto          443
     414: astore        8
     416: getstatic     #43                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
     419: ldc           #44                 // String 2-13
     421: ldc           #45                 // String  Failed to parse dynamic configuration rule
     423: aload_0
     424: ldc           #38                 // String match
     426: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     431: invokestatic  #46                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     434: ldc           #47                 // String Error occurred when parsing rule component.
     436: aload         8
     438: invokeinterface #48,  6           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
     443: aload_1
     444: aload_0
     445: ldc           #49                 // String side
     447: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     452: checkcast     #7                  // class java/lang/String
     455: invokevirtual #50                 // Method setSide:(Ljava/lang/String;)V
     458: aload_1
     459: areturn
    Exception table:
       from    to  target type
         366   411   414   Class java/lang/Throwable

  public java.lang.String getType();
    Code:
       0: aload_0
       1: getfield      #51                 // Field type:Ljava/lang/String;
       4: areturn

  public void setType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field type:Ljava/lang/String;
       5: return

  public java.lang.Boolean getEnabled();
    Code:
       0: aload_0
       1: getfield      #52                 // Field enabled:Ljava/lang/Boolean;
       4: areturn

  public void setEnabled(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field enabled:Ljava/lang/Boolean;
       5: return

  public java.util.List<java.lang.String> getAddresses();
    Code:
       0: aload_0
       1: getfield      #53                 // Field addresses:Ljava/util/List;
       4: areturn

  public void setAddresses(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field addresses:Ljava/util/List;
       5: return

  public java.util.List<java.lang.String> getServices();
    Code:
       0: aload_0
       1: getfield      #54                 // Field services:Ljava/util/List;
       4: areturn

  public void setServices(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #54                 // Field services:Ljava/util/List;
       5: return

  public java.util.List<java.lang.String> getApplications();
    Code:
       0: aload_0
       1: getfield      #55                 // Field applications:Ljava/util/List;
       4: areturn

  public void setApplications(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #55                 // Field applications:Ljava/util/List;
       5: return

  public java.util.List<java.lang.String> getProviderAddresses();
    Code:
       0: aload_0
       1: getfield      #56                 // Field providerAddresses:Ljava/util/List;
       4: areturn

  public void setProviderAddresses(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #56                 // Field providerAddresses:Ljava/util/List;
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getParameters();
    Code:
       0: aload_0
       1: getfield      #57                 // Field parameters:Ljava/util/Map;
       4: areturn

  public void setParameters(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field parameters:Ljava/util/Map;
       5: return

  public java.lang.String getSide();
    Code:
       0: aload_0
       1: getfield      #58                 // Field side:Ljava/lang/String;
       4: areturn

  public void setSide(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field side:Ljava/lang/String;
       5: return

  public org.apache.dubbo.rpc.cluster.configurator.parser.model.ConditionMatch getMatch();
    Code:
       0: aload_0
       1: getfield      #59                 // Field match:Lorg/apache/dubbo/rpc/cluster/configurator/parser/model/ConditionMatch;
       4: areturn

  public void setMatch(org.apache.dubbo.rpc.cluster.configurator.parser.model.ConditionMatch);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field match:Lorg/apache/dubbo/rpc/cluster/configurator/parser/model/ConditionMatch;
       5: return

  private static java.lang.String lambda$parseFromMap$0(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokeinterface #60,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       6: invokevirtual #10                 // Method java/lang/Object.toString:()Ljava/lang/String;
       9: areturn

  static {};
    Code:
       0: ldc           #3                  // class org/apache/dubbo/rpc/cluster/configurator/parser/model/ConfigItem
       2: invokestatic  #61                 // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #43                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: return
}
