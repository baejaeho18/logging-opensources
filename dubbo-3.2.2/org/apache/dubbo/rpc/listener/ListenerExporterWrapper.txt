Compiled from "ListenerExporterWrapper.java"
public class org.apache.dubbo.rpc.listener.ListenerExporterWrapper<T> implements org.apache.dubbo.rpc.Exporter<T> {
  private static final org.apache.dubbo.common.logger.ErrorTypeAwareLogger logger;

  private final org.apache.dubbo.rpc.Exporter<T> exporter;

  private final java.util.List<org.apache.dubbo.rpc.ExporterListener> listeners;

  public org.apache.dubbo.rpc.listener.ListenerExporterWrapper(org.apache.dubbo.rpc.Exporter<T>, java.util.List<org.apache.dubbo.rpc.ExporterListener>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #3                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #4                  // String exporter == null
      14: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #6                  // Field exporter:Lorg/apache/dubbo/rpc/Exporter;
      23: aload_0
      24: aload_2
      25: putfield      #7                  // Field listeners:Ljava/util/List;
      28: aload_0
      29: aload_0
      30: invokedynamic #8,  0              // InvokeDynamic #0:accept:(Lorg/apache/dubbo/rpc/listener/ListenerExporterWrapper;)Ljava/util/function/Consumer;
      35: invokespecial #9                  // Method listenerEvent:(Ljava/util/function/Consumer;)V
      38: return

  public org.apache.dubbo.rpc.Invoker<T> getInvoker();
    Code:
       0: aload_0
       1: getfield      #6                  // Field exporter:Lorg/apache/dubbo/rpc/Exporter;
       4: invokeinterface #10,  1           // InterfaceMethod org/apache/dubbo/rpc/Exporter.getInvoker:()Lorg/apache/dubbo/rpc/Invoker;
       9: areturn

  public void unexport();
    Code:
       0: aload_0
       1: getfield      #6                  // Field exporter:Lorg/apache/dubbo/rpc/Exporter;
       4: invokeinterface #11,  1           // InterfaceMethod org/apache/dubbo/rpc/Exporter.unexport:()V
       9: aload_0
      10: aload_0
      11: invokedynamic #12,  0             // InvokeDynamic #1:accept:(Lorg/apache/dubbo/rpc/listener/ListenerExporterWrapper;)Ljava/util/function/Consumer;
      16: invokespecial #9                  // Method listenerEvent:(Ljava/util/function/Consumer;)V
      19: goto          35
      22: astore_1
      23: aload_0
      24: aload_0
      25: invokedynamic #12,  0             // InvokeDynamic #1:accept:(Lorg/apache/dubbo/rpc/listener/ListenerExporterWrapper;)Ljava/util/function/Consumer;
      30: invokespecial #9                  // Method listenerEvent:(Ljava/util/function/Consumer;)V
      33: aload_1
      34: athrow
      35: return
    Exception table:
       from    to  target type
           0     9    22   any

  public void unregister();
    Code:
       0: aload_0
       1: getfield      #6                  // Field exporter:Lorg/apache/dubbo/rpc/Exporter;
       4: invokeinterface #13,  1           // InterfaceMethod org/apache/dubbo/rpc/Exporter.unregister:()V
       9: return

  private void listenerEvent(java.util.function.Consumer<org.apache.dubbo.rpc.ExporterListener>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/List;
       4: invokestatic  #14                 // Method org/apache/dubbo/common/utils/CollectionUtils.isNotEmpty:(Ljava/util/Collection;)Z
       7: ifeq          93
      10: aconst_null
      11: astore_2
      12: aload_0
      13: getfield      #7                  // Field listeners:Ljava/util/List;
      16: invokeinterface #15,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      21: astore_3
      22: aload_3
      23: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          87
      31: aload_3
      32: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #18                 // class org/apache/dubbo/rpc/ExporterListener
      40: astore        4
      42: aload         4
      44: ifnull        84
      47: aload_1
      48: aload         4
      50: invokeinterface #19,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      55: goto          84
      58: astore        5
      60: getstatic     #21                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
      63: ldc           #22                 // String 0-9
      65: ldc           #23                 // String
      67: ldc           #23                 // String
      69: aload         5
      71: invokevirtual #24                 // Method java/lang/RuntimeException.getMessage:()Ljava/lang/String;
      74: aload         5
      76: invokeinterface #25,  6           // InterfaceMethod org/apache/dubbo/common/logger/ErrorTypeAwareLogger.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      81: aload         5
      83: astore_2
      84: goto          22
      87: aload_2
      88: ifnull        93
      91: aload_2
      92: athrow
      93: return
    Exception table:
       from    to  target type
          47    55    58   Class java/lang/RuntimeException

  private void lambda$unexport$1(org.apache.dubbo.rpc.ExporterListener);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #26,  2           // InterfaceMethod org/apache/dubbo/rpc/ExporterListener.unexported:(Lorg/apache/dubbo/rpc/Exporter;)V
       7: return

  private void lambda$new$0(org.apache.dubbo.rpc.ExporterListener);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #27,  2           // InterfaceMethod org/apache/dubbo/rpc/ExporterListener.exported:(Lorg/apache/dubbo/rpc/Exporter;)V
       7: return

  static {};
    Code:
       0: ldc           #28                 // class org/apache/dubbo/rpc/listener/ListenerExporterWrapper
       2: invokestatic  #29                 // Method org/apache/dubbo/common/logger/LoggerFactory.getErrorTypeAwareLogger:(Ljava/lang/Class;)Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       5: putstatic     #21                 // Field logger:Lorg/apache/dubbo/common/logger/ErrorTypeAwareLogger;
       8: return
}
