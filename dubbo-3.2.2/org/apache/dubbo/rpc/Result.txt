Compiled from "Result.java"
public interface org.apache.dubbo.rpc.Result extends java.io.Serializable {
  public abstract java.lang.Object getValue();

  public abstract void setValue(java.lang.Object);

  public abstract java.lang.Throwable getException();

  public abstract void setException(java.lang.Throwable);

  public abstract boolean hasException();

  public abstract java.lang.Object recreate() throws java.lang.Throwable;

  public abstract java.util.Map<java.lang.String, java.lang.String> getAttachments();

  public abstract java.util.Map<java.lang.String, java.lang.Object> getObjectAttachments();

  public abstract void addAttachments(java.util.Map<java.lang.String, java.lang.String>);

  public abstract void addObjectAttachments(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract void setAttachments(java.util.Map<java.lang.String, java.lang.String>);

  public abstract void setObjectAttachments(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract java.lang.String getAttachment(java.lang.String);

  public abstract java.lang.Object getObjectAttachment(java.lang.String);

  public abstract java.lang.String getAttachment(java.lang.String, java.lang.String);

  public abstract java.lang.Object getObjectAttachment(java.lang.String, java.lang.Object);

  public abstract void setAttachment(java.lang.String, java.lang.String);

  public abstract void setAttachment(java.lang.String, java.lang.Object);

  public abstract void setObjectAttachment(java.lang.String, java.lang.Object);

  public abstract org.apache.dubbo.rpc.Result whenCompleteWithContext(java.util.function.BiConsumer<org.apache.dubbo.rpc.Result, java.lang.Throwable>);

  public abstract <U> java.util.concurrent.CompletableFuture<U> thenApply(java.util.function.Function<org.apache.dubbo.rpc.Result, ? extends U>);

  public abstract org.apache.dubbo.rpc.Result get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;

  public abstract org.apache.dubbo.rpc.Result get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
}
