Compiled from "GroupServiceKeyCache.java"
public class org.apache.dubbo.rpc.support.GroupServiceKeyCache {
  private final java.lang.String serviceGroup;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.ConcurrentMap<java.lang.Integer, java.lang.String>>> serviceKeyMap;

  public org.apache.dubbo.rpc.support.GroupServiceKeyCache(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field serviceGroup:Ljava/lang/String;
       9: aload_0
      10: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: sipush        512
      17: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      20: putfield      #5                  // Field serviceKeyMap:Ljava/util/concurrent/ConcurrentMap;
      23: return

  public java.lang.String getServiceKey(java.lang.String, java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field serviceKeyMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class java/util/concurrent/ConcurrentMap
      13: astore        4
      15: aload         4
      17: ifnonnull     53
      20: aload_0
      21: getfield      #5                  // Field serviceKeyMap:Ljava/util/concurrent/ConcurrentMap;
      24: aload_1
      25: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      28: dup
      29: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      32: invokeinterface #9,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_0
      39: getfield      #5                  // Field serviceKeyMap:Ljava/util/concurrent/ConcurrentMap;
      42: aload_1
      43: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #7                  // class java/util/concurrent/ConcurrentMap
      51: astore        4
      53: aload_2
      54: ifnonnull     62
      57: ldc           #10                 // String
      59: goto          63
      62: aload_2
      63: astore_2
      64: aload         4
      66: aload_2
      67: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #7                  // class java/util/concurrent/ConcurrentMap
      75: astore        5
      77: aload         5
      79: ifnonnull     111
      82: aload         4
      84: aload_2
      85: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      88: dup
      89: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      92: invokeinterface #9,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: aload         4
     100: aload_2
     101: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     106: checkcast     #7                  // class java/util/concurrent/ConcurrentMap
     109: astore        5
     111: aload         5
     113: iload_3
     114: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     117: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     122: checkcast     #12                 // class java/lang/String
     125: astore        6
     127: aload         6
     129: ifnonnull     155
     132: aload_0
     133: aload_1
     134: aload_2
     135: iload_3
     136: invokespecial #13                 // Method createServiceKey:(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
     139: astore        6
     141: aload         5
     143: iload_3
     144: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     147: aload         6
     149: invokeinterface #14,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     154: pop
     155: aload         6
     157: areturn

  private java.lang.String createServiceKey(java.lang.String, java.lang.String, int);
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: astore        4
       9: aload_0
      10: getfield      #2                  // Field serviceGroup:Ljava/lang/String;
      13: invokestatic  #17                 // Method org/apache/dubbo/common/utils/StringUtils.isNotEmpty:(Ljava/lang/String;)Z
      16: ifeq          34
      19: aload         4
      21: aload_0
      22: getfield      #2                  // Field serviceGroup:Ljava/lang/String;
      25: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: bipush        47
      30: invokevirtual #19                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      33: pop
      34: aload         4
      36: aload_1
      37: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: pop
      41: aload_2
      42: invokestatic  #17                 // Method org/apache/dubbo/common/utils/StringUtils.isNotEmpty:(Ljava/lang/String;)Z
      45: ifeq          78
      48: ldc           #20                 // String 0.0.0
      50: aload_2
      51: invokevirtual #21                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      54: ifne          78
      57: ldc           #22                 // String *
      59: aload_2
      60: invokevirtual #21                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      63: ifne          78
      66: aload         4
      68: bipush        58
      70: invokevirtual #19                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      73: aload_2
      74: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: pop
      78: aload         4
      80: bipush        58
      82: invokevirtual #19                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      85: iload_3
      86: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      89: pop
      90: aload         4
      92: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: areturn
}
