Compiled from "ProtocolUtils.java"
public class org.apache.dubbo.rpc.support.ProtocolUtils {
  private static final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.dubbo.rpc.support.GroupServiceKeyCache> groupServiceKeyCacheMap;

  private org.apache.dubbo.rpc.support.ProtocolUtils();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String serviceKey(org.apache.dubbo.common.URL);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method org/apache/dubbo/common/URL.getPort:()I
       4: aload_0
       5: invokevirtual #4                  // Method org/apache/dubbo/common/URL.getPath:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #5                  // Method org/apache/dubbo/common/URL.getVersion:()Ljava/lang/String;
      12: aload_0
      13: invokevirtual #6                  // Method org/apache/dubbo/common/URL.getGroup:()Ljava/lang/String;
      16: invokestatic  #7                  // Method serviceKey:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      19: areturn

  public static java.lang.String serviceKey(int, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_3
       1: ifnonnull     9
       4: ldc           #8                  // String
       6: goto          10
       9: aload_3
      10: astore_3
      11: getstatic     #9                  // Field groupServiceKeyCacheMap:Ljava/util/concurrent/ConcurrentMap;
      14: aload_3
      15: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #11                 // class org/apache/dubbo/rpc/support/GroupServiceKeyCache
      23: astore        4
      25: aload         4
      27: ifnonnull     62
      30: getstatic     #9                  // Field groupServiceKeyCacheMap:Ljava/util/concurrent/ConcurrentMap;
      33: aload_3
      34: new           #11                 // class org/apache/dubbo/rpc/support/GroupServiceKeyCache
      37: dup
      38: aload_3
      39: invokespecial #12                 // Method org/apache/dubbo/rpc/support/GroupServiceKeyCache."<init>":(Ljava/lang/String;)V
      42: invokeinterface #13,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: getstatic     #9                  // Field groupServiceKeyCacheMap:Ljava/util/concurrent/ConcurrentMap;
      51: aload_3
      52: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      57: checkcast     #11                 // class org/apache/dubbo/rpc/support/GroupServiceKeyCache
      60: astore        4
      62: aload         4
      64: aload_1
      65: aload_2
      66: iload_0
      67: invokevirtual #14                 // Method org/apache/dubbo/rpc/support/GroupServiceKeyCache.getServiceKey:(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;
      70: areturn

  public static boolean isGeneric(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #15                 // Method org/apache/dubbo/common/utils/StringUtils.isNotEmpty:(Ljava/lang/String;)Z
       4: ifeq          65
       7: ldc           #16                 // String true
       9: aload_0
      10: invokevirtual #17                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      13: ifne          61
      16: ldc           #18                 // String nativejava
      18: aload_0
      19: invokevirtual #17                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      22: ifne          61
      25: ldc           #19                 // String bean
      27: aload_0
      28: invokevirtual #17                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      31: ifne          61
      34: ldc           #20                 // String protobuf-json
      36: aload_0
      37: invokevirtual #17                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      40: ifne          61
      43: ldc           #21                 // String gson
      45: aload_0
      46: invokevirtual #17                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      49: ifne          61
      52: ldc           #22                 // String raw.return
      54: aload_0
      55: invokevirtual #17                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      58: ifeq          65
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: ireturn

  public static boolean isValidGenericValue(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method isGeneric:(Ljava/lang/String;)Z
       4: ifne          20
       7: getstatic     #24                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      10: invokevirtual #25                 // Method java/lang/Boolean.toString:()Ljava/lang/String;
      13: aload_0
      14: invokevirtual #17                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public static boolean isDefaultGenericSerialization(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method isGeneric:(Ljava/lang/String;)Z
       4: ifeq          20
       7: ldc           #16                 // String true
       9: aload_0
      10: invokevirtual #17                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public static boolean isJavaGenericSerialization(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method isGeneric:(Ljava/lang/String;)Z
       4: ifeq          20
       7: ldc           #18                 // String nativejava
       9: aload_0
      10: invokevirtual #17                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public static boolean isGsonGenericSerialization(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method isGeneric:(Ljava/lang/String;)Z
       4: ifeq          20
       7: ldc           #21                 // String gson
       9: aload_0
      10: invokevirtual #17                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public static boolean isBeanGenericSerialization(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method isGeneric:(Ljava/lang/String;)Z
       4: ifeq          20
       7: ldc           #19                 // String bean
       9: aload_0
      10: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public static boolean isProtobufGenericSerialization(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method isGeneric:(Ljava/lang/String;)Z
       4: ifeq          20
       7: ldc           #20                 // String protobuf-json
       9: aload_0
      10: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public static boolean isGenericReturnRawResult(java.lang.String);
    Code:
       0: ldc           #22                 // String raw.return
       2: aload_0
       3: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ireturn

  static {};
    Code:
       0: new           #27                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #28                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: putstatic     #9                  // Field groupServiceKeyCacheMap:Ljava/util/concurrent/ConcurrentMap;
      10: return
}
