Compiled from "ApplicationTemp.java"
public class org.springframework.boot.system.ApplicationTemp {
  private static final java.nio.file.attribute.FileAttribute<?>[] NO_FILE_ATTRIBUTES;

  private static final java.util.EnumSet<java.nio.file.attribute.PosixFilePermission> DIRECTORY_PERMISSIONS;

  private final java.lang.Class<?> sourceClass;

  private volatile java.nio.file.Path path;

  public org.springframework.boot.system.ApplicationTemp();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method "<init>":(Ljava/lang/Class;)V
       5: return

  public org.springframework.boot.system.ApplicationTemp(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #12                 // Field sourceClass:Ljava/lang/Class;
       9: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getDir:()Ljava/io/File;
       4: invokevirtual #20                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
       7: areturn

  public java.io.File getDir();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getPath:()Ljava/nio/file/Path;
       4: invokeinterface #30,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
       9: areturn

  public java.io.File getDir(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #26                 // Method getPath:()Ljava/nio/file/Path;
       5: aload_1
       6: invokeinterface #35,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      11: invokevirtual #39                 // Method createDirectory:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      14: invokeinterface #30,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      19: areturn

  private java.nio.file.Path getPath();
    Code:
       0: aload_0
       1: getfield      #43                 // Field path:Ljava/nio/file/Path;
       4: ifnonnull     57
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: invokestatic  #47                 // Method java/util/HexFormat.of:()Ljava/util/HexFormat;
      14: invokevirtual #53                 // Method java/util/HexFormat.withUpperCase:()Ljava/util/HexFormat;
      17: aload_0
      18: aload_0
      19: getfield      #12                 // Field sourceClass:Ljava/lang/Class;
      22: invokevirtual #56                 // Method generateHash:(Ljava/lang/Class;)[B
      25: invokevirtual #60                 // Method java/util/HexFormat.formatHex:([B)Ljava/lang/String;
      28: astore_2
      29: aload_0
      30: aload_0
      31: aload_0
      32: invokevirtual #64                 // Method getTempDirectory:()Ljava/nio/file/Path;
      35: aload_2
      36: invokeinterface #35,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      41: invokevirtual #39                 // Method createDirectory:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      44: putfield      #43                 // Field path:Ljava/nio/file/Path;
      47: aload_1
      48: monitorexit
      49: goto          57
      52: astore_3
      53: aload_1
      54: monitorexit
      55: aload_3
      56: athrow
      57: aload_0
      58: getfield      #43                 // Field path:Ljava/nio/file/Path;
      61: areturn
    Exception table:
       from    to  target type
          11    49    52   any
          52    55    52   any

  private java.nio.file.Path createDirectory(java.nio.file.Path);
    Code:
       0: aload_1
       1: iconst_0
       2: anewarray     #67                 // class java/nio/file/LinkOption
       5: invokestatic  #69                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       8: ifne          29
      11: aload_1
      12: aload_0
      13: aload_1
      14: invokeinterface #75,  1           // InterfaceMethod java/nio/file/Path.getFileSystem:()Ljava/nio/file/FileSystem;
      19: getstatic     #79                 // Field DIRECTORY_PERMISSIONS:Ljava/util/EnumSet;
      22: invokevirtual #83                 // Method getFileAttributes:(Ljava/nio/file/FileSystem;Ljava/util/EnumSet;)[Ljava/nio/file/attribute/FileAttribute;
      25: invokestatic  #87                 // Method java/nio/file/Files.createDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      28: pop
      29: aload_1
      30: areturn
      31: astore_2
      32: new           #92                 // class java/lang/IllegalStateException
      35: dup
      36: aload_1
      37: invokedynamic #94,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/nio/file/Path;)Ljava/lang/String;
      42: aload_2
      43: invokespecial #98                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      46: athrow
    Exception table:
       from    to  target type
           0    30    31   Class java/io/IOException

  private java.nio.file.attribute.FileAttribute<?>[] getFileAttributes(java.nio.file.FileSystem, java.util.EnumSet<java.nio.file.attribute.PosixFilePermission>);
    Code:
       0: aload_1
       1: invokevirtual #101                // Method java/nio/file/FileSystem.supportedFileAttributeViews:()Ljava/util/Set;
       4: ldc           #107                // String posix
       6: invokeinterface #109,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      11: ifne          18
      14: getstatic     #115                // Field NO_FILE_ATTRIBUTES:[Ljava/nio/file/attribute/FileAttribute;
      17: areturn
      18: iconst_1
      19: anewarray     #119                // class java/nio/file/attribute/FileAttribute
      22: dup
      23: iconst_0
      24: aload_2
      25: invokestatic  #121                // Method java/nio/file/attribute/PosixFilePermissions.asFileAttribute:(Ljava/util/Set;)Ljava/nio/file/attribute/FileAttribute;
      28: aastore
      29: areturn

  private java.nio.file.Path getTempDirectory();
    Code:
       0: ldc           #127                // String java.io.tmpdir
       2: invokestatic  #129                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_1
       6: aload_1
       7: invokestatic  #135                // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      10: ldc           #141                // String No \'java.io.tmpdir\' property set
      12: invokestatic  #143                // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      15: aload_1
      16: iconst_0
      17: anewarray     #149                // class java/lang/String
      20: invokestatic  #151                // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      23: astore_2
      24: aload_2
      25: iconst_0
      26: anewarray     #67                 // class java/nio/file/LinkOption
      29: invokestatic  #69                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      32: aload_2
      33: invokedynamic #157,  0            // InvokeDynamic #1:get:(Ljava/nio/file/Path;)Ljava/util/function/Supplier;
      38: invokestatic  #160                // Method org/springframework/util/Assert.state:(ZLjava/util/function/Supplier;)V
      41: aload_2
      42: iconst_0
      43: anewarray     #67                 // class java/nio/file/LinkOption
      46: invokestatic  #163                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      49: aload_2
      50: invokedynamic #166,  0            // InvokeDynamic #2:get:(Ljava/nio/file/Path;)Ljava/util/function/Supplier;
      55: invokestatic  #160                // Method org/springframework/util/Assert.state:(ZLjava/util/function/Supplier;)V
      58: aload_2
      59: areturn

  private byte[] generateHash(java.lang.Class<?>);
    Code:
       0: new           #167                // class org/springframework/boot/system/ApplicationHome
       3: dup
       4: aload_1
       5: invokespecial #169                // Method org/springframework/boot/system/ApplicationHome."<init>":(Ljava/lang/Class;)V
       8: astore_2
       9: ldc           #170                // String SHA-1
      11: invokestatic  #172                // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      14: astore_3
      15: aload_0
      16: aload_3
      17: aload_2
      18: invokevirtual #178                // Method org/springframework/boot/system/ApplicationHome.getSource:()Ljava/io/File;
      21: invokevirtual #181                // Method update:(Ljava/security/MessageDigest;Ljava/lang/Object;)V
      24: aload_0
      25: aload_3
      26: aload_2
      27: invokevirtual #185                // Method org/springframework/boot/system/ApplicationHome.getDir:()Ljava/io/File;
      30: invokevirtual #181                // Method update:(Ljava/security/MessageDigest;Ljava/lang/Object;)V
      33: aload_0
      34: aload_3
      35: ldc           #186                // String user.dir
      37: invokestatic  #129                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      40: invokevirtual #181                // Method update:(Ljava/security/MessageDigest;Ljava/lang/Object;)V
      43: aload_0
      44: aload_3
      45: ldc           #188                // String java.home
      47: invokestatic  #129                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      50: invokevirtual #181                // Method update:(Ljava/security/MessageDigest;Ljava/lang/Object;)V
      53: aload_0
      54: aload_3
      55: ldc           #190                // String java.class.path
      57: invokestatic  #129                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      60: invokevirtual #181                // Method update:(Ljava/security/MessageDigest;Ljava/lang/Object;)V
      63: aload_0
      64: aload_3
      65: ldc           #192                // String sun.java.command
      67: invokestatic  #129                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      70: invokevirtual #181                // Method update:(Ljava/security/MessageDigest;Ljava/lang/Object;)V
      73: aload_0
      74: aload_3
      75: ldc           #194                // String sun.boot.class.path
      77: invokestatic  #129                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      80: invokevirtual #181                // Method update:(Ljava/security/MessageDigest;Ljava/lang/Object;)V
      83: aload_3
      84: invokevirtual #196                // Method java/security/MessageDigest.digest:()[B
      87: areturn
      88: astore        4
      90: new           #92                 // class java/lang/IllegalStateException
      93: dup
      94: aload         4
      96: invokespecial #202                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      99: athrow
    Exception table:
       from    to  target type
           9    87    88   Class java/lang/Exception

  private void update(java.security.MessageDigest, java.lang.Object);
    Code:
       0: aload_2
       1: ifnull        13
       4: aload_1
       5: aload_0
       6: aload_2
       7: invokevirtual #205                // Method getUpdateSourceBytes:(Ljava/lang/Object;)[B
      10: invokevirtual #209                // Method java/security/MessageDigest.update:([B)V
      13: return

  private byte[] getUpdateSourceBytes(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #21                 // class java/io/File
       4: ifeq          21
       7: aload_1
       8: checkcast     #21                 // class java/io/File
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokevirtual #20                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      17: invokevirtual #205                // Method getUpdateSourceBytes:(Ljava/lang/Object;)[B
      20: areturn
      21: aload_1
      22: invokevirtual #212                // Method java/lang/Object.toString:()Ljava/lang/String;
      25: invokevirtual #215                // Method java/lang/String.getBytes:()[B
      28: areturn

  private static java.lang.String lambda$getTempDirectory$1(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokedynamic #218,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/nio/file/Path;)Ljava/lang/String;
       6: areturn

  private static java.lang.String lambda$getTempDirectory$0(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokedynamic #219,  0            // InvokeDynamic #4:makeConcatWithConstants:(Ljava/nio/file/Path;)Ljava/lang/String;
       6: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #119                // class java/nio/file/attribute/FileAttribute
       4: putstatic     #115                // Field NO_FILE_ATTRIBUTES:[Ljava/nio/file/attribute/FileAttribute;
       7: getstatic     #220                // Field java/nio/file/attribute/PosixFilePermission.OWNER_READ:Ljava/nio/file/attribute/PosixFilePermission;
      10: getstatic     #226                // Field java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
      13: getstatic     #229                // Field java/nio/file/attribute/PosixFilePermission.OWNER_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;
      16: invokestatic  #232                // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      19: putstatic     #79                 // Field DIRECTORY_PERMISSIONS:Ljava/util/EnumSet;
      22: return
}
