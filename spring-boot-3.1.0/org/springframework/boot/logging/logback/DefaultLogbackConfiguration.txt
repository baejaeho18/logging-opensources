Compiled from "DefaultLogbackConfiguration.java"
class org.springframework.boot.logging.logback.DefaultLogbackConfiguration {
  private final org.springframework.boot.logging.LogFile logFile;

  org.springframework.boot.logging.logback.DefaultLogbackConfiguration(org.springframework.boot.logging.LogFile);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field logFile:Lorg/springframework/boot/logging/LogFile;
       9: return

  void apply(org.springframework.boot.logging.logback.LogbackConfigurator);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getConfigurationLock:()Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: aload_1
       9: invokevirtual #19                 // Method defaults:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;)V
      12: aload_0
      13: aload_1
      14: invokevirtual #23                 // Method consoleAppender:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;)Lch/qos/logback/core/Appender;
      17: astore_3
      18: aload_0
      19: getfield      #7                  // Field logFile:Lorg/springframework/boot/logging/LogFile;
      22: ifnull        62
      25: aload_0
      26: aload_1
      27: aload_0
      28: getfield      #7                  // Field logFile:Lorg/springframework/boot/logging/LogFile;
      31: invokevirtual #27                 // Method org/springframework/boot/logging/LogFile.toString:()Ljava/lang/String;
      34: invokevirtual #33                 // Method fileAppender:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Lch/qos/logback/core/Appender;
      37: astore        4
      39: aload_1
      40: getstatic     #37                 // Field ch/qos/logback/classic/Level.INFO:Lch/qos/logback/classic/Level;
      43: iconst_2
      44: anewarray     #43                 // class ch/qos/logback/core/Appender
      47: dup
      48: iconst_0
      49: aload_3
      50: aastore
      51: dup
      52: iconst_1
      53: aload         4
      55: aastore
      56: invokevirtual #45                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.root:(Lch/qos/logback/classic/Level;[Lch/qos/logback/core/Appender;)V
      59: goto          77
      62: aload_1
      63: getstatic     #37                 // Field ch/qos/logback/classic/Level.INFO:Lch/qos/logback/classic/Level;
      66: iconst_1
      67: anewarray     #43                 // class ch/qos/logback/core/Appender
      70: dup
      71: iconst_0
      72: aload_3
      73: aastore
      74: invokevirtual #45                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.root:(Lch/qos/logback/classic/Level;[Lch/qos/logback/core/Appender;)V
      77: aload_2
      78: monitorexit
      79: goto          89
      82: astore        5
      84: aload_2
      85: monitorexit
      86: aload         5
      88: athrow
      89: return
    Exception table:
       from    to  target type
           7    79    82   any
          82    86    82   any

  private void defaults(org.springframework.boot.logging.logback.LogbackConfigurator);
    Code:
       0: aload_1
       1: ldc           #49                 // String clr
       3: ldc           #51                 // class org/springframework/boot/logging/logback/ColorConverter
       5: invokevirtual #53                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.conversionRule:(Ljava/lang/String;Ljava/lang/Class;)V
       8: aload_1
       9: ldc           #57                 // String wex
      11: ldc           #59                 // class org/springframework/boot/logging/logback/WhitespaceThrowableProxyConverter
      13: invokevirtual #53                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.conversionRule:(Ljava/lang/String;Ljava/lang/Class;)V
      16: aload_1
      17: ldc           #61                 // String wEx
      19: ldc           #63                 // class org/springframework/boot/logging/logback/ExtendedWhitespaceThrowableProxyConverter
      21: invokevirtual #53                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.conversionRule:(Ljava/lang/String;Ljava/lang/Class;)V
      24: aload_1
      25: invokevirtual #65                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getContext:()Lch/qos/logback/classic/LoggerContext;
      28: ldc           #69                 // String CONSOLE_LOG_PATTERN
      30: aload_0
      31: aload_1
      32: ldc           #71                 // String ${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd\'T\'HH:mm:ss.SSSXXX}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}
      34: invokevirtual #73                 // Method resolve:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/lang/String;
      37: invokevirtual #77                 // Method ch/qos/logback/classic/LoggerContext.putProperty:(Ljava/lang/String;Ljava/lang/String;)V
      40: invokestatic  #83                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
      43: invokevirtual #89                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      46: astore_2
      47: aload_1
      48: invokevirtual #65                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getContext:()Lch/qos/logback/classic/LoggerContext;
      51: ldc           #92                 // String CONSOLE_LOG_CHARSET
      53: aload_0
      54: aload_1
      55: aload_2
      56: invokedynamic #94,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      61: invokevirtual #73                 // Method resolve:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/lang/String;
      64: invokevirtual #77                 // Method ch/qos/logback/classic/LoggerContext.putProperty:(Ljava/lang/String;Ljava/lang/String;)V
      67: aload_1
      68: invokevirtual #65                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getContext:()Lch/qos/logback/classic/LoggerContext;
      71: ldc           #98                 // String CONSOLE_LOG_THRESHOLD
      73: aload_0
      74: aload_1
      75: ldc           #100                // String ${CONSOLE_LOG_THRESHOLD:-TRACE}
      77: invokevirtual #73                 // Method resolve:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/lang/String;
      80: invokevirtual #77                 // Method ch/qos/logback/classic/LoggerContext.putProperty:(Ljava/lang/String;Ljava/lang/String;)V
      83: aload_1
      84: invokevirtual #65                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getContext:()Lch/qos/logback/classic/LoggerContext;
      87: ldc           #102                // String FILE_LOG_PATTERN
      89: aload_0
      90: aload_1
      91: ldc           #104                // String ${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd\'T\'HH:mm:ss.SSSXXX}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}
      93: invokevirtual #73                 // Method resolve:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/lang/String;
      96: invokevirtual #77                 // Method ch/qos/logback/classic/LoggerContext.putProperty:(Ljava/lang/String;Ljava/lang/String;)V
      99: aload_1
     100: invokevirtual #65                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getContext:()Lch/qos/logback/classic/LoggerContext;
     103: ldc           #106                // String FILE_LOG_CHARSET
     105: aload_0
     106: aload_1
     107: aload_2
     108: invokedynamic #108,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     113: invokevirtual #73                 // Method resolve:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/lang/String;
     116: invokevirtual #77                 // Method ch/qos/logback/classic/LoggerContext.putProperty:(Ljava/lang/String;Ljava/lang/String;)V
     119: aload_1
     120: invokevirtual #65                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getContext:()Lch/qos/logback/classic/LoggerContext;
     123: ldc           #109                // String FILE_LOG_THRESHOLD
     125: aload_0
     126: aload_1
     127: ldc           #111                // String ${FILE_LOG_THRESHOLD:-TRACE}
     129: invokevirtual #73                 // Method resolve:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/lang/String;
     132: invokevirtual #77                 // Method ch/qos/logback/classic/LoggerContext.putProperty:(Ljava/lang/String;Ljava/lang/String;)V
     135: aload_1
     136: ldc           #113                // String org.apache.catalina.startup.DigesterFactory
     138: getstatic     #115                // Field ch/qos/logback/classic/Level.ERROR:Lch/qos/logback/classic/Level;
     141: invokevirtual #118                // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
     144: aload_1
     145: ldc           #122                // String org.apache.catalina.util.LifecycleBase
     147: getstatic     #115                // Field ch/qos/logback/classic/Level.ERROR:Lch/qos/logback/classic/Level;
     150: invokevirtual #118                // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
     153: aload_1
     154: ldc           #124                // String org.apache.coyote.http11.Http11NioProtocol
     156: getstatic     #126                // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
     159: invokevirtual #118                // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
     162: aload_1
     163: ldc           #129                // String org.apache.sshd.common.util.SecurityUtils
     165: getstatic     #126                // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
     168: invokevirtual #118                // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
     171: aload_1
     172: ldc           #131                // String org.apache.tomcat.util.net.NioSelectorPool
     174: getstatic     #126                // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
     177: invokevirtual #118                // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
     180: aload_1
     181: ldc           #133                // String org.eclipse.jetty.util.component.AbstractLifeCycle
     183: getstatic     #115                // Field ch/qos/logback/classic/Level.ERROR:Lch/qos/logback/classic/Level;
     186: invokevirtual #118                // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
     189: aload_1
     190: ldc           #135                // String org.hibernate.validator.internal.util.Version
     192: getstatic     #126                // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
     195: invokevirtual #118                // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
     198: aload_1
     199: ldc           #137                // String org.springframework.boot.actuate.endpoint.jmx
     201: getstatic     #126                // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
     204: invokevirtual #118                // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
     207: return

  private ch.qos.logback.core.Appender<ch.qos.logback.classic.spi.ILoggingEvent> consoleAppender(org.springframework.boot.logging.logback.LogbackConfigurator);
    Code:
       0: new           #139                // class ch/qos/logback/core/ConsoleAppender
       3: dup
       4: invokespecial #141                // Method ch/qos/logback/core/ConsoleAppender."<init>":()V
       7: astore_2
       8: new           #142                // class ch/qos/logback/classic/filter/ThresholdFilter
      11: dup
      12: invokespecial #144                // Method ch/qos/logback/classic/filter/ThresholdFilter."<init>":()V
      15: astore_3
      16: aload_3
      17: aload_0
      18: aload_1
      19: ldc           #145                // String ${CONSOLE_LOG_THRESHOLD}
      21: invokevirtual #73                 // Method resolve:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/lang/String;
      24: invokevirtual #147                // Method ch/qos/logback/classic/filter/ThresholdFilter.setLevel:(Ljava/lang/String;)V
      27: aload_2
      28: aload_3
      29: invokevirtual #151                // Method ch/qos/logback/core/ConsoleAppender.addFilter:(Lch/qos/logback/core/filter/Filter;)V
      32: new           #155                // class ch/qos/logback/classic/encoder/PatternLayoutEncoder
      35: dup
      36: invokespecial #157                // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder."<init>":()V
      39: astore        4
      41: aload         4
      43: aload_0
      44: aload_1
      45: ldc           #158                // String ${CONSOLE_LOG_PATTERN}
      47: invokevirtual #73                 // Method resolve:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/lang/String;
      50: invokevirtual #160                // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder.setPattern:(Ljava/lang/String;)V
      53: aload         4
      55: aload_0
      56: aload_1
      57: ldc           #163                // String ${CONSOLE_LOG_CHARSET}
      59: invokevirtual #165                // Method resolveCharset:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/nio/charset/Charset;
      62: invokevirtual #169                // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder.setCharset:(Ljava/nio/charset/Charset;)V
      65: aload_1
      66: aload         4
      68: invokevirtual #173                // Method org/springframework/boot/logging/logback/LogbackConfigurator.start:(Lch/qos/logback/core/spi/LifeCycle;)V
      71: aload_2
      72: aload         4
      74: invokevirtual #177                // Method ch/qos/logback/core/ConsoleAppender.setEncoder:(Lch/qos/logback/core/encoder/Encoder;)V
      77: aload_1
      78: ldc           #181                // String CONSOLE
      80: aload_2
      81: invokevirtual #183                // Method org/springframework/boot/logging/logback/LogbackConfigurator.appender:(Ljava/lang/String;Lch/qos/logback/core/Appender;)V
      84: aload_2
      85: areturn

  private ch.qos.logback.core.Appender<ch.qos.logback.classic.spi.ILoggingEvent> fileAppender(org.springframework.boot.logging.logback.LogbackConfigurator, java.lang.String);
    Code:
       0: new           #187                // class ch/qos/logback/core/rolling/RollingFileAppender
       3: dup
       4: invokespecial #189                // Method ch/qos/logback/core/rolling/RollingFileAppender."<init>":()V
       7: astore_3
       8: new           #142                // class ch/qos/logback/classic/filter/ThresholdFilter
      11: dup
      12: invokespecial #144                // Method ch/qos/logback/classic/filter/ThresholdFilter."<init>":()V
      15: astore        4
      17: aload         4
      19: aload_0
      20: aload_1
      21: ldc           #190                // String ${FILE_LOG_THRESHOLD}
      23: invokevirtual #73                 // Method resolve:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/lang/String;
      26: invokevirtual #147                // Method ch/qos/logback/classic/filter/ThresholdFilter.setLevel:(Ljava/lang/String;)V
      29: aload_3
      30: aload         4
      32: invokevirtual #192                // Method ch/qos/logback/core/rolling/RollingFileAppender.addFilter:(Lch/qos/logback/core/filter/Filter;)V
      35: new           #155                // class ch/qos/logback/classic/encoder/PatternLayoutEncoder
      38: dup
      39: invokespecial #157                // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder."<init>":()V
      42: astore        5
      44: aload         5
      46: aload_0
      47: aload_1
      48: ldc           #193                // String ${FILE_LOG_PATTERN}
      50: invokevirtual #73                 // Method resolve:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/lang/String;
      53: invokevirtual #160                // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder.setPattern:(Ljava/lang/String;)V
      56: aload         5
      58: aload_0
      59: aload_1
      60: ldc           #195                // String ${FILE_LOG_CHARSET}
      62: invokevirtual #165                // Method resolveCharset:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/nio/charset/Charset;
      65: invokevirtual #169                // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder.setCharset:(Ljava/nio/charset/Charset;)V
      68: aload_3
      69: aload         5
      71: invokevirtual #197                // Method ch/qos/logback/core/rolling/RollingFileAppender.setEncoder:(Lch/qos/logback/core/encoder/Encoder;)V
      74: aload_1
      75: aload         5
      77: invokevirtual #173                // Method org/springframework/boot/logging/logback/LogbackConfigurator.start:(Lch/qos/logback/core/spi/LifeCycle;)V
      80: aload_3
      81: aload_2
      82: invokevirtual #198                // Method ch/qos/logback/core/rolling/RollingFileAppender.setFile:(Ljava/lang/String;)V
      85: aload_0
      86: aload_3
      87: aload_1
      88: invokevirtual #201                // Method setRollingPolicy:(Lch/qos/logback/core/rolling/RollingFileAppender;Lorg/springframework/boot/logging/logback/LogbackConfigurator;)V
      91: aload_1
      92: ldc           #205                // String FILE
      94: aload_3
      95: invokevirtual #183                // Method org/springframework/boot/logging/logback/LogbackConfigurator.appender:(Ljava/lang/String;Lch/qos/logback/core/Appender;)V
      98: aload_3
      99: areturn

  private void setRollingPolicy(ch.qos.logback.core.rolling.RollingFileAppender<ch.qos.logback.classic.spi.ILoggingEvent>, org.springframework.boot.logging.logback.LogbackConfigurator);
    Code:
       0: new           #207                // class ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy
       3: dup
       4: invokespecial #209                // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_2
      10: invokevirtual #65                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getContext:()Lch/qos/logback/classic/LoggerContext;
      13: invokevirtual #210                // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setContext:(Lch/qos/logback/core/Context;)V
      16: aload_3
      17: aload_0
      18: aload_2
      19: ldc           #214                // String ${LOGBACK_ROLLINGPOLICY_FILE_NAME_PATTERN:-${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz}
      21: invokevirtual #73                 // Method resolve:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/lang/String;
      24: invokevirtual #216                // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setFileNamePattern:(Ljava/lang/String;)V
      27: aload_3
      28: aload_0
      29: aload_2
      30: ldc           #219                // String ${LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START:-false}
      32: invokevirtual #221                // Method resolveBoolean:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Z
      35: invokevirtual #225                // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setCleanHistoryOnStart:(Z)V
      38: aload_3
      39: aload_0
      40: aload_2
      41: ldc           #229                // String ${LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE:-10MB}
      43: invokevirtual #231                // Method resolveFileSize:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Lch/qos/logback/core/util/FileSize;
      46: invokevirtual #235                // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setMaxFileSize:(Lch/qos/logback/core/util/FileSize;)V
      49: aload_3
      50: aload_0
      51: aload_2
      52: ldc           #239                // String ${LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP:-0}
      54: invokevirtual #231                // Method resolveFileSize:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Lch/qos/logback/core/util/FileSize;
      57: invokevirtual #241                // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setTotalSizeCap:(Lch/qos/logback/core/util/FileSize;)V
      60: aload_3
      61: aload_0
      62: aload_2
      63: ldc           #244                // String ${LOGBACK_ROLLINGPOLICY_MAX_HISTORY:-7}
      65: invokevirtual #246                // Method resolveInt:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)I
      68: invokevirtual #250                // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setMaxHistory:(I)V
      71: aload_1
      72: aload_3
      73: invokevirtual #254                // Method ch/qos/logback/core/rolling/RollingFileAppender.setRollingPolicy:(Lch/qos/logback/core/rolling/RollingPolicy;)V
      76: aload_3
      77: aload_1
      78: invokevirtual #257                // Method ch/qos/logback/core/rolling/SizeAndTimeBasedRollingPolicy.setParent:(Lch/qos/logback/core/FileAppender;)V
      81: aload_2
      82: aload_3
      83: invokevirtual #173                // Method org/springframework/boot/logging/logback/LogbackConfigurator.start:(Lch/qos/logback/core/spi/LifeCycle;)V
      86: return

  private boolean resolveBoolean(org.springframework.boot.logging.logback.LogbackConfigurator, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #73                 // Method resolve:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/lang/String;
       6: invokestatic  #261                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
       9: ireturn

  private int resolveInt(org.springframework.boot.logging.logback.LogbackConfigurator, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #73                 // Method resolve:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/lang/String;
       6: invokestatic  #267                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
       9: ireturn

  private ch.qos.logback.core.util.FileSize resolveFileSize(org.springframework.boot.logging.logback.LogbackConfigurator, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #73                 // Method resolve:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/lang/String;
       6: invokestatic  #273                // Method ch/qos/logback/core/util/FileSize.valueOf:(Ljava/lang/String;)Lch/qos/logback/core/util/FileSize;
       9: areturn

  private java.nio.charset.Charset resolveCharset(org.springframework.boot.logging.logback.LogbackConfigurator, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #73                 // Method resolve:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Ljava/lang/String;
       6: invokestatic  #279                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       9: areturn

  private java.lang.String resolve(org.springframework.boot.logging.logback.LogbackConfigurator, java.lang.String);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #65                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getContext:()Lch/qos/logback/classic/LoggerContext;
       5: invokestatic  #283                // Method ch/qos/logback/core/util/OptionHelper.substVars:(Ljava/lang/String;Lch/qos/logback/core/spi/PropertyContainer;)Ljava/lang/String;
       8: areturn
       9: astore_3
      10: new           #291                // class java/lang/RuntimeException
      13: dup
      14: aload_3
      15: invokespecial #293                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      18: athrow
    Exception table:
       from    to  target type
           0     8     9   Class ch/qos/logback/core/spi/ScanException
}
