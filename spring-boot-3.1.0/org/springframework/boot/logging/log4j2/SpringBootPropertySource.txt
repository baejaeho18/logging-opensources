Compiled from "SpringBootPropertySource.java"
public class org.springframework.boot.logging.log4j2.SpringBootPropertySource implements org.apache.logging.log4j.util.PropertySource {
  private static final java.lang.String PREFIX;

  private final java.util.Map<java.lang.String, java.lang.String> properties;

  public org.springframework.boot.logging.log4j2.SpringBootPropertySource();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #9                  // String log4j.shutdownHookEnabled
       7: ldc           #11                 // String false
       9: invokestatic  #13                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      12: putfield      #19                 // Field properties:Ljava/util/Map;
      15: return

  public void forEach(org.apache.logging.log4j.util.BiConsumer<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field properties:Ljava/util/Map;
       4: aload_1
       5: dup
       6: invokestatic  #25                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokedynamic #31,  0             // InvokeDynamic #0:accept:(Lorg/apache/logging/log4j/util/BiConsumer;)Ljava/util/function/BiConsumer;
      15: invokeinterface #35,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      20: return

  public java.lang.CharSequence getNormalForm(java.lang.Iterable<? extends java.lang.CharSequence>);
    Code:
       0: aload_1
       1: invokestatic  #41                 // Method org/apache/logging/log4j/util/PropertySource$Util.joinAsCamelCase:(Ljava/lang/Iterable;)Ljava/lang/CharSequence;
       4: invokedynamic #47,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/CharSequence;)Ljava/lang/String;
       9: areturn

  public int getPriority();
    Code:
       0: sipush        -200
       3: ireturn

  public java.lang.String getProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field properties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #54                 // class java/lang/String
      13: areturn

  public boolean containsProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field properties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #56,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Collection<java.lang.String> getPropertyNames();
    Code:
       0: aload_0
       1: getfield      #19                 // Field properties:Ljava/util/Map;
       4: invokeinterface #60,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn
}
