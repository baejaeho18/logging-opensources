Compiled from "LoggingSystem.java"
public abstract class org.springframework.boot.logging.LoggingSystem {
  public static final java.lang.String SYSTEM_PROPERTY;

  public static final java.lang.String NONE;

  public static final java.lang.String ROOT_LOGGER_NAME;

  private static final org.springframework.boot.logging.LoggingSystemFactory SYSTEM_FACTORY;

  public org.springframework.boot.logging.LoggingSystem();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.springframework.boot.logging.LoggingSystemProperties getSystemProperties(org.springframework.core.env.ConfigurableEnvironment);
    Code:
       0: new           #7                  // class org/springframework/boot/logging/LoggingSystemProperties
       3: dup
       4: aload_1
       5: invokespecial #9                  // Method org/springframework/boot/logging/LoggingSystemProperties."<init>":(Lorg/springframework/core/env/Environment;)V
       8: areturn

  public abstract void beforeInitialize();

  public void initialize(org.springframework.boot.logging.LoggingInitializationContext, java.lang.String, org.springframework.boot.logging.LogFile);
    Code:
       0: return

  public void cleanUp();
    Code:
       0: return

  public java.lang.Runnable getShutdownHandler();
    Code:
       0: aconst_null
       1: areturn

  public java.util.Set<org.springframework.boot.logging.LogLevel> getSupportedLogLevels();
    Code:
       0: ldc           #12                 // class org/springframework/boot/logging/LogLevel
       2: invokestatic  #14                 // Method java/util/EnumSet.allOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
       5: areturn

  public void setLogLevel(java.lang.String, org.springframework.boot.logging.LogLevel);
    Code:
       0: new           #20                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #22                 // String Unable to set log level
       6: invokespecial #24                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.util.List<org.springframework.boot.logging.LoggerConfiguration> getLoggerConfigurations();
    Code:
       0: new           #20                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #27                 // String Unable to get logger configurations
       6: invokespecial #24                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.springframework.boot.logging.LoggerConfiguration getLoggerConfiguration(java.lang.String);
    Code:
       0: new           #20                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #29                 // String Unable to get logger configuration
       6: invokespecial #24                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public static org.springframework.boot.logging.LoggingSystem get(java.lang.ClassLoader);
    Code:
       0: getstatic     #31                 // Field SYSTEM_PROPERTY:Ljava/lang/String;
       3: invokestatic  #37                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: invokestatic  #43                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      11: ifeq          37
      14: ldc           #49                 // String none
      16: aload_1
      17: invokevirtual #51                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          31
      23: new           #57                 // class org/springframework/boot/logging/LoggingSystem$NoOpLoggingSystem
      26: dup
      27: invokespecial #59                 // Method org/springframework/boot/logging/LoggingSystem$NoOpLoggingSystem."<init>":()V
      30: areturn
      31: aload_0
      32: aload_1
      33: invokestatic  #60                 // Method get:(Ljava/lang/ClassLoader;Ljava/lang/String;)Lorg/springframework/boot/logging/LoggingSystem;
      36: areturn
      37: getstatic     #64                 // Field SYSTEM_FACTORY:Lorg/springframework/boot/logging/LoggingSystemFactory;
      40: aload_0
      41: invokeinterface #68,  2           // InterfaceMethod org/springframework/boot/logging/LoggingSystemFactory.getLoggingSystem:(Ljava/lang/ClassLoader;)Lorg/springframework/boot/logging/LoggingSystem;
      46: astore_2
      47: aload_2
      48: ifnull        55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ldc           #74                 // String No suitable logging system located
      58: invokestatic  #76                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      61: aload_2
      62: areturn

  private static org.springframework.boot.logging.LoggingSystem get(java.lang.ClassLoader, java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #82                 // Method org/springframework/util/ClassUtils.forName:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
       5: astore_2
       6: aload_2
       7: iconst_1
       8: anewarray     #88                 // class java/lang/Class
      11: dup
      12: iconst_0
      13: ldc           #90                 // class java/lang/ClassLoader
      15: aastore
      16: invokevirtual #92                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      19: astore_3
      20: aload_3
      21: iconst_1
      22: invokevirtual #96                 // Method java/lang/reflect/Constructor.setAccessible:(Z)V
      25: aload_3
      26: iconst_1
      27: anewarray     #2                  // class java/lang/Object
      30: dup
      31: iconst_0
      32: aload_0
      33: aastore
      34: invokevirtual #102                // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #32                 // class org/springframework/boot/logging/LoggingSystem
      40: areturn
      41: astore_2
      42: new           #108                // class java/lang/IllegalStateException
      45: dup
      46: aload_2
      47: invokespecial #110                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      50: athrow
    Exception table:
       from    to  target type
           0    40    41   Class java/lang/Exception

  static {};
    Code:
       0: ldc           #32                 // class org/springframework/boot/logging/LoggingSystem
       2: invokevirtual #113                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: putstatic     #31                 // Field SYSTEM_PROPERTY:Ljava/lang/String;
       8: invokestatic  #117                // InterfaceMethod org/springframework/boot/logging/LoggingSystemFactory.fromSpringFactories:()Lorg/springframework/boot/logging/LoggingSystemFactory;
      11: putstatic     #64                 // Field SYSTEM_FACTORY:Lorg/springframework/boot/logging/LoggingSystemFactory;
      14: return
}
