Compiled from "DeferredLog.java"
public class org.springframework.boot.logging.DeferredLog implements org.apache.commons.logging.Log {
  private volatile org.apache.commons.logging.Log destination;

  private final java.util.function.Supplier<org.apache.commons.logging.Log> destinationSupplier;

  private final org.springframework.boot.logging.DeferredLog$Lines lines;

  public org.springframework.boot.logging.DeferredLog();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #7                  // Field destinationSupplier:Ljava/util/function/Supplier;
       9: aload_0
      10: new           #13                 // class org/springframework/boot/logging/DeferredLog$Lines
      13: dup
      14: invokespecial #15                 // Method org/springframework/boot/logging/DeferredLog$Lines."<init>":()V
      17: putfield      #16                 // Field lines:Lorg/springframework/boot/logging/DeferredLog$Lines;
      20: return

  org.springframework.boot.logging.DeferredLog(java.util.function.Supplier<org.apache.commons.logging.Log>, org.springframework.boot.logging.DeferredLog$Lines);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #20                 // String Destination must not be null
       7: invokestatic  #22                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #7                  // Field destinationSupplier:Ljava/util/function/Supplier;
      15: aload_0
      16: aload_2
      17: putfield      #16                 // Field lines:Lorg/springframework/boot/logging/DeferredLog$Lines;
      20: return

  public boolean isTraceEnabled();
    Code:
       0: aload_0
       1: getfield      #16                 // Field lines:Lorg/springframework/boot/logging/DeferredLog$Lines;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #28                 // Field destination:Lorg/apache/commons/logging/Log;
      11: ifnull        26
      14: aload_0
      15: getfield      #28                 // Field destination:Lorg/apache/commons/logging/Log;
      18: invokeinterface #32,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: aload_1
      32: monitorexit
      33: ireturn
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
    Exception table:
       from    to  target type
           7    33    34   any
          34    37    34   any

  public boolean isDebugEnabled();
    Code:
       0: aload_0
       1: getfield      #16                 // Field lines:Lorg/springframework/boot/logging/DeferredLog$Lines;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #28                 // Field destination:Lorg/apache/commons/logging/Log;
      11: ifnull        26
      14: aload_0
      15: getfield      #28                 // Field destination:Lorg/apache/commons/logging/Log;
      18: invokeinterface #38,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: aload_1
      32: monitorexit
      33: ireturn
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
    Exception table:
       from    to  target type
           7    33    34   any
          34    37    34   any

  public boolean isInfoEnabled();
    Code:
       0: aload_0
       1: getfield      #16                 // Field lines:Lorg/springframework/boot/logging/DeferredLog$Lines;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #28                 // Field destination:Lorg/apache/commons/logging/Log;
      11: ifnull        26
      14: aload_0
      15: getfield      #28                 // Field destination:Lorg/apache/commons/logging/Log;
      18: invokeinterface #41,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: aload_1
      32: monitorexit
      33: ireturn
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
    Exception table:
       from    to  target type
           7    33    34   any
          34    37    34   any

  public boolean isWarnEnabled();
    Code:
       0: aload_0
       1: getfield      #16                 // Field lines:Lorg/springframework/boot/logging/DeferredLog$Lines;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #28                 // Field destination:Lorg/apache/commons/logging/Log;
      11: ifnull        26
      14: aload_0
      15: getfield      #28                 // Field destination:Lorg/apache/commons/logging/Log;
      18: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: aload_1
      32: monitorexit
      33: ireturn
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
    Exception table:
       from    to  target type
           7    33    34   any
          34    37    34   any

  public boolean isErrorEnabled();
    Code:
       0: aload_0
       1: getfield      #16                 // Field lines:Lorg/springframework/boot/logging/DeferredLog$Lines;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #28                 // Field destination:Lorg/apache/commons/logging/Log;
      11: ifnull        26
      14: aload_0
      15: getfield      #28                 // Field destination:Lorg/apache/commons/logging/Log;
      18: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/logging/Log.isErrorEnabled:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: aload_1
      32: monitorexit
      33: ireturn
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
    Exception table:
       from    to  target type
           7    33    34   any
          34    37    34   any

  public boolean isFatalEnabled();
    Code:
       0: aload_0
       1: getfield      #16                 // Field lines:Lorg/springframework/boot/logging/DeferredLog$Lines;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #28                 // Field destination:Lorg/apache/commons/logging/Log;
      11: ifnull        26
      14: aload_0
      15: getfield      #28                 // Field destination:Lorg/apache/commons/logging/Log;
      18: invokeinterface #50,  1           // InterfaceMethod org/apache/commons/logging/Log.isFatalEnabled:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: aload_1
      32: monitorexit
      33: ireturn
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
    Exception table:
       from    to  target type
           7    33    34   any
          34    37    34   any

  public void trace(java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #53                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aconst_null
       6: invokevirtual #59                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void trace(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #53                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aload_2
       6: invokevirtual #59                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void debug(java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #63                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aconst_null
       6: invokevirtual #59                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void debug(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #63                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aload_2
       6: invokevirtual #59                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void info(java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #66                 // Field org/springframework/boot/logging/LogLevel.INFO:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aconst_null
       6: invokevirtual #59                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void info(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #66                 // Field org/springframework/boot/logging/LogLevel.INFO:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aload_2
       6: invokevirtual #59                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void warn(java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #69                 // Field org/springframework/boot/logging/LogLevel.WARN:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aconst_null
       6: invokevirtual #59                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void warn(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #69                 // Field org/springframework/boot/logging/LogLevel.WARN:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aload_2
       6: invokevirtual #59                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void error(java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #72                 // Field org/springframework/boot/logging/LogLevel.ERROR:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aconst_null
       6: invokevirtual #59                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void error(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #72                 // Field org/springframework/boot/logging/LogLevel.ERROR:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aload_2
       6: invokevirtual #59                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void fatal(java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #75                 // Field org/springframework/boot/logging/LogLevel.FATAL:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aconst_null
       6: invokevirtual #59                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  public void fatal(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getstatic     #75                 // Field org/springframework/boot/logging/LogLevel.FATAL:Lorg/springframework/boot/logging/LogLevel;
       4: aload_1
       5: aload_2
       6: invokevirtual #59                 // Method log:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
       9: return

  private void log(org.springframework.boot.logging.LogLevel, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #16                 // Field lines:Lorg/springframework/boot/logging/DeferredLog$Lines;
       4: dup
       5: astore        4
       7: monitorenter
       8: aload_0
       9: getfield      #28                 // Field destination:Lorg/apache/commons/logging/Log;
      12: ifnull        28
      15: aload_0
      16: getfield      #28                 // Field destination:Lorg/apache/commons/logging/Log;
      19: aload_1
      20: aload_2
      21: aload_3
      22: invokestatic  #78                 // Method logTo:(Lorg/apache/commons/logging/Log;Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
      25: goto          42
      28: aload_0
      29: getfield      #16                 // Field lines:Lorg/springframework/boot/logging/DeferredLog$Lines;
      32: aload_0
      33: getfield      #7                  // Field destinationSupplier:Ljava/util/function/Supplier;
      36: aload_1
      37: aload_2
      38: aload_3
      39: invokevirtual #82                 // Method org/springframework/boot/logging/DeferredLog$Lines.add:(Ljava/util/function/Supplier;Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
      42: aload         4
      44: monitorexit
      45: goto          56
      48: astore        5
      50: aload         4
      52: monitorexit
      53: aload         5
      55: athrow
      56: return
    Exception table:
       from    to  target type
           8    45    48   any
          48    53    48   any

  void switchOver();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field destinationSupplier:Ljava/util/function/Supplier;
       5: invokeinterface #86,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      10: checkcast     #33                 // class org/apache/commons/logging/Log
      13: putfield      #28                 // Field destination:Lorg/apache/commons/logging/Log;
      16: return

  public void switchTo(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #92                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: invokevirtual #98                 // Method switchTo:(Lorg/apache/commons/logging/Log;)V
       8: return

  public void switchTo(org.apache.commons.logging.Log);
    Code:
       0: aload_0
       1: getfield      #16                 // Field lines:Lorg/springframework/boot/logging/DeferredLog$Lines;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: aload_1
       9: invokevirtual #102                // Method replayTo:(Lorg/apache/commons/logging/Log;)V
      12: aload_0
      13: aload_1
      14: putfield      #28                 // Field destination:Lorg/apache/commons/logging/Log;
      17: aload_2
      18: monitorexit
      19: goto          27
      22: astore_3
      23: aload_2
      24: monitorexit
      25: aload_3
      26: athrow
      27: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    25    22   any

  public void replayTo(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #92                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: invokevirtual #102                // Method replayTo:(Lorg/apache/commons/logging/Log;)V
       8: return

  public void replayTo(org.apache.commons.logging.Log);
    Code:
       0: aload_0
       1: getfield      #16                 // Field lines:Lorg/springframework/boot/logging/DeferredLog$Lines;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #16                 // Field lines:Lorg/springframework/boot/logging/DeferredLog$Lines;
      11: invokevirtual #105                // Method org/springframework/boot/logging/DeferredLog$Lines.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #109,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          57
      24: aload_3
      25: invokeinterface #114,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #117                // class org/springframework/boot/logging/DeferredLog$Line
      33: astore        4
      35: aload_1
      36: aload         4
      38: invokevirtual #119                // Method org/springframework/boot/logging/DeferredLog$Line.getLevel:()Lorg/springframework/boot/logging/LogLevel;
      41: aload         4
      43: invokevirtual #123                // Method org/springframework/boot/logging/DeferredLog$Line.getMessage:()Ljava/lang/Object;
      46: aload         4
      48: invokevirtual #126                // Method org/springframework/boot/logging/DeferredLog$Line.getThrowable:()Ljava/lang/Throwable;
      51: invokestatic  #78                 // Method logTo:(Lorg/apache/commons/logging/Log;Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;Ljava/lang/Throwable;)V
      54: goto          15
      57: aload_0
      58: getfield      #16                 // Field lines:Lorg/springframework/boot/logging/DeferredLog$Lines;
      61: invokevirtual #130                // Method org/springframework/boot/logging/DeferredLog$Lines.clear:()V
      64: aload_2
      65: monitorexit
      66: goto          76
      69: astore        5
      71: aload_2
      72: monitorexit
      73: aload         5
      75: athrow
      76: return
    Exception table:
       from    to  target type
           7    66    69   any
          69    73    69   any

  public static org.apache.commons.logging.Log replay(org.apache.commons.logging.Log, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #92                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: invokestatic  #133                // Method replay:(Lorg/apache/commons/logging/Log;Lorg/apache/commons/logging/Log;)Lorg/apache/commons/logging/Log;
       8: areturn

  public static org.apache.commons.logging.Log replay(org.apache.commons.logging.Log, org.apache.commons.logging.Log);
    Code:
       0: aload_0
       1: instanceof    #8                  // class org/springframework/boot/logging/DeferredLog
       4: ifeq          17
       7: aload_0
       8: checkcast     #8                  // class org/springframework/boot/logging/DeferredLog
      11: astore_2
      12: aload_2
      13: aload_1
      14: invokevirtual #102                // Method replayTo:(Lorg/apache/commons/logging/Log;)V
      17: aload_1
      18: areturn

  static void logTo(org.apache.commons.logging.Log, org.springframework.boot.logging.LogLevel, java.lang.Object, java.lang.Throwable);
    Code:
       0: getstatic     #137                // Field org/springframework/boot/logging/DeferredLog$1.$SwitchMap$org$springframework$boot$logging$LogLevel:[I
       3: aload_1
       4: invokevirtual #143                // Method org/springframework/boot/logging/LogLevel.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 6
                     1: 48
                     2: 59
                     3: 70
                     4: 81
                     5: 92
                     6: 103
               default: 111
          }
      48: aload_0
      49: aload_2
      50: aload_3
      51: invokeinterface #147,  3          // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      56: goto          111
      59: aload_0
      60: aload_2
      61: aload_3
      62: invokeinterface #151,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      67: goto          111
      70: aload_0
      71: aload_2
      72: aload_3
      73: invokeinterface #154,  3          // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      78: goto          111
      81: aload_0
      82: aload_2
      83: aload_3
      84: invokeinterface #157,  3          // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      89: goto          111
      92: aload_0
      93: aload_2
      94: aload_3
      95: invokeinterface #160,  3          // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     100: goto          111
     103: aload_0
     104: aload_2
     105: aload_3
     106: invokeinterface #163,  3          // InterfaceMethod org/apache/commons/logging/Log.fatal:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     111: return
}
