Compiled from "BindableRuntimeHintsRegistrar.java"
final class org.springframework.boot.context.properties.bind.BindableRuntimeHintsRegistrar$Processor {
  private static final org.springframework.core.ParameterNameDiscoverer parameterNameDiscoverer;

  private final java.lang.Class<?> type;

  private final java.lang.reflect.Constructor<?> bindConstructor;

  private final org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanProperties bean;

  private final java.util.Set<java.lang.Class<?>> seen;

  private final java.util.Set<java.lang.Class<?>> compiledWithoutParameters;

  final org.springframework.boot.context.properties.bind.BindableRuntimeHintsRegistrar this$0;

  org.springframework.boot.context.properties.bind.BindableRuntimeHintsRegistrar$Processor(java.lang.Class<?>, java.util.Set<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: new           #1                  // class java/util/HashSet
       7: dup
       8: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      11: aload_3
      12: invokespecial #7                  // Method "<init>":(Lorg/springframework/boot/context/properties/bind/BindableRuntimeHintsRegistrar;Ljava/lang/Class;ZLjava/util/Set;Ljava/util/Set;)V
      15: return

  private org.springframework.boot.context.properties.bind.BindableRuntimeHintsRegistrar$Processor(java.lang.Class<?>, boolean, java.util.Set<java.lang.Class<?>>, java.util.Set<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field this$0:Lorg/springframework/boot/context/properties/bind/BindableRuntimeHintsRegistrar;
       5: aload_0
       6: invokespecial #16                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #19                 // Field type:Ljava/lang/Class;
      14: aload_0
      15: getstatic     #23                 // Field org/springframework/boot/context/properties/bind/BindConstructorProvider.DEFAULT:Lorg/springframework/boot/context/properties/bind/BindConstructorProvider;
      18: aload_2
      19: invokestatic  #29                 // Method org/springframework/boot/context/properties/bind/Bindable.of:(Ljava/lang/Class;)Lorg/springframework/boot/context/properties/bind/Bindable;
      22: iload_3
      23: invokeinterface #35,  3           // InterfaceMethod org/springframework/boot/context/properties/bind/BindConstructorProvider.getBindConstructor:(Lorg/springframework/boot/context/properties/bind/Bindable;Z)Ljava/lang/reflect/Constructor;
      28: putfield      #39                 // Field bindConstructor:Ljava/lang/reflect/Constructor;
      31: aload_0
      32: aload_2
      33: invokestatic  #29                 // Method org/springframework/boot/context/properties/bind/Bindable.of:(Ljava/lang/Class;)Lorg/springframework/boot/context/properties/bind/Bindable;
      36: invokestatic  #43                 // Method org/springframework/boot/context/properties/bind/JavaBeanBinder$BeanProperties.of:(Lorg/springframework/boot/context/properties/bind/Bindable;)Lorg/springframework/boot/context/properties/bind/JavaBeanBinder$BeanProperties;
      39: putfield      #48                 // Field bean:Lorg/springframework/boot/context/properties/bind/JavaBeanBinder$BeanProperties;
      42: aload_0
      43: aload         4
      45: putfield      #52                 // Field seen:Ljava/util/Set;
      48: aload_0
      49: aload         5
      51: putfield      #56                 // Field compiledWithoutParameters:Ljava/util/Set;
      54: return

  void process(org.springframework.aot.hint.ReflectionHints);
    Code:
       0: aload_0
       1: getfield      #52                 // Field seen:Ljava/util/Set;
       4: aload_0
       5: getfield      #19                 // Field type:Ljava/lang/Class;
       8: invokeinterface #59,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      13: ifeq          17
      16: return
      17: aload_0
      18: getfield      #52                 // Field seen:Ljava/util/Set;
      21: aload_0
      22: getfield      #19                 // Field type:Ljava/lang/Class;
      25: invokeinterface #65,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_0
      32: aload_1
      33: invokevirtual #68                 // Method handleConstructor:(Lorg/springframework/aot/hint/ReflectionHints;)V
      36: aload_0
      37: getfield      #39                 // Field bindConstructor:Ljava/lang/reflect/Constructor;
      40: ifnull        51
      43: aload_0
      44: aload_1
      45: invokevirtual #72                 // Method handleValueObjectProperties:(Lorg/springframework/aot/hint/ReflectionHints;)V
      48: goto          78
      51: aload_0
      52: getfield      #48                 // Field bean:Lorg/springframework/boot/context/properties/bind/JavaBeanBinder$BeanProperties;
      55: ifnull        78
      58: aload_0
      59: getfield      #48                 // Field bean:Lorg/springframework/boot/context/properties/bind/JavaBeanBinder$BeanProperties;
      62: invokevirtual #75                 // Method org/springframework/boot/context/properties/bind/JavaBeanBinder$BeanProperties.getProperties:()Ljava/util/Map;
      65: invokeinterface #79,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      70: ifne          78
      73: aload_0
      74: aload_1
      75: invokevirtual #85                 // Method handleJavaBeanProperties:(Lorg/springframework/aot/hint/ReflectionHints;)V
      78: return

  private void handleConstructor(org.springframework.aot.hint.ReflectionHints);
    Code:
       0: aload_0
       1: getfield      #39                 // Field bindConstructor:Ljava/lang/reflect/Constructor;
       4: ifnull        48
       7: aload_0
       8: invokevirtual #88                 // Method verifyParameterNamesAreAvailable:()V
      11: aload_0
      12: getfield      #39                 // Field bindConstructor:Ljava/lang/reflect/Constructor;
      15: invokevirtual #91                 // Method java/lang/reflect/Constructor.getDeclaringClass:()Ljava/lang/Class;
      18: invokestatic  #97                 // Method org/springframework/core/KotlinDetector.isKotlinType:(Ljava/lang/Class;)Z
      21: ifeq          35
      24: aload_1
      25: aload_0
      26: getfield      #39                 // Field bindConstructor:Ljava/lang/reflect/Constructor;
      29: invokestatic  #103                // Method org/springframework/boot/context/properties/bind/BindableRuntimeHintsRegistrar$KotlinDelegate.handleConstructor:(Lorg/springframework/aot/hint/ReflectionHints;Ljava/lang/reflect/Constructor;)V
      32: goto          47
      35: aload_1
      36: aload_0
      37: getfield      #39                 // Field bindConstructor:Ljava/lang/reflect/Constructor;
      40: getstatic     #108                // Field org/springframework/aot/hint/ExecutableMode.INVOKE:Lorg/springframework/aot/hint/ExecutableMode;
      43: invokevirtual #114                // Method org/springframework/aot/hint/ReflectionHints.registerConstructor:(Ljava/lang/reflect/Constructor;Lorg/springframework/aot/hint/ExecutableMode;)Lorg/springframework/aot/hint/ReflectionHints;
      46: pop
      47: return
      48: aload_0
      49: getfield      #19                 // Field type:Ljava/lang/Class;
      52: invokevirtual #120                // Method java/lang/Class.getDeclaredConstructors:()[Ljava/lang/reflect/Constructor;
      55: invokestatic  #126                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      58: aload_0
      59: invokedynamic #132,  0            // InvokeDynamic #0:test:(Lorg/springframework/boot/context/properties/bind/BindableRuntimeHintsRegistrar$Processor;)Ljava/util/function/Predicate;
      64: invokeinterface #136,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      69: invokeinterface #142,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      74: aload_1
      75: invokedynamic #146,  0            // InvokeDynamic #1:accept:(Lorg/springframework/aot/hint/ReflectionHints;)Ljava/util/function/Consumer;
      80: invokevirtual #150                // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      83: return

  private void verifyParameterNamesAreAvailable();
    Code:
       0: getstatic     #156                // Field parameterNameDiscoverer:Lorg/springframework/core/ParameterNameDiscoverer;
       3: aload_0
       4: getfield      #39                 // Field bindConstructor:Ljava/lang/reflect/Constructor;
       7: invokeinterface #160,  2          // InterfaceMethod org/springframework/core/ParameterNameDiscoverer.getParameterNames:(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;
      12: astore_1
      13: aload_1
      14: ifnonnull     34
      17: aload_0
      18: getfield      #56                 // Field compiledWithoutParameters:Ljava/util/Set;
      21: aload_0
      22: getfield      #39                 // Field bindConstructor:Ljava/lang/reflect/Constructor;
      25: invokevirtual #91                 // Method java/lang/reflect/Constructor.getDeclaringClass:()Ljava/lang/Class;
      28: invokeinterface #65,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      33: pop
      34: return

  private boolean hasNoParameters(java.lang.reflect.Constructor<?>);
    Code:
       0: aload_1
       1: invokevirtual #166                // Method java/lang/reflect/Constructor.getParameterCount:()I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private void handleValueObjectProperties(org.springframework.aot.hint.ReflectionHints);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #39                 // Field bindConstructor:Ljava/lang/reflect/Constructor;
       7: invokevirtual #166                // Method java/lang/reflect/Constructor.getParameterCount:()I
      10: if_icmpge     50
      13: aload_0
      14: getfield      #39                 // Field bindConstructor:Ljava/lang/reflect/Constructor;
      17: invokevirtual #170                // Method java/lang/reflect/Constructor.getParameters:()[Ljava/lang/reflect/Parameter;
      20: iload_2
      21: aaload
      22: invokevirtual #174                // Method java/lang/reflect/Parameter.getName:()Ljava/lang/String;
      25: astore_3
      26: aload_0
      27: getfield      #39                 // Field bindConstructor:Ljava/lang/reflect/Constructor;
      30: iload_2
      31: invokestatic  #180                // Method org/springframework/core/ResolvableType.forConstructorParameter:(Ljava/lang/reflect/Constructor;I)Lorg/springframework/core/ResolvableType;
      34: astore        4
      36: aload_0
      37: aload_1
      38: aload_3
      39: aload         4
      41: invokevirtual #186                // Method handleProperty:(Lorg/springframework/aot/hint/ReflectionHints;Ljava/lang/String;Lorg/springframework/core/ResolvableType;)V
      44: iinc          2, 1
      47: goto          2
      50: return

  private void handleJavaBeanProperties(org.springframework.aot.hint.ReflectionHints);
    Code:
       0: aload_0
       1: getfield      #48                 // Field bean:Lorg/springframework/boot/context/properties/bind/JavaBeanBinder$BeanProperties;
       4: invokevirtual #75                 // Method org/springframework/boot/context/properties/bind/JavaBeanBinder$BeanProperties.getProperties:()Ljava/util/Map;
       7: astore_2
       8: aload_2
       9: aload_0
      10: aload_1
      11: invokedynamic #190,  0            // InvokeDynamic #2:accept:(Lorg/springframework/boot/context/properties/bind/BindableRuntimeHintsRegistrar$Processor;Lorg/springframework/aot/hint/ReflectionHints;)Ljava/util/function/BiConsumer;
      16: invokeinterface #193,  2          // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      21: return

  private void handleProperty(org.springframework.aot.hint.ReflectionHints, java.lang.String, org.springframework.core.ResolvableType);
    Code:
       0: aload_3
       1: invokevirtual #197                // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
       4: astore        4
       6: aload         4
       8: ifnonnull     12
      11: return
      12: aload         4
      14: aload_0
      15: getfield      #19                 // Field type:Ljava/lang/Class;
      18: invokevirtual #200                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifeq          25
      24: return
      25: aload_0
      26: aload_3
      27: invokevirtual #203                // Method getComponentClass:(Lorg/springframework/core/ResolvableType;)Ljava/lang/Class;
      30: astore        5
      32: aload         5
      34: ifnull        56
      37: aload_0
      38: aload         5
      40: invokevirtual #207                // Method isJavaType:(Ljava/lang/Class;)Z
      43: ifne          73
      46: aload_0
      47: aload         5
      49: aload_1
      50: invokevirtual #210                // Method processNested:(Ljava/lang/Class;Lorg/springframework/aot/hint/ReflectionHints;)V
      53: goto          73
      56: aload_0
      57: aload_2
      58: aload         4
      60: invokevirtual #214                // Method isNestedType:(Ljava/lang/String;Ljava/lang/Class;)Z
      63: ifeq          73
      66: aload_0
      67: aload         4
      69: aload_1
      70: invokevirtual #210                // Method processNested:(Ljava/lang/Class;Lorg/springframework/aot/hint/ReflectionHints;)V
      73: return

  private void processNested(java.lang.Class<?>, org.springframework.aot.hint.ReflectionHints);
    Code:
       0: new           #8                  // class org/springframework/boot/context/properties/bind/BindableRuntimeHintsRegistrar$Processor
       3: dup
       4: aload_0
       5: getfield      #12                 // Field this$0:Lorg/springframework/boot/context/properties/bind/BindableRuntimeHintsRegistrar;
       8: aload_1
       9: iconst_1
      10: aload_0
      11: getfield      #52                 // Field seen:Ljava/util/Set;
      14: aload_0
      15: getfield      #56                 // Field compiledWithoutParameters:Ljava/util/Set;
      18: invokespecial #7                  // Method "<init>":(Lorg/springframework/boot/context/properties/bind/BindableRuntimeHintsRegistrar;Ljava/lang/Class;ZLjava/util/Set;Ljava/util/Set;)V
      21: aload_2
      22: invokevirtual #218                // Method process:(Lorg/springframework/aot/hint/ReflectionHints;)V
      25: return

  private java.lang.Class<?> getComponentClass(org.springframework.core.ResolvableType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #221                // Method getComponentType:(Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_0
      13: aload_2
      14: invokevirtual #225                // Method isContainer:(Lorg/springframework/core/ResolvableType;)Z
      17: ifeq          26
      20: aload_0
      21: aload_2
      22: invokevirtual #203                // Method getComponentClass:(Lorg/springframework/core/ResolvableType;)Ljava/lang/Class;
      25: areturn
      26: aload_2
      27: invokevirtual #229                // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
      30: areturn

  private org.springframework.core.ResolvableType getComponentType(org.springframework.core.ResolvableType);
    Code:
       0: aload_1
       1: invokevirtual #232                // Method org/springframework/core/ResolvableType.isArray:()Z
       4: ifeq          12
       7: aload_1
       8: invokevirtual #235                // Method org/springframework/core/ResolvableType.getComponentType:()Lorg/springframework/core/ResolvableType;
      11: areturn
      12: aload_0
      13: aload_1
      14: invokevirtual #238                // Method isCollection:(Lorg/springframework/core/ResolvableType;)Z
      17: ifeq          31
      20: aload_1
      21: invokevirtual #241                // Method org/springframework/core/ResolvableType.asCollection:()Lorg/springframework/core/ResolvableType;
      24: iconst_0
      25: newarray       int
      27: invokevirtual #244                // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      30: areturn
      31: aload_0
      32: aload_1
      33: invokevirtual #248                // Method isMap:(Lorg/springframework/core/ResolvableType;)Z
      36: ifeq          54
      39: aload_1
      40: invokevirtual #251                // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
      43: iconst_1
      44: newarray       int
      46: dup
      47: iconst_0
      48: iconst_1
      49: iastore
      50: invokevirtual #244                // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      53: areturn
      54: aconst_null
      55: areturn

  private boolean isContainer(org.springframework.core.ResolvableType);
    Code:
       0: aload_1
       1: invokevirtual #232                // Method org/springframework/core/ResolvableType.isArray:()Z
       4: ifne          23
       7: aload_0
       8: aload_1
       9: invokevirtual #238                // Method isCollection:(Lorg/springframework/core/ResolvableType;)Z
      12: ifne          23
      15: aload_0
      16: aload_1
      17: invokevirtual #248                // Method isMap:(Lorg/springframework/core/ResolvableType;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  private boolean isCollection(org.springframework.core.ResolvableType);
    Code:
       0: ldc           #254                // class java/util/Collection
       2: aload_1
       3: invokevirtual #229                // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
       6: invokevirtual #256                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ireturn

  private boolean isMap(org.springframework.core.ResolvableType);
    Code:
       0: ldc           #80                 // class java/util/Map
       2: aload_1
       3: invokevirtual #229                // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
       6: invokevirtual #256                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ireturn

  private boolean isNestedType(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field type:Ljava/lang/Class;
       4: aload_2
       5: invokevirtual #259                // Method java/lang/Class.getDeclaringClass:()Ljava/lang/Class;
       8: invokevirtual #200                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      11: ifeq          16
      14: iconst_1
      15: ireturn
      16: aload_0
      17: getfield      #19                 // Field type:Ljava/lang/Class;
      20: aload_1
      21: invokestatic  #260                // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
      24: astore_3
      25: aload_3
      26: ifnull        48
      29: aload_3
      30: invokestatic  #266                // InterfaceMethod org/springframework/core/annotation/MergedAnnotations.from:(Ljava/lang/reflect/AnnotatedElement;)Lorg/springframework/core/annotation/MergedAnnotations;
      33: ldc_w         #272                // class org/springframework/boot/context/properties/bind/Nested
      36: invokeinterface #274,  2          // InterfaceMethod org/springframework/core/annotation/MergedAnnotations.isPresent:(Ljava/lang/Class;)Z
      41: ifeq          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn

  private boolean isJavaType(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokevirtual #277                // Method java/lang/Class.getPackageName:()Ljava/lang/String;
       4: ldc_w         #280                // String java.
       7: invokevirtual #282                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      10: ireturn

  private void lambda$handleJavaBeanProperties$1(org.springframework.aot.hint.ReflectionHints, java.lang.String, org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanProperty);
    Code:
       0: aload_3
       1: invokevirtual #288                // Method org/springframework/boot/context/properties/bind/JavaBeanBinder$BeanProperty.getGetter:()Ljava/lang/reflect/Method;
       4: astore        4
       6: aload         4
       8: ifnull        21
      11: aload_1
      12: aload         4
      14: getstatic     #108                // Field org/springframework/aot/hint/ExecutableMode.INVOKE:Lorg/springframework/aot/hint/ExecutableMode;
      17: invokevirtual #294                // Method org/springframework/aot/hint/ReflectionHints.registerMethod:(Ljava/lang/reflect/Method;Lorg/springframework/aot/hint/ExecutableMode;)Lorg/springframework/aot/hint/ReflectionHints;
      20: pop
      21: aload_3
      22: invokevirtual #298                // Method org/springframework/boot/context/properties/bind/JavaBeanBinder$BeanProperty.getSetter:()Ljava/lang/reflect/Method;
      25: astore        5
      27: aload         5
      29: ifnull        42
      32: aload_1
      33: aload         5
      35: getstatic     #108                // Field org/springframework/aot/hint/ExecutableMode.INVOKE:Lorg/springframework/aot/hint/ExecutableMode;
      38: invokevirtual #294                // Method org/springframework/aot/hint/ReflectionHints.registerMethod:(Ljava/lang/reflect/Method;Lorg/springframework/aot/hint/ExecutableMode;)Lorg/springframework/aot/hint/ReflectionHints;
      41: pop
      42: aload_0
      43: aload_1
      44: aload_2
      45: aload_3
      46: invokevirtual #301                // Method org/springframework/boot/context/properties/bind/JavaBeanBinder$BeanProperty.getType:()Lorg/springframework/core/ResolvableType;
      49: invokevirtual #186                // Method handleProperty:(Lorg/springframework/aot/hint/ReflectionHints;Ljava/lang/String;Lorg/springframework/core/ResolvableType;)V
      52: return

  private static void lambda$handleConstructor$0(org.springframework.aot.hint.ReflectionHints, java.lang.reflect.Constructor);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #108                // Field org/springframework/aot/hint/ExecutableMode.INVOKE:Lorg/springframework/aot/hint/ExecutableMode;
       5: invokevirtual #114                // Method org/springframework/aot/hint/ReflectionHints.registerConstructor:(Ljava/lang/reflect/Constructor;Lorg/springframework/aot/hint/ExecutableMode;)Lorg/springframework/aot/hint/ReflectionHints;
       8: pop
       9: return

  static {};
    Code:
       0: new           #304                // class org/springframework/core/PrioritizedParameterNameDiscoverer
       3: dup
       4: invokespecial #306                // Method org/springframework/core/PrioritizedParameterNameDiscoverer."<init>":()V
       7: astore_0
       8: invokestatic  #307                // Method org/springframework/core/KotlinDetector.isKotlinReflectPresent:()Z
      11: ifeq          25
      14: aload_0
      15: new           #310                // class org/springframework/core/KotlinReflectionParameterNameDiscoverer
      18: dup
      19: invokespecial #312                // Method org/springframework/core/KotlinReflectionParameterNameDiscoverer."<init>":()V
      22: invokevirtual #313                // Method org/springframework/core/PrioritizedParameterNameDiscoverer.addDiscoverer:(Lorg/springframework/core/ParameterNameDiscoverer;)V
      25: aload_0
      26: new           #317                // class org/springframework/core/StandardReflectionParameterNameDiscoverer
      29: dup
      30: invokespecial #319                // Method org/springframework/core/StandardReflectionParameterNameDiscoverer."<init>":()V
      33: invokevirtual #313                // Method org/springframework/core/PrioritizedParameterNameDiscoverer.addDiscoverer:(Lorg/springframework/core/ParameterNameDiscoverer;)V
      36: aload_0
      37: putstatic     #156                // Field parameterNameDiscoverer:Lorg/springframework/core/ParameterNameDiscoverer;
      40: return
}
