Compiled from "ConfigurationPropertySources.java"
public final class org.springframework.boot.context.properties.source.ConfigurationPropertySources {
  private static final java.lang.String ATTACHED_PROPERTY_SOURCE_NAME;

  private org.springframework.boot.context.properties.source.ConfigurationPropertySources();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.springframework.core.env.ConfigurablePropertyResolver createPropertyResolver(org.springframework.core.env.MutablePropertySources);
    Code:
       0: new           #7                  // class org/springframework/boot/context/properties/source/ConfigurationPropertySourcesPropertyResolver
       3: dup
       4: aload_0
       5: invokespecial #9                  // Method org/springframework/boot/context/properties/source/ConfigurationPropertySourcesPropertyResolver."<init>":(Lorg/springframework/core/env/MutablePropertySources;)V
       8: areturn

  public static boolean isAttachedConfigurationPropertySource(org.springframework.core.env.PropertySource<?>);
    Code:
       0: ldc           #14                 // String configurationProperties
       2: aload_0
       3: invokevirtual #16                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
       6: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ireturn

  public static void attach(org.springframework.core.env.Environment);
    Code:
       0: ldc           #28                 // class org/springframework/core/env/ConfigurableEnvironment
       2: aload_0
       3: invokestatic  #30                 // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;)V
       6: aload_0
       7: checkcast     #28                 // class org/springframework/core/env/ConfigurableEnvironment
      10: invokeinterface #36,  1           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getPropertySources:()Lorg/springframework/core/env/MutablePropertySources;
      15: astore_1
      16: aload_1
      17: invokestatic  #40                 // Method getAttached:(Lorg/springframework/core/env/MutablePropertySources;)Lorg/springframework/core/env/PropertySource;
      20: astore_2
      21: aload_2
      22: ifnull        33
      25: aload_2
      26: aload_1
      27: invokestatic  #44                 // Method isUsingSources:(Lorg/springframework/core/env/PropertySource;Lorg/springframework/core/env/MutablePropertySources;)Z
      30: ifne          51
      33: new           #48                 // class org/springframework/boot/context/properties/source/ConfigurationPropertySourcesPropertySource
      36: dup
      37: ldc           #14                 // String configurationProperties
      39: new           #50                 // class org/springframework/boot/context/properties/source/SpringConfigurationPropertySources
      42: dup
      43: aload_1
      44: invokespecial #52                 // Method org/springframework/boot/context/properties/source/SpringConfigurationPropertySources."<init>":(Ljava/lang/Iterable;)V
      47: invokespecial #55                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertySourcesPropertySource."<init>":(Ljava/lang/String;Ljava/lang/Iterable;)V
      50: astore_2
      51: aload_1
      52: ldc           #14                 // String configurationProperties
      54: invokevirtual #58                 // Method org/springframework/core/env/MutablePropertySources.remove:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
      57: pop
      58: aload_1
      59: aload_2
      60: invokevirtual #64                 // Method org/springframework/core/env/MutablePropertySources.addFirst:(Lorg/springframework/core/env/PropertySource;)V
      63: return

  private static boolean isUsingSources(org.springframework.core.env.PropertySource<?>, org.springframework.core.env.MutablePropertySources);
    Code:
       0: aload_0
       1: instanceof    #48                 // class org/springframework/boot/context/properties/source/ConfigurationPropertySourcesPropertySource
       4: ifeq          25
       7: aload_0
       8: invokevirtual #68                 // Method org/springframework/core/env/PropertySource.getSource:()Ljava/lang/Object;
      11: checkcast     #50                 // class org/springframework/boot/context/properties/source/SpringConfigurationPropertySources
      14: aload_1
      15: invokevirtual #72                 // Method org/springframework/boot/context/properties/source/SpringConfigurationPropertySources.isUsingSources:(Ljava/lang/Iterable;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  static org.springframework.core.env.PropertySource<?> getAttached(org.springframework.core.env.MutablePropertySources);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: ldc           #14                 // String configurationProperties
       7: invokevirtual #75                 // Method org/springframework/core/env/MutablePropertySources.get:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
      10: goto          14
      13: aconst_null
      14: areturn

  public static java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource> get(org.springframework.core.env.Environment);
    Code:
       0: ldc           #28                 // class org/springframework/core/env/ConfigurableEnvironment
       2: aload_0
       3: invokestatic  #30                 // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;)V
       6: aload_0
       7: checkcast     #28                 // class org/springframework/core/env/ConfigurableEnvironment
      10: invokeinterface #36,  1           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getPropertySources:()Lorg/springframework/core/env/MutablePropertySources;
      15: astore_1
      16: aload_1
      17: ldc           #14                 // String configurationProperties
      19: invokevirtual #75                 // Method org/springframework/core/env/MutablePropertySources.get:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
      22: checkcast     #48                 // class org/springframework/boot/context/properties/source/ConfigurationPropertySourcesPropertySource
      25: astore_2
      26: aload_2
      27: ifnonnull     35
      30: aload_1
      31: invokestatic  #78                 // Method from:(Ljava/lang/Iterable;)Ljava/lang/Iterable;
      34: areturn
      35: aload_2
      36: invokevirtual #82                 // Method org/springframework/boot/context/properties/source/ConfigurationPropertySourcesPropertySource.getSource:()Ljava/lang/Object;
      39: checkcast     #83                 // class java/lang/Iterable
      42: areturn

  public static java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource> from(org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: invokestatic  #85                 // InterfaceMethod org/springframework/boot/context/properties/source/ConfigurationPropertySource.from:(Lorg/springframework/core/env/PropertySource;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;
       4: invokestatic  #90                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
       7: areturn

  public static java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource> from(java.lang.Iterable<org.springframework.core.env.PropertySource<?>>);
    Code:
       0: new           #50                 // class org/springframework/boot/context/properties/source/SpringConfigurationPropertySources
       3: dup
       4: aload_0
       5: invokespecial #52                 // Method org/springframework/boot/context/properties/source/SpringConfigurationPropertySources."<init>":(Ljava/lang/Iterable;)V
       8: areturn

  private static java.util.stream.Stream<org.springframework.core.env.PropertySource<?>> streamPropertySources(org.springframework.core.env.PropertySources);
    Code:
       0: aload_0
       1: invokeinterface #96,  1           // InterfaceMethod org/springframework/core/env/PropertySources.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #102,  0            // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      11: invokeinterface #106,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokedynamic #112,  0            // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      21: invokeinterface #116,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      26: areturn

  private static java.util.stream.Stream<org.springframework.core.env.PropertySource<?>> flatten(org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method org/springframework/core/env/PropertySource.getSource:()Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: instanceof    #28                 // class org/springframework/core/env/ConfigurableEnvironment
       9: ifeq          27
      12: aload_2
      13: checkcast     #28                 // class org/springframework/core/env/ConfigurableEnvironment
      16: astore_1
      17: aload_1
      18: invokeinterface #36,  1           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getPropertySources:()Lorg/springframework/core/env/MutablePropertySources;
      23: invokestatic  #120                // Method streamPropertySources:(Lorg/springframework/core/env/PropertySources;)Ljava/util/stream/Stream;
      26: areturn
      27: aload_0
      28: invokestatic  #124                // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      31: areturn

  private static boolean isIncluded(org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: instanceof    #128                // class org/springframework/core/env/PropertySource$StubPropertySource
       4: ifne          18
       7: aload_0
       8: instanceof    #48                 // class org/springframework/boot/context/properties/source/ConfigurationPropertySourcesPropertySource
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn
}
