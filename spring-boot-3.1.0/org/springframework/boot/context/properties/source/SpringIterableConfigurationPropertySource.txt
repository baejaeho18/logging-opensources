Compiled from "SpringIterableConfigurationPropertySource.java"
class org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource extends org.springframework.boot.context.properties.source.SpringConfigurationPropertySource implements org.springframework.boot.context.properties.source.IterableConfigurationPropertySource,org.springframework.boot.context.properties.source.CachingConfigurationPropertySource {
  private final java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName, org.springframework.boot.context.properties.source.ConfigurationPropertyName> ancestorOfCheck;

  private final org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache<org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings> cache;

  private volatile org.springframework.boot.context.properties.source.ConfigurationPropertyName[] configurationPropertyNames;

  org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource(org.springframework.core.env.EnumerablePropertySource<?>, org.springframework.boot.context.properties.source.PropertyMapper...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/springframework/boot/context/properties/source/SpringConfigurationPropertySource."<init>":(Lorg/springframework/core/env/PropertySource;[Lorg/springframework/boot/context/properties/source/PropertyMapper;)V
       6: aload_0
       7: invokevirtual #7                  // Method assertEnumerablePropertySource:()V
      10: aload_0
      11: aload_0
      12: aload_2
      13: invokevirtual #13                 // Method getAncestorOfCheck:([Lorg/springframework/boot/context/properties/source/PropertyMapper;)Ljava/util/function/BiPredicate;
      16: putfield      #17                 // Field ancestorOfCheck:Ljava/util/function/BiPredicate;
      19: aload_0
      20: new           #21                 // class org/springframework/boot/context/properties/source/SoftReferenceConfigurationPropertyCache
      23: dup
      24: aload_0
      25: invokevirtual #23                 // Method isImmutablePropertySource:()Z
      28: invokespecial #27                 // Method org/springframework/boot/context/properties/source/SoftReferenceConfigurationPropertyCache."<init>":(Z)V
      31: putfield      #30                 // Field cache:Lorg/springframework/boot/context/properties/source/SoftReferenceConfigurationPropertyCache;
      34: return

  private java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName, org.springframework.boot.context.properties.source.ConfigurationPropertyName> getAncestorOfCheck(org.springframework.boot.context.properties.source.PropertyMapper[]);
    Code:
       0: aload_1
       1: iconst_0
       2: aaload
       3: invokeinterface #34,  1           // InterfaceMethod org/springframework/boot/context/properties/source/PropertyMapper.getAncestorOfCheck:()Ljava/util/function/BiPredicate;
       8: astore_2
       9: iconst_1
      10: istore_3
      11: iload_3
      12: aload_1
      13: arraylength
      14: if_icmpge     38
      17: aload_2
      18: aload_1
      19: iload_3
      20: aaload
      21: invokeinterface #34,  1           // InterfaceMethod org/springframework/boot/context/properties/source/PropertyMapper.getAncestorOfCheck:()Ljava/util/function/BiPredicate;
      26: invokeinterface #39,  2           // InterfaceMethod java/util/function/BiPredicate.or:(Ljava/util/function/BiPredicate;)Ljava/util/function/BiPredicate;
      31: astore_2
      32: iinc          3, 1
      35: goto          11
      38: aload_2
      39: areturn

  private void assertEnumerablePropertySource();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method getPropertySource:()Lorg/springframework/core/env/EnumerablePropertySource;
       4: astore_2
       5: aload_2
       6: instanceof    #49                 // class org/springframework/core/env/MapPropertySource
       9: ifeq          44
      12: aload_2
      13: checkcast     #49                 // class org/springframework/core/env/MapPropertySource
      16: astore_1
      17: aload_1
      18: invokevirtual #51                 // Method org/springframework/core/env/MapPropertySource.getSource:()Ljava/lang/Object;
      21: checkcast     #55                 // class java/util/Map
      24: invokeinterface #57,  1           // InterfaceMethod java/util/Map.size:()I
      29: pop
      30: goto          44
      33: astore_2
      34: new           #63                 // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #65                 // String PropertySource must be fully enumerable
      40: invokespecial #67                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: return
    Exception table:
       from    to  target type
          17    30    33   Class java/lang/UnsupportedOperationException

  public org.springframework.boot.context.properties.source.ConfigurationPropertyCaching getCaching();
    Code:
       0: aload_0
       1: getfield      #30                 // Field cache:Lorg/springframework/boot/context/properties/source/SoftReferenceConfigurationPropertyCache;
       4: areturn

  public org.springframework.boot.context.properties.source.ConfigurationProperty getConfigurationProperty(org.springframework.boot.context.properties.source.ConfigurationPropertyName);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: invokespecial #70                 // Method org/springframework/boot/context/properties/source/SpringConfigurationPropertySource.getConfigurationProperty:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationProperty;
      11: astore_2
      12: aload_2
      13: ifnull        18
      16: aload_2
      17: areturn
      18: aload_0
      19: invokevirtual #74                 // Method getMappings:()Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings;
      22: aload_1
      23: invokevirtual #78                 // Method org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings.getMapped:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Ljava/util/Set;
      26: invokeinterface #84,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_3
      32: aload_3
      33: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          92
      41: aload_3
      42: invokeinterface #95,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #98                 // class java/lang/String
      50: astore        4
      52: aload_0
      53: invokevirtual #45                 // Method getPropertySource:()Lorg/springframework/core/env/EnumerablePropertySource;
      56: aload         4
      58: invokevirtual #100                // Method org/springframework/core/env/EnumerablePropertySource.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      61: astore        5
      63: aload         5
      65: ifnull        89
      68: aload_0
      69: invokevirtual #45                 // Method getPropertySource:()Lorg/springframework/core/env/EnumerablePropertySource;
      72: aload         4
      74: invokestatic  #106                // Method org/springframework/boot/origin/PropertySourceOrigin.get:(Lorg/springframework/core/env/PropertySource;Ljava/lang/String;)Lorg/springframework/boot/origin/Origin;
      77: astore        6
      79: aload_0
      80: aload_1
      81: aload         5
      83: aload         6
      85: invokestatic  #112                // Method org/springframework/boot/context/properties/source/ConfigurationProperty.of:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Ljava/lang/Object;Lorg/springframework/boot/origin/Origin;)Lorg/springframework/boot/context/properties/source/ConfigurationProperty;
      88: areturn
      89: goto          32
      92: aconst_null
      93: areturn

  public java.util.stream.Stream<org.springframework.boot.context.properties.source.ConfigurationPropertyName> stream();
    Code:
       0: aload_0
       1: invokevirtual #118                // Method getConfigurationPropertyNames:()[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
       4: astore_1
       5: aload_1
       6: invokestatic  #122                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       9: invokedynamic #128,  0            // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      14: invokeinterface #132,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      19: areturn

  public java.util.Iterator<org.springframework.boot.context.properties.source.ConfigurationPropertyName> iterator();
    Code:
       0: new           #138                // class org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$ConfigurationPropertyNamesIterator
       3: dup
       4: aload_0
       5: invokevirtual #118                // Method getConfigurationPropertyNames:()[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
       8: invokespecial #140                // Method org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$ConfigurationPropertyNamesIterator."<init>":([Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)V
      11: areturn

  public org.springframework.boot.context.properties.source.ConfigurationPropertyState containsDescendantOf(org.springframework.boot.context.properties.source.ConfigurationPropertyName);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #143                // Method org/springframework/boot/context/properties/source/SpringConfigurationPropertySource.containsDescendantOf:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;
       5: astore_2
       6: aload_2
       7: getstatic     #147                // Field org/springframework/boot/context/properties/source/ConfigurationPropertyState.UNKNOWN:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;
      10: if_acmpeq     15
      13: aload_2
      14: areturn
      15: aload_0
      16: getfield      #17                 // Field ancestorOfCheck:Ljava/util/function/BiPredicate;
      19: getstatic     #153                // Field org/springframework/boot/context/properties/source/PropertyMapper.DEFAULT_ANCESTOR_OF_CHECK:Ljava/util/function/BiPredicate;
      22: if_acmpne     38
      25: aload_0
      26: invokevirtual #74                 // Method getMappings:()Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings;
      29: aload_1
      30: aload_0
      31: getfield      #17                 // Field ancestorOfCheck:Ljava/util/function/BiPredicate;
      34: invokevirtual #156                // Method org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings.containsDescendantOf:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Ljava/util/function/BiPredicate;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;
      37: areturn
      38: aload_0
      39: invokevirtual #118                // Method getConfigurationPropertyNames:()[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      42: astore_3
      43: aload_3
      44: astore        4
      46: aload         4
      48: arraylength
      49: istore        5
      51: iconst_0
      52: istore        6
      54: iload         6
      56: iload         5
      58: if_icmpge     98
      61: aload         4
      63: iload         6
      65: aaload
      66: astore        7
      68: aload         7
      70: ifnull        92
      73: aload_0
      74: getfield      #17                 // Field ancestorOfCheck:Ljava/util/function/BiPredicate;
      77: aload_1
      78: aload         7
      80: invokeinterface #159,  3          // InterfaceMethod java/util/function/BiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
      85: ifeq          92
      88: getstatic     #162                // Field org/springframework/boot/context/properties/source/ConfigurationPropertyState.PRESENT:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;
      91: areturn
      92: iinc          6, 1
      95: goto          54
      98: getstatic     #165                // Field org/springframework/boot/context/properties/source/ConfigurationPropertyState.ABSENT:Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;
     101: areturn

  private org.springframework.boot.context.properties.source.ConfigurationPropertyName[] getConfigurationPropertyNames();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method isImmutablePropertySource:()Z
       4: ifne          22
       7: aload_0
       8: invokevirtual #74                 // Method getMappings:()Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings;
      11: aload_0
      12: invokevirtual #45                 // Method getPropertySource:()Lorg/springframework/core/env/EnumerablePropertySource;
      15: invokevirtual #168                // Method org/springframework/core/env/EnumerablePropertySource.getPropertyNames:()[Ljava/lang/String;
      18: invokevirtual #172                // Method org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings.getConfigurationPropertyNames:([Ljava/lang/String;)[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      21: areturn
      22: aload_0
      23: getfield      #175                // Field configurationPropertyNames:[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      26: astore_1
      27: aload_1
      28: ifnonnull     51
      31: aload_0
      32: invokevirtual #74                 // Method getMappings:()Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings;
      35: aload_0
      36: invokevirtual #45                 // Method getPropertySource:()Lorg/springframework/core/env/EnumerablePropertySource;
      39: invokevirtual #168                // Method org/springframework/core/env/EnumerablePropertySource.getPropertyNames:()[Ljava/lang/String;
      42: invokevirtual #172                // Method org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings.getConfigurationPropertyNames:([Ljava/lang/String;)[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      45: astore_1
      46: aload_0
      47: aload_1
      48: putfield      #175                // Field configurationPropertyNames:[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;
      51: aload_1
      52: areturn

  private org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings getMappings();
    Code:
       0: aload_0
       1: getfield      #30                 // Field cache:Lorg/springframework/boot/context/properties/source/SoftReferenceConfigurationPropertyCache;
       4: aload_0
       5: invokedynamic #179,  0            // InvokeDynamic #1:get:(Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource;)Ljava/util/function/Supplier;
      10: aload_0
      11: invokedynamic #182,  0            // InvokeDynamic #2:apply:(Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource;)Ljava/util/function/UnaryOperator;
      16: invokevirtual #186                // Method org/springframework/boot/context/properties/source/SoftReferenceConfigurationPropertyCache.get:(Ljava/util/function/Supplier;Ljava/util/function/UnaryOperator;)Ljava/lang/Object;
      19: checkcast     #79                 // class org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings
      22: areturn

  private org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings createMappings();
    Code:
       0: new           #79                 // class org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings
       3: dup
       4: aload_0
       5: invokevirtual #189                // Method getMappers:()[Lorg/springframework/boot/context/properties/source/PropertyMapper;
       8: aload_0
       9: invokevirtual #23                 // Method isImmutablePropertySource:()Z
      12: aload_0
      13: getfield      #17                 // Field ancestorOfCheck:Ljava/util/function/BiPredicate;
      16: getstatic     #153                // Field org/springframework/boot/context/properties/source/PropertyMapper.DEFAULT_ANCESTOR_OF_CHECK:Ljava/util/function/BiPredicate;
      19: if_acmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: invokespecial #193                // Method org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings."<init>":([Lorg/springframework/boot/context/properties/source/PropertyMapper;ZZ)V
      30: areturn

  private org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings updateMappings(org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #45                 // Method getPropertySource:()Lorg/springframework/core/env/EnumerablePropertySource;
       5: dup
       6: invokestatic  #196                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokedynamic #202,  0            // InvokeDynamic #3:get:(Lorg/springframework/core/env/EnumerablePropertySource;)Ljava/util/function/Supplier;
      15: invokevirtual #205                // Method org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings.updateMappings:(Ljava/util/function/Supplier;)V
      18: aload_1
      19: areturn

  private boolean isImmutablePropertySource();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method getPropertySource:()Lorg/springframework/core/env/EnumerablePropertySource;
       4: astore_1
       5: aload_1
       6: instanceof    #209                // class org/springframework/boot/origin/OriginLookup
       9: ifeq          22
      12: aload_1
      13: checkcast     #209                // class org/springframework/boot/origin/OriginLookup
      16: invokeinterface #211,  1          // InterfaceMethod org/springframework/boot/origin/OriginLookup.isImmutable:()Z
      21: ireturn
      22: ldc           #216                // String systemEnvironment
      24: aload_1
      25: invokevirtual #218                // Method org/springframework/core/env/EnumerablePropertySource.getName:()Ljava/lang/String;
      28: invokevirtual #222                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifeq          50
      34: aload_1
      35: invokevirtual #226                // Method org/springframework/core/env/EnumerablePropertySource.getSource:()Ljava/lang/Object;
      38: invokestatic  #227                // Method java/lang/System.getenv:()Ljava/util/Map;
      41: if_acmpne     48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn
      50: iconst_0
      51: ireturn

  protected org.springframework.core.env.EnumerablePropertySource<?> getPropertySource();
    Code:
       0: aload_0
       1: invokespecial #233                // Method org/springframework/boot/context/properties/source/SpringConfigurationPropertySource.getPropertySource:()Lorg/springframework/core/env/PropertySource;
       4: checkcast     #101                // class org/springframework/core/env/EnumerablePropertySource
       7: areturn

  protected org.springframework.core.env.PropertySource getPropertySource();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method getPropertySource:()Lorg/springframework/core/env/EnumerablePropertySource;
       4: areturn
}
