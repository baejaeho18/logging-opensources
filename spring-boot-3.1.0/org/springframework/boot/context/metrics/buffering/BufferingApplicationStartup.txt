Compiled from "BufferingApplicationStartup.java"
public class org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup implements org.springframework.core.metrics.ApplicationStartup {
  private final int capacity;

  private final java.time.Clock clock;

  private java.time.Instant startTime;

  private final java.util.concurrent.atomic.AtomicInteger idSeq;

  private java.util.function.Predicate<org.springframework.core.metrics.StartupStep> filter;

  private final java.util.concurrent.atomic.AtomicReference<org.springframework.boot.context.metrics.buffering.BufferedStartupStep> current;

  private final java.util.concurrent.atomic.AtomicInteger estimatedSize;

  private final java.util.concurrent.ConcurrentLinkedQueue<org.springframework.boot.context.metrics.buffering.StartupTimeline$TimelineEvent> events;

  public org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #1                  // Method java/time/Clock.systemDefaultZone:()Ljava/time/Clock;
       5: invokespecial #7                  // Method "<init>":(ILjava/time/Clock;)V
       8: return

  org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup(int, java.time.Clock);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #18                 // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      12: putfield      #21                 // Field idSeq:Ljava/util/concurrent/atomic/AtomicInteger;
      15: aload_0
      16: invokedynamic #25,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      21: putfield      #29                 // Field filter:Ljava/util/function/Predicate;
      24: aload_0
      25: new           #33                 // class java/util/concurrent/atomic/AtomicReference
      28: dup
      29: invokespecial #35                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      32: putfield      #36                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      35: aload_0
      36: new           #18                 // class java/util/concurrent/atomic/AtomicInteger
      39: dup
      40: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      43: putfield      #40                 // Field estimatedSize:Ljava/util/concurrent/atomic/AtomicInteger;
      46: aload_0
      47: new           #43                 // class java/util/concurrent/ConcurrentLinkedQueue
      50: dup
      51: invokespecial #45                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      54: putfield      #46                 // Field events:Ljava/util/concurrent/ConcurrentLinkedQueue;
      57: aload_0
      58: iload_1
      59: putfield      #50                 // Field capacity:I
      62: aload_0
      63: aload_2
      64: putfield      #54                 // Field clock:Ljava/time/Clock;
      67: aload_0
      68: aload_2
      69: invokevirtual #58                 // Method java/time/Clock.instant:()Ljava/time/Instant;
      72: putfield      #62                 // Field startTime:Ljava/time/Instant;
      75: return

  public void startRecording();
    Code:
       0: aload_0
       1: getfield      #46                 // Field events:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #66                 // Method java/util/concurrent/ConcurrentLinkedQueue.isEmpty:()Z
       7: ldc           #70                 // String Cannot restart recording once steps have been buffered.
       9: invokestatic  #72                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      12: aload_0
      13: aload_0
      14: getfield      #54                 // Field clock:Ljava/time/Clock;
      17: invokevirtual #58                 // Method java/time/Clock.instant:()Ljava/time/Instant;
      20: putfield      #62                 // Field startTime:Ljava/time/Instant;
      23: return

  public void addFilter(java.util.function.Predicate<org.springframework.core.metrics.StartupStep>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #29                 // Field filter:Ljava/util/function/Predicate;
       5: aload_1
       6: invokeinterface #78,  2           // InterfaceMethod java/util/function/Predicate.and:(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
      11: putfield      #29                 // Field filter:Ljava/util/function/Predicate;
      14: return

  public org.springframework.core.metrics.StartupStep start(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field idSeq:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #84                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: istore_2
       8: aload_0
       9: getfield      #54                 // Field clock:Ljava/time/Clock;
      12: invokevirtual #58                 // Method java/time/Clock.instant:()Ljava/time/Instant;
      15: astore_3
      16: aload_0
      17: getfield      #36                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      20: invokevirtual #88                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      23: checkcast     #92                 // class org/springframework/boot/context/metrics/buffering/BufferedStartupStep
      26: astore        4
      28: aload_0
      29: aload         4
      31: invokevirtual #94                 // Method getLatestActive:(Lorg/springframework/boot/context/metrics/buffering/BufferedStartupStep;)Lorg/springframework/boot/context/metrics/buffering/BufferedStartupStep;
      34: astore        5
      36: new           #92                 // class org/springframework/boot/context/metrics/buffering/BufferedStartupStep
      39: dup
      40: aload         5
      42: aload_1
      43: iload_2
      44: i2l
      45: aload_3
      46: aload_0
      47: invokedynamic #98,  0             // InvokeDynamic #1:accept:(Lorg/springframework/boot/context/metrics/buffering/BufferingApplicationStartup;)Ljava/util/function/Consumer;
      52: invokespecial #102                // Method org/springframework/boot/context/metrics/buffering/BufferedStartupStep."<init>":(Lorg/springframework/boot/context/metrics/buffering/BufferedStartupStep;Ljava/lang/String;JLjava/time/Instant;Ljava/util/function/Consumer;)V
      55: astore        6
      57: aload_0
      58: getfield      #36                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      61: aload         4
      63: aload         6
      65: invokevirtual #105                // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      68: ifeq          74
      71: aload         6
      73: areturn
      74: goto          16

  private void record(org.springframework.boot.context.metrics.buffering.BufferedStartupStep);
    Code:
       0: aload_0
       1: getfield      #29                 // Field filter:Ljava/util/function/Predicate;
       4: aload_1
       5: invokeinterface #109,  2          // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      10: ifeq          58
      13: aload_0
      14: getfield      #40                 // Field estimatedSize:Ljava/util/concurrent/atomic/AtomicInteger;
      17: invokevirtual #112                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      20: aload_0
      21: getfield      #50                 // Field capacity:I
      24: if_icmpge     58
      27: aload_0
      28: getfield      #40                 // Field estimatedSize:Ljava/util/concurrent/atomic/AtomicInteger;
      31: invokevirtual #114                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      34: pop
      35: aload_0
      36: getfield      #46                 // Field events:Ljava/util/concurrent/ConcurrentLinkedQueue;
      39: new           #117                // class org/springframework/boot/context/metrics/buffering/StartupTimeline$TimelineEvent
      42: dup
      43: aload_1
      44: aload_0
      45: getfield      #54                 // Field clock:Ljava/time/Clock;
      48: invokevirtual #58                 // Method java/time/Clock.instant:()Ljava/time/Instant;
      51: invokespecial #119                // Method org/springframework/boot/context/metrics/buffering/StartupTimeline$TimelineEvent."<init>":(Lorg/springframework/boot/context/metrics/buffering/BufferedStartupStep;Ljava/time/Instant;)V
      54: invokevirtual #122                // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
      57: pop
      58: aload_0
      59: getfield      #36                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      62: invokevirtual #88                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      65: checkcast     #92                 // class org/springframework/boot/context/metrics/buffering/BufferedStartupStep
      68: astore_2
      69: aload_0
      70: aload_2
      71: invokevirtual #94                 // Method getLatestActive:(Lorg/springframework/boot/context/metrics/buffering/BufferedStartupStep;)Lorg/springframework/boot/context/metrics/buffering/BufferedStartupStep;
      74: astore_3
      75: aload_0
      76: getfield      #36                 // Field current:Ljava/util/concurrent/atomic/AtomicReference;
      79: aload_2
      80: aload_3
      81: invokevirtual #105                // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      84: ifeq          88
      87: return
      88: goto          58

  private org.springframework.boot.context.metrics.buffering.BufferedStartupStep getLatestActive(org.springframework.boot.context.metrics.buffering.BufferedStartupStep);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_1
       5: invokevirtual #125                // Method org/springframework/boot/context/metrics/buffering/BufferedStartupStep.isEnded:()Z
       8: ifeq          19
      11: aload_1
      12: invokevirtual #128                // Method org/springframework/boot/context/metrics/buffering/BufferedStartupStep.getParent:()Lorg/springframework/boot/context/metrics/buffering/BufferedStartupStep;
      15: astore_1
      16: goto          0
      19: aload_1
      20: areturn

  public org.springframework.boot.context.metrics.buffering.StartupTimeline getBufferedTimeline();
    Code:
       0: new           #132                // class org/springframework/boot/context/metrics/buffering/StartupTimeline
       3: dup
       4: aload_0
       5: getfield      #62                 // Field startTime:Ljava/time/Instant;
       8: new           #134                // class java/util/ArrayList
      11: dup
      12: aload_0
      13: getfield      #46                 // Field events:Ljava/util/concurrent/ConcurrentLinkedQueue;
      16: invokespecial #136                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      19: invokespecial #139                // Method org/springframework/boot/context/metrics/buffering/StartupTimeline."<init>":(Ljava/time/Instant;Ljava/util/List;)V
      22: areturn

  public org.springframework.boot.context.metrics.buffering.StartupTimeline drainBufferedTimeline();
    Code:
       0: new           #134                // class java/util/ArrayList
       3: dup
       4: invokespecial #142                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #46                 // Field events:Ljava/util/concurrent/ConcurrentLinkedQueue;
      12: invokevirtual #143                // Method java/util/concurrent/ConcurrentLinkedQueue.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #147,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          50
      25: aload_1
      26: aload_2
      27: invokeinterface #152,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #117                // class org/springframework/boot/context/metrics/buffering/StartupTimeline$TimelineEvent
      35: invokeinterface #155,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: aload_2
      42: invokeinterface #158,  1          // InterfaceMethod java/util/Iterator.remove:()V
      47: goto          16
      50: aload_0
      51: getfield      #40                 // Field estimatedSize:Ljava/util/concurrent/atomic/AtomicInteger;
      54: iconst_0
      55: invokevirtual #161                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      58: new           #132                // class org/springframework/boot/context/metrics/buffering/StartupTimeline
      61: dup
      62: aload_0
      63: getfield      #62                 // Field startTime:Ljava/time/Instant;
      66: aload_1
      67: invokespecial #139                // Method org/springframework/boot/context/metrics/buffering/StartupTimeline."<init>":(Ljava/time/Instant;Ljava/util/List;)V
      70: areturn

  private static boolean lambda$new$0(org.springframework.core.metrics.StartupStep);
    Code:
       0: iconst_1
       1: ireturn
}
