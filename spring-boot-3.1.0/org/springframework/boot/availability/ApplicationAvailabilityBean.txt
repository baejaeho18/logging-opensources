Compiled from "ApplicationAvailabilityBean.java"
public class org.springframework.boot.availability.ApplicationAvailabilityBean implements org.springframework.boot.availability.ApplicationAvailability, org.springframework.context.ApplicationListener<org.springframework.boot.availability.AvailabilityChangeEvent<?>> {
  private final java.util.Map<java.lang.Class<? extends org.springframework.boot.availability.AvailabilityState>, org.springframework.boot.availability.AvailabilityChangeEvent<?>> events;

  private final org.apache.commons.logging.Log logger;

  public org.springframework.boot.availability.ApplicationAvailabilityBean();
    Code:
       0: aload_0
       1: ldc           #1                  // class org/springframework/boot/availability/ApplicationAvailabilityBean
       3: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       6: invokespecial #9                  // Method "<init>":(Lorg/apache/commons/logging/Log;)V
       9: return

  org.springframework.boot.availability.ApplicationAvailabilityBean(org.apache.commons.logging.Log);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #18                 // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #20                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #21                 // Field events:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #25                 // Field logger:Lorg/apache/commons/logging/Log;
      20: return

  public <S extends org.springframework.boot.availability.AvailabilityState> S getState(java.lang.Class<S>, S);
    Code:
       0: aload_1
       1: ldc           #29                 // String StateType must not be null
       3: invokestatic  #31                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #37                 // String DefaultState must not be null
       9: invokestatic  #31                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: invokevirtual #39                 // Method getState:(Ljava/lang/Class;)Lorg/springframework/boot/availability/AvailabilityState;
      17: astore_3
      18: aload_3
      19: ifnull        26
      22: aload_3
      23: goto          27
      26: aload_2
      27: areturn

  public <S extends org.springframework.boot.availability.AvailabilityState> S getState(java.lang.Class<S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method getLastChangeEvent:(Ljava/lang/Class;)Lorg/springframework/boot/availability/AvailabilityChangeEvent;
       5: astore_2
       6: aload_2
       7: ifnull        17
      10: aload_2
      11: invokevirtual #47                 // Method org/springframework/boot/availability/AvailabilityChangeEvent.getState:()Lorg/springframework/boot/availability/AvailabilityState;
      14: goto          18
      17: aconst_null
      18: areturn

  public <S extends org.springframework.boot.availability.AvailabilityState> org.springframework.boot.availability.AvailabilityChangeEvent<S> getLastChangeEvent(java.lang.Class<S>);
    Code:
       0: aload_0
       1: getfield      #21                 // Field events:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #48                 // class org/springframework/boot/availability/AvailabilityChangeEvent
      13: areturn

  public void onApplicationEvent(org.springframework.boot.availability.AvailabilityChangeEvent<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method org/springframework/boot/availability/AvailabilityChangeEvent.getState:()Lorg/springframework/boot/availability/AvailabilityState;
       5: invokevirtual #58                 // Method getStateType:(Lorg/springframework/boot/availability/AvailabilityState;)Ljava/lang/Class;
       8: astore_2
       9: aload_0
      10: getfield      #25                 // Field logger:Lorg/apache/commons/logging/Log;
      13: invokeinterface #62,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      18: ifeq          36
      21: aload_0
      22: getfield      #25                 // Field logger:Lorg/apache/commons/logging/Log;
      25: aload_0
      26: aload_2
      27: aload_1
      28: invokevirtual #68                 // Method getLogMessage:(Ljava/lang/Class;Lorg/springframework/boot/availability/AvailabilityChangeEvent;)Ljava/lang/Object;
      31: invokeinterface #72,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      36: aload_0
      37: getfield      #21                 // Field events:Ljava/util/Map;
      40: aload_2
      41: aload_1
      42: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: return

  private <S extends org.springframework.boot.availability.AvailabilityState> java.lang.Object getLogMessage(java.lang.Class<S>, org.springframework.boot.availability.AvailabilityChangeEvent<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method getLastChangeEvent:(Ljava/lang/Class;)Lorg/springframework/boot/availability/AvailabilityChangeEvent;
       5: astore_3
       6: new           #80                 // class java/lang/StringBuilder
       9: dup
      10: aload_1
      11: invokevirtual #82                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokedynamic #88,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      19: invokespecial #92                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      22: astore        4
      24: aload         4
      26: aload_3
      27: ifnull        42
      30: aload_3
      31: invokevirtual #47                 // Method org/springframework/boot/availability/AvailabilityChangeEvent.getState:()Lorg/springframework/boot/availability/AvailabilityState;
      34: invokedynamic #95,  0             // InvokeDynamic #1:makeConcatWithConstants:(Lorg/springframework/boot/availability/AvailabilityState;)Ljava/lang/String;
      39: goto          44
      42: ldc           #98                 // String
      44: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: pop
      48: aload         4
      50: aload_2
      51: invokevirtual #47                 // Method org/springframework/boot/availability/AvailabilityChangeEvent.getState:()Lorg/springframework/boot/availability/AvailabilityState;
      54: invokedynamic #104,  0            // InvokeDynamic #2:makeConcatWithConstants:(Lorg/springframework/boot/availability/AvailabilityState;)Ljava/lang/String;
      59: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: pop
      63: aload         4
      65: aload_0
      66: aload_2
      67: invokevirtual #105                // Method org/springframework/boot/availability/AvailabilityChangeEvent.getSource:()Ljava/lang/Object;
      70: invokevirtual #109                // Method getSourceDescription:(Ljava/lang/Object;)Ljava/lang/String;
      73: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: pop
      77: aload         4
      79: areturn

  private java.lang.String getSourceDescription(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: instanceof    #113                // class org/springframework/context/ApplicationEventPublisher
       8: ifeq          14
      11: ldc           #98                 // String
      13: areturn
      14: aload_1
      15: instanceof    #115                // class java/lang/Throwable
      18: ifeq          25
      21: aload_1
      22: goto          32
      25: aload_1
      26: invokevirtual #117                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      29: invokevirtual #121                // Method java/lang/Class.getName:()Ljava/lang/String;
      32: invokedynamic #124,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/Object;)Ljava/lang/String;
      37: areturn

  private java.lang.Class<? extends org.springframework.boot.availability.AvailabilityState> getStateType(org.springframework.boot.availability.AvailabilityState);
    Code:
       0: aload_1
       1: instanceof    #126                // class java/lang/Enum
       4: ifeq          17
       7: aload_1
       8: checkcast     #126                // class java/lang/Enum
      11: invokevirtual #128                // Method java/lang/Enum.getDeclaringClass:()Ljava/lang/Class;
      14: goto          21
      17: aload_1
      18: invokevirtual #117                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: astore_2
      22: aload_2
      23: areturn

  public void onApplicationEvent(org.springframework.context.ApplicationEvent);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #48                 // class org/springframework/boot/availability/AvailabilityChangeEvent
       5: invokevirtual #131                // Method onApplicationEvent:(Lorg/springframework/boot/availability/AvailabilityChangeEvent;)V
       8: return
}
