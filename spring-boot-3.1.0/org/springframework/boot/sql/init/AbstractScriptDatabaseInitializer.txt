Compiled from "AbstractScriptDatabaseInitializer.java"
public abstract class org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer implements org.springframework.context.ResourceLoaderAware,org.springframework.beans.factory.InitializingBean {
  private static final java.lang.String OPTIONAL_LOCATION_PREFIX;

  private final org.springframework.boot.sql.init.DatabaseInitializationSettings settings;

  private volatile org.springframework.core.io.ResourceLoader resourceLoader;

  protected org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer(org.springframework.boot.sql.init.DatabaseInitializationSettings);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field settings:Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;
       9: return

  public void setResourceLoader(org.springframework.core.io.ResourceLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
       5: return

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method initializeDatabase:()Z
       4: pop
       5: return

  public boolean initializeDatabase();
    Code:
       0: new           #21                 // class org/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$ScriptLocationResolver
       3: dup
       4: aload_0
       5: getfield      #13                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
       8: invokespecial #23                 // Method org/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$ScriptLocationResolver."<init>":(Lorg/springframework/core/io/ResourceLoader;)V
      11: astore_1
      12: aload_0
      13: aload_1
      14: invokevirtual #26                 // Method applySchemaScripts:(Lorg/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$ScriptLocationResolver;)Z
      17: istore_2
      18: aload_0
      19: aload_1
      20: invokevirtual #30                 // Method applyDataScripts:(Lorg/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$ScriptLocationResolver;)Z
      23: ifne          30
      26: iload_2
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  private boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #7                  // Field settings:Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;
       4: invokevirtual #33                 // Method org/springframework/boot/sql/init/DatabaseInitializationSettings.getMode:()Lorg/springframework/boot/sql/init/DatabaseInitializationMode;
       7: getstatic     #39                 // Field org/springframework/boot/sql/init/DatabaseInitializationMode.NEVER:Lorg/springframework/boot/sql/init/DatabaseInitializationMode;
      10: if_acmpne     15
      13: iconst_0
      14: ireturn
      15: aload_0
      16: getfield      #7                  // Field settings:Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;
      19: invokevirtual #33                 // Method org/springframework/boot/sql/init/DatabaseInitializationSettings.getMode:()Lorg/springframework/boot/sql/init/DatabaseInitializationMode;
      22: getstatic     #45                 // Field org/springframework/boot/sql/init/DatabaseInitializationMode.ALWAYS:Lorg/springframework/boot/sql/init/DatabaseInitializationMode;
      25: if_acmpeq     35
      28: aload_0
      29: invokevirtual #48                 // Method isEmbeddedDatabase:()Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  protected boolean isEmbeddedDatabase();
    Code:
       0: new           #51                 // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: getfield      #7                  // Field settings:Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;
       8: invokevirtual #33                 // Method org/springframework/boot/sql/init/DatabaseInitializationSettings.getMode:()Lorg/springframework/boot/sql/init/DatabaseInitializationMode;
      11: invokedynamic #53,  0             // InvokeDynamic #0:makeConcatWithConstants:(Lorg/springframework/boot/sql/init/DatabaseInitializationMode;)Ljava/lang/String;
      16: invokespecial #57                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow

  private boolean applySchemaScripts(org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$ScriptLocationResolver);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field settings:Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;
       5: invokevirtual #60                 // Method org/springframework/boot/sql/init/DatabaseInitializationSettings.getSchemaLocations:()Ljava/util/List;
       8: ldc           #64                 // String schema
      10: aload_1
      11: invokevirtual #66                 // Method applyScripts:(Ljava/util/List;Ljava/lang/String;Lorg/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$ScriptLocationResolver;)Z
      14: ireturn

  private boolean applyDataScripts(org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$ScriptLocationResolver);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field settings:Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;
       5: invokevirtual #70                 // Method org/springframework/boot/sql/init/DatabaseInitializationSettings.getDataLocations:()Ljava/util/List;
       8: ldc           #73                 // String data
      10: aload_1
      11: invokevirtual #66                 // Method applyScripts:(Ljava/util/List;Ljava/lang/String;Lorg/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$ScriptLocationResolver;)Z
      14: ireturn

  private boolean applyScripts(java.util.List<java.lang.String>, java.lang.String, org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$ScriptLocationResolver);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #75                 // Method getScripts:(Ljava/util/List;Ljava/lang/String;Lorg/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$ScriptLocationResolver;)Ljava/util/List;
       7: astore        4
       9: aload         4
      11: invokeinterface #79,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          34
      19: aload_0
      20: invokevirtual #84                 // Method isEnabled:()Z
      23: ifeq          34
      26: aload_0
      27: aload         4
      29: invokevirtual #87                 // Method runScripts:(Ljava/util/List;)V
      32: iconst_1
      33: ireturn
      34: iconst_0
      35: ireturn

  private java.util.List<org.springframework.core.io.Resource> getScripts(java.util.List<java.lang.String>, java.lang.String, org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$ScriptLocationResolver);
    Code:
       0: aload_1
       1: invokestatic  #91                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       4: ifeq          11
       7: invokestatic  #96                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: new           #101                // class java/util/ArrayList
      14: dup
      15: invokespecial #103                // Method java/util/ArrayList."<init>":()V
      18: astore        4
      20: aload_1
      21: invokeinterface #104,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore        5
      28: aload         5
      30: invokeinterface #108,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          162
      38: aload         5
      40: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #117                // class java/lang/String
      48: astore        6
      50: aload         6
      52: ldc           #119                // String optional:
      54: invokevirtual #121                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      57: istore        7
      59: iload         7
      61: ifeq          76
      64: aload         6
      66: ldc           #119                // String optional:
      68: invokevirtual #125                // Method java/lang/String.length:()I
      71: invokevirtual #129                // Method java/lang/String.substring:(I)Ljava/lang/String;
      74: astore        6
      76: aload_0
      77: aload         6
      79: aload_3
      80: invokevirtual #133                // Method doGetResources:(Ljava/lang/String;Lorg/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$ScriptLocationResolver;)Ljava/util/List;
      83: invokeinterface #104,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      88: astore        8
      90: aload         8
      92: invokeinterface #108,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      97: ifeq          159
     100: aload         8
     102: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     107: checkcast     #137                // class org/springframework/core/io/Resource
     110: astore        9
     112: aload         9
     114: invokeinterface #139,  1          // InterfaceMethod org/springframework/core/io/Resource.exists:()Z
     119: ifeq          135
     122: aload         4
     124: aload         9
     126: invokeinterface #142,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     131: pop
     132: goto          156
     135: iload         7
     137: ifne          156
     140: new           #51                 // class java/lang/IllegalStateException
     143: dup
     144: aload_2
     145: aload         6
     147: invokedynamic #146,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     152: invokespecial #57                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     155: athrow
     156: goto          90
     159: goto          28
     162: aload         4
     164: areturn

  private java.util.List<org.springframework.core.io.Resource> doGetResources(java.lang.String, org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$ScriptLocationResolver);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #149                // Method org/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$ScriptLocationResolver.resolve:(Ljava/lang/String;)Ljava/util/List;
       5: areturn
       6: astore_3
       7: new           #51                 // class java/lang/IllegalStateException
      10: dup
      11: aload_1
      12: invokedynamic #155,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      17: aload_3
      18: invokespecial #158                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      21: athrow
    Exception table:
       from    to  target type
           0     5     6   Class java/lang/Exception

  private void runScripts(java.util.List<org.springframework.core.io.Resource>);
    Code:
       0: aload_0
       1: new           #161                // class org/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$Scripts
       4: dup
       5: aload_1
       6: invokespecial #163                // Method org/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$Scripts."<init>":(Ljava/util/List;)V
       9: aload_0
      10: getfield      #7                  // Field settings:Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;
      13: invokevirtual #165                // Method org/springframework/boot/sql/init/DatabaseInitializationSettings.isContinueOnError:()Z
      16: invokevirtual #168                // Method org/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$Scripts.continueOnError:(Z)Lorg/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$Scripts;
      19: aload_0
      20: getfield      #7                  // Field settings:Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;
      23: invokevirtual #172                // Method org/springframework/boot/sql/init/DatabaseInitializationSettings.getSeparator:()Ljava/lang/String;
      26: invokevirtual #176                // Method org/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$Scripts.separator:(Ljava/lang/String;)Lorg/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$Scripts;
      29: aload_0
      30: getfield      #7                  // Field settings:Lorg/springframework/boot/sql/init/DatabaseInitializationSettings;
      33: invokevirtual #180                // Method org/springframework/boot/sql/init/DatabaseInitializationSettings.getEncoding:()Ljava/nio/charset/Charset;
      36: invokevirtual #184                // Method org/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$Scripts.encoding:(Ljava/nio/charset/Charset;)Lorg/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$Scripts;
      39: invokevirtual #188                // Method runScripts:(Lorg/springframework/boot/sql/init/AbstractScriptDatabaseInitializer$Scripts;)V
      42: return

  protected abstract void runScripts(org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts);
}
