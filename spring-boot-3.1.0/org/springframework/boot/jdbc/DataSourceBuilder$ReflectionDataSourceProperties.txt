Compiled from "DataSourceBuilder.java"
class org.springframework.boot.jdbc.DataSourceBuilder$ReflectionDataSourceProperties<T extends javax.sql.DataSource> implements org.springframework.boot.jdbc.DataSourceBuilder$DataSourceProperties<T> {
  private final java.util.Map<org.springframework.boot.jdbc.DataSourceBuilder$DataSourceProperty, java.lang.reflect.Method> getters;

  private final java.util.Map<org.springframework.boot.jdbc.DataSourceBuilder$DataSourceProperty, java.lang.reflect.Method> setters;

  private final java.lang.Class<T> dataSourceType;

  org.springframework.boot.jdbc.DataSourceBuilder$ReflectionDataSourceProperties(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #7                  // String No supported DataSource type found
      15: invokestatic  #9                  // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      18: new           #15                 // class java/util/HashMap
      21: dup
      22: invokespecial #17                 // Method java/util/HashMap."<init>":()V
      25: astore_2
      26: new           #15                 // class java/util/HashMap
      29: dup
      30: invokespecial #17                 // Method java/util/HashMap."<init>":()V
      33: astore_3
      34: invokestatic  #18                 // Method org/springframework/boot/jdbc/DataSourceBuilder$DataSourceProperty.values:()[Lorg/springframework/boot/jdbc/DataSourceBuilder$DataSourceProperty;
      37: astore        4
      39: aload         4
      41: arraylength
      42: istore        5
      44: iconst_0
      45: istore        6
      47: iload         6
      49: iload         5
      51: if_icmpge     93
      54: aload         4
      56: iload         6
      58: aaload
      59: astore        7
      61: aload_0
      62: aload_2
      63: aload         7
      65: aload         7
      67: aload_1
      68: invokevirtual #24                 // Method org/springframework/boot/jdbc/DataSourceBuilder$DataSourceProperty.findGetter:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
      71: invokevirtual #28                 // Method putIfNotNull:(Ljava/util/Map;Lorg/springframework/boot/jdbc/DataSourceBuilder$DataSourceProperty;Ljava/lang/reflect/Method;)V
      74: aload_0
      75: aload_3
      76: aload         7
      78: aload         7
      80: aload_1
      81: invokevirtual #34                 // Method org/springframework/boot/jdbc/DataSourceBuilder$DataSourceProperty.findSetter:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
      84: invokevirtual #28                 // Method putIfNotNull:(Ljava/util/Map;Lorg/springframework/boot/jdbc/DataSourceBuilder$DataSourceProperty;Ljava/lang/reflect/Method;)V
      87: iinc          6, 1
      90: goto          47
      93: aload_0
      94: aload_1
      95: putfield      #37                 // Field dataSourceType:Ljava/lang/Class;
      98: aload_0
      99: aload_2
     100: invokestatic  #41                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     103: putfield      #47                 // Field getters:Ljava/util/Map;
     106: aload_0
     107: aload_3
     108: invokestatic  #41                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     111: putfield      #51                 // Field setters:Ljava/util/Map;
     114: return

  private void putIfNotNull(java.util.Map<org.springframework.boot.jdbc.DataSourceBuilder$DataSourceProperty, java.lang.reflect.Method>, org.springframework.boot.jdbc.DataSourceBuilder$DataSourceProperty, java.lang.reflect.Method);
    Code:
       0: aload_3
       1: ifnull        13
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #54,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: return

  public java.lang.Class<T> getDataSourceInstanceType();
    Code:
       0: aload_0
       1: getfield      #37                 // Field dataSourceType:Ljava/lang/Class;
       4: areturn

  public boolean canSet(org.springframework.boot.jdbc.DataSourceBuilder$DataSourceProperty);
    Code:
       0: aload_0
       1: getfield      #51                 // Field setters:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #60,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public void set(T, org.springframework.boot.jdbc.DataSourceBuilder$DataSourceProperty, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: aload_0
       3: getfield      #51                 // Field setters:Ljava/util/Map;
       6: invokevirtual #64                 // Method getMethod:(Lorg/springframework/boot/jdbc/DataSourceBuilder$DataSourceProperty;Ljava/util/Map;)Ljava/lang/reflect/Method;
       9: astore        4
      11: aload         4
      13: ifnull        31
      16: aload         4
      18: aload_1
      19: iconst_1
      20: anewarray     #2                  // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_3
      26: aastore
      27: invokestatic  #68                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: return

  public java.lang.String get(T, org.springframework.boot.jdbc.DataSourceBuilder$DataSourceProperty);
    Code:
       0: aload_0
       1: aload_2
       2: aload_0
       3: getfield      #47                 // Field getters:Ljava/util/Map;
       6: invokevirtual #64                 // Method getMethod:(Lorg/springframework/boot/jdbc/DataSourceBuilder$DataSourceProperty;Ljava/util/Map;)Ljava/lang/reflect/Method;
       9: astore_3
      10: aload_3
      11: ifnull        23
      14: aload_3
      15: aload_1
      16: invokestatic  #74                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #77                 // class java/lang/String
      22: areturn
      23: aconst_null
      24: areturn

  private java.lang.reflect.Method getMethod(org.springframework.boot.jdbc.DataSourceBuilder$DataSourceProperty, java.util.Map<org.springframework.boot.jdbc.DataSourceBuilder$DataSourceProperty, java.lang.reflect.Method>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #79,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #83                 // class java/lang/reflect/Method
      10: astore_3
      11: aload_3
      12: ifnonnull     38
      15: aload_1
      16: invokevirtual #85                 // Method org/springframework/boot/jdbc/DataSourceBuilder$DataSourceProperty.isOptional:()Z
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: aload_1
      28: invokedynamic #89,  0             // InvokeDynamic #0:get:(Lorg/springframework/boot/jdbc/DataSourceBuilder$DataSourceProperty;)Ljava/util/function/Supplier;
      33: invokestatic  #92                 // Method org/springframework/boot/jdbc/UnsupportedDataSourcePropertyException.throwIf:(ZLjava/util/function/Supplier;)V
      36: aconst_null
      37: areturn
      38: aload_3
      39: invokestatic  #98                 // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Method;)V
      42: aload_3
      43: areturn

  private static java.lang.String lambda$getMethod$0(org.springframework.boot.jdbc.DataSourceBuilder$DataSourceProperty);
    Code:
       0: aload_0
       1: invokedynamic #102,  0            // InvokeDynamic #1:makeConcatWithConstants:(Lorg/springframework/boot/jdbc/DataSourceBuilder$DataSourceProperty;)Ljava/lang/String;
       6: areturn
}
