Compiled from "NettyRSocketServerFactory.java"
public class org.springframework.boot.rsocket.netty.NettyRSocketServerFactory implements org.springframework.boot.rsocket.server.RSocketServerFactory,org.springframework.boot.rsocket.server.ConfigurableRSocketServerFactory {
  private int port;

  private org.springframework.util.unit.DataSize fragmentSize;

  private java.net.InetAddress address;

  private org.springframework.boot.rsocket.server.RSocketServer$Transport transport;

  private org.springframework.http.client.reactive.ReactorResourceFactory resourceFactory;

  private java.time.Duration lifecycleTimeout;

  private java.util.List<org.springframework.boot.rsocket.server.RSocketServerCustomizer> rSocketServerCustomizers;

  private org.springframework.boot.web.server.Ssl ssl;

  private org.springframework.boot.web.server.SslStoreProvider sslStoreProvider;

  private org.springframework.boot.ssl.SslBundles sslBundles;

  public org.springframework.boot.rsocket.netty.NettyRSocketServerFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        9898
       8: putfield      #7                  // Field port:I
      11: aload_0
      12: getstatic     #13                 // Field org/springframework/boot/rsocket/server/RSocketServer$Transport.TCP:Lorg/springframework/boot/rsocket/server/RSocketServer$Transport;
      15: putfield      #19                 // Field transport:Lorg/springframework/boot/rsocket/server/RSocketServer$Transport;
      18: aload_0
      19: new           #22                 // class java/util/ArrayList
      22: dup
      23: invokespecial #24                 // Method java/util/ArrayList."<init>":()V
      26: putfield      #25                 // Field rSocketServerCustomizers:Ljava/util/List;
      29: return

  public void setPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field port:I
       5: return

  public void setFragmentSize(org.springframework.util.unit.DataSize);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field fragmentSize:Lorg/springframework/util/unit/DataSize;
       5: return

  public void setAddress(java.net.InetAddress);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field address:Ljava/net/InetAddress;
       5: return

  public void setTransport(org.springframework.boot.rsocket.server.RSocketServer$Transport);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field transport:Lorg/springframework/boot/rsocket/server/RSocketServer$Transport;
       5: return

  public void setSsl(org.springframework.boot.web.server.Ssl);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field ssl:Lorg/springframework/boot/web/server/Ssl;
       5: return

  public void setSslStoreProvider(org.springframework.boot.web.server.SslStoreProvider);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field sslStoreProvider:Lorg/springframework/boot/web/server/SslStoreProvider;
       5: return

  public void setSslBundles(org.springframework.boot.ssl.SslBundles);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field sslBundles:Lorg/springframework/boot/ssl/SslBundles;
       5: return

  public void setResourceFactory(org.springframework.http.client.reactive.ReactorResourceFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field resourceFactory:Lorg/springframework/http/client/reactive/ReactorResourceFactory;
       5: return

  public void setRSocketServerCustomizers(java.util.Collection<? extends org.springframework.boot.rsocket.server.RSocketServerCustomizer>);
    Code:
       0: aload_1
       1: ldc           #53                 // String RSocketServerCustomizers must not be null
       3: invokestatic  #55                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #22                 // class java/util/ArrayList
      10: dup
      11: aload_1
      12: invokespecial #61                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      15: putfield      #25                 // Field rSocketServerCustomizers:Ljava/util/List;
      18: return

  public void addRSocketServerCustomizers(org.springframework.boot.rsocket.server.RSocketServerCustomizer...);
    Code:
       0: aload_1
       1: ldc           #53                 // String RSocketServerCustomizers must not be null
       3: invokestatic  #55                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #25                 // Field rSocketServerCustomizers:Ljava/util/List;
      10: aload_1
      11: invokestatic  #64                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      14: invokeinterface #70,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: return

  public void setLifecycleTimeout(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #76                 // Field lifecycleTimeout:Ljava/time/Duration;
       5: return

  public org.springframework.boot.rsocket.netty.NettyRSocketServer create(io.rsocket.SocketAcceptor);
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method createTransport:()Lio/rsocket/transport/ServerTransport;
       4: astore_2
       5: aload_1
       6: invokestatic  #84                 // Method io/rsocket/core/RSocketServer.create:(Lio/rsocket/SocketAcceptor;)Lio/rsocket/core/RSocketServer;
       9: astore_3
      10: aload_0
      11: aload_3
      12: invokevirtual #90                 // Method configureServer:(Lio/rsocket/core/RSocketServer;)V
      15: aload_3
      16: aload_2
      17: invokevirtual #94                 // Method io/rsocket/core/RSocketServer.bind:(Lio/rsocket/transport/ServerTransport;)Lreactor/core/publisher/Mono;
      20: astore        4
      22: new           #98                 // class org/springframework/boot/rsocket/netty/NettyRSocketServer
      25: dup
      26: aload         4
      28: aload_0
      29: getfield      #76                 // Field lifecycleTimeout:Ljava/time/Duration;
      32: invokespecial #100                // Method org/springframework/boot/rsocket/netty/NettyRSocketServer."<init>":(Lreactor/core/publisher/Mono;Ljava/time/Duration;)V
      35: areturn

  private void configureServer(io.rsocket.core.RSocketServer);
    Code:
       0: invokestatic  #103                // Method org/springframework/boot/context/properties/PropertyMapper.get:()Lorg/springframework/boot/context/properties/PropertyMapper;
       3: invokevirtual #109                // Method org/springframework/boot/context/properties/PropertyMapper.alwaysApplyingWhenNonNull:()Lorg/springframework/boot/context/properties/PropertyMapper;
       6: astore_2
       7: aload_2
       8: aload_0
       9: getfield      #29                 // Field fragmentSize:Lorg/springframework/util/unit/DataSize;
      12: invokevirtual #112                // Method org/springframework/boot/context/properties/PropertyMapper.from:(Ljava/lang/Object;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
      15: invokedynamic #116,  0            // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      20: invokevirtual #120                // Method org/springframework/boot/context/properties/PropertyMapper$Source.asInt:(Ljava/util/function/Function;)Lorg/springframework/boot/context/properties/PropertyMapper$Source;
      23: aload_1
      24: dup
      25: invokestatic  #126                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: invokedynamic #132,  0            // InvokeDynamic #1:accept:(Lio/rsocket/core/RSocketServer;)Ljava/util/function/Consumer;
      34: invokevirtual #136                // Method org/springframework/boot/context/properties/PropertyMapper$Source.to:(Ljava/util/function/Consumer;)V
      37: aload_0
      38: getfield      #25                 // Field rSocketServerCustomizers:Ljava/util/List;
      41: aload_1
      42: invokedynamic #140,  0            // InvokeDynamic #2:accept:(Lio/rsocket/core/RSocketServer;)Ljava/util/function/Consumer;
      47: invokeinterface #141,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      52: return

  private io.rsocket.transport.ServerTransport<io.rsocket.transport.netty.server.CloseableChannel> createTransport();
    Code:
       0: aload_0
       1: getfield      #19                 // Field transport:Lorg/springframework/boot/rsocket/server/RSocketServer$Transport;
       4: getstatic     #144                // Field org/springframework/boot/rsocket/server/RSocketServer$Transport.WEBSOCKET:Lorg/springframework/boot/rsocket/server/RSocketServer$Transport;
       7: if_acmpne     15
      10: aload_0
      11: invokevirtual #147                // Method createWebSocketTransport:()Lio/rsocket/transport/ServerTransport;
      14: areturn
      15: aload_0
      16: invokevirtual #150                // Method createTcpTransport:()Lio/rsocket/transport/ServerTransport;
      19: areturn

  private io.rsocket.transport.ServerTransport<io.rsocket.transport.netty.server.CloseableChannel> createWebSocketTransport();
    Code:
       0: invokestatic  #153                // Method reactor/netty/http/server/HttpServer.create:()Lreactor/netty/http/server/HttpServer;
       3: astore_1
       4: aload_0
       5: getfield      #49                 // Field resourceFactory:Lorg/springframework/http/client/reactive/ReactorResourceFactory;
       8: ifnull        26
      11: aload_1
      12: aload_0
      13: getfield      #49                 // Field resourceFactory:Lorg/springframework/http/client/reactive/ReactorResourceFactory;
      16: invokevirtual #158                // Method org/springframework/http/client/reactive/ReactorResourceFactory.getLoopResources:()Lreactor/netty/resources/LoopResources;
      19: invokevirtual #164                // Method reactor/netty/http/server/HttpServer.runOn:(Lreactor/netty/resources/LoopResources;)Lreactor/netty/transport/Transport;
      22: checkcast     #154                // class reactor/netty/http/server/HttpServer
      25: astore_1
      26: aload_0
      27: getfield      #37                 // Field ssl:Lorg/springframework/boot/web/server/Ssl;
      30: invokestatic  #168                // Method org/springframework/boot/web/server/Ssl.isEnabled:(Lorg/springframework/boot/web/server/Ssl;)Z
      33: ifeq          42
      36: aload_0
      37: aload_1
      38: invokevirtual #174                // Method customizeSslConfiguration:(Lreactor/netty/http/server/HttpServer;)Lreactor/netty/http/server/HttpServer;
      41: astore_1
      42: aload_1
      43: aload_0
      44: invokedynamic #178,  0            // InvokeDynamic #3:get:(Lorg/springframework/boot/rsocket/netty/NettyRSocketServerFactory;)Ljava/util/function/Supplier;
      49: invokevirtual #181                // Method reactor/netty/http/server/HttpServer.bindAddress:(Ljava/util/function/Supplier;)Lreactor/netty/http/server/HttpServer;
      52: invokestatic  #185                // Method io/rsocket/transport/netty/server/WebsocketServerTransport.create:(Lreactor/netty/http/server/HttpServer;)Lio/rsocket/transport/netty/server/WebsocketServerTransport;
      55: areturn

  private reactor.netty.http.server.HttpServer customizeSslConfiguration(reactor.netty.http.server.HttpServer);
    Code:
       0: new           #190                // class org/springframework/boot/web/embedded/netty/SslServerCustomizer
       3: dup
       4: aconst_null
       5: aload_0
       6: getfield      #37                 // Field ssl:Lorg/springframework/boot/web/server/Ssl;
       9: invokevirtual #192                // Method org/springframework/boot/web/server/Ssl.getClientAuth:()Lorg/springframework/boot/web/server/Ssl$ClientAuth;
      12: aload_0
      13: invokevirtual #196                // Method getSslBundle:()Lorg/springframework/boot/ssl/SslBundle;
      16: invokespecial #200                // Method org/springframework/boot/web/embedded/netty/SslServerCustomizer."<init>":(Lorg/springframework/boot/web/server/Http2;Lorg/springframework/boot/web/server/Ssl$ClientAuth;Lorg/springframework/boot/ssl/SslBundle;)V
      19: aload_1
      20: invokevirtual #203                // Method org/springframework/boot/web/embedded/netty/SslServerCustomizer.apply:(Lreactor/netty/http/server/HttpServer;)Lreactor/netty/http/server/HttpServer;
      23: areturn

  private io.rsocket.transport.ServerTransport<io.rsocket.transport.netty.server.CloseableChannel> createTcpTransport();
    Code:
       0: invokestatic  #205                // Method reactor/netty/tcp/TcpServer.create:()Lreactor/netty/tcp/TcpServer;
       3: astore_1
       4: aload_0
       5: getfield      #49                 // Field resourceFactory:Lorg/springframework/http/client/reactive/ReactorResourceFactory;
       8: ifnull        23
      11: aload_1
      12: aload_0
      13: getfield      #49                 // Field resourceFactory:Lorg/springframework/http/client/reactive/ReactorResourceFactory;
      16: invokevirtual #158                // Method org/springframework/http/client/reactive/ReactorResourceFactory.getLoopResources:()Lreactor/netty/resources/LoopResources;
      19: invokevirtual #210                // Method reactor/netty/tcp/TcpServer.runOn:(Lreactor/netty/resources/LoopResources;)Lreactor/netty/tcp/TcpServer;
      22: astore_1
      23: aload_0
      24: getfield      #37                 // Field ssl:Lorg/springframework/boot/web/server/Ssl;
      27: invokestatic  #168                // Method org/springframework/boot/web/server/Ssl.isEnabled:(Lorg/springframework/boot/web/server/Ssl;)Z
      30: ifeq          56
      33: new           #213                // class org/springframework/boot/rsocket/netty/NettyRSocketServerFactory$TcpSslServerCustomizer
      36: dup
      37: aload_0
      38: getfield      #37                 // Field ssl:Lorg/springframework/boot/web/server/Ssl;
      41: invokevirtual #192                // Method org/springframework/boot/web/server/Ssl.getClientAuth:()Lorg/springframework/boot/web/server/Ssl$ClientAuth;
      44: aload_0
      45: invokevirtual #196                // Method getSslBundle:()Lorg/springframework/boot/ssl/SslBundle;
      48: invokespecial #215                // Method org/springframework/boot/rsocket/netty/NettyRSocketServerFactory$TcpSslServerCustomizer."<init>":(Lorg/springframework/boot/web/server/Ssl$ClientAuth;Lorg/springframework/boot/ssl/SslBundle;)V
      51: aload_1
      52: invokevirtual #218                // Method org/springframework/boot/rsocket/netty/NettyRSocketServerFactory$TcpSslServerCustomizer.apply:(Lreactor/netty/tcp/TcpServer;)Lreactor/netty/tcp/TcpServer;
      55: astore_1
      56: aload_1
      57: aload_0
      58: invokedynamic #178,  0            // InvokeDynamic #3:get:(Lorg/springframework/boot/rsocket/netty/NettyRSocketServerFactory;)Ljava/util/function/Supplier;
      63: invokevirtual #221                // Method reactor/netty/tcp/TcpServer.bindAddress:(Ljava/util/function/Supplier;)Lreactor/netty/tcp/TcpServer;
      66: invokestatic  #224                // Method io/rsocket/transport/netty/server/TcpServerTransport.create:(Lreactor/netty/tcp/TcpServer;)Lio/rsocket/transport/netty/server/TcpServerTransport;
      69: areturn

  private org.springframework.boot.ssl.SslBundle getSslBundle();
    Code:
       0: aload_0
       1: getfield      #37                 // Field ssl:Lorg/springframework/boot/web/server/Ssl;
       4: aload_0
       5: getfield      #45                 // Field sslBundles:Lorg/springframework/boot/ssl/SslBundles;
       8: aload_0
       9: getfield      #41                 // Field sslStoreProvider:Lorg/springframework/boot/web/server/SslStoreProvider;
      12: invokestatic  #229                // Method org/springframework/boot/web/server/WebServerSslBundle.get:(Lorg/springframework/boot/web/server/Ssl;Lorg/springframework/boot/ssl/SslBundles;Lorg/springframework/boot/web/server/SslStoreProvider;)Lorg/springframework/boot/ssl/SslBundle;
      15: areturn

  private java.net.InetSocketAddress getListenAddress();
    Code:
       0: aload_0
       1: getfield      #33                 // Field address:Ljava/net/InetAddress;
       4: ifnull        26
       7: new           #234                // class java/net/InetSocketAddress
      10: dup
      11: aload_0
      12: getfield      #33                 // Field address:Ljava/net/InetAddress;
      15: invokevirtual #236                // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      18: aload_0
      19: getfield      #7                  // Field port:I
      22: invokespecial #242                // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      25: areturn
      26: new           #234                // class java/net/InetSocketAddress
      29: dup
      30: aload_0
      31: getfield      #7                  // Field port:I
      34: invokespecial #245                // Method java/net/InetSocketAddress."<init>":(I)V
      37: areturn

  public org.springframework.boot.rsocket.server.RSocketServer create(io.rsocket.SocketAcceptor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #248                // Method create:(Lio/rsocket/SocketAcceptor;)Lorg/springframework/boot/rsocket/netty/NettyRSocketServer;
       5: areturn

  private static void lambda$configureServer$0(io.rsocket.core.RSocketServer, org.springframework.boot.rsocket.server.RSocketServerCustomizer);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #251,  2          // InterfaceMethod org/springframework/boot/rsocket/server/RSocketServerCustomizer.customize:(Lio/rsocket/core/RSocketServer;)V
       7: return
}
