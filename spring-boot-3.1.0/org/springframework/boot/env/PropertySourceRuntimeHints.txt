Compiled from "PropertySourceRuntimeHints.java"
class org.springframework.boot.env.PropertySourceRuntimeHints implements org.springframework.aot.hint.RuntimeHintsRegistrar {
  org.springframework.boot.env.PropertySourceRuntimeHints();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void registerHints(org.springframework.aot.hint.RuntimeHints, java.lang.ClassLoader);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/springframework/aot/hint/RuntimeHints.reflection:()Lorg/springframework/aot/hint/ReflectionHints;
       4: aload_2
       5: ldc           #13                 // String org.yaml.snakeyaml.Yaml
       7: invokedynamic #15,  0             // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      12: invokevirtual #19                 // Method org/springframework/aot/hint/ReflectionHints.registerTypeIfPresent:(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/aot/hint/ReflectionHints;
      15: pop
      16: return

  private static void lambda$registerHints$0(org.springframework.aot.hint.TypeHint$Builder);
    Code:
       0: aload_0
       1: ldc           #25                 // class org/springframework/boot/env/YamlPropertySourceLoader
       3: invokestatic  #27                 // InterfaceMethod org/springframework/aot/hint/TypeReference.of:(Ljava/lang/Class;)Lorg/springframework/aot/hint/TypeReference;
       6: invokevirtual #33                 // Method org/springframework/aot/hint/TypeHint$Builder.onReachableType:(Lorg/springframework/aot/hint/TypeReference;)Lorg/springframework/aot/hint/TypeHint$Builder;
       9: pop
      10: return
}
