Compiled from "ErrorPageFilter.java"
class org.springframework.boot.web.servlet.support.ErrorPageFilter$ErrorWrapperResponse extends jakarta.servlet.http.HttpServletResponseWrapper {
  private int status;

  private java.lang.String message;

  private boolean hasErrorToSend;

  org.springframework.boot.web.servlet.support.ErrorPageFilter$ErrorWrapperResponse(jakarta.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method jakarta/servlet/http/HttpServletResponseWrapper."<init>":(Ljakarta/servlet/http/HttpServletResponse;)V
       5: aload_0
       6: iconst_0
       7: putfield      #7                  // Field hasErrorToSend:Z
      10: return

  public void sendError(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokevirtual #13                 // Method sendError:(ILjava/lang/String;)V
       6: return

  public void sendError(int, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field status:I
       5: aload_0
       6: aload_2
       7: putfield      #21                 // Field message:Ljava/lang/String;
      10: aload_0
      11: iconst_1
      12: putfield      #7                  // Field hasErrorToSend:Z
      15: return

  public int getStatus();
    Code:
       0: aload_0
       1: getfield      #7                  // Field hasErrorToSend:Z
       4: ifeq          12
       7: aload_0
       8: getfield      #17                 // Field status:I
      11: ireturn
      12: aload_0
      13: invokespecial #25                 // Method jakarta/servlet/http/HttpServletResponseWrapper.getStatus:()I
      16: ireturn

  public void flushBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method sendErrorIfNecessary:()V
       4: aload_0
       5: invokespecial #33                 // Method jakarta/servlet/http/HttpServletResponseWrapper.flushBuffer:()V
       8: return

  private void sendErrorIfNecessary() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field hasErrorToSend:Z
       4: ifeq          34
       7: aload_0
       8: invokevirtual #36                 // Method isCommitted:()Z
      11: ifne          34
      14: aload_0
      15: invokevirtual #40                 // Method getResponse:()Ljakarta/servlet/ServletResponse;
      18: checkcast     #44                 // class jakarta/servlet/http/HttpServletResponse
      21: aload_0
      22: getfield      #17                 // Field status:I
      25: aload_0
      26: getfield      #21                 // Field message:Ljava/lang/String;
      29: invokeinterface #46,  3           // InterfaceMethod jakarta/servlet/http/HttpServletResponse.sendError:(ILjava/lang/String;)V
      34: return

  java.lang.String getMessage();
    Code:
       0: aload_0
       1: getfield      #21                 // Field message:Ljava/lang/String;
       4: areturn

  boolean hasErrorToSend();
    Code:
       0: aload_0
       1: getfield      #7                  // Field hasErrorToSend:Z
       4: ireturn

  public java.io.PrintWriter getWriter() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method sendErrorIfNecessary:()V
       4: aload_0
       5: invokespecial #47                 // Method jakarta/servlet/http/HttpServletResponseWrapper.getWriter:()Ljava/io/PrintWriter;
       8: areturn

  public jakarta.servlet.ServletOutputStream getOutputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method sendErrorIfNecessary:()V
       4: aload_0
       5: invokespecial #51                 // Method jakarta/servlet/http/HttpServletResponseWrapper.getOutputStream:()Ljakarta/servlet/ServletOutputStream;
       8: areturn
}
