Compiled from "UndertowWebServer.java"
public class org.springframework.boot.web.embedded.undertow.UndertowWebServer implements org.springframework.boot.web.server.WebServer {
  private static final org.apache.commons.logging.Log logger;

  private final java.util.concurrent.atomic.AtomicReference<org.springframework.boot.web.server.GracefulShutdownCallback> gracefulShutdownCallback;

  private final java.lang.Object monitor;

  private final io.undertow.Undertow$Builder builder;

  private final java.lang.Iterable<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory> httpHandlerFactories;

  private final boolean autoStart;

  private io.undertow.Undertow undertow;

  private volatile boolean started;

  private volatile io.undertow.server.handlers.GracefulShutdownHandler gracefulShutdown;

  private volatile java.util.List<java.io.Closeable> closeables;

  public org.springframework.boot.web.embedded.undertow.UndertowWebServer(io.undertow.Undertow$Builder, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class org/springframework/boot/web/embedded/undertow/UndertowWebServer$CloseableHttpHandlerFactory
       5: dup
       6: aconst_null
       7: invokespecial #3                  // Method org/springframework/boot/web/embedded/undertow/UndertowWebServer$CloseableHttpHandlerFactory."<init>":(Ljava/io/Closeable;)V
      10: invokestatic  #7                  // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      13: iload_2
      14: invokespecial #13                 // Method "<init>":(Lio/undertow/Undertow$Builder;Ljava/lang/Iterable;Z)V
      17: return

  public org.springframework.boot.web.embedded.undertow.UndertowWebServer(io.undertow.Undertow$Builder, java.lang.Iterable<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory>, boolean);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #23                 // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #25                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #26                 // Field gracefulShutdownCallback:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: new           #19                 // class java/lang/Object
      19: dup
      20: invokespecial #18                 // Method java/lang/Object."<init>":()V
      23: putfield      #30                 // Field monitor:Ljava/lang/Object;
      26: aload_0
      27: iconst_0
      28: putfield      #34                 // Field started:Z
      31: aload_0
      32: aload_1
      33: putfield      #38                 // Field builder:Lio/undertow/Undertow$Builder;
      36: aload_0
      37: aload_2
      38: putfield      #42                 // Field httpHandlerFactories:Ljava/lang/Iterable;
      41: aload_0
      42: iload_3
      43: putfield      #46                 // Field autoStart:Z
      46: return

  public void start() throws org.springframework.boot.web.server.WebServerException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field monitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #34                 // Field started:Z
      11: ifeq          17
      14: aload_1
      15: monitorexit
      16: return
      17: aload_0
      18: getfield      #46                 // Field autoStart:Z
      21: ifne          27
      24: aload_1
      25: monitorexit
      26: return
      27: aload_0
      28: getfield      #49                 // Field undertow:Lio/undertow/Undertow;
      31: ifnonnull     42
      34: aload_0
      35: aload_0
      36: invokevirtual #53                 // Method createUndertowServer:()Lio/undertow/Undertow;
      39: putfield      #49                 // Field undertow:Lio/undertow/Undertow;
      42: aload_0
      43: getfield      #49                 // Field undertow:Lio/undertow/Undertow;
      46: invokevirtual #57                 // Method io/undertow/Undertow.start:()V
      49: aload_0
      50: iconst_1
      51: putfield      #34                 // Field started:Z
      54: aload_0
      55: invokevirtual #62                 // Method getStartLogMessage:()Ljava/lang/String;
      58: astore_2
      59: getstatic     #66                 // Field logger:Lorg/apache/commons/logging/Log;
      62: aload_2
      63: invokeinterface #70,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      68: goto          100
      71: astore_2
      72: aload_2
      73: aload_0
      74: invokedynamic #78,  0             // InvokeDynamic #0:accept:(Lorg/springframework/boot/web/embedded/undertow/UndertowWebServer;)Ljava/util/function/Consumer;
      79: invokestatic  #82                 // Method org/springframework/boot/web/server/PortInUseException.ifPortBindingException:(Ljava/lang/Exception;Ljava/util/function/Consumer;)V
      82: new           #88                 // class org/springframework/boot/web/server/WebServerException
      85: dup
      86: ldc           #90                 // String Unable to start embedded Undertow
      88: aload_2
      89: invokespecial #92                 // Method org/springframework/boot/web/server/WebServerException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      92: athrow
      93: astore_3
      94: aload_0
      95: invokevirtual #95                 // Method stopSilently:()V
      98: aload_3
      99: athrow
     100: aload_1
     101: monitorexit
     102: goto          112
     105: astore        4
     107: aload_1
     108: monitorexit
     109: aload         4
     111: athrow
     112: return
    Exception table:
       from    to  target type
          17    24    71   Class java/lang/Exception
          27    68    71   Class java/lang/Exception
          72    94    93   any
           7    16   105   any
          17    26   105   any
          27   102   105   any
         105   109   105   any

  private void stopSilently();
    Code:
       0: aload_0
       1: getfield      #49                 // Field undertow:Lio/undertow/Undertow;
       4: ifnull        29
       7: aload_0
       8: getfield      #49                 // Field undertow:Lio/undertow/Undertow;
      11: invokevirtual #98                 // Method io/undertow/Undertow.stop:()V
      14: aload_0
      15: getfield      #101                // Field closeables:Ljava/util/List;
      18: aload_0
      19: invokedynamic #105,  0            // InvokeDynamic #1:accept:(Lorg/springframework/boot/web/embedded/undertow/UndertowWebServer;)Ljava/util/function/Consumer;
      24: invokeinterface #106,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      29: goto          33
      32: astore_1
      33: return
    Exception table:
       from    to  target type
           0    29    32   Class java/lang/Exception

  private void closeSilently(java.io.Closeable);
    Code:
       0: aload_1
       1: invokeinterface #112,  1          // InterfaceMethod java/io/Closeable.close:()V
       6: goto          10
       9: astore_2
      10: return
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Exception

  private io.undertow.Undertow createUndertowServer();
    Code:
       0: aload_0
       1: new           #117                // class java/util/ArrayList
       4: dup
       5: invokespecial #119                // Method java/util/ArrayList."<init>":()V
       8: putfield      #101                // Field closeables:Ljava/util/List;
      11: aload_0
      12: aconst_null
      13: putfield      #120                // Field gracefulShutdown:Lio/undertow/server/handlers/GracefulShutdownHandler;
      16: aload_0
      17: invokevirtual #124                // Method createHttpHandler:()Lio/undertow/server/HttpHandler;
      20: astore_1
      21: aload_0
      22: getfield      #38                 // Field builder:Lio/undertow/Undertow$Builder;
      25: aload_1
      26: invokevirtual #128                // Method io/undertow/Undertow$Builder.setHandler:(Lio/undertow/server/HttpHandler;)Lio/undertow/Undertow$Builder;
      29: pop
      30: aload_0
      31: getfield      #38                 // Field builder:Lio/undertow/Undertow$Builder;
      34: invokevirtual #134                // Method io/undertow/Undertow$Builder.build:()Lio/undertow/Undertow;
      37: areturn

  protected io.undertow.server.HttpHandler createHttpHandler();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #42                 // Field httpHandlerFactories:Ljava/lang/Iterable;
       6: invokeinterface #137,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #143,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          95
      21: aload_2
      22: invokeinterface #149,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #153                // class org/springframework/boot/web/embedded/undertow/HttpHandlerFactory
      30: astore_3
      31: aload_3
      32: aload_1
      33: invokeinterface #155,  2          // InterfaceMethod org/springframework/boot/web/embedded/undertow/HttpHandlerFactory.getHandler:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/HttpHandler;
      38: astore_1
      39: aload_1
      40: instanceof    #113                // class java/io/Closeable
      43: ifeq          64
      46: aload_1
      47: checkcast     #113                // class java/io/Closeable
      50: astore        4
      52: aload_0
      53: getfield      #101                // Field closeables:Ljava/util/List;
      56: aload         4
      58: invokeinterface #159,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: aload_1
      65: instanceof    #163                // class io/undertow/server/handlers/GracefulShutdownHandler
      68: ifeq          92
      71: aload_1
      72: checkcast     #163                // class io/undertow/server/handlers/GracefulShutdownHandler
      75: astore        4
      77: aload_0
      78: getfield      #120                // Field gracefulShutdown:Lio/undertow/server/handlers/GracefulShutdownHandler;
      81: ldc           #165                // String Only a single GracefulShutdownHandler can be defined
      83: invokestatic  #167                // Method org/springframework/util/Assert.isNull:(Ljava/lang/Object;Ljava/lang/String;)V
      86: aload_0
      87: aload         4
      89: putfield      #120                // Field gracefulShutdown:Lio/undertow/server/handlers/GracefulShutdownHandler;
      92: goto          12
      95: aload_1
      96: areturn

  private java.lang.String getPortsDescription();
    Code:
       0: aload_0
       1: invokevirtual #173                // Method getActualPorts:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: invokeinterface #177,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      11: ifne          21
      14: aload_1
      15: ldc           #180                // String
      17: invokestatic  #182                // Method org/springframework/util/StringUtils.collectionToDelimitedString:(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
      20: areturn
      21: ldc           #188                // String unknown
      23: areturn

  private java.util.List<org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port> getActualPorts();
    Code:
       0: new           #117                // class java/util/ArrayList
       3: dup
       4: invokespecial #119                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #46                 // Field autoStart:Z
      12: ifne          35
      15: aload_1
      16: new           #190                // class org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port
      19: dup
      20: iconst_m1
      21: ldc           #188                // String unknown
      23: invokespecial #192                // Method org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port."<init>":(ILjava/lang/String;)V
      26: invokeinterface #159,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      31: pop
      32: goto          79
      35: aload_0
      36: invokevirtual #195                // Method extractChannels:()Ljava/util/List;
      39: invokeinterface #198,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      44: astore_2
      45: aload_2
      46: invokeinterface #143,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          79
      54: aload_2
      55: invokeinterface #149,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #199                // class org/xnio/channels/BoundChannel
      63: astore_3
      64: aload_1
      65: aload_0
      66: aload_3
      67: invokevirtual #201                // Method getPortFromChannel:(Lorg/xnio/channels/BoundChannel;)Lorg/springframework/boot/web/embedded/undertow/UndertowWebServer$Port;
      70: invokeinterface #159,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      75: pop
      76: goto          45
      79: goto          83
      82: astore_2
      83: aload_1
      84: areturn
    Exception table:
       from    to  target type
           8    79    82   Class java/lang/Exception

  private java.util.List<org.xnio.channels.BoundChannel> extractChannels();
    Code:
       0: ldc           #58                 // class io/undertow/Undertow
       2: ldc           #205                // String channels
       4: invokestatic  #207                // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
       7: astore_1
       8: aload_1
       9: invokestatic  #213                // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      12: aload_1
      13: aload_0
      14: getfield      #49                 // Field undertow:Lio/undertow/Undertow;
      17: invokestatic  #217                // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #107                // class java/util/List
      23: areturn

  private org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port getPortFromChannel(org.xnio.channels.BoundChannel);
    Code:
       0: aload_1
       1: invokeinterface #221,  1          // InterfaceMethod org/xnio/channels/BoundChannel.getLocalAddress:()Ljava/net/SocketAddress;
       6: astore_2
       7: aload_2
       8: instanceof    #225                // class java/net/InetSocketAddress
      11: ifeq          58
      14: aload_2
      15: checkcast     #225                // class java/net/InetSocketAddress
      18: astore_3
      19: aload_1
      20: invokevirtual #227                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: ldc           #231                // String ssl
      25: invokestatic  #207                // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
      28: astore        4
      30: aload         4
      32: ifnull        40
      35: ldc           #233                // String https
      37: goto          42
      40: ldc           #235                // String http
      42: astore        5
      44: new           #190                // class org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port
      47: dup
      48: aload_3
      49: invokevirtual #237                // Method java/net/InetSocketAddress.getPort:()I
      52: aload         5
      54: invokespecial #192                // Method org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port."<init>":(ILjava/lang/String;)V
      57: areturn
      58: aconst_null
      59: areturn

  private java.util.List<org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port> getConfiguredPorts();
    Code:
       0: new           #117                // class java/util/ArrayList
       3: dup
       4: invokespecial #119                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #241                // Method extractListeners:()Ljava/util/List;
      12: invokeinterface #198,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #143,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          66
      27: aload_2
      28: invokeinterface #149,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: astore_3
      34: aload_0
      35: aload_3
      36: invokevirtual #244                // Method getPortFromListener:(Ljava/lang/Object;)Lorg/springframework/boot/web/embedded/undertow/UndertowWebServer$Port;
      39: astore        4
      41: aload         4
      43: invokevirtual #248                // Method org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port.getNumber:()I
      46: ifeq          58
      49: aload_1
      50: aload         4
      52: invokeinterface #159,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: goto          63
      61: astore        4
      63: goto          18
      66: aload_1
      67: areturn
    Exception table:
       from    to  target type
          34    58    61   Class java/lang/Exception

  private java.util.List<java.lang.Object> extractListeners();
    Code:
       0: ldc           #58                 // class io/undertow/Undertow
       2: ldc           #251                // String listeners
       4: invokestatic  #207                // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
       7: astore_1
       8: aload_1
       9: invokestatic  #213                // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      12: aload_1
      13: aload_0
      14: getfield      #49                 // Field undertow:Lio/undertow/Undertow;
      17: invokestatic  #217                // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #107                // class java/util/List
      23: areturn

  private org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port getPortFromListener(java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #227                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #253                // String type
       6: invokestatic  #207                // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
       9: astore_2
      10: aload_2
      11: invokestatic  #213                // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      14: aload_2
      15: aload_1
      16: invokestatic  #217                // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      19: invokevirtual #255                // Method java/lang/Object.toString:()Ljava/lang/String;
      22: astore_3
      23: aload_1
      24: invokevirtual #227                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: ldc_w         #258                // String port
      30: invokestatic  #207                // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
      33: astore        4
      35: aload         4
      37: invokestatic  #213                // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      40: aload         4
      42: aload_1
      43: invokestatic  #217                // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #260                // class java/lang/Integer
      49: invokevirtual #262                // Method java/lang/Integer.intValue:()I
      52: istore        5
      54: new           #190                // class org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port
      57: dup
      58: iload         5
      60: aload_3
      61: invokespecial #192                // Method org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port."<init>":(ILjava/lang/String;)V
      64: areturn

  public void stop() throws org.springframework.boot.web.server.WebServerException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field monitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #34                 // Field started:Z
      11: ifne          17
      14: aload_1
      15: monitorexit
      16: return
      17: aload_0
      18: iconst_0
      19: putfield      #34                 // Field started:Z
      22: aload_0
      23: getfield      #120                // Field gracefulShutdown:Lio/undertow/server/handlers/GracefulShutdownHandler;
      26: ifnull        34
      29: aload_0
      30: iconst_0
      31: invokevirtual #265                // Method notifyGracefulCallback:(Z)V
      34: aload_0
      35: getfield      #49                 // Field undertow:Lio/undertow/Undertow;
      38: invokevirtual #98                 // Method io/undertow/Undertow.stop:()V
      41: aload_0
      42: getfield      #101                // Field closeables:Ljava/util/List;
      45: invokeinterface #198,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      50: astore_2
      51: aload_2
      52: invokeinterface #143,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          79
      60: aload_2
      61: invokeinterface #149,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #113                // class java/io/Closeable
      69: astore_3
      70: aload_3
      71: invokeinterface #112,  1          // InterfaceMethod java/io/Closeable.close:()V
      76: goto          51
      79: goto          95
      82: astore_2
      83: new           #88                 // class org/springframework/boot/web/server/WebServerException
      86: dup
      87: ldc_w         #269                // String Unable to stop undertow
      90: aload_2
      91: invokespecial #92                 // Method org/springframework/boot/web/server/WebServerException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      94: athrow
      95: aload_1
      96: monitorexit
      97: goto          107
     100: astore        4
     102: aload_1
     103: monitorexit
     104: aload         4
     106: athrow
     107: return
    Exception table:
       from    to  target type
          34    79    82   Class java/lang/Exception
           7    16   100   any
          17    97   100   any
         100   104   100   any

  public int getPort();
    Code:
       0: aload_0
       1: invokevirtual #173                // Method getActualPorts:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: invokeinterface #177,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      11: ifeq          16
      14: iconst_m1
      15: ireturn
      16: aload_1
      17: iconst_0
      18: invokeinterface #271,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: checkcast     #190                // class org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port
      26: invokevirtual #248                // Method org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port.getNumber:()I
      29: ireturn

  public void shutDownGracefully(org.springframework.boot.web.server.GracefulShutdownCallback);
    Code:
       0: aload_0
       1: getfield      #120                // Field gracefulShutdown:Lio/undertow/server/handlers/GracefulShutdownHandler;
       4: ifnonnull     17
       7: aload_1
       8: getstatic     #275                // Field org/springframework/boot/web/server/GracefulShutdownResult.IMMEDIATE:Lorg/springframework/boot/web/server/GracefulShutdownResult;
      11: invokeinterface #281,  2          // InterfaceMethod org/springframework/boot/web/server/GracefulShutdownCallback.shutdownComplete:(Lorg/springframework/boot/web/server/GracefulShutdownResult;)V
      16: return
      17: getstatic     #66                 // Field logger:Lorg/apache/commons/logging/Log;
      20: ldc_w         #287                // String Commencing graceful shutdown. Waiting for active requests to complete
      23: invokeinterface #70,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      28: aload_0
      29: getfield      #26                 // Field gracefulShutdownCallback:Ljava/util/concurrent/atomic/AtomicReference;
      32: aload_1
      33: invokevirtual #289                // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      36: aload_0
      37: getfield      #120                // Field gracefulShutdown:Lio/undertow/server/handlers/GracefulShutdownHandler;
      40: invokevirtual #292                // Method io/undertow/server/handlers/GracefulShutdownHandler.shutdown:()V
      43: aload_0
      44: getfield      #120                // Field gracefulShutdown:Lio/undertow/server/handlers/GracefulShutdownHandler;
      47: aload_0
      48: invokedynamic #295,  0            // InvokeDynamic #2:shutdown:(Lorg/springframework/boot/web/embedded/undertow/UndertowWebServer;)Lio/undertow/server/handlers/GracefulShutdownHandler$ShutdownListener;
      53: invokevirtual #298                // Method io/undertow/server/handlers/GracefulShutdownHandler.addShutdownListener:(Lio/undertow/server/handlers/GracefulShutdownHandler$ShutdownListener;)V
      56: return

  private void notifyGracefulCallback(boolean);
    Code:
       0: aload_0
       1: getfield      #26                 // Field gracefulShutdownCallback:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #302                // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #282                // class org/springframework/boot/web/server/GracefulShutdownCallback
      11: astore_2
      12: aload_2
      13: ifnull        63
      16: iload_1
      17: ifeq          43
      20: getstatic     #66                 // Field logger:Lorg/apache/commons/logging/Log;
      23: ldc_w         #306                // String Graceful shutdown complete
      26: invokeinterface #70,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      31: aload_2
      32: getstatic     #308                // Field org/springframework/boot/web/server/GracefulShutdownResult.IDLE:Lorg/springframework/boot/web/server/GracefulShutdownResult;
      35: invokeinterface #281,  2          // InterfaceMethod org/springframework/boot/web/server/GracefulShutdownCallback.shutdownComplete:(Lorg/springframework/boot/web/server/GracefulShutdownResult;)V
      40: goto          63
      43: getstatic     #66                 // Field logger:Lorg/apache/commons/logging/Log;
      46: ldc_w         #311                // String Graceful shutdown aborted with one or more requests still active
      49: invokeinterface #70,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      54: aload_2
      55: getstatic     #313                // Field org/springframework/boot/web/server/GracefulShutdownResult.REQUESTS_ACTIVE:Lorg/springframework/boot/web/server/GracefulShutdownResult;
      58: invokeinterface #281,  2          // InterfaceMethod org/springframework/boot/web/server/GracefulShutdownCallback.shutdownComplete:(Lorg/springframework/boot/web/server/GracefulShutdownResult;)V
      63: return

  protected java.lang.String getStartLogMessage();
    Code:
       0: aload_0
       1: invokevirtual #316                // Method getPortsDescription:()Ljava/lang/String;
       4: invokedynamic #319,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       9: areturn

  private void lambda$start$0(java.net.BindException);
    Code:
       0: aload_0
       1: invokevirtual #323                // Method getConfiguredPorts:()Ljava/util/List;
       4: astore_2
       5: aload_2
       6: aload_0
       7: invokevirtual #173                // Method getActualPorts:()Ljava/util/List;
      10: invokeinterface #326,  2          // InterfaceMethod java/util/List.removeAll:(Ljava/util/Collection;)Z
      15: pop
      16: aload_2
      17: invokeinterface #330,  1          // InterfaceMethod java/util/List.size:()I
      22: iconst_1
      23: if_icmpne     47
      26: new           #83                 // class org/springframework/boot/web/server/PortInUseException
      29: dup
      30: aload_2
      31: iconst_0
      32: invokeinterface #271,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      37: checkcast     #190                // class org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port
      40: invokevirtual #248                // Method org/springframework/boot/web/embedded/undertow/UndertowWebServer$Port.getNumber:()I
      43: invokespecial #333                // Method org/springframework/boot/web/server/PortInUseException."<init>":(I)V
      46: athrow
      47: return

  static {};
    Code:
       0: ldc           #14                 // class org/springframework/boot/web/embedded/undertow/UndertowWebServer
       2: invokestatic  #336                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #66                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
