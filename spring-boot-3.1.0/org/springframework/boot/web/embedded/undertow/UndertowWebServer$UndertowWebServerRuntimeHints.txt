Compiled from "UndertowWebServer.java"
class org.springframework.boot.web.embedded.undertow.UndertowWebServer$UndertowWebServerRuntimeHints implements org.springframework.aot.hint.RuntimeHintsRegistrar {
  org.springframework.boot.web.embedded.undertow.UndertowWebServer$UndertowWebServerRuntimeHints();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void registerHints(org.springframework.aot.hint.RuntimeHints, java.lang.ClassLoader);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/springframework/aot/hint/RuntimeHints.reflection:()Lorg/springframework/aot/hint/ReflectionHints;
       4: aload_2
       5: ldc           #13                 // String io.undertow.Undertow
       7: invokedynamic #15,  0             // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      12: invokevirtual #19                 // Method org/springframework/aot/hint/ReflectionHints.registerTypeIfPresent:(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/aot/hint/ReflectionHints;
      15: pop
      16: aload_1
      17: invokevirtual #7                  // Method org/springframework/aot/hint/RuntimeHints.reflection:()Lorg/springframework/aot/hint/ReflectionHints;
      20: aload_2
      21: ldc           #25                 // String io.undertow.Undertow$ListenerConfig
      23: invokedynamic #27,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
      28: invokevirtual #19                 // Method org/springframework/aot/hint/ReflectionHints.registerTypeIfPresent:(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/aot/hint/ReflectionHints;
      31: pop
      32: aload_1
      33: invokevirtual #7                  // Method org/springframework/aot/hint/RuntimeHints.reflection:()Lorg/springframework/aot/hint/ReflectionHints;
      36: aload_2
      37: ldc           #28                 // String io.undertow.protocols.ssl.UndertowAcceptingSslChannel
      39: invokedynamic #30,  0             // InvokeDynamic #2:accept:()Ljava/util/function/Consumer;
      44: invokevirtual #19                 // Method org/springframework/aot/hint/ReflectionHints.registerTypeIfPresent:(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/aot/hint/ReflectionHints;
      47: pop
      48: return

  private static void lambda$registerHints$2(org.springframework.aot.hint.TypeHint$Builder);
    Code:
       0: aload_0
       1: ldc           #31                 // String ssl
       3: invokevirtual #33                 // Method org/springframework/aot/hint/TypeHint$Builder.withField:(Ljava/lang/String;)Lorg/springframework/aot/hint/TypeHint$Builder;
       6: pop
       7: return

  private static void lambda$registerHints$1(org.springframework.aot.hint.TypeHint$Builder);
    Code:
       0: aload_0
       1: ldc           #39                 // String type
       3: invokevirtual #33                 // Method org/springframework/aot/hint/TypeHint$Builder.withField:(Ljava/lang/String;)Lorg/springframework/aot/hint/TypeHint$Builder;
       6: ldc           #41                 // String port
       8: invokevirtual #33                 // Method org/springframework/aot/hint/TypeHint$Builder.withField:(Ljava/lang/String;)Lorg/springframework/aot/hint/TypeHint$Builder;
      11: pop
      12: return

  private static void lambda$registerHints$0(org.springframework.aot.hint.TypeHint$Builder);
    Code:
       0: aload_0
       1: ldc           #43                 // String listeners
       3: invokevirtual #33                 // Method org/springframework/aot/hint/TypeHint$Builder.withField:(Ljava/lang/String;)Lorg/springframework/aot/hint/TypeHint$Builder;
       6: ldc           #45                 // String channels
       8: invokevirtual #33                 // Method org/springframework/aot/hint/TypeHint$Builder.withField:(Ljava/lang/String;)Lorg/springframework/aot/hint/TypeHint$Builder;
      11: pop
      12: return
}
