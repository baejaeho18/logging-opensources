Compiled from "UndertowWebServerFactoryDelegate.java"
class org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate {
  private java.util.Set<org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer> builderCustomizers;

  private java.lang.Integer bufferSize;

  private java.lang.Integer ioThreads;

  private java.lang.Integer workerThreads;

  private java.lang.Boolean directBuffers;

  private java.io.File accessLogDirectory;

  private java.lang.String accessLogPattern;

  private java.lang.String accessLogPrefix;

  private java.lang.String accessLogSuffix;

  private boolean accessLogEnabled;

  private boolean accessLogRotate;

  private boolean useForwardHeaders;

  org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/LinkedHashSet
       8: dup
       9: invokespecial #9                  // Method java/util/LinkedHashSet."<init>":()V
      12: putfield      #10                 // Field builderCustomizers:Ljava/util/Set;
      15: aload_0
      16: iconst_0
      17: putfield      #16                 // Field accessLogEnabled:Z
      20: aload_0
      21: iconst_1
      22: putfield      #20                 // Field accessLogRotate:Z
      25: return

  void setBuilderCustomizers(java.util.Collection<? extends org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer>);
    Code:
       0: aload_1
       1: ldc           #23                 // String Customizers must not be null
       3: invokestatic  #25                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: new           #7                  // class java/util/LinkedHashSet
      10: dup
      11: aload_1
      12: invokespecial #31                 // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      15: putfield      #10                 // Field builderCustomizers:Ljava/util/Set;
      18: return

  void addBuilderCustomizers(org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer...);
    Code:
       0: aload_1
       1: ldc           #23                 // String Customizers must not be null
       3: invokestatic  #25                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #10                 // Field builderCustomizers:Ljava/util/Set;
      10: aload_1
      11: invokestatic  #34                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      14: invokeinterface #40,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: return

  java.util.Collection<org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer> getBuilderCustomizers();
    Code:
       0: aload_0
       1: getfield      #10                 // Field builderCustomizers:Ljava/util/Set;
       4: areturn

  void setBufferSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field bufferSize:Ljava/lang/Integer;
       5: return

  void setIoThreads(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #50                 // Field ioThreads:Ljava/lang/Integer;
       5: return

  void setWorkerThreads(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field workerThreads:Ljava/lang/Integer;
       5: return

  void setUseDirectBuffers(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #56                 // Field directBuffers:Ljava/lang/Boolean;
       5: return

  void setAccessLogDirectory(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field accessLogDirectory:Ljava/io/File;
       5: return

  void setAccessLogPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field accessLogPattern:Ljava/lang/String;
       5: return

  void setAccessLogPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #68                 // Field accessLogPrefix:Ljava/lang/String;
       5: return

  java.lang.String getAccessLogPrefix();
    Code:
       0: aload_0
       1: getfield      #68                 // Field accessLogPrefix:Ljava/lang/String;
       4: areturn

  void setAccessLogSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #71                 // Field accessLogSuffix:Ljava/lang/String;
       5: return

  void setAccessLogEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field accessLogEnabled:Z
       5: return

  boolean isAccessLogEnabled();
    Code:
       0: aload_0
       1: getfield      #16                 // Field accessLogEnabled:Z
       4: ireturn

  void setAccessLogRotate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field accessLogRotate:Z
       5: return

  void setUseForwardHeaders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #74                 // Field useForwardHeaders:Z
       5: return

  boolean isUseForwardHeaders();
    Code:
       0: aload_0
       1: getfield      #74                 // Field useForwardHeaders:Z
       4: ireturn

  io.undertow.Undertow$Builder createBuilder(org.springframework.boot.web.server.AbstractConfigurableWebServerFactory, java.util.function.Supplier<org.springframework.boot.ssl.SslBundle>);
    Code:
       0: aload_1
       1: invokevirtual #77                 // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getAddress:()Ljava/net/InetAddress;
       4: astore_3
       5: aload_1
       6: invokevirtual #83                 // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getPort:()I
       9: istore        4
      11: invokestatic  #87                 // Method io/undertow/Undertow.builder:()Lio/undertow/Undertow$Builder;
      14: astore        5
      16: aload_0
      17: getfield      #46                 // Field bufferSize:Ljava/lang/Integer;
      20: ifnull        36
      23: aload         5
      25: aload_0
      26: getfield      #46                 // Field bufferSize:Ljava/lang/Integer;
      29: invokevirtual #93                 // Method java/lang/Integer.intValue:()I
      32: invokevirtual #98                 // Method io/undertow/Undertow$Builder.setBufferSize:(I)Lio/undertow/Undertow$Builder;
      35: pop
      36: aload_0
      37: getfield      #50                 // Field ioThreads:Ljava/lang/Integer;
      40: ifnull        56
      43: aload         5
      45: aload_0
      46: getfield      #50                 // Field ioThreads:Ljava/lang/Integer;
      49: invokevirtual #93                 // Method java/lang/Integer.intValue:()I
      52: invokevirtual #104                // Method io/undertow/Undertow$Builder.setIoThreads:(I)Lio/undertow/Undertow$Builder;
      55: pop
      56: aload_0
      57: getfield      #53                 // Field workerThreads:Ljava/lang/Integer;
      60: ifnull        76
      63: aload         5
      65: aload_0
      66: getfield      #53                 // Field workerThreads:Ljava/lang/Integer;
      69: invokevirtual #93                 // Method java/lang/Integer.intValue:()I
      72: invokevirtual #107                // Method io/undertow/Undertow$Builder.setWorkerThreads:(I)Lio/undertow/Undertow$Builder;
      75: pop
      76: aload_0
      77: getfield      #56                 // Field directBuffers:Ljava/lang/Boolean;
      80: ifnull        96
      83: aload         5
      85: aload_0
      86: getfield      #56                 // Field directBuffers:Ljava/lang/Boolean;
      89: invokevirtual #110                // Method java/lang/Boolean.booleanValue:()Z
      92: invokevirtual #116                // Method io/undertow/Undertow$Builder.setDirectBuffers:(Z)Lio/undertow/Undertow$Builder;
      95: pop
      96: aload_1
      97: invokevirtual #120                // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getHttp2:()Lorg/springframework/boot/web/server/Http2;
     100: astore        6
     102: aload         6
     104: ifnull        124
     107: aload         5
     109: getstatic     #124                // Field io/undertow/UndertowOptions.ENABLE_HTTP2:Lorg/xnio/Option;
     112: aload         6
     114: invokevirtual #130                // Method org/springframework/boot/web/server/Http2.isEnabled:()Z
     117: invokestatic  #135                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     120: invokevirtual #139                // Method io/undertow/Undertow$Builder.setServerOption:(Lorg/xnio/Option;Ljava/lang/Object;)Lio/undertow/Undertow$Builder;
     123: pop
     124: aload_1
     125: invokevirtual #143                // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getSsl:()Lorg/springframework/boot/web/server/Ssl;
     128: astore        7
     130: aload         7
     132: invokestatic  #147                // Method org/springframework/boot/web/server/Ssl.isEnabled:(Lorg/springframework/boot/web/server/Ssl;)Z
     135: ifeq          172
     138: new           #152                // class org/springframework/boot/web/embedded/undertow/SslBuilderCustomizer
     141: dup
     142: aload_1
     143: invokevirtual #83                 // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getPort:()I
     146: aload_3
     147: aload         7
     149: invokevirtual #154                // Method org/springframework/boot/web/server/Ssl.getClientAuth:()Lorg/springframework/boot/web/server/Ssl$ClientAuth;
     152: aload_2
     153: invokeinterface #158,  1          // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
     158: checkcast     #164                // class org/springframework/boot/ssl/SslBundle
     161: invokespecial #166                // Method org/springframework/boot/web/embedded/undertow/SslBuilderCustomizer."<init>":(ILjava/net/InetAddress;Lorg/springframework/boot/web/server/Ssl$ClientAuth;Lorg/springframework/boot/ssl/SslBundle;)V
     164: aload         5
     166: invokevirtual #169                // Method org/springframework/boot/web/embedded/undertow/SslBuilderCustomizer.customize:(Lio/undertow/Undertow$Builder;)V
     169: goto          193
     172: aload         5
     174: iload         4
     176: aload_3
     177: ifnull        187
     180: aload_3
     181: invokevirtual #173                // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
     184: goto          189
     187: ldc           #179                // String 0.0.0.0
     189: invokevirtual #181                // Method io/undertow/Undertow$Builder.addHttpListener:(ILjava/lang/String;)Lio/undertow/Undertow$Builder;
     192: pop
     193: aload         5
     195: getstatic     #185                // Field io/undertow/UndertowOptions.SHUTDOWN_TIMEOUT:Lorg/xnio/Option;
     198: iconst_0
     199: invokestatic  #188                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     202: invokevirtual #139                // Method io/undertow/Undertow$Builder.setServerOption:(Lorg/xnio/Option;Ljava/lang/Object;)Lio/undertow/Undertow$Builder;
     205: pop
     206: aload_0
     207: getfield      #10                 // Field builderCustomizers:Ljava/util/Set;
     210: invokeinterface #191,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     215: astore        8
     217: aload         8
     219: invokeinterface #195,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     224: ifeq          251
     227: aload         8
     229: invokeinterface #200,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     234: checkcast     #203                // class org/springframework/boot/web/embedded/undertow/UndertowBuilderCustomizer
     237: astore        9
     239: aload         9
     241: aload         5
     243: invokeinterface #205,  2          // InterfaceMethod org/springframework/boot/web/embedded/undertow/UndertowBuilderCustomizer.customize:(Lio/undertow/Undertow$Builder;)V
     248: goto          217
     251: aload         5
     253: areturn

  java.util.List<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory> createHttpHandlerFactories(org.springframework.boot.web.server.AbstractConfigurableWebServerFactory, org.springframework.boot.web.embedded.undertow.HttpHandlerFactory...);
    Code:
       0: aload_1
       1: invokevirtual #206                // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getCompression:()Lorg/springframework/boot/web/server/Compression;
       4: aload_0
       5: getfield      #74                 // Field useForwardHeaders:Z
       8: aload_1
       9: invokevirtual #210                // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getServerHeader:()Ljava/lang/String;
      12: aload_1
      13: invokevirtual #213                // Method org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.getShutdown:()Lorg/springframework/boot/web/server/Shutdown;
      16: aload_2
      17: invokestatic  #217                // Method createHttpHandlerFactories:(Lorg/springframework/boot/web/server/Compression;ZLjava/lang/String;Lorg/springframework/boot/web/server/Shutdown;[Lorg/springframework/boot/web/embedded/undertow/HttpHandlerFactory;)Ljava/util/List;
      20: astore_3
      21: aload_0
      22: invokevirtual #221                // Method isAccessLogEnabled:()Z
      25: ifeq          62
      28: aload_3
      29: new           #224                // class org/springframework/boot/web/embedded/undertow/AccessLogHttpHandlerFactory
      32: dup
      33: aload_0
      34: getfield      #60                 // Field accessLogDirectory:Ljava/io/File;
      37: aload_0
      38: getfield      #64                 // Field accessLogPattern:Ljava/lang/String;
      41: aload_0
      42: getfield      #68                 // Field accessLogPrefix:Ljava/lang/String;
      45: aload_0
      46: getfield      #71                 // Field accessLogSuffix:Ljava/lang/String;
      49: aload_0
      50: getfield      #20                 // Field accessLogRotate:Z
      53: invokespecial #226                // Method org/springframework/boot/web/embedded/undertow/AccessLogHttpHandlerFactory."<init>":(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      56: invokeinterface #229,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      61: pop
      62: aload_3
      63: areturn

  static java.util.List<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory> createHttpHandlerFactories(org.springframework.boot.web.server.Compression, boolean, java.lang.String, org.springframework.boot.web.server.Shutdown, org.springframework.boot.web.embedded.undertow.HttpHandlerFactory...);
    Code:
       0: new           #235                // class java/util/ArrayList
       3: dup
       4: aload         4
       6: invokestatic  #34                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       9: invokespecial #237                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      12: astore        5
      14: aload_0
      15: ifnull        41
      18: aload_0
      19: invokevirtual #238                // Method org/springframework/boot/web/server/Compression.getEnabled:()Z
      22: ifeq          41
      25: aload         5
      27: new           #243                // class org/springframework/boot/web/embedded/undertow/CompressionHttpHandlerFactory
      30: dup
      31: aload_0
      32: invokespecial #245                // Method org/springframework/boot/web/embedded/undertow/CompressionHttpHandlerFactory."<init>":(Lorg/springframework/boot/web/server/Compression;)V
      35: invokeinterface #229,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: iload_1
      42: ifeq          58
      45: aload         5
      47: invokedynamic #248,  0            // InvokeDynamic #0:getHandler:()Lorg/springframework/boot/web/embedded/undertow/HttpHandlerFactory;
      52: invokeinterface #229,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: aload_2
      59: invokestatic  #252                // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      62: ifeq          79
      65: aload         5
      67: aload_2
      68: invokedynamic #258,  0            // InvokeDynamic #1:getHandler:(Ljava/lang/String;)Lorg/springframework/boot/web/embedded/undertow/HttpHandlerFactory;
      73: invokeinterface #229,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      78: pop
      79: aload_3
      80: getstatic     #261                // Field org/springframework/boot/web/server/Shutdown.GRACEFUL:Lorg/springframework/boot/web/server/Shutdown;
      83: if_acmpne     99
      86: aload         5
      88: invokedynamic #267,  0            // InvokeDynamic #2:getHandler:()Lorg/springframework/boot/web/embedded/undertow/HttpHandlerFactory;
      93: invokeinterface #229,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      98: pop
      99: aload         5
     101: areturn

  private static io.undertow.server.HttpHandler lambda$createHttpHandlerFactories$0(java.lang.String, io.undertow.server.HttpHandler);
    Code:
       0: aload_1
       1: ldc_w         #268                // String Server
       4: aload_0
       5: invokestatic  #270                // Method io/undertow/Handlers.header:(Lio/undertow/server/HttpHandler;Ljava/lang/String;Ljava/lang/String;)Lio/undertow/server/handlers/SetHeaderHandler;
       8: areturn
}
