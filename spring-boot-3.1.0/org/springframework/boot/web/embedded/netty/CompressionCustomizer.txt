Compiled from "CompressionCustomizer.java"
final class org.springframework.boot.web.embedded.netty.CompressionCustomizer implements org.springframework.boot.web.embedded.netty.NettyServerCustomizer {
  private static final org.springframework.boot.web.embedded.netty.CompressionCustomizer$CompressionPredicate ALWAYS_COMPRESS;

  private final org.springframework.boot.web.server.Compression compression;

  org.springframework.boot.web.embedded.netty.CompressionCustomizer(org.springframework.boot.web.server.Compression);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field compression:Lorg/springframework/boot/web/server/Compression;
       9: return

  public reactor.netty.http.server.HttpServer apply(reactor.netty.http.server.HttpServer);
    Code:
       0: aload_0
       1: getfield      #7                  // Field compression:Lorg/springframework/boot/web/server/Compression;
       4: invokevirtual #13                 // Method org/springframework/boot/web/server/Compression.getMinResponseSize:()Lorg/springframework/util/unit/DataSize;
       7: invokevirtual #19                 // Method org/springframework/util/unit/DataSize.isNegative:()Z
      10: ifne          29
      13: aload_1
      14: aload_0
      15: getfield      #7                  // Field compression:Lorg/springframework/boot/web/server/Compression;
      18: invokevirtual #13                 // Method org/springframework/boot/web/server/Compression.getMinResponseSize:()Lorg/springframework/util/unit/DataSize;
      21: invokevirtual #25                 // Method org/springframework/util/unit/DataSize.toBytes:()J
      24: l2i
      25: invokevirtual #29                 // Method reactor/netty/http/server/HttpServer.compress:(I)Lreactor/netty/http/server/HttpServer;
      28: astore_1
      29: aload_0
      30: aload_0
      31: getfield      #7                  // Field compression:Lorg/springframework/boot/web/server/Compression;
      34: invokevirtual #35                 // Method org/springframework/boot/web/server/Compression.getMimeTypes:()[Ljava/lang/String;
      37: invokevirtual #39                 // Method getMimeTypesPredicate:([Ljava/lang/String;)Lorg/springframework/boot/web/embedded/netty/CompressionCustomizer$CompressionPredicate;
      40: astore_2
      41: aload_0
      42: aload_0
      43: getfield      #7                  // Field compression:Lorg/springframework/boot/web/server/Compression;
      46: invokevirtual #43                 // Method org/springframework/boot/web/server/Compression.getExcludedUserAgents:()[Ljava/lang/String;
      49: invokevirtual #46                 // Method getExcludedUserAgentsPredicate:([Ljava/lang/String;)Lorg/springframework/boot/web/embedded/netty/CompressionCustomizer$CompressionPredicate;
      52: astore_3
      53: aload_1
      54: aload_2
      55: aload_3
      56: invokeinterface #49,  2           // InterfaceMethod org/springframework/boot/web/embedded/netty/CompressionCustomizer$CompressionPredicate.and:(Ljava/util/function/BiPredicate;)Ljava/util/function/BiPredicate;
      61: invokevirtual #55                 // Method reactor/netty/http/server/HttpServer.compress:(Ljava/util/function/BiPredicate;)Lreactor/netty/http/server/HttpServer;
      64: astore_1
      65: aload_1
      66: areturn

  private org.springframework.boot.web.embedded.netty.CompressionCustomizer$CompressionPredicate getMimeTypesPredicate(java.lang.String[]);
    Code:
       0: aload_1
       1: invokestatic  #58                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
       4: ifeq          11
       7: getstatic     #64                 // Field ALWAYS_COMPRESS:Lorg/springframework/boot/web/embedded/netty/CompressionCustomizer$CompressionPredicate;
      10: areturn
      11: aload_1
      12: invokestatic  #68                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      15: invokedynamic #74,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      20: invokeinterface #78,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      25: invokeinterface #84,  1           // InterfaceMethod java/util/stream/Stream.toList:()Ljava/util/List;
      30: astore_2
      31: aload_2
      32: invokedynamic #88,  0             // InvokeDynamic #1:test:(Ljava/util/List;)Lorg/springframework/boot/web/embedded/netty/CompressionCustomizer$CompressionPredicate;
      37: areturn

  private org.springframework.boot.web.embedded.netty.CompressionCustomizer$CompressionPredicate getExcludedUserAgentsPredicate(java.lang.String[]);
    Code:
       0: aload_1
       1: invokestatic  #58                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
       4: ifeq          11
       7: getstatic     #64                 // Field ALWAYS_COMPRESS:Lorg/springframework/boot/web/embedded/netty/CompressionCustomizer$CompressionPredicate;
      10: areturn
      11: aload_1
      12: invokedynamic #92,  0             // InvokeDynamic #2:test:([Ljava/lang/String;)Lorg/springframework/boot/web/embedded/netty/CompressionCustomizer$CompressionPredicate;
      17: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class reactor/netty/http/server/HttpServer
       5: invokevirtual #94                 // Method apply:(Lreactor/netty/http/server/HttpServer;)Lreactor/netty/http/server/HttpServer;
       8: areturn

  private static boolean lambda$getExcludedUserAgentsPredicate$4(java.lang.String[], reactor.netty.http.server.HttpServerRequest, reactor.netty.http.server.HttpServerResponse);
    Code:
       0: aload_1
       1: invokeinterface #97,  1           // InterfaceMethod reactor/netty/http/server/HttpServerRequest.requestHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
       6: astore_3
       7: aload_0
       8: invokestatic  #68                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      11: aload_3
      12: invokedynamic #103,  0            // InvokeDynamic #3:test:(Lio/netty/handler/codec/http/HttpHeaders;)Ljava/util/function/Predicate;
      17: invokeinterface #106,  2          // InterfaceMethod java/util/stream/Stream.noneMatch:(Ljava/util/function/Predicate;)Z
      22: ireturn

  private static boolean lambda$getExcludedUserAgentsPredicate$3(io.netty.handler.codec.http.HttpHeaders, java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #110                // Field io/netty/handler/codec/http/HttpHeaderNames.USER_AGENT:Lio/netty/util/AsciiString;
       4: aload_1
       5: iconst_1
       6: invokevirtual #116                // Method io/netty/handler/codec/http/HttpHeaders.contains:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Z)Z
       9: ireturn

  private static boolean lambda$getMimeTypesPredicate$2(java.util.List, reactor.netty.http.server.HttpServerRequest, reactor.netty.http.server.HttpServerResponse);
    Code:
       0: aload_2
       1: invokeinterface #122,  1          // InterfaceMethod reactor/netty/http/server/HttpServerResponse.responseHeaders:()Lio/netty/handler/codec/http/HttpHeaders;
       6: getstatic     #127                // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_TYPE:Lio/netty/util/AsciiString;
       9: invokevirtual #130                // Method io/netty/handler/codec/http/HttpHeaders.get:(Ljava/lang/CharSequence;)Ljava/lang/String;
      12: astore_3
      13: aload_3
      14: invokestatic  #134                // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_3
      23: invokestatic  #140                // Method org/springframework/util/MimeTypeUtils.parseMimeType:(Ljava/lang/String;)Lorg/springframework/util/MimeType;
      26: astore        4
      28: aload_0
      29: invokeinterface #146,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      34: aload         4
      36: invokedynamic #151,  0            // InvokeDynamic #4:test:(Lorg/springframework/util/MimeType;)Ljava/util/function/Predicate;
      41: invokeinterface #154,  2          // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      46: ireturn
      47: astore        4
      49: iconst_0
      50: ireturn
    Exception table:
       from    to  target type
          22    46    47   Class org/springframework/util/InvalidMimeTypeException

  private static boolean lambda$getMimeTypesPredicate$1(org.springframework.util.MimeType, org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #159                // Method org/springframework/util/MimeType.isCompatibleWith:(Lorg/springframework/util/MimeType;)Z
       5: ireturn

  private static boolean lambda$static$0(reactor.netty.http.server.HttpServerRequest, reactor.netty.http.server.HttpServerResponse);
    Code:
       0: iconst_1
       1: ireturn

  static {};
    Code:
       0: invokedynamic #165,  0            // InvokeDynamic #5:test:()Lorg/springframework/boot/web/embedded/netty/CompressionCustomizer$CompressionPredicate;
       5: putstatic     #64                 // Field ALWAYS_COMPRESS:Lorg/springframework/boot/web/embedded/netty/CompressionCustomizer$CompressionPredicate;
       8: return
}
