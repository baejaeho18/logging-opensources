Compiled from "NettyWebServer.java"
public class org.springframework.boot.web.embedded.netty.NettyWebServer implements org.springframework.boot.web.server.WebServer {
  private static final int ERROR_NO_EACCES;

  private static final java.util.function.Predicate<reactor.netty.http.server.HttpServerRequest> ALWAYS;

  private static final org.apache.commons.logging.Log logger;

  private final reactor.netty.http.server.HttpServer httpServer;

  private final java.util.function.BiFunction<? super reactor.netty.http.server.HttpServerRequest, ? super reactor.netty.http.server.HttpServerResponse, ? extends org.reactivestreams.Publisher<java.lang.Void>> handler;

  private final java.time.Duration lifecycleTimeout;

  private final org.springframework.boot.web.embedded.netty.GracefulShutdown gracefulShutdown;

  private java.util.List<org.springframework.boot.web.embedded.netty.NettyRouteProvider> routeProviders;

  private volatile reactor.netty.DisposableServer disposableServer;

  public org.springframework.boot.web.embedded.netty.NettyWebServer(reactor.netty.http.server.HttpServer, org.springframework.http.server.reactive.ReactorHttpHandlerAdapter, java.time.Duration, org.springframework.boot.web.server.Shutdown);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #7                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       8: putfield      #13                 // Field routeProviders:Ljava/util/List;
      11: aload_1
      12: ldc           #19                 // String HttpServer must not be null
      14: invokestatic  #21                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_2
      18: ldc           #27                 // String HandlerAdapter must not be null
      20: invokestatic  #21                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      23: aload_0
      24: aload_3
      25: putfield      #29                 // Field lifecycleTimeout:Ljava/time/Duration;
      28: aload_0
      29: aload_2
      30: putfield      #33                 // Field handler:Ljava/util/function/BiFunction;
      33: aload_0
      34: aload_1
      35: new           #37                 // class io/netty/channel/group/DefaultChannelGroup
      38: dup
      39: new           #39                 // class io/netty/util/concurrent/DefaultEventExecutor
      42: dup
      43: invokespecial #41                 // Method io/netty/util/concurrent/DefaultEventExecutor."<init>":()V
      46: invokespecial #42                 // Method io/netty/channel/group/DefaultChannelGroup."<init>":(Lio/netty/util/concurrent/EventExecutor;)V
      49: invokevirtual #45                 // Method reactor/netty/http/server/HttpServer.channelGroup:(Lio/netty/channel/group/ChannelGroup;)Lreactor/netty/http/server/HttpServer;
      52: putfield      #51                 // Field httpServer:Lreactor/netty/http/server/HttpServer;
      55: aload_0
      56: aload         4
      58: getstatic     #55                 // Field org/springframework/boot/web/server/Shutdown.GRACEFUL:Lorg/springframework/boot/web/server/Shutdown;
      61: if_acmpne     80
      64: new           #61                 // class org/springframework/boot/web/embedded/netty/GracefulShutdown
      67: dup
      68: aload_0
      69: invokedynamic #63,  0             // InvokeDynamic #0:get:(Lorg/springframework/boot/web/embedded/netty/NettyWebServer;)Ljava/util/function/Supplier;
      74: invokespecial #67                 // Method org/springframework/boot/web/embedded/netty/GracefulShutdown."<init>":(Ljava/util/function/Supplier;)V
      77: goto          81
      80: aconst_null
      81: putfield      #70                 // Field gracefulShutdown:Lorg/springframework/boot/web/embedded/netty/GracefulShutdown;
      84: return

  public void setRouteProviders(java.util.List<org.springframework.boot.web.embedded.netty.NettyRouteProvider>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field routeProviders:Ljava/util/List;
       5: return

  public void start() throws org.springframework.boot.web.server.WebServerException;
    Code:
       0: aload_0
       1: getfield      #74                 // Field disposableServer:Lreactor/netty/DisposableServer;
       4: ifnonnull     79
       7: aload_0
       8: aload_0
       9: invokevirtual #78                 // Method startHttpServer:()Lreactor/netty/DisposableServer;
      12: putfield      #74                 // Field disposableServer:Lreactor/netty/DisposableServer;
      15: goto          43
      18: astore_1
      19: aload_1
      20: ldc           #84                 // class reactor/netty/ChannelBindException
      22: aload_0
      23: aload_1
      24: invokedynamic #86,  0             // InvokeDynamic #1:accept:(Lorg/springframework/boot/web/embedded/netty/NettyWebServer;Ljava/lang/Exception;)Ljava/util/function/Consumer;
      29: invokestatic  #90                 // Method org/springframework/boot/web/server/PortInUseException.ifCausedBy:(Ljava/lang/Exception;Ljava/lang/Class;Ljava/util/function/Consumer;)V
      32: new           #96                 // class org/springframework/boot/web/server/WebServerException
      35: dup
      36: ldc           #98                 // String Unable to start Netty
      38: aload_1
      39: invokespecial #100                // Method org/springframework/boot/web/server/WebServerException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      42: athrow
      43: aload_0
      44: getfield      #74                 // Field disposableServer:Lreactor/netty/DisposableServer;
      47: ifnull        71
      50: getstatic     #103                // Field logger:Lorg/apache/commons/logging/Log;
      53: aload_0
      54: aload_0
      55: getfield      #74                 // Field disposableServer:Lreactor/netty/DisposableServer;
      58: invokevirtual #107                // Method getStartedOnMessage:(Lreactor/netty/DisposableServer;)Ljava/lang/String;
      61: invokedynamic #111,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      66: invokeinterface #115,  2          // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      71: aload_0
      72: aload_0
      73: getfield      #74                 // Field disposableServer:Lreactor/netty/DisposableServer;
      76: invokevirtual #121                // Method startDaemonAwaitThread:(Lreactor/netty/DisposableServer;)V
      79: return
    Exception table:
       from    to  target type
           7    15    18   Class java/lang/Exception

  private java.lang.String getStartedOnMessage(reactor.netty.DisposableServer);
    Code:
       0: new           #125                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #127                // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_2
      10: ldc           #128                // String port %s
      12: aload_1
      13: dup
      14: invokestatic  #130                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: invokedynamic #136,  0            // InvokeDynamic #3:get:(Lreactor/netty/DisposableServer;)Ljava/util/function/Supplier;
      23: invokevirtual #139                // Method tryAppend:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/util/function/Supplier;)V
      26: aload_0
      27: aload_2
      28: ldc           #143                // String path %s
      30: aload_1
      31: dup
      32: invokestatic  #130                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: invokedynamic #145,  0            // InvokeDynamic #4:get:(Lreactor/netty/DisposableServer;)Ljava/util/function/Supplier;
      41: invokevirtual #139                // Method tryAppend:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/util/function/Supplier;)V
      44: aload_2
      45: invokevirtual #146                // Method java/lang/StringBuilder.length:()I
      48: ifle          60
      51: aload_2
      52: invokedynamic #150,  0            // InvokeDynamic #5:makeConcatWithConstants:(Ljava/lang/StringBuilder;)Ljava/lang/String;
      57: goto          62
      60: ldc           #153                // String
      62: areturn

  private void tryAppend(java.lang.StringBuilder, java.lang.String, java.util.function.Supplier<java.lang.Object>);
    Code:
       0: aload_3
       1: invokeinterface #155,  1          // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       6: astore        4
       8: aload_1
       9: aload_1
      10: invokevirtual #146                // Method java/lang/StringBuilder.length:()I
      13: ifeq          21
      16: ldc           #160                // String
      18: goto          23
      21: ldc           #153                // String
      23: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: pop
      27: aload_1
      28: aload_2
      29: iconst_1
      30: anewarray     #2                  // class java/lang/Object
      33: dup
      34: iconst_0
      35: aload         4
      37: aastore
      38: invokestatic  #166                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      41: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: pop
      45: goto          50
      48: astore        4
      50: return
    Exception table:
       from    to  target type
           0    45    48   Class java/lang/UnsupportedOperationException

  reactor.netty.DisposableServer startHttpServer();
    Code:
       0: aload_0
       1: getfield      #51                 // Field httpServer:Lreactor/netty/http/server/HttpServer;
       4: astore_1
       5: aload_0
       6: getfield      #13                 // Field routeProviders:Ljava/util/List;
       9: invokeinterface #174,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      14: ifeq          29
      17: aload_1
      18: aload_0
      19: getfield      #33                 // Field handler:Ljava/util/function/BiFunction;
      22: invokevirtual #180                // Method reactor/netty/http/server/HttpServer.handle:(Ljava/util/function/BiFunction;)Lreactor/netty/http/server/HttpServer;
      25: astore_1
      26: goto          40
      29: aload_1
      30: aload_0
      31: invokedynamic #184,  0            // InvokeDynamic #6:accept:(Lorg/springframework/boot/web/embedded/netty/NettyWebServer;)Ljava/util/function/Consumer;
      36: invokevirtual #187                // Method reactor/netty/http/server/HttpServer.route:(Ljava/util/function/Consumer;)Lreactor/netty/http/server/HttpServer;
      39: astore_1
      40: aload_0
      41: getfield      #29                 // Field lifecycleTimeout:Ljava/time/Duration;
      44: ifnull        56
      47: aload_1
      48: aload_0
      49: getfield      #29                 // Field lifecycleTimeout:Ljava/time/Duration;
      52: invokevirtual #191                // Method reactor/netty/http/server/HttpServer.bindNow:(Ljava/time/Duration;)Lreactor/netty/DisposableServer;
      55: areturn
      56: aload_1
      57: invokevirtual #195                // Method reactor/netty/http/server/HttpServer.bindNow:()Lreactor/netty/DisposableServer;
      60: areturn

  private boolean isPermissionDenied(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #197                // class io/netty/channel/unix/Errors$NativeIoException
       4: ifeq          27
       7: aload_1
       8: checkcast     #197                // class io/netty/channel/unix/Errors$NativeIoException
      11: astore_2
      12: aload_2
      13: invokevirtual #199                // Method io/netty/channel/unix/Errors$NativeIoException.expectedErr:()I
      16: bipush        -13
      18: if_icmpne     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn
      27: goto          31
      30: astore_2
      31: iconst_0
      32: ireturn
    Exception table:
       from    to  target type
           0    26    30   Class java/lang/Throwable

  public void shutDownGracefully(org.springframework.boot.web.server.GracefulShutdownCallback);
    Code:
       0: aload_0
       1: getfield      #70                 // Field gracefulShutdown:Lorg/springframework/boot/web/embedded/netty/GracefulShutdown;
       4: ifnonnull     17
       7: aload_1
       8: getstatic     #204                // Field org/springframework/boot/web/server/GracefulShutdownResult.IMMEDIATE:Lorg/springframework/boot/web/server/GracefulShutdownResult;
      11: invokeinterface #210,  2          // InterfaceMethod org/springframework/boot/web/server/GracefulShutdownCallback.shutdownComplete:(Lorg/springframework/boot/web/server/GracefulShutdownResult;)V
      16: return
      17: aload_0
      18: getfield      #70                 // Field gracefulShutdown:Lorg/springframework/boot/web/embedded/netty/GracefulShutdown;
      21: aload_1
      22: invokevirtual #216                // Method org/springframework/boot/web/embedded/netty/GracefulShutdown.shutDownGracefully:(Lorg/springframework/boot/web/server/GracefulShutdownCallback;)V
      25: return

  private void applyRouteProviders(reactor.netty.http.server.HttpServerRoutes);
    Code:
       0: aload_0
       1: getfield      #13                 // Field routeProviders:Ljava/util/List;
       4: invokeinterface #220,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #224,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          43
      19: aload_2
      20: invokeinterface #229,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #232                // class org/springframework/boot/web/embedded/netty/NettyRouteProvider
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #234,  2          // InterfaceMethod org/springframework/boot/web/embedded/netty/NettyRouteProvider.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #237                // class reactor/netty/http/server/HttpServerRoutes
      39: astore_1
      40: goto          10
      43: aload_1
      44: getstatic     #239                // Field ALWAYS:Ljava/util/function/Predicate;
      47: aload_0
      48: getfield      #33                 // Field handler:Ljava/util/function/BiFunction;
      51: invokeinterface #243,  3          // InterfaceMethod reactor/netty/http/server/HttpServerRoutes.route:(Ljava/util/function/Predicate;Ljava/util/function/BiFunction;)Lreactor/netty/http/server/HttpServerRoutes;
      56: pop
      57: return

  private void startDaemonAwaitThread(reactor.netty.DisposableServer);
    Code:
       0: new           #246                // class org/springframework/boot/web/embedded/netty/NettyWebServer$1
       3: dup
       4: aload_0
       5: ldc           #248                // String server
       7: aload_1
       8: invokespecial #250                // Method org/springframework/boot/web/embedded/netty/NettyWebServer$1."<init>":(Lorg/springframework/boot/web/embedded/netty/NettyWebServer;Ljava/lang/String;Lreactor/netty/DisposableServer;)V
      11: astore_2
      12: aload_2
      13: aload_0
      14: invokevirtual #253                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: invokevirtual #257                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      20: invokevirtual #263                // Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
      23: aload_2
      24: iconst_0
      25: invokevirtual #269                // Method java/lang/Thread.setDaemon:(Z)V
      28: aload_2
      29: invokevirtual #273                // Method java/lang/Thread.start:()V
      32: return

  public void stop() throws org.springframework.boot.web.server.WebServerException;
    Code:
       0: aload_0
       1: getfield      #74                 // Field disposableServer:Lreactor/netty/DisposableServer;
       4: ifnull        62
       7: aload_0
       8: getfield      #70                 // Field gracefulShutdown:Lorg/springframework/boot/web/embedded/netty/GracefulShutdown;
      11: ifnull        21
      14: aload_0
      15: getfield      #70                 // Field gracefulShutdown:Lorg/springframework/boot/web/embedded/netty/GracefulShutdown;
      18: invokevirtual #276                // Method org/springframework/boot/web/embedded/netty/GracefulShutdown.abort:()V
      21: aload_0
      22: getfield      #29                 // Field lifecycleTimeout:Ljava/time/Duration;
      25: ifnull        44
      28: aload_0
      29: getfield      #74                 // Field disposableServer:Lreactor/netty/DisposableServer;
      32: aload_0
      33: getfield      #29                 // Field lifecycleTimeout:Ljava/time/Duration;
      36: invokeinterface #279,  2          // InterfaceMethod reactor/netty/DisposableServer.disposeNow:(Ljava/time/Duration;)V
      41: goto          53
      44: aload_0
      45: getfield      #74                 // Field disposableServer:Lreactor/netty/DisposableServer;
      48: invokeinterface #285,  1          // InterfaceMethod reactor/netty/DisposableServer.disposeNow:()V
      53: goto          57
      56: astore_1
      57: aload_0
      58: aconst_null
      59: putfield      #74                 // Field disposableServer:Lreactor/netty/DisposableServer;
      62: return
    Exception table:
       from    to  target type
          21    53    56   Class java/lang/IllegalStateException

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #74                 // Field disposableServer:Lreactor/netty/DisposableServer;
       4: ifnull        20
       7: aload_0
       8: getfield      #74                 // Field disposableServer:Lreactor/netty/DisposableServer;
      11: invokeinterface #289,  1          // InterfaceMethod reactor/netty/DisposableServer.port:()I
      16: ireturn
      17: astore_1
      18: iconst_m1
      19: ireturn
      20: iconst_m1
      21: ireturn
    Exception table:
       from    to  target type
           7    16    17   Class java/lang/UnsupportedOperationException

  private void lambda$start$2(java.lang.Exception, reactor.netty.ChannelBindException);
    Code:
       0: aload_2
       1: invokevirtual #292                // Method reactor/netty/ChannelBindException.localPort:()I
       4: ifle          31
       7: aload_0
       8: aload_2
       9: invokevirtual #295                // Method reactor/netty/ChannelBindException.getCause:()Ljava/lang/Throwable;
      12: invokevirtual #299                // Method isPermissionDenied:(Ljava/lang/Throwable;)Z
      15: ifne          31
      18: new           #91                 // class org/springframework/boot/web/server/PortInUseException
      21: dup
      22: aload_2
      23: invokevirtual #292                // Method reactor/netty/ChannelBindException.localPort:()I
      26: aload_1
      27: invokespecial #303                // Method org/springframework/boot/web/server/PortInUseException."<init>":(ILjava/lang/Throwable;)V
      30: athrow
      31: return

  private reactor.netty.DisposableServer lambda$new$1();
    Code:
       0: aload_0
       1: getfield      #74                 // Field disposableServer:Lreactor/netty/DisposableServer;
       4: areturn

  private static boolean lambda$static$0(reactor.netty.http.server.HttpServerRequest);
    Code:
       0: iconst_1
       1: ireturn

  static {};
    Code:
       0: invokedynamic #306,  0            // InvokeDynamic #7:test:()Ljava/util/function/Predicate;
       5: putstatic     #239                // Field ALWAYS:Ljava/util/function/Predicate;
       8: ldc           #14                 // class org/springframework/boot/web/embedded/netty/NettyWebServer
      10: invokestatic  #310                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      13: putstatic     #103                // Field logger:Lorg/apache/commons/logging/Log;
      16: return
}
