Compiled from "DefaultBootstrapContext.java"
public class org.springframework.boot.DefaultBootstrapContext implements org.springframework.boot.ConfigurableBootstrapContext {
  private final java.util.Map<java.lang.Class<?>, org.springframework.boot.BootstrapRegistry$InstanceSupplier<?>> instanceSuppliers;

  private final java.util.Map<java.lang.Class<?>, java.lang.Object> instances;

  private final org.springframework.context.event.ApplicationEventMulticaster events;

  public org.springframework.boot.DefaultBootstrapContext();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/HashMap
       8: dup
       9: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      12: putfield      #10                 // Field instanceSuppliers:Ljava/util/Map;
      15: aload_0
      16: new           #7                  // class java/util/HashMap
      19: dup
      20: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      23: putfield      #16                 // Field instances:Ljava/util/Map;
      26: aload_0
      27: new           #19                 // class org/springframework/context/event/SimpleApplicationEventMulticaster
      30: dup
      31: invokespecial #21                 // Method org/springframework/context/event/SimpleApplicationEventMulticaster."<init>":()V
      34: putfield      #22                 // Field events:Lorg/springframework/context/event/ApplicationEventMulticaster;
      37: return

  public <T> void register(java.lang.Class<T>, org.springframework.boot.BootstrapRegistry$InstanceSupplier<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokevirtual #26                 // Method register:(Ljava/lang/Class;Lorg/springframework/boot/BootstrapRegistry$InstanceSupplier;Z)V
       7: return

  public <T> void registerIfAbsent(java.lang.Class<T>, org.springframework.boot.BootstrapRegistry$InstanceSupplier<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #26                 // Method register:(Ljava/lang/Class;Lorg/springframework/boot/BootstrapRegistry$InstanceSupplier;Z)V
       7: return

  private <T> void register(java.lang.Class<T>, org.springframework.boot.BootstrapRegistry$InstanceSupplier<T>, boolean);
    Code:
       0: aload_1
       1: ldc           #30                 // String Type must not be null
       3: invokestatic  #32                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #38                 // String InstanceSupplier must not be null
       9: invokestatic  #32                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #10                 // Field instanceSuppliers:Ljava/util/Map;
      16: dup
      17: astore        4
      19: monitorenter
      20: aload_0
      21: getfield      #10                 // Field instanceSuppliers:Ljava/util/Map;
      24: aload_1
      25: invokeinterface #40,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      30: istore        5
      32: iload_3
      33: ifne          41
      36: iload         5
      38: ifne          80
      41: aload_0
      42: getfield      #16                 // Field instances:Ljava/util/Map;
      45: aload_1
      46: invokeinterface #40,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      51: ifne          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: aload_1
      60: invokedynamic #46,  0             // InvokeDynamic #0:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
      65: invokestatic  #50                 // Method org/springframework/util/Assert.state:(ZLjava/util/function/Supplier;)V
      68: aload_0
      69: getfield      #10                 // Field instanceSuppliers:Ljava/util/Map;
      72: aload_1
      73: aload_2
      74: invokeinterface #54,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: aload         4
      82: monitorexit
      83: goto          94
      86: astore        6
      88: aload         4
      90: monitorexit
      91: aload         6
      93: athrow
      94: return
    Exception table:
       from    to  target type
          20    83    86   any
          86    91    86   any

  public <T> boolean isRegistered(java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field instanceSuppliers:Ljava/util/Map;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #10                 // Field instanceSuppliers:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #40,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      17: aload_2
      18: monitorexit
      19: ireturn
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
    Exception table:
       from    to  target type
           7    19    20   any
          20    23    20   any

  public <T> org.springframework.boot.BootstrapRegistry$InstanceSupplier<T> getRegisteredInstanceSupplier(java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field instanceSuppliers:Ljava/util/Map;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #10                 // Field instanceSuppliers:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #58,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #61                 // class org/springframework/boot/BootstrapRegistry$InstanceSupplier
      20: aload_2
      21: monitorexit
      22: areturn
      23: astore_3
      24: aload_2
      25: monitorexit
      26: aload_3
      27: athrow
    Exception table:
       from    to  target type
           7    22    23   any
          23    26    23   any

  public void addCloseListener(org.springframework.context.ApplicationListener<org.springframework.boot.BootstrapContextClosedEvent>);
    Code:
       0: aload_0
       1: getfield      #22                 // Field events:Lorg/springframework/context/event/ApplicationEventMulticaster;
       4: aload_1
       5: invokeinterface #63,  2           // InterfaceMethod org/springframework/context/event/ApplicationEventMulticaster.addApplicationListener:(Lorg/springframework/context/ApplicationListener;)V
      10: return

  public <T> T get(java.lang.Class<T>) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokedynamic #69,  0             // InvokeDynamic #1:get:(Ljava/lang/Class;)Ljava/util/function/Supplier;
       8: invokevirtual #70                 // Method getOrElseThrow:(Ljava/lang/Class;Ljava/util/function/Supplier;)Ljava/lang/Object;
      11: areturn

  public <T> T getOrElse(java.lang.Class<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #74,  0             // InvokeDynamic #2:get:(Ljava/lang/Object;)Ljava/util/function/Supplier;
       8: invokevirtual #77                 // Method getOrElseSupply:(Ljava/lang/Class;Ljava/util/function/Supplier;)Ljava/lang/Object;
      11: areturn

  public <T> T getOrElseSupply(java.lang.Class<T>, java.util.function.Supplier<T>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field instanceSuppliers:Ljava/util/Map;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #10                 // Field instanceSuppliers:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #58,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #61                 // class org/springframework/boot/BootstrapRegistry$InstanceSupplier
      20: astore        4
      22: aload         4
      24: ifnull        37
      27: aload_0
      28: aload_1
      29: aload         4
      31: invokevirtual #80                 // Method getInstance:(Ljava/lang/Class;Lorg/springframework/boot/BootstrapRegistry$InstanceSupplier;)Ljava/lang/Object;
      34: goto          43
      37: aload_2
      38: invokeinterface #84,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      43: aload_3
      44: monitorexit
      45: areturn
      46: astore        5
      48: aload_3
      49: monitorexit
      50: aload         5
      52: athrow
    Exception table:
       from    to  target type
           7    45    46   any
          46    50    46   any

  public <T, X extends java.lang.Throwable> T getOrElseThrow(java.lang.Class<T>, java.util.function.Supplier<? extends X>) throws X;
    Code:
       0: aload_0
       1: getfield      #10                 // Field instanceSuppliers:Ljava/util/Map;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #10                 // Field instanceSuppliers:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #58,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #61                 // class org/springframework/boot/BootstrapRegistry$InstanceSupplier
      20: astore        4
      22: aload         4
      24: ifnonnull     37
      27: aload_2
      28: invokeinterface #84,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      33: checkcast     #89                 // class java/lang/Throwable
      36: athrow
      37: aload_0
      38: aload_1
      39: aload         4
      41: invokevirtual #80                 // Method getInstance:(Ljava/lang/Class;Lorg/springframework/boot/BootstrapRegistry$InstanceSupplier;)Ljava/lang/Object;
      44: aload_3
      45: monitorexit
      46: areturn
      47: astore        5
      49: aload_3
      50: monitorexit
      51: aload         5
      53: athrow
    Exception table:
       from    to  target type
           7    46    47   any
          47    51    47   any

  private <T> T getInstance(java.lang.Class<T>, org.springframework.boot.BootstrapRegistry$InstanceSupplier<?>);
    Code:
       0: aload_0
       1: getfield      #16                 // Field instances:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #58,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_3
      11: aload_3
      12: ifnonnull     47
      15: aload_2
      16: aload_0
      17: invokeinterface #91,  2           // InterfaceMethod org/springframework/boot/BootstrapRegistry$InstanceSupplier.get:(Lorg/springframework/boot/BootstrapContext;)Ljava/lang/Object;
      22: astore_3
      23: aload_2
      24: invokeinterface #94,  1           // InterfaceMethod org/springframework/boot/BootstrapRegistry$InstanceSupplier.getScope:()Lorg/springframework/boot/BootstrapRegistry$Scope;
      29: getstatic     #98                 // Field org/springframework/boot/BootstrapRegistry$Scope.SINGLETON:Lorg/springframework/boot/BootstrapRegistry$Scope;
      32: if_acmpne     47
      35: aload_0
      36: getfield      #16                 // Field instances:Ljava/util/Map;
      39: aload_1
      40: aload_3
      41: invokeinterface #54,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_3
      48: areturn

  public void close(org.springframework.context.ConfigurableApplicationContext);
    Code:
       0: aload_0
       1: getfield      #22                 // Field events:Lorg/springframework/context/event/ApplicationEventMulticaster;
       4: new           #104                // class org/springframework/boot/BootstrapContextClosedEvent
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #106                // Method org/springframework/boot/BootstrapContextClosedEvent."<init>":(Lorg/springframework/boot/BootstrapContext;Lorg/springframework/context/ConfigurableApplicationContext;)V
      13: invokeinterface #109,  2          // InterfaceMethod org/springframework/context/event/ApplicationEventMulticaster.multicastEvent:(Lorg/springframework/context/ApplicationEvent;)V
      18: return

  private static java.lang.Object lambda$getOrElse$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  private static java.lang.IllegalStateException lambda$get$1(java.lang.Class);
    Code:
       0: new           #113                // class java/lang/IllegalStateException
       3: dup
       4: aload_0
       5: invokevirtual #115                // Method java/lang/Class.getName:()Ljava/lang/String;
       8: invokedynamic #121,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      13: invokespecial #125                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: areturn

  private static java.lang.String lambda$register$0(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #115                // Method java/lang/Class.getName:()Ljava/lang/String;
       4: invokedynamic #128,  0            // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       9: areturn
}
