Compiled from "StartupInfoLogger.java"
class org.springframework.boot.StartupInfoLogger {
  private final java.lang.Class<?> sourceClass;

  org.springframework.boot.StartupInfoLogger(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field sourceClass:Ljava/lang/Class;
       9: return

  void logStarting(org.apache.commons.logging.Log);
    Code:
       0: aload_1
       1: ldc           #13                 // String Log must not be null
       3: invokestatic  #15                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: aload_0
       8: invokedynamic #21,  0             // InvokeDynamic #0:get:(Lorg/springframework/boot/StartupInfoLogger;)Ljava/util/function/Supplier;
      13: invokestatic  #25                 // Method org/springframework/core/log/LogMessage.of:(Ljava/util/function/Supplier;)Lorg/springframework/core/log/LogMessage;
      16: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      21: aload_1
      22: aload_0
      23: invokedynamic #37,  0             // InvokeDynamic #1:get:(Lorg/springframework/boot/StartupInfoLogger;)Ljava/util/function/Supplier;
      28: invokestatic  #25                 // Method org/springframework/core/log/LogMessage.of:(Ljava/util/function/Supplier;)Lorg/springframework/core/log/LogMessage;
      31: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      36: return

  void logStarted(org.apache.commons.logging.Log, java.time.Duration);
    Code:
       0: aload_1
       1: invokeinterface #41,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
       6: ifeq          20
       9: aload_1
      10: aload_0
      11: aload_2
      12: invokevirtual #45                 // Method getStartedMessage:(Ljava/time/Duration;)Ljava/lang/CharSequence;
      15: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      20: return

  private java.lang.CharSequence getStartingMessage();
    Code:
       0: new           #49                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #52                 // String Starting
      11: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: aload_1
      17: invokevirtual #58                 // Method appendAotMode:(Ljava/lang/StringBuilder;)V
      20: aload_0
      21: aload_1
      22: invokevirtual #62                 // Method appendApplicationName:(Ljava/lang/StringBuilder;)V
      25: aload_0
      26: aload_1
      27: aload_0
      28: getfield      #7                  // Field sourceClass:Ljava/lang/Class;
      31: invokevirtual #65                 // Method appendVersion:(Ljava/lang/StringBuilder;Ljava/lang/Class;)V
      34: aload_0
      35: aload_1
      36: invokevirtual #69                 // Method appendJavaVersion:(Ljava/lang/StringBuilder;)V
      39: aload_0
      40: aload_1
      41: invokevirtual #72                 // Method appendPid:(Ljava/lang/StringBuilder;)V
      44: aload_0
      45: aload_1
      46: invokevirtual #75                 // Method appendContext:(Ljava/lang/StringBuilder;)V
      49: aload_1
      50: areturn

  private java.lang.CharSequence getRunningMessage();
    Code:
       0: new           #49                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #78                 // String Running with Spring Boot
      11: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: aload_1
      17: aload_0
      18: invokevirtual #80                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: invokevirtual #65                 // Method appendVersion:(Ljava/lang/StringBuilder;Ljava/lang/Class;)V
      24: aload_1
      25: ldc           #84                 // String , Spring
      27: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_0
      32: aload_1
      33: ldc           #86                 // class org/springframework/context/ApplicationContext
      35: invokevirtual #65                 // Method appendVersion:(Ljava/lang/StringBuilder;Ljava/lang/Class;)V
      38: aload_1
      39: areturn

  private java.lang.CharSequence getStartedMessage(java.time.Duration);
    Code:
       0: new           #49                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_2
       9: ldc           #88                 // String Started
      11: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: aload_2
      17: invokevirtual #62                 // Method appendApplicationName:(Ljava/lang/StringBuilder;)V
      20: aload_2
      21: ldc           #90                 // String  in
      23: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: pop
      27: aload_2
      28: aload_1
      29: invokevirtual #92                 // Method java/time/Duration.toMillis:()J
      32: l2d
      33: ldc2_w        #98                 // double 1000.0d
      36: ddiv
      37: invokevirtual #100                // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      40: pop
      41: aload_2
      42: ldc           #103                // String  seconds
      44: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: pop
      48: invokestatic  #105                // Method java/lang/management/ManagementFactory.getRuntimeMXBean:()Ljava/lang/management/RuntimeMXBean;
      51: invokeinterface #111,  1          // InterfaceMethod java/lang/management/RuntimeMXBean.getUptime:()J
      56: l2d
      57: ldc2_w        #98                 // double 1000.0d
      60: ddiv
      61: dstore_3
      62: aload_2
      63: ldc           #116                // String  (process running for
      65: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: dload_3
      69: invokevirtual #100                // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      72: ldc           #118                // String )
      74: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: pop
      78: goto          82
      81: astore_3
      82: aload_2
      83: areturn
    Exception table:
       from    to  target type
          48    78    81   Class java/lang/Throwable

  private void appendAotMode(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #122                // String
       4: invokedynamic #124,  0            // InvokeDynamic #2:call:()Ljava/util/concurrent/Callable;
       9: invokevirtual #128                // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/util/concurrent/Callable;)V
      12: return

  private void appendApplicationName(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #122                // String
       4: aload_0
       5: invokedynamic #131,  0            // InvokeDynamic #3:call:(Lorg/springframework/boot/StartupInfoLogger;)Ljava/util/concurrent/Callable;
      10: invokevirtual #128                // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/util/concurrent/Callable;)V
      13: return

  private void appendVersion(java.lang.StringBuilder, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #134                // String v
       4: aload_2
       5: invokedynamic #136,  0            // InvokeDynamic #4:call:(Ljava/lang/Class;)Ljava/util/concurrent/Callable;
      10: invokevirtual #128                // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/util/concurrent/Callable;)V
      13: return

  private void appendPid(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #139                // String with PID
       4: invokedynamic #141,  0            // InvokeDynamic #5:call:()Ljava/util/concurrent/Callable;
       9: invokevirtual #128                // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/util/concurrent/Callable;)V
      12: return

  private void appendContext(java.lang.StringBuilder);
    Code:
       0: new           #49                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: new           #142                // class org/springframework/boot/system/ApplicationHome
      11: dup
      12: aload_0
      13: getfield      #7                  // Field sourceClass:Ljava/lang/Class;
      16: invokespecial #144                // Method org/springframework/boot/system/ApplicationHome."<init>":(Ljava/lang/Class;)V
      19: astore_3
      20: aload_3
      21: invokevirtual #147                // Method org/springframework/boot/system/ApplicationHome.getSource:()Ljava/io/File;
      24: ifnull        39
      27: aload_2
      28: aload_3
      29: invokevirtual #147                // Method org/springframework/boot/system/ApplicationHome.getSource:()Ljava/io/File;
      32: invokevirtual #151                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      35: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: pop
      39: aload_0
      40: aload_2
      41: ldc           #157                // String started by
      43: invokedynamic #159,  0            // InvokeDynamic #6:call:()Ljava/util/concurrent/Callable;
      48: invokevirtual #128                // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/util/concurrent/Callable;)V
      51: aload_0
      52: aload_2
      53: ldc           #160                // String in
      55: invokedynamic #162,  0            // InvokeDynamic #7:call:()Ljava/util/concurrent/Callable;
      60: invokevirtual #128                // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/util/concurrent/Callable;)V
      63: aload_2
      64: invokevirtual #163                // Method java/lang/StringBuilder.length:()I
      67: ifle          90
      70: aload_1
      71: ldc           #167                // String  (
      73: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: pop
      77: aload_1
      78: aload_2
      79: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      82: pop
      83: aload_1
      84: ldc           #118                // String )
      86: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: pop
      90: return

  private void appendJavaVersion(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #172                // String using Java
       4: invokedynamic #174,  0            // InvokeDynamic #8:call:()Ljava/util/concurrent/Callable;
       9: invokevirtual #128                // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/util/concurrent/Callable;)V
      12: return

  private void append(java.lang.StringBuilder, java.lang.String, java.util.concurrent.Callable<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: ldc           #122                // String
       6: invokevirtual #175                // Method append:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/util/concurrent/Callable;Ljava/lang/String;)V
       9: return

  private void append(java.lang.StringBuilder, java.lang.String, java.util.concurrent.Callable<java.lang.Object>, java.lang.String);
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #178                // Method callIfPossible:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;
       5: astore        5
       7: aload         5
       9: ifnull        20
      12: aload         5
      14: invokevirtual #182                // Method java/lang/Object.toString:()Ljava/lang/String;
      17: goto          21
      20: aconst_null
      21: astore        6
      23: aload         6
      25: invokestatic  #185                // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      28: ifne          35
      31: aload         4
      33: astore        6
      35: aload         6
      37: invokestatic  #185                // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      40: ifeq          75
      43: aload_1
      44: aload_1
      45: invokevirtual #163                // Method java/lang/StringBuilder.length:()I
      48: ifle          56
      51: ldc           #191                // String
      53: goto          58
      56: ldc           #122                // String
      58: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: pop
      62: aload_1
      63: aload_2
      64: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: pop
      68: aload_1
      69: aload         6
      71: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: pop
      75: return

  private java.lang.Object callIfPossible(java.util.concurrent.Callable<java.lang.Object>);
    Code:
       0: aload_1
       1: invokeinterface #193,  1          // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
       6: areturn
       7: astore_2
       8: aconst_null
       9: areturn
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Exception

  private static java.lang.Object lambda$appendJavaVersion$5() throws java.lang.Exception;
    Code:
       0: ldc           #200                // String java.version
       2: invokestatic  #202                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  private static java.lang.Object lambda$appendContext$4() throws java.lang.Exception;
    Code:
       0: ldc           #208                // String user.dir
       2: invokestatic  #202                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  private static java.lang.Object lambda$appendContext$3() throws java.lang.Exception;
    Code:
       0: ldc           #210                // String user.name
       2: invokestatic  #202                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  private static java.lang.Object lambda$appendVersion$2(java.lang.Class) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #212                // Method java/lang/Class.getPackage:()Ljava/lang/Package;
       4: invokevirtual #218                // Method java/lang/Package.getImplementationVersion:()Ljava/lang/String;
       7: areturn

  private java.lang.Object lambda$appendApplicationName$1() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field sourceClass:Ljava/lang/Class;
       4: ifnull        17
       7: aload_0
       8: getfield      #7                  // Field sourceClass:Ljava/lang/Class;
      11: invokestatic  #223                // Method org/springframework/util/ClassUtils.getShortName:(Ljava/lang/Class;)Ljava/lang/String;
      14: goto          19
      17: ldc           #229                // String application
      19: areturn

  private static java.lang.Object lambda$appendAotMode$0() throws java.lang.Exception;
    Code:
       0: invokestatic  #231                // Method org/springframework/aot/AotDetector.useGeneratedArtifacts:()Z
       3: ifeq          11
       6: ldc           #236                // String AOT-processed
       8: goto          12
      11: aconst_null
      12: areturn
}
