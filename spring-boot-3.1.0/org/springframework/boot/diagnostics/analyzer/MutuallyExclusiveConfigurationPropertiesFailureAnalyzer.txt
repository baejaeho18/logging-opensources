Compiled from "MutuallyExclusiveConfigurationPropertiesFailureAnalyzer.java"
class org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer extends org.springframework.boot.diagnostics.AbstractFailureAnalyzer<org.springframework.boot.context.properties.source.MutuallyExclusiveConfigurationPropertiesException> {
  private final org.springframework.core.env.ConfigurableEnvironment environment;

  org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer(org.springframework.core.env.Environment);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/boot/diagnostics/AbstractFailureAnalyzer."<init>":()V
       4: aload_0
       5: aload_1
       6: checkcast     #7                  // class org/springframework/core/env/ConfigurableEnvironment
       9: putfield      #9                  // Field environment:Lorg/springframework/core/env/ConfigurableEnvironment;
      12: return

  protected org.springframework.boot.diagnostics.FailureAnalysis analyze(java.lang.Throwable, org.springframework.boot.context.properties.source.MutuallyExclusiveConfigurationPropertiesException);
    Code:
       0: new           #15                 // class java/util/ArrayList
       3: dup
       4: invokespecial #17                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_2
       9: invokevirtual #18                 // Method org/springframework/boot/context/properties/source/MutuallyExclusiveConfigurationPropertiesException.getConfiguredNames:()Ljava/util/Set;
      12: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore        4
      19: aload         4
      21: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          73
      29: aload         4
      31: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #40                 // class java/lang/String
      39: astore        5
      41: aload_0
      42: aload         5
      44: invokevirtual #42                 // Method getDescriptors:(Ljava/lang/String;)Ljava/util/List;
      47: astore        6
      49: aload         6
      51: invokeinterface #46,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      56: ifeq          61
      59: aconst_null
      60: areturn
      61: aload_3
      62: aload         6
      64: invokeinterface #51,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      69: pop
      70: goto          19
      73: new           #55                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      80: astore        4
      82: aload_0
      83: aload         4
      85: aload_2
      86: aload_3
      87: invokevirtual #58                 // Method appendDetails:(Ljava/lang/StringBuilder;Lorg/springframework/boot/context/properties/source/MutuallyExclusiveConfigurationPropertiesException;Ljava/util/List;)V
      90: new           #62                 // class org/springframework/boot/diagnostics/FailureAnalysis
      93: dup
      94: aload         4
      96: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: ldc           #68                 // String Update your configuration so that only one of the mutually exclusive properties is configured.
     101: aload_2
     102: invokespecial #70                 // Method org/springframework/boot/diagnostics/FailureAnalysis."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
     105: areturn

  private java.util.List<org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer$Descriptor> getDescriptors(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method getPropertySources:()Ljava/util/stream/Stream;
       4: aload_1
       5: invokedynamic #77,  0             // InvokeDynamic #0:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      10: invokeinterface #81,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      15: aload_1
      16: invokedynamic #87,  0             // InvokeDynamic #1:apply:(Ljava/lang/String;)Ljava/util/function/Function;
      21: invokeinterface #91,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: invokeinterface #95,  1           // InterfaceMethod java/util/stream/Stream.toList:()Ljava/util/List;
      31: areturn

  private java.util.stream.Stream<org.springframework.core.env.PropertySource<?>> getPropertySources();
    Code:
       0: aload_0
       1: getfield      #9                  // Field environment:Lorg/springframework/core/env/ConfigurableEnvironment;
       4: ifnonnull     11
       7: invokestatic  #99                 // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;
      10: areturn
      11: aload_0
      12: getfield      #9                  // Field environment:Lorg/springframework/core/env/ConfigurableEnvironment;
      15: invokeinterface #102,  1          // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getPropertySources:()Lorg/springframework/core/env/MutablePropertySources;
      20: invokevirtual #105                // Method org/springframework/core/env/MutablePropertySources.stream:()Ljava/util/stream/Stream;
      23: invokedynamic #110,  0            // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
      28: invokeinterface #81,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      33: areturn

  private void appendDetails(java.lang.StringBuilder, org.springframework.boot.context.properties.source.MutuallyExclusiveConfigurationPropertiesException, java.util.List<org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer$Descriptor>);
    Code:
       0: aload_3
       1: invokedynamic #113,  0            // InvokeDynamic #3:apply:()Ljava/util/function/Function;
       6: invokestatic  #116                // InterfaceMethod java/util/Comparator.comparing:(Ljava/util/function/Function;)Ljava/util/Comparator;
       9: invokeinterface #122,  2          // InterfaceMethod java/util/List.sort:(Ljava/util/Comparator;)V
      14: aload_1
      15: ldc           #126                // String The following configuration properties are mutually exclusive:%n%n
      17: iconst_0
      18: anewarray     #128                // class java/lang/Object
      21: invokestatic  #130                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      24: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: pop
      28: aload_0
      29: aload_2
      30: invokevirtual #138                // Method org/springframework/boot/context/properties/source/MutuallyExclusiveConfigurationPropertiesException.getMutuallyExclusiveNames:()Ljava/util/Set;
      33: invokevirtual #141                // Method sortedStrings:(Ljava/util/Collection;)Ljava/util/Set;
      36: aload_1
      37: invokedynamic #145,  0            // InvokeDynamic #4:accept:(Ljava/lang/StringBuilder;)Ljava/util/function/Consumer;
      42: invokeinterface #149,  2          // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      47: aload_1
      48: ldc           #153                // String %n
      50: iconst_0
      51: anewarray     #128                // class java/lang/Object
      54: invokestatic  #130                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      57: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: aload_1
      62: ldc           #155                // String However, more than one of those properties has been configured at the same time:%n%n
      64: iconst_0
      65: anewarray     #128                // class java/lang/Object
      68: invokestatic  #130                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      71: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: pop
      75: aload_0
      76: aload_3
      77: invokedynamic #157,  0            // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      82: invokevirtual #158                // Method sortedStrings:(Ljava/util/Collection;Ljava/util/function/Function;)Ljava/util/Set;
      85: astore        4
      87: aload         4
      89: aload_1
      90: dup
      91: invokestatic  #161                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      94: pop
      95: invokedynamic #167,  0            // InvokeDynamic #6:accept:(Ljava/lang/StringBuilder;)Ljava/util/function/Consumer;
     100: invokeinterface #149,  2          // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
     105: return

  private <S> java.util.Set<java.lang.String> sortedStrings(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #168                // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
       5: invokevirtual #158                // Method sortedStrings:(Ljava/util/Collection;Ljava/util/function/Function;)Ljava/util/Set;
       8: areturn

  private <S> java.util.Set<java.lang.String> sortedStrings(java.util.Collection<S>, java.util.function.Function<S, java.lang.String>);
    Code:
       0: new           #173                // class java/util/TreeSet
       3: dup
       4: invokespecial #175                // Method java/util/TreeSet."<init>":()V
       7: astore_3
       8: aload_1
       9: invokeinterface #176,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore        4
      16: aload         4
      18: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          54
      26: aload         4
      28: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: astore        5
      35: aload_3
      36: aload_2
      37: aload         5
      39: invokeinterface #179,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #40                 // class java/lang/String
      47: invokevirtual #181                // Method java/util/TreeSet.add:(Ljava/lang/Object;)Z
      50: pop
      51: goto          16
      54: aload_3
      55: areturn

  protected org.springframework.boot.diagnostics.FailureAnalysis analyze(java.lang.Throwable, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #19                 // class org/springframework/boot/context/properties/source/MutuallyExclusiveConfigurationPropertiesException
       6: invokevirtual #185                // Method analyze:(Ljava/lang/Throwable;Lorg/springframework/boot/context/properties/source/MutuallyExclusiveConfigurationPropertiesException;)Lorg/springframework/boot/diagnostics/FailureAnalysis;
       9: areturn

  private static java.lang.String lambda$appendDetails$5(org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer$Descriptor);
    Code:
       0: ldc           #189                // String \t%s%s%n
       2: iconst_2
       3: anewarray     #128                // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #191                // Field org/springframework/boot/diagnostics/analyzer/MutuallyExclusiveConfigurationPropertiesFailureAnalyzer$Descriptor.propertyName:Ljava/lang/String;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_0
      16: getfield      #197                // Field org/springframework/boot/diagnostics/analyzer/MutuallyExclusiveConfigurationPropertiesFailureAnalyzer$Descriptor.origin:Lorg/springframework/boot/origin/Origin;
      19: ifnull        34
      22: aload_0
      23: getfield      #197                // Field org/springframework/boot/diagnostics/analyzer/MutuallyExclusiveConfigurationPropertiesFailureAnalyzer$Descriptor.origin:Lorg/springframework/boot/origin/Origin;
      26: invokedynamic #201,  0            // InvokeDynamic #7:makeConcatWithConstants:(Lorg/springframework/boot/origin/Origin;)Ljava/lang/String;
      31: goto          36
      34: ldc           #205                // String
      36: aastore
      37: invokestatic  #130                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      40: areturn

  private static void lambda$appendDetails$4(java.lang.StringBuilder, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #207                // String \t%s%n
       3: iconst_1
       4: anewarray     #128                // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_1
      10: aastore
      11: invokestatic  #130                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      14: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: pop
      18: return

  private static java.lang.String lambda$appendDetails$3(org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer$Descriptor);
    Code:
       0: aload_0
       1: getfield      #191                // Field org/springframework/boot/diagnostics/analyzer/MutuallyExclusiveConfigurationPropertiesFailureAnalyzer$Descriptor.propertyName:Ljava/lang/String;
       4: areturn

  private static boolean lambda$getPropertySources$2(org.springframework.core.env.PropertySource);
    Code:
       0: aload_0
       1: invokestatic  #209                // Method org/springframework/boot/context/properties/source/ConfigurationPropertySources.isAttachedConfigurationPropertySource:(Lorg/springframework/core/env/PropertySource;)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private static org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer$Descriptor lambda$getDescriptors$1(java.lang.String, org.springframework.core.env.PropertySource);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #215                // Method org/springframework/boot/diagnostics/analyzer/MutuallyExclusiveConfigurationPropertiesFailureAnalyzer$Descriptor.get:(Lorg/springframework/core/env/PropertySource;Ljava/lang/String;)Lorg/springframework/boot/diagnostics/analyzer/MutuallyExclusiveConfigurationPropertiesFailureAnalyzer$Descriptor;
       5: areturn

  private static boolean lambda$getDescriptors$0(java.lang.String, org.springframework.core.env.PropertySource);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #219                // Method org/springframework/core/env/PropertySource.containsProperty:(Ljava/lang/String;)Z
       5: ireturn
}
