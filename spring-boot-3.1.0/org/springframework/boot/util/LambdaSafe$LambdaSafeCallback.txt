Compiled from "LambdaSafe.java"
public abstract class org.springframework.boot.util.LambdaSafe$LambdaSafeCallback<C, A, SELF extends org.springframework.boot.util.LambdaSafe$LambdaSafeCallback<C, A, SELF>> {
  private final java.lang.Class<C> callbackType;

  private final A argument;

  private final java.lang.Object[] additionalArguments;

  private org.apache.commons.logging.Log logger;

  private org.springframework.boot.util.LambdaSafe$Filter<C, A> filter;

  org.springframework.boot.util.LambdaSafe$LambdaSafeCallback(java.lang.Class<C>, A, java.lang.Object[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class org/springframework/boot/util/LambdaSafe$GenericTypeFilter
       8: dup
       9: invokespecial #9                  // Method org/springframework/boot/util/LambdaSafe$GenericTypeFilter."<init>":()V
      12: putfield      #10                 // Field filter:Lorg/springframework/boot/util/LambdaSafe$Filter;
      15: aload_0
      16: aload_1
      17: putfield      #16                 // Field callbackType:Ljava/lang/Class;
      20: aload_0
      21: aload_2
      22: putfield      #20                 // Field argument:Ljava/lang/Object;
      25: aload_0
      26: aload_3
      27: putfield      #24                 // Field additionalArguments:[Ljava/lang/Object;
      30: aload_0
      31: aload_1
      32: invokestatic  #28                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      35: putfield      #34                 // Field logger:Lorg/apache/commons/logging/Log;
      38: return

  public SELF withLogger(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #28                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: invokevirtual #38                 // Method withLogger:(Lorg/apache/commons/logging/Log;)Lorg/springframework/boot/util/LambdaSafe$LambdaSafeCallback;
       8: areturn

  public SELF withLogger(org.apache.commons.logging.Log);
    Code:
       0: aload_1
       1: ldc           #42                 // String Logger must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #34                 // Field logger:Lorg/apache/commons/logging/Log;
      11: aload_0
      12: invokevirtual #50                 // Method self:()Lorg/springframework/boot/util/LambdaSafe$LambdaSafeCallback;
      15: areturn

  SELF withFilter(org.springframework.boot.util.LambdaSafe$Filter<C, A>);
    Code:
       0: aload_1
       1: ldc           #54                 // String Filter must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #10                 // Field filter:Lorg/springframework/boot/util/LambdaSafe$Filter;
      11: aload_0
      12: invokevirtual #50                 // Method self:()Lorg/springframework/boot/util/LambdaSafe$LambdaSafeCallback;
      15: areturn

  protected final <R> org.springframework.boot.util.LambdaSafe$InvocationResult<R> invoke(C, java.util.function.Supplier<R>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field filter:Lorg/springframework/boot/util/LambdaSafe$Filter;
       4: aload_0
       5: getfield      #16                 // Field callbackType:Ljava/lang/Class;
       8: aload_1
       9: aload_0
      10: getfield      #20                 // Field argument:Ljava/lang/Object;
      13: aload_0
      14: getfield      #24                 // Field additionalArguments:[Ljava/lang/Object;
      17: invokeinterface #56,  5           // InterfaceMethod org/springframework/boot/util/LambdaSafe$Filter.match:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Z
      22: ifeq          52
      25: aload_2
      26: invokeinterface #62,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      31: invokestatic  #68                 // Method org/springframework/boot/util/LambdaSafe$InvocationResult.of:(Ljava/lang/Object;)Lorg/springframework/boot/util/LambdaSafe$InvocationResult;
      34: areturn
      35: astore_3
      36: aload_0
      37: aload_3
      38: invokevirtual #76                 // Method isLambdaGenericProblem:(Ljava/lang/ClassCastException;)Z
      41: ifne          46
      44: aload_3
      45: athrow
      46: aload_0
      47: aload_1
      48: aload_3
      49: invokevirtual #80                 // Method logNonMatchingType:(Ljava/lang/Object;Ljava/lang/ClassCastException;)V
      52: invokestatic  #84                 // Method org/springframework/boot/util/LambdaSafe$InvocationResult.noResult:()Lorg/springframework/boot/util/LambdaSafe$InvocationResult;
      55: areturn
    Exception table:
       from    to  target type
          25    34    35   Class java/lang/ClassCastException

  private boolean isLambdaGenericProblem(java.lang.ClassCastException);
    Code:
       0: aload_1
       1: invokevirtual #88                 // Method java/lang/ClassCastException.getMessage:()Ljava/lang/String;
       4: ifnull        18
       7: aload_0
       8: aload_1
       9: invokevirtual #88                 // Method java/lang/ClassCastException.getMessage:()Ljava/lang/String;
      12: invokevirtual #92                 // Method startsWithArgumentClassName:(Ljava/lang/String;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private boolean startsWithArgumentClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #96,  0             // InvokeDynamic #0:test:(Lorg/springframework/boot/util/LambdaSafe$LambdaSafeCallback;Ljava/lang/String;)Ljava/util/function/Predicate;
       7: astore_2
       8: aload_2
       9: aload_0
      10: getfield      #20                 // Field argument:Ljava/lang/Object;
      13: invokeinterface #100,  2          // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      18: ifne          37
      21: aload_0
      22: getfield      #24                 // Field additionalArguments:[Ljava/lang/Object;
      25: invokestatic  #105                // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      28: aload_2
      29: invokeinterface #110,  2          // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  private boolean startsWithArgumentClassName(java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_2
       7: invokevirtual #114                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: astore_3
      11: aload_1
      12: aload_3
      13: invokevirtual #118                // Method java/lang/Class.getName:()Ljava/lang/String;
      16: invokevirtual #123                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      19: ifeq          24
      22: iconst_1
      23: ireturn
      24: aload_1
      25: aload_3
      26: invokevirtual #128                // Method java/lang/Class.toString:()Ljava/lang/String;
      29: invokevirtual #123                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: aload_1
      38: bipush        47
      40: invokevirtual #131                // Method java/lang/String.indexOf:(I)I
      43: istore        4
      45: iload         4
      47: iconst_m1
      48: if_icmpeq     68
      51: aload_1
      52: aload_3
      53: invokevirtual #118                // Method java/lang/Class.getName:()Ljava/lang/String;
      56: iload         4
      58: iconst_1
      59: iadd
      60: invokevirtual #135                // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
      63: ifeq          68
      66: iconst_1
      67: ireturn
      68: getstatic     #138                // Field org/springframework/boot/util/LambdaSafe.CLASS_GET_MODULE:Ljava/lang/reflect/Method;
      71: ifnull        109
      74: getstatic     #138                // Field org/springframework/boot/util/LambdaSafe.CLASS_GET_MODULE:Ljava/lang/reflect/Method;
      77: aload_3
      78: invokestatic  #144                // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;
      81: astore        5
      83: getstatic     #150                // Field org/springframework/boot/util/LambdaSafe.MODULE_GET_NAME:Ljava/lang/reflect/Method;
      86: aload         5
      88: invokestatic  #144                // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;
      91: astore        6
      93: aload_1
      94: aload         6
      96: aload_3
      97: invokevirtual #118                // Method java/lang/Class.getName:()Ljava/lang/String;
     100: invokedynamic #153,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
     105: invokevirtual #123                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     108: ireturn
     109: iconst_0
     110: ireturn

  private void logNonMatchingType(C, java.lang.ClassCastException);
    Code:
       0: aload_0
       1: getfield      #34                 // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #157,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          75
      12: aload_0
      13: getfield      #16                 // Field callbackType:Ljava/lang/Class;
      16: invokestatic  #163                // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      19: iconst_0
      20: newarray       int
      22: invokevirtual #169                // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      25: astore_3
      26: aload_3
      27: ifnull        42
      30: aload_3
      31: invokestatic  #173                // Method org/springframework/util/ClassUtils.getShortName:(Ljava/lang/Class;)Ljava/lang/String;
      34: invokedynamic #179,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      39: goto          44
      42: ldc           #182                // String type
      44: astore        4
      46: aload         4
      48: aload_0
      49: getfield      #16                 // Field callbackType:Ljava/lang/Class;
      52: invokestatic  #173                // Method org/springframework/util/ClassUtils.getShortName:(Ljava/lang/Class;)Ljava/lang/String;
      55: aload_1
      56: invokedynamic #184,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      61: astore        5
      63: aload_0
      64: getfield      #34                 // Field logger:Lorg/apache/commons/logging/Log;
      67: aload         5
      69: aload_2
      70: invokeinterface #187,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      75: return

  private SELF self();
    Code:
       0: aload_0
       1: areturn

  private boolean lambda$startsWithArgumentClassName$0(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #191                // Method startsWithArgumentClassName:(Ljava/lang/String;Ljava/lang/Object;)Z
       6: ireturn
}
